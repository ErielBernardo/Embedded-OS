

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 25 19:21:02 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 2.05
    47                           ; Generated 20/12/2018 GMT
    48                           ; 
    49                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4520 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81 ;;_p	offset=-2 (param)
    82 ;;_w	offset=-4 (param)
    83 ;;_r	offset=-6 (param)
    84 ;;_s	offset=-2 (param)
    85 ;;_valor	offset=-4 (param)
    86 ;;_pHeap	offset	0
    87 ;;_temp	offset	2
    88 ;;_segHeader	offset	4
    89 ;;_segLen	offset	5
    90 ;;_nBytes	offset=-1 (param)
    91 ;;_pSegB	offset	0
    92 ;;_uSegB	offset	2
    93 ;;_uSegA	offset	3
    94 ;;_uSum	offset	4
    95 ;;_pSegA	offset=-2 (param)
    96 ;;_new_task	offset	0
    97 ;;_prior	offset=-2 (param)
    98 ;;_f	offset=-4 (param)
    99 ;;_count	offset	0
   100 ;;_pHeap	offset	2
   101 ;;_state	offset=-1 (param)
   102 ;;_next_task_to_run	offset	0
   103 ;;_counter	offset	0
   104 ;;_dividend	offset=-2 (param)
   105 ;;_divisor	offset=-4 (param)
   106 ;;_p	offset=-2 (param)
   107 ;;_data	offset=-4 (param)
   108 ;;_s	offset=-2 (param)
   109 ;;_s	offset=-2 (param)
   110 ;;_time	offset=-2 (param)
   111 ;;_state	offset=-1 (param)
   112 ;;_next_task_to_run	offset	0
   113 ;;_counter	offset	0
   114 ;;_dividend	offset=-2 (param)
   115 ;;_divisor	offset=-4 (param)
   116 ;;_dado	offset	0
   117 ;;_p	offset=-2 (param)
   118 ;;_data	offset=-4 (param)
   119 ;;_i	offset	0
   120 ;;_i	offset	0
   121 ;;_next_task_to_run	offset	0
   122 ;;_counter	offset	0
   123 ;;_dividend	offset=-2 (param)
   124 ;;_divisor	offset=-4 (param)
   125 ;;_i	offset	0
   126 ;;_product	offset	0
   127 ;;_multiplier	offset=-2 (param)
   128 ;;_multiplicand	offset=-4 (param)
   129                           
   130                           	psect	idataCOMRAM
   131  001A16                     __pidataCOMRAM:
   132                           	opt callstack 0
   133                           
   134                           ;initializer for _quantum
   135  001A16  000A               	dw	10
   136  0000                     _TOS	set	4093
   137  0000                     _PORTBbits	set	3969
   138  0000                     _TRISB	set	3987
   139  0000                     _STKPTR	set	4092
   140  0000                     _TOSL	set	4093
   141  0000                     _TOSH	set	4094
   142  0000                     _TOSU	set	4095
   143  0000                     _BSR	set	4064
   144  0000                     _STATUS	set	4056
   145  0000                     _WREG	set	4072
   146  0000                     _PORTDbits	set	3971
   147  0000                     _TMR0L	set	4054
   148  0000                     _T0CONbits	set	4053
   149  0000                     _INTCON2bits	set	4081
   150  0000                     _INTCONbits	set	4082
   151  0000                     _TRISDbits	set	3989
   152                           
   153                           ; #config settings
   154  0000                     
   155                           	psect	cinit
   156  001950                     __pcinit:
   157                           	opt callstack 0
   158  001950                     start_initialization:
   159                           	opt callstack 0
   160  001950                     __initialization:
   161                           	opt callstack 0
   162                           
   163                           ; Initialize objects allocated to COMRAM (2 bytes)
   164                           ; load TBLPTR registers with __pidataCOMRAM
   165  001950  0E16               	movlw	low __pidataCOMRAM
   166  001952  6EF6               	movwf	tblptrl,c
   167  001954  0E1A               	movlw	high __pidataCOMRAM
   168  001956  6EF7               	movwf	tblptrh,c
   169  001958  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   170  00195A  6EF8               	movwf	tblptru,c
   171  00195C  0009               	tblrd		*+	;fetch initializer
   172  00195E  CFF5 F07B          	movff	tablat,__pdataCOMRAM
   173  001962  0009               	tblrd		*+	;fetch initializer
   174  001964  CFF5 F07C          	movff	tablat,__pdataCOMRAM+1
   175                           
   176                           ; Clear objects allocated to BIGRAM (1056 bytes)
   177  001968  EE01  F0E0         	lfsr	0,__pbssBIGRAM
   178  00196C  EE24 F020          	lfsr	2,1056
   179  001970                     clear_0:
   180  001970  6AEE               	clrf	postinc0,c
   181  001972  50DD               	movf	postdec2,w,c
   182  001974  50D9               	movf	fsr2l,w,c
   183  001976  E1FC               	bnz	clear_0
   184  001978  50DA               	movf	fsr2h,w,c
   185  00197A  E1FA               	bnz	clear_0
   186                           
   187                           ; Clear objects allocated to COMRAM (74 bytes)
   188  00197C  EE00  F001         	lfsr	0,__pbssCOMRAM
   189  001980  0E4A               	movlw	74
   190  001982                     clear_1:
   191  001982  6AEE               	clrf	postinc0,c
   192  001984  06E8               	decf	wreg,f,c
   193  001986  E1FD               	bnz	clear_1
   194  001988                     end_of_initialization:
   195                           	opt callstack 0
   196  001988                     __end_of__initialization:
   197                           	opt callstack 0
   198  001988  0100               	movlb	0
   199  00198A  EF0E  F00C         	goto	_main	;jump to C main() function
   200                           
   201                           	psect	bssCOMRAM
   202  000001                     __pbssCOMRAM:
   203                           	opt callstack 0
   204  000001                     _mem:
   205                           	opt callstack 0
   206  000001                     	ds	2
   207  000003                     _size:
   208                           	opt callstack 0
   209  000003                     	ds	2
   210  000005                     _who:
   211                           	opt callstack 0
   212  000005                     	ds	2
   213  000007                     _r_pipe:
   214                           	opt callstack 0
   215  000007                     	ds	14
   216  000015                     _w_pipe:
   217                           	opt callstack 0
   218  000015                     	ds	14
   219  000023                     _teste_2:
   220                           	opt callstack 0
   221  000023                     	ds	14
   222  000031                     _teste_1:
   223                           	opt callstack 0
   224  000031                     	ds	14
   225  00003F                     _p:
   226                           	opt callstack 0
   227  00003F                     	ds	12
   228                           
   229                           	psect	dataCOMRAM
   230  00007B                     __pdataCOMRAM:
   231                           	opt callstack 0
   232  00007B                     _quantum:
   233                           	opt callstack 0
   234  00007B                     	ds	2
   235                           
   236                           	psect	bssBIGRAM
   237  0001E0                     __pbssBIGRAM:
   238                           	opt callstack 0
   239  0001E0                     _ready_queue:
   240                           	opt callstack 0
   241  0001E0                     	ds	544
   242  000400                     __uDynamicHeap:
   243                           	opt callstack 0
   244  000400                     	ds	512
   245                           
   246                           	psect	cstackCOMRAM
   247  00006B                     __pcstackCOMRAM:
   248                           	opt callstack 0
   249  00006B                     ??_ISR_timer0:
   250                           
   251                           ; 1 bytes @ 0x0
   252  00006B                     	ds	16
   253                           
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 16 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1  [STACK] void 
   266 ;; Registers used:
   267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   273 ;;      Params:         0       0       0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels required when called:   14
   279 ;; This function calls:
   280 ;;		_config_INT0
   281 ;;		_config_timer0
   282 ;;		_dispatcher
   283 ;;		_lunos_createTask
   284 ;;		_lunos_init
   285 ;;		_user_conf
   286 ;; This function is called by:
   287 ;;		Startup code after reset
   288 ;; This function uses a reentrant model
   289 ;;
   290                           
   291                           	psect	text0
   292  00181C                     __ptext0:
   293                           	opt callstack 0
   294  00181C                     _main:
   295                           	opt callstack 17
   296                           
   297                           ;main.c: 18:   dispatcher(READY);
   298                           
   299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   300                           ;incstack = 0
   301  00181C  ECC7  F00C         	call	_lunos_init	;wreg free
   302                           
   303                           ;main.c: 20:   while (1);
   304  001820  ECE1  F00B         	call	_user_conf	;wreg free
   305                           
   306                           ;main.c: 21: 
   307  001824  ECFE  F00C         	call	_config_INT0	;wreg free
   308                           
   309                           ;main.c: 22:   return;
   310  001828  ECF5  F00C         	call	_config_timer0	;wreg free
   311  00182C  0E10               	movlw	low _task_0
   312  00182E  6EE6               	movwf	postinc1,c
   313  001830  0E19               	movlw	high _task_0
   314  001832  6EE6               	movwf	postinc1,c
   315  001834  0E03               	movlw	3
   316  001836  6EE6               	movwf	postinc1,c
   317  001838  0E00               	movlw	0
   318  00183A  6EE6               	movwf	postinc1,c
   319  00183C  EC48  F008         	call	_lunos_createTask	;wreg free
   320  001840  0EC4               	movlw	low _task_1
   321  001842  6EE6               	movwf	postinc1,c
   322  001844  0E18               	movlw	high _task_1
   323  001846  6EE6               	movwf	postinc1,c
   324  001848  0E04               	movlw	4
   325  00184A  6EE6               	movwf	postinc1,c
   326  00184C  0E00               	movlw	0
   327  00184E  6EE6               	movwf	postinc1,c
   328  001850  EC48  F008         	call	_lunos_createTask	;wreg free
   329  001854  0EC0               	movlw	low _task_2
   330  001856  6EE6               	movwf	postinc1,c
   331  001858  0E19               	movlw	high _task_2
   332  00185A  6EE6               	movwf	postinc1,c
   333  00185C  0E05               	movlw	5
   334  00185E  6EE6               	movwf	postinc1,c
   335  001860  0E00               	movlw	0
   336  001862  6EE6               	movwf	postinc1,c
   337  001864  EC48  F008         	call	_lunos_createTask	;wreg free
   338  001868  0E00               	movlw	0
   339  00186A  6EE6               	movwf	postinc1,c
   340  00186C  EC66  F002         	call	_dispatcher	;wreg free
   341  001870                     l182:
   342  001870  D7FF               	goto	l182
   343  001872                     __end_of_main:
   344                           	opt callstack 0
   345                           
   346 ;; *************** function _user_conf *****************
   347 ;; Defined at:
   348 ;;		line 18 in file "tasks.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1  [STACK] void 
   355 ;; Registers used:
   356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   362 ;;      Params:         0       0       0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; Hardware stack levels required when called:   12
   369 ;; This function calls:
   370 ;;		_SRAMalloc
   371 ;;		_pipe_create
   372 ;;		_sem_init
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a reentrant model
   376 ;;
   377                           
   378                           	psect	text1
   379  0017C2                     __ptext1:
   380                           	opt callstack 0
   381  0017C2                     _user_conf:
   382                           	opt callstack 18
   383                           
   384                           ;tasks.c: 19:   TRISB = 0b00000001;
   385                           
   386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   387                           ;incstack = 0
   388  0017C2  0E01               	movlw	1
   389  0017C4  6E93               	movwf	3987,c	;volatile
   390                           
   391                           ;tasks.c: 20:   sem_init(&teste_1, 1);
   392  0017C6  0E01               	movlw	1
   393  0017C8  6EE6               	movwf	postinc1,c
   394  0017CA  0E00               	movlw	0
   395  0017CC  6EE6               	movwf	postinc1,c
   396  0017CE  0E31               	movlw	low _teste_1
   397  0017D0  6EE6               	movwf	postinc1,c
   398  0017D2  0E00               	movlw	high _teste_1
   399  0017D4  6EE6               	movwf	postinc1,c
   400  0017D6  ECA9  F00B         	call	_sem_init	;wreg free
   401                           
   402                           ;tasks.c: 21:   sem_init(&teste_2, 0);
   403  0017DA  0E00               	movlw	0
   404  0017DC  6EE6               	movwf	postinc1,c
   405  0017DE  0E00               	movlw	0
   406  0017E0  6EE6               	movwf	postinc1,c
   407  0017E2  0E23               	movlw	low _teste_2
   408  0017E4  6EE6               	movwf	postinc1,c
   409  0017E6  0E00               	movlw	high _teste_2
   410  0017E8  6EE6               	movwf	postinc1,c
   411  0017EA  ECA9  F00B         	call	_sem_init	;wreg free
   412                           
   413                           ;tasks.c: 22:   pipe_create(&p, &w_pipe, &r_pipe);
   414  0017EE  0E07               	movlw	low _r_pipe
   415  0017F0  6EE6               	movwf	postinc1,c
   416  0017F2  0E00               	movlw	high _r_pipe
   417  0017F4  6EE6               	movwf	postinc1,c
   418  0017F6  0E15               	movlw	low _w_pipe
   419  0017F8  6EE6               	movwf	postinc1,c
   420  0017FA  0E00               	movlw	high _w_pipe
   421  0017FC  6EE6               	movwf	postinc1,c
   422  0017FE  0E3F               	movlw	low _p
   423  001800  6EE6               	movwf	postinc1,c
   424  001802  0E00               	movlw	high _p
   425  001804  6EE6               	movwf	postinc1,c
   426  001806  ECB8  F006         	call	_pipe_create	;wreg free
   427                           
   428                           ;tasks.c: 23:   mem = SRAMalloc(5);
   429  00180A  0E05               	movlw	5
   430  00180C  6EE6               	movwf	postinc1,c
   431  00180E  ECB8  F004         	call	_SRAMalloc	;wreg free
   432  001812  C04B  F001         	movff	btemp,_mem
   433  001816  C04C  F002         	movff	btemp+1,_mem+1
   434                           
   435                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   436  00181A  0012               	return		;funcret
   437  00181C                     __end_of_user_conf:
   438                           	opt callstack 0
   439                           
   440 ;; *************** function _pipe_create *****************
   441 ;; Defined at:
   442 ;;		line 9 in file "pipe.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;  p               2  [STACK] PTR struct pipe
   445 ;;		 -> p(12), 
   446 ;;  w               2  [STACK] PTR struct semaphore
   447 ;;		 -> w_pipe(14), 
   448 ;;  r               2  [STACK] PTR struct semaphore
   449 ;;		 -> r_pipe(14), 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1  [STACK] void 
   454 ;; Registers used:
   455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   461 ;;      Params:         0       0       0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0
   464 ;;      Totals:         0       0       0       0       0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; Hardware stack levels required when called:   11
   468 ;; This function calls:
   469 ;;		_sem_init
   470 ;; This function is called by:
   471 ;;		_user_conf
   472 ;; This function uses a reentrant model
   473 ;;
   474                           
   475                           	psect	text2
   476  000D70                     __ptext2:
   477                           	opt callstack 0
   478  000D70                     _pipe_create:
   479                           	opt callstack 18
   480                           
   481                           ;pipe.c: 10:   p->index_write = 0;
   482                           ;stkvar	_p @ sp[(0)+-2]
   483                           
   484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   485                           ;incstack = 0
   486  000D70  0EFE               	movlw	-2
   487  000D72  CFE3 F055          	movff	plusw1,btemp+10
   488  000D76  0EFF               	movlw	-1
   489  000D78  CFE3 F056          	movff	plusw1,btemp+11
   490  000D7C  0E04               	movlw	4
   491  000D7E  2455               	addwf	btemp+10,w,c
   492  000D80  6ED9               	movwf	fsr2l,c
   493  000D82  0E00               	movlw	0
   494  000D84  2056               	addwfc	btemp+11,w,c
   495  000D86  6EDA               	movwf	fsr2h,c
   496  000D88  0E00               	movlw	0
   497  000D8A  6EDE               	movwf	postinc2,c
   498  000D8C  0E00               	movlw	0
   499  000D8E  6EDD               	movwf	postdec2,c
   500                           
   501                           ;pipe.c: 11:   p->index_read = 0;
   502                           ;stkvar	_p @ sp[(0)+-2]
   503  000D90  0EFE               	movlw	-2
   504  000D92  CFE3 F055          	movff	plusw1,btemp+10
   505  000D96  0EFF               	movlw	-1
   506  000D98  CFE3 F056          	movff	plusw1,btemp+11
   507  000D9C  0E06               	movlw	6
   508  000D9E  2455               	addwf	btemp+10,w,c
   509  000DA0  6ED9               	movwf	fsr2l,c
   510  000DA2  0E00               	movlw	0
   511  000DA4  2056               	addwfc	btemp+11,w,c
   512  000DA6  6EDA               	movwf	fsr2h,c
   513  000DA8  0E00               	movlw	0
   514  000DAA  6EDE               	movwf	postinc2,c
   515  000DAC  0E00               	movlw	0
   516  000DAE  6EDD               	movwf	postdec2,c
   517                           
   518                           ;pipe.c: 12:   p->w = w;
   519                           ;stkvar	_w @ sp[(0)+-4]
   520  000DB0  50E1               	movf	fsr1l,w,c
   521  000DB2  0FFC               	addlw	-4
   522  000DB4  6ED9               	movwf	fsr2l,c
   523  000DB6  50E2               	movf	fsr1h,w,c
   524  000DB8  6EDA               	movwf	fsr2h,c
   525  000DBA  0EFF               	movlw	255
   526  000DBC  22DA               	addwfc	fsr2h,f,c
   527                           
   528                           ;stkvar	_p @ sp[(0)+-2]
   529  000DBE  0EFE               	movlw	-2
   530  000DC0  CFE3 F055          	movff	plusw1,btemp+10
   531  000DC4  0EFF               	movlw	-1
   532  000DC6  CFE3 F056          	movff	plusw1,btemp+11
   533  000DCA  0E08               	movlw	8
   534  000DCC  2455               	addwf	btemp+10,w,c
   535  000DCE  6EE9               	movwf	fsr0l,c
   536  000DD0  0E00               	movlw	0
   537  000DD2  2056               	addwfc	btemp+11,w,c
   538  000DD4  6EEA               	movwf	fsr0h,c
   539  000DD6  CFDE FFEE          	movff	postinc2,postinc0
   540  000DDA  CFDD FFED          	movff	postdec2,postdec0
   541                           
   542                           ;pipe.c: 13:   p->r = r;
   543                           ;stkvar	_r @ sp[(0)+-6]
   544  000DDE  50E1               	movf	fsr1l,w,c
   545  000DE0  0FFA               	addlw	-6
   546  000DE2  6ED9               	movwf	fsr2l,c
   547  000DE4  50E2               	movf	fsr1h,w,c
   548  000DE6  6EDA               	movwf	fsr2h,c
   549  000DE8  0EFF               	movlw	255
   550  000DEA  22DA               	addwfc	fsr2h,f,c
   551                           
   552                           ;stkvar	_p @ sp[(0)+-2]
   553  000DEC  0EFE               	movlw	-2
   554  000DEE  CFE3 F055          	movff	plusw1,btemp+10
   555  000DF2  0EFF               	movlw	-1
   556  000DF4  CFE3 F056          	movff	plusw1,btemp+11
   557  000DF8  0E0A               	movlw	10
   558  000DFA  2455               	addwf	btemp+10,w,c
   559  000DFC  6EE9               	movwf	fsr0l,c
   560  000DFE  0E00               	movlw	0
   561  000E00  2056               	addwfc	btemp+11,w,c
   562  000E02  6EEA               	movwf	fsr0h,c
   563  000E04  CFDE FFEE          	movff	postinc2,postinc0
   564  000E08  CFDD FFED          	movff	postdec2,postdec0
   565                           
   566                           ;pipe.c: 14:   sem_init(p->w, 2);
   567  000E0C  0E02               	movlw	2
   568  000E0E  6EE6               	movwf	postinc1,c
   569  000E10  0E00               	movlw	0
   570  000E12  6EE6               	movwf	postinc1,c
   571                           
   572                           ;stkvar	_p @ sp[(-2)+-2]
   573  000E14  0EFC               	movlw	-4
   574  000E16  CFE3 F055          	movff	plusw1,btemp+10
   575  000E1A  0EFD               	movlw	-3
   576  000E1C  CFE3 F056          	movff	plusw1,btemp+11
   577  000E20  0E08               	movlw	8
   578  000E22  2455               	addwf	btemp+10,w,c
   579  000E24  6ED9               	movwf	fsr2l,c
   580  000E26  0E00               	movlw	0
   581  000E28  2056               	addwfc	btemp+11,w,c
   582  000E2A  6EDA               	movwf	fsr2h,c
   583  000E2C  CFDE F055          	movff	postinc2,btemp+10
   584  000E30  CFDD F056          	movff	postdec2,btemp+11
   585  000E34  C055  FFE6         	movff	btemp+10,postinc1
   586  000E38  C056  FFE6         	movff	btemp+11,postinc1
   587  000E3C  ECA9  F00B         	call	_sem_init	;wreg free
   588                           
   589                           ;pipe.c: 15:   sem_init(p->r, 0);
   590  000E40  0E00               	movlw	0
   591  000E42  6EE6               	movwf	postinc1,c
   592  000E44  0E00               	movlw	0
   593  000E46  6EE6               	movwf	postinc1,c
   594                           
   595                           ;stkvar	_p @ sp[(-2)+-2]
   596  000E48  0EFC               	movlw	-4
   597  000E4A  CFE3 F055          	movff	plusw1,btemp+10
   598  000E4E  0EFD               	movlw	-3
   599  000E50  CFE3 F056          	movff	plusw1,btemp+11
   600  000E54  0E0A               	movlw	10
   601  000E56  2455               	addwf	btemp+10,w,c
   602  000E58  6ED9               	movwf	fsr2l,c
   603  000E5A  0E00               	movlw	0
   604  000E5C  2056               	addwfc	btemp+11,w,c
   605  000E5E  6EDA               	movwf	fsr2h,c
   606  000E60  CFDE F055          	movff	postinc2,btemp+10
   607  000E64  CFDD F056          	movff	postdec2,btemp+11
   608  000E68  C055  FFE6         	movff	btemp+10,postinc1
   609  000E6C  C056  FFE6         	movff	btemp+11,postinc1
   610  000E70  ECA9  F00B         	call	_sem_init	;wreg free
   611                           
   612                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
   613  000E74  0EFA               	movlw	250
   614  000E76  26E1               	addwf	fsr1l,f,c
   615  000E78  0EFF               	movlw	255
   616  000E7A  22E2               	addwfc	fsr1h,f,c
   617  000E7C  0012               	return		;funcret
   618  000E7E                     __end_of_pipe_create:
   619                           	opt callstack 0
   620                           
   621 ;; *************** function _sem_init *****************
   622 ;; Defined at:
   623 ;;		line 10 in file "semaphore.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  s               2  [STACK] PTR struct semaphore
   626 ;;		 -> r_pipe(14), w_pipe(14), teste_2(14), teste_1(14), 
   627 ;;  valor           2  [STACK] int 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1  [STACK] void 
   632 ;; Registers used:
   633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   639 ;;      Params:         0       0       0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0       0       0
   642 ;;      Totals:         0       0       0       0       0       0       0
   643 ;;Total ram usage:        0 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; Hardware stack levels required when called:   10
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_pipe_create
   650 ;;		_user_conf
   651 ;; This function uses a reentrant model
   652 ;;
   653                           
   654                           	psect	text3
   655  001752                     __ptext3:
   656                           	opt callstack 0
   657  001752                     _sem_init:
   658                           	opt callstack 19
   659                           
   660                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   661                           
   662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   663                           ;incstack = 0
   664  001752  9EF2               	bcf	4082,7,c	;volatile
   665                           
   666                           ;semaphore.c: 13:   s->contador = valor;
   667                           ;stkvar	_valor @ sp[(0)+-4]
   668  001754  50E1               	movf	fsr1l,w,c
   669  001756  0FFC               	addlw	-4
   670  001758  6ED9               	movwf	fsr2l,c
   671  00175A  50E2               	movf	fsr1h,w,c
   672  00175C  6EDA               	movwf	fsr2h,c
   673  00175E  0EFF               	movlw	255
   674  001760  22DA               	addwfc	fsr2h,f,c
   675                           
   676                           ;stkvar	_s @ sp[(0)+-2]
   677  001762  0EFE               	movlw	-2
   678  001764  CFE3 FFE9          	movff	plusw1,fsr0l
   679  001768  0EFF               	movlw	-1
   680  00176A  CFE3 FFEA          	movff	plusw1,fsr0h
   681  00176E  CFDE FFEE          	movff	postinc2,postinc0
   682  001772  CFDD FFED          	movff	postdec2,postdec0
   683                           
   684                           ;semaphore.c: 14:   s->bloqued_size = 0;
   685                           ;stkvar	_s @ sp[(0)+-2]
   686  001776  0EFE               	movlw	-2
   687  001778  CFE3 F055          	movff	plusw1,btemp+10
   688  00177C  0EFF               	movlw	-1
   689  00177E  CFE3 F056          	movff	plusw1,btemp+11
   690  001782  0E0A               	movlw	10
   691  001784  2455               	addwf	btemp+10,w,c
   692  001786  6ED9               	movwf	fsr2l,c
   693  001788  0E00               	movlw	0
   694  00178A  2056               	addwfc	btemp+11,w,c
   695  00178C  6EDA               	movwf	fsr2h,c
   696  00178E  0E00               	movlw	0
   697  001790  6EDE               	movwf	postinc2,c
   698  001792  0E00               	movlw	0
   699  001794  6EDD               	movwf	postdec2,c
   700                           
   701                           ;semaphore.c: 15:   s->task_to_ready = 0;
   702                           ;stkvar	_s @ sp[(0)+-2]
   703  001796  0EFE               	movlw	-2
   704  001798  CFE3 F055          	movff	plusw1,btemp+10
   705  00179C  0EFF               	movlw	-1
   706  00179E  CFE3 F056          	movff	plusw1,btemp+11
   707  0017A2  0E0C               	movlw	12
   708  0017A4  2455               	addwf	btemp+10,w,c
   709  0017A6  6ED9               	movwf	fsr2l,c
   710  0017A8  0E00               	movlw	0
   711  0017AA  2056               	addwfc	btemp+11,w,c
   712  0017AC  6EDA               	movwf	fsr2h,c
   713  0017AE  0E00               	movlw	0
   714  0017B0  6EDE               	movwf	postinc2,c
   715  0017B2  0E00               	movlw	0
   716  0017B4  6EDD               	movwf	postdec2,c
   717                           
   718                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   719  0017B6  8EF2               	bsf	4082,7,c	;volatile
   720                           
   721                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   722  0017B8  52E5               	movf	postdec1,f,c
   723  0017BA  52E5               	movf	postdec1,f,c
   724  0017BC  52E5               	movf	postdec1,f,c
   725  0017BE  52E5               	movf	postdec1,f,c
   726  0017C0  0012               	return		;funcret
   727  0017C2                     __end_of_sem_init:
   728                           	opt callstack 0
   729                           
   730 ;; *************** function _SRAMalloc *****************
   731 ;; Defined at:
   732 ;;		line 191 in file "sralloc.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  nBytes          1  [STACK] unsigned char 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  pHeap           2  [STACK] PTR struct _SALLOC
   737 ;;		 -> _uDynamicHeap(512), 
   738 ;;  temp            2  [STACK] PTR struct _SALLOC
   739 ;;		 -> _uDynamicHeap(512), 
   740 ;;  segHeader       1  [STACK] struct _SALLOC
   741 ;;  segLen          1  [STACK] unsigned char 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  2  [STACK] PTR unsigned char 
   744 ;; Registers used:
   745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   751 ;;      Params:         0       0       0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:   11
   758 ;; This function calls:
   759 ;;		__SRAMmerge
   760 ;; This function is called by:
   761 ;;		_user_conf
   762 ;; This function uses a reentrant model
   763 ;;
   764                           
   765                           	psect	text4
   766  000970                     __ptext4:
   767                           	opt callstack 0
   768  000970                     _SRAMalloc:
   769                           	opt callstack 0
   770                           
   771                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   772  000970  0E06               	movlw	6
   773  000972  26E1               	addwf	fsr1l,f,c
   774  000974  0E00               	movlw	0
   775  000976  22E2               	addwfc	fsr1h,f,c
   776                           
   777                           ;sralloc.c: 191: unsigned char * SRAMalloc( unsigned char nBytes);sralloc.c: 192: {;sral
      +                          loc.c: 193:  SALLOC * pHeap;;sralloc.c: 194:  SALLOC * temp;;sralloc.c: 195:       SALLO
      +                          C segHeader;;sralloc.c: 196:       unsigned char segLen;;sralloc.c: 199:  if (nBytes > (
      +                          0x7F - 1)) return (0);
   778                           ;stkvar	_nBytes @ sp[(-6)+-1]
   779                           
   780                           ;incstack = 0
   781  000978  0EF9               	movlw	-7
   782  00097A  CFE3 F04B          	movff	plusw1,btemp
   783  00097E  0E7E               	movlw	126
   784  000980  644B               	cpfsgt	btemp,c
   785  000982  D005               	goto	l1171
   786  000984                     u110:
   787  000984  0E00               	movlw	0
   788  000986  6E4B               	movwf	btemp,c
   789  000988  0E00               	movlw	0
   790  00098A  6E4C               	movwf	btemp+1,c
   791  00098C  D0BB               	goto	l311
   792  00098E                     l1171:
   793                           
   794                           ;sralloc.c: 202:  pHeap = (SALLOC *)_uDynamicHeap;
   795                           ;stkvar	_pHeap @ sp[(-6)+0]
   796  00098E  0E04               	movlw	high __uDynamicHeap
   797  000990  6E4B               	movwf	btemp,c
   798  000992  0EFB               	movlw	-5
   799  000994  C04B  FFE3         	movff	btemp,plusw1
   800  000998  0E00               	movlw	low __uDynamicHeap
   801  00099A  6E4B               	movwf	btemp,c
   802  00099C  0EFA               	movlw	-6
   803  00099E  C04B  FFE3         	movff	btemp,plusw1
   804  0009A2                     l1173:
   805                           
   806                           ;sralloc.c: 205:  {;sralloc.c: 207:   segHeader = *pHeap;
   807                           ;stkvar	_pHeap @ sp[(-6)+0]
   808  0009A2  0EFA               	movlw	-6
   809  0009A4  CFE3 FFD9          	movff	plusw1,fsr2l
   810  0009A8  0EFB               	movlw	-5
   811  0009AA  CFE3 FFDA          	movff	plusw1,fsr2h
   812  0009AE  50DF               	movf	indf2,w,c
   813  0009B0  6E56               	movwf	btemp+11,c
   814                           
   815                           ;stkvar	_segHeader @ sp[(-6)+4]
   816  0009B2  0EFE               	movlw	-2
   817  0009B4  C056  FFE3         	movff	btemp+11,plusw1
   818                           
   819                           ;sralloc.c: 210:   segLen = segHeader.bits.count - 1;
   820                           ;stkvar	_segHeader @ sp[(-6)+4]
   821  0009B8  50E1               	movf	fsr1l,w,c
   822  0009BA  0FFE               	addlw	-2
   823  0009BC  6ED9               	movwf	fsr2l,c
   824  0009BE  50E2               	movf	fsr1h,w,c
   825  0009C0  6EDA               	movwf	fsr2h,c
   826  0009C2  0EFF               	movlw	255
   827  0009C4  22DA               	addwfc	fsr2h,f,c
   828  0009C6  50DF               	movf	223,w,c
   829  0009C8  0B7F               	andlw	127
   830  0009CA  6E56               	movwf	btemp+11,c
   831  0009CC  0EFF               	movlw	255
   832  0009CE  2656               	addwf	btemp+11,f,c
   833                           
   834                           ;stkvar	_segLen @ sp[(-6)+5]
   835  0009D0  0EFF               	movlw	-1
   836  0009D2  C056  FFE3         	movff	btemp+11,plusw1
   837                           
   838                           ;sralloc.c: 213:   if (segHeader.byte == 0) return (0);
   839                           ;stkvar	_segHeader @ sp[(-6)+4]
   840  0009D6  0EFE               	movlw	-2
   841  0009D8  50E3               	movf	plusw1,w,c
   842  0009DA  B4D8               	btfsc	status,2,c
   843  0009DC  D7D3               	goto	u110
   844                           
   845                           ;sralloc.c: 216:   if (!(segHeader.bits.alloc))
   846                           ;stkvar	_segHeader @ sp[(-6)+4]
   847  0009DE  50E1               	movf	fsr1l,w,c
   848  0009E0  0FFE               	addlw	-2
   849  0009E2  6ED9               	movwf	fsr2l,c
   850  0009E4  50E2               	movf	fsr1h,w,c
   851  0009E6  6EDA               	movwf	fsr2h,c
   852  0009E8  0EFF               	movlw	255
   853  0009EA  22DA               	addwfc	fsr2h,f,c
   854  0009EC  BEDF               	btfsc	indf2,7,c
   855  0009EE  D016               	goto	u150
   856                           
   857                           ;sralloc.c: 217:   {;sralloc.c: 219:    if (nBytes > segLen)
   858                           ;stkvar	_nBytes @ sp[(-6)+-1]
   859                           ;stkvar	_segLen @ sp[(-6)+5]
   860  0009F0  50E1               	movf	fsr1l,w,c
   861  0009F2  0FFF               	addlw	-1
   862  0009F4  6ED9               	movwf	fsr2l,c
   863  0009F6  50E2               	movf	fsr1h,w,c
   864  0009F8  6EDA               	movwf	fsr2h,c
   865  0009FA  0EFF               	movlw	255
   866  0009FC  22DA               	addwfc	fsr2h,f,c
   867  0009FE  0EF9               	movlw	-7
   868  000A00  50E3               	movf	plusw1,w,c
   869  000A02  5CDE               	subwf	postinc2,w,c
   870  000A04  B0D8               	btfsc	status,0,c
   871  000A06  D020               	goto	l1191
   872                           
   873                           ;sralloc.c: 220:    {;sralloc.c: 222:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.b
      +                          its.count;
   874                           ;stkvar	_pHeap @ sp[(-6)+0]
   875  000A08  0EFA               	movlw	-6
   876  000A0A  CFE3 FFE6          	movff	plusw1,postinc1
   877  000A0E  CFE3 FFE6          	movff	plusw1,postinc1
   878  000A12  EC87  F005         	call	__SRAMmerge	;wreg free
   879  000A16  504B               	movf	btemp,w,c
   880  000A18  A4D8               	btfss	status,2,c
   881  000A1A  D7C3               	goto	l1173
   882  000A1C                     u150:
   883                           
   884                           ;stkvar	_segHeader @ sp[(-6)+4]
   885  000A1C  50E1               	movf	fsr1l,w,c
   886  000A1E  0FFE               	addlw	-2
   887  000A20  6ED9               	movwf	fsr2l,c
   888  000A22  50E2               	movf	fsr1h,w,c
   889  000A24  6EDA               	movwf	fsr2h,c
   890  000A26  0EFF               	movlw	255
   891  000A28  22DA               	addwfc	fsr2h,f,c
   892  000A2A  50DF               	movf	223,w,c
   893  000A2C  0B7F               	andlw	127
   894  000A2E  0D01               	mullw	1
   895                           
   896                           ;stkvar	_pHeap @ sp[(-6)+0]
   897  000A30  50E1               	movf	fsr1l,w,c
   898  000A32  0FFA               	addlw	-6
   899  000A34  6ED9               	movwf	fsr2l,c
   900  000A36  50E2               	movf	fsr1h,w,c
   901  000A38  6EDA               	movwf	fsr2h,c
   902  000A3A  0EFF               	movlw	255
   903  000A3C  22DA               	addwfc	fsr2h,f,c
   904  000A3E  50F3               	movf	prodl,w,c
   905  000A40  26DE               	addwf	postinc2,f,c
   906  000A42  50F4               	movf	prodh,w,c
   907  000A44  22DD               	addwfc	postdec2,f,c
   908  000A46  D7AD               	goto	l1173
   909  000A48                     l1191:
   910                           
   911                           ;sralloc.c: 228:    if (nBytes == segLen)
   912                           ;stkvar	_segLen @ sp[(-6)+5]
   913                           ;stkvar	_nBytes @ sp[(-6)+-1]
   914  000A48  50E1               	movf	fsr1l,w,c
   915  000A4A  0FF9               	addlw	-7
   916  000A4C  6ED9               	movwf	fsr2l,c
   917  000A4E  50E2               	movf	fsr1h,w,c
   918  000A50  6EDA               	movwf	fsr2h,c
   919  000A52  0EFF               	movlw	255
   920  000A54  22DA               	addwfc	fsr2h,f,c
   921  000A56  0EFF               	movlw	-1
   922  000A58  50E3               	movf	plusw1,w,c
   923  000A5A  18DE               	xorwf	postinc2,w,c
   924  000A5C  A4D8               	btfss	status,2,c
   925  000A5E  D011               	goto	l1201
   926                           
   927                           ;sralloc.c: 229:    {;sralloc.c: 231:     (*pHeap).bits.alloc = 1;
   928                           ;stkvar	_pHeap @ sp[(-6)+0]
   929  000A60  0EFA               	movlw	-6
   930  000A62  CFE3 FFD9          	movff	plusw1,fsr2l
   931  000A66  0EFB               	movlw	-5
   932  000A68  CFE3 FFDA          	movff	plusw1,fsr2h
   933  000A6C  8EDF               	bsf	indf2,7,c
   934                           
   935                           ;sralloc.c: 234:     return ((unsigned char *)(pHeap + 1));
   936                           ;stkvar	_pHeap @ sp[(-6)+0]
   937  000A6E  0EFA               	movlw	-6
   938  000A70  50E3               	movf	plusw1,w,c
   939  000A72  0F01               	addlw	1
   940  000A74  6E4B               	movwf	btemp,c
   941  000A76  0EFB               	movlw	-5
   942  000A78  CFE3 F04C          	movff	plusw1,btemp+1
   943  000A7C  0E00               	movlw	0
   944  000A7E  224C               	addwfc	btemp+1,f,c
   945  000A80  D041               	goto	l311
   946  000A82                     l1201:
   947                           
   948                           ;sralloc.c: 239:    {;sralloc.c: 241:     (*pHeap).byte = nBytes + 0x81;
   949                           ;stkvar	_pHeap @ sp[(-6)+0]
   950  000A82  0EFA               	movlw	-6
   951  000A84  CFE3 FFD9          	movff	plusw1,fsr2l
   952  000A88  0EFB               	movlw	-5
   953  000A8A  CFE3 FFDA          	movff	plusw1,fsr2h
   954                           
   955                           ;stkvar	_nBytes @ sp[(-6)+-1]
   956  000A8E  0EF9               	movlw	-7
   957  000A90  50E3               	movf	plusw1,w,c
   958  000A92  0F81               	addlw	129
   959  000A94  6EDF               	movwf	indf2,c
   960                           
   961                           ;sralloc.c: 244:     temp = pHeap + 1;
   962                           ;stkvar	_pHeap @ sp[(-6)+0]
   963  000A96  0EFA               	movlw	-6
   964  000A98  50E3               	movf	plusw1,w,c
   965  000A9A  0F01               	addlw	1
   966  000A9C  6E55               	movwf	btemp+10,c
   967  000A9E  0EFB               	movlw	-5
   968  000AA0  CFE3 F056          	movff	plusw1,btemp+11
   969  000AA4  0E00               	movlw	0
   970  000AA6  2256               	addwfc	btemp+11,f,c
   971                           
   972                           ;stkvar	_temp @ sp[(-6)+2]
   973  000AA8  0EFD               	movlw	-3
   974  000AAA  C056  FFE3         	movff	btemp+11,plusw1
   975  000AAE  0EFC               	movlw	-4
   976  000AB0  C055  FFE3         	movff	btemp+10,plusw1
   977                           
   978                           ;sralloc.c: 247:     pHeap += (nBytes + 1);
   979                           ;stkvar	_nBytes @ sp[(-6)+-1]
   980  000AB4  0EF9               	movlw	-7
   981  000AB6  50E3               	movf	plusw1,w,c
   982  000AB8  6E55               	movwf	btemp+10,c
   983  000ABA  6A56               	clrf	btemp+11,c
   984  000ABC  0E01               	movlw	1
   985  000ABE  2655               	addwf	btemp+10,f,c
   986  000AC0  0E00               	movlw	0
   987  000AC2  2256               	addwfc	btemp+11,f,c
   988                           
   989                           ;stkvar	_pHeap @ sp[(-6)+0]
   990  000AC4  50E1               	movf	fsr1l,w,c
   991  000AC6  0FFA               	addlw	-6
   992  000AC8  6ED9               	movwf	fsr2l,c
   993  000ACA  50E2               	movf	fsr1h,w,c
   994  000ACC  6EDA               	movwf	fsr2h,c
   995  000ACE  0EFF               	movlw	255
   996  000AD0  22DA               	addwfc	fsr2h,f,c
   997  000AD2  5055               	movf	btemp+10,w,c
   998  000AD4  26DE               	addwf	postinc2,f,c
   999  000AD6  5056               	movf	btemp+11,w,c
  1000  000AD8  22DD               	addwfc	postdec2,f,c
  1001                           
  1002                           ;sralloc.c: 250:     (*pHeap).byte = segLen - nBytes;
  1003                           ;stkvar	_pHeap @ sp[(-6)+0]
  1004  000ADA  0EFA               	movlw	-6
  1005  000ADC  CFE3 FFD9          	movff	plusw1,fsr2l
  1006  000AE0  0EFB               	movlw	-5
  1007  000AE2  CFE3 FFDA          	movff	plusw1,fsr2h
  1008                           
  1009                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1010  000AE6  0EF9               	movlw	-7
  1011  000AE8  CFE3 F056          	movff	plusw1,btemp+11
  1012                           
  1013                           ;stkvar	_segLen @ sp[(-6)+5]
  1014  000AEC  0EFF               	movlw	-1
  1015  000AEE  CFE3 F055          	movff	plusw1,btemp+10
  1016  000AF2  5056               	movf	btemp+11,w,c
  1017  000AF4  5C55               	subwf	btemp+10,w,c
  1018  000AF6  6EDF               	movwf	indf2,c
  1019                           
  1020                           ;sralloc.c: 253:     return ((unsigned char *) temp);
  1021                           ;stkvar	_temp @ sp[(-6)+2]
  1022  000AF8  0EFC               	movlw	-4
  1023  000AFA  CFE3 F04B          	movff	plusw1,btemp
  1024  000AFE  0EFD               	movlw	-3
  1025  000B00  CFE3 F04C          	movff	plusw1,btemp+1
  1026  000B04                     l311:
  1027                           
  1028                           ; _SRAMalloc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  1029  000B04  0EF9               	movlw	249
  1030  000B06  26E1               	addwf	fsr1l,f,c
  1031  000B08  0EFF               	movlw	255
  1032  000B0A  22E2               	addwfc	fsr1h,f,c
  1033  000B0C  0012               	return		;funcret
  1034  000B0E                     __end_of_SRAMalloc:
  1035                           	opt callstack 0
  1036                           
  1037 ;; *************** function __SRAMmerge *****************
  1038 ;; Defined at:
  1039 ;;		line 359 in file "sralloc.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  pSegA           2  [STACK] PTR struct _SALLOC
  1042 ;;		 -> _uDynamicHeap(512), 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  pSegB           2  [STACK] PTR struct _SALLOC
  1045 ;;		 -> _uDynamicHeap(512), 
  1046 ;;  uSegB           1  [STACK] struct _SALLOC
  1047 ;;  uSegA           1  [STACK] struct _SALLOC
  1048 ;;  uSum            1  [STACK] struct _SALLOC
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1  [STACK] unsigned char 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1058 ;;      Params:         0       0       0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:   10
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_SRAMalloc
  1069 ;; This function uses a reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text5
  1073  000B0E                     __ptext5:
  1074                           	opt callstack 0
  1075  000B0E                     __SRAMmerge:
  1076                           	opt callstack 0
  1077                           
  1078                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1079  000B0E  0E05               	movlw	5
  1080  000B10  26E1               	addwf	fsr1l,f,c
  1081  000B12  0E00               	movlw	0
  1082  000B14  22E2               	addwfc	fsr1h,f,c
  1083                           
  1084                           ;sralloc.c: 359:      unsigned char _SRAMmerge(SALLOC * pSegA);sralloc.c: 360: {;sralloc
      +                          .c: 361:  SALLOC * pSegB;;sralloc.c: 362:       SALLOC uSegA, uSegB, uSum;;sralloc.c: 36
      +                          6:  pSegB = pSegA + (*pSegA).byte;
  1085                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1086                           
  1087                           ;incstack = 0
  1088  000B16  0EF9               	movlw	-7
  1089  000B18  CFE3 FFD9          	movff	plusw1,fsr2l
  1090  000B1C  0EFA               	movlw	-6
  1091  000B1E  CFE3 FFDA          	movff	plusw1,fsr2h
  1092  000B22  50DF               	movf	indf2,w,c
  1093  000B24  6E55               	movwf	btemp+10,c
  1094  000B26  6A56               	clrf	btemp+11,c
  1095                           
  1096                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1097  000B28  0EF9               	movlw	-7
  1098  000B2A  50E3               	movf	plusw1,w,c
  1099  000B2C  2655               	addwf	btemp+10,f,c
  1100  000B2E  0EFA               	movlw	-6
  1101  000B30  50E3               	movf	plusw1,w,c
  1102  000B32  2256               	addwfc	btemp+11,f,c
  1103                           
  1104                           ;stkvar	_pSegB @ sp[(-5)+0]
  1105  000B34  0EFC               	movlw	-4
  1106  000B36  C056  FFE3         	movff	btemp+11,plusw1
  1107  000B3A  0EFB               	movlw	-5
  1108  000B3C  C055  FFE3         	movff	btemp+10,plusw1
  1109                           
  1110                           ;sralloc.c: 369:  uSegA = *pSegA;
  1111                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1112  000B40  0EF9               	movlw	-7
  1113  000B42  CFE3 FFD9          	movff	plusw1,fsr2l
  1114  000B46  0EFA               	movlw	-6
  1115  000B48  CFE3 FFDA          	movff	plusw1,fsr2h
  1116  000B4C  50DF               	movf	indf2,w,c
  1117  000B4E  6E56               	movwf	btemp+11,c
  1118                           
  1119                           ;stkvar	_uSegA @ sp[(-5)+3]
  1120  000B50  0EFE               	movlw	-2
  1121  000B52  C056  FFE3         	movff	btemp+11,plusw1
  1122                           
  1123                           ;sralloc.c: 370:  uSegB = *pSegB;
  1124                           ;stkvar	_pSegB @ sp[(-5)+0]
  1125  000B56  0EFB               	movlw	-5
  1126  000B58  CFE3 FFD9          	movff	plusw1,fsr2l
  1127  000B5C  0EFC               	movlw	-4
  1128  000B5E  CFE3 FFDA          	movff	plusw1,fsr2h
  1129  000B62  50DF               	movf	indf2,w,c
  1130  000B64  6E56               	movwf	btemp+11,c
  1131                           
  1132                           ;stkvar	_uSegB @ sp[(-5)+2]
  1133  000B66  0EFD               	movlw	-3
  1134  000B68  C056  FFE3         	movff	btemp+11,plusw1
  1135                           
  1136                           ;sralloc.c: 373:  if (uSegB.byte == 0) return (0);
  1137                           ;stkvar	_uSegB @ sp[(-5)+2]
  1138  000B6C  0EFD               	movlw	-3
  1139  000B6E  50E3               	movf	plusw1,w,c
  1140  000B70  A4D8               	btfss	status,2,c
  1141  000B72  D002               	goto	l1045
  1142  000B74                     u10:
  1143  000B74  0E00               	movlw	0
  1144  000B76  D06E               	goto	L1
  1145  000B78                     l1045:
  1146                           
  1147                           ;sralloc.c: 376:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1148                           ;stkvar	_uSegA @ sp[(-5)+3]
  1149  000B78  50E1               	movf	fsr1l,w,c
  1150  000B7A  0FFE               	addlw	-2
  1151  000B7C  6ED9               	movwf	fsr2l,c
  1152  000B7E  50E2               	movf	fsr1h,w,c
  1153  000B80  6EDA               	movwf	fsr2h,c
  1154  000B82  0EFF               	movlw	255
  1155  000B84  22DA               	addwfc	fsr2h,f,c
  1156  000B86  BEDF               	btfsc	indf2,7,c
  1157  000B88  D7F5               	goto	u10
  1158                           
  1159                           ;stkvar	_uSegB @ sp[(-5)+2]
  1160  000B8A  50E1               	movf	fsr1l,w,c
  1161  000B8C  0FFD               	addlw	-3
  1162  000B8E  6ED9               	movwf	fsr2l,c
  1163  000B90  50E2               	movf	fsr1h,w,c
  1164  000B92  6EDA               	movwf	fsr2h,c
  1165  000B94  0EFF               	movlw	255
  1166  000B96  22DA               	addwfc	fsr2h,f,c
  1167  000B98  BEDF               	btfsc	indf2,7,c
  1168  000B9A  D7EC               	goto	u10
  1169                           
  1170                           ;sralloc.c: 379:  if (uSegA.bits.count == 0x7F) return (0);
  1171                           ;stkvar	_uSegA @ sp[(-5)+3]
  1172  000B9C  50E1               	movf	fsr1l,w,c
  1173  000B9E  0FFE               	addlw	-2
  1174  000BA0  6ED9               	movwf	fsr2l,c
  1175  000BA2  50E2               	movf	fsr1h,w,c
  1176  000BA4  6EDA               	movwf	fsr2h,c
  1177  000BA6  0EFF               	movlw	255
  1178  000BA8  22DA               	addwfc	fsr2h,f,c
  1179  000BAA  50DF               	movf	223,w,c
  1180  000BAC  0B7F               	andlw	127
  1181  000BAE  0A7F               	xorlw	127
  1182  000BB0  B4D8               	btfsc	status,2,c
  1183  000BB2  D7E0               	goto	u10
  1184                           
  1185                           ;sralloc.c: 382:  uSum.byte = uSegA.byte + uSegB.byte;
  1186                           ;stkvar	_uSegB @ sp[(-5)+2]
  1187  000BB4  0EFD               	movlw	-3
  1188  000BB6  CFE3 F056          	movff	plusw1,btemp+11
  1189                           
  1190                           ;stkvar	_uSegA @ sp[(-5)+3]
  1191  000BBA  0EFE               	movlw	-2
  1192  000BBC  50E3               	movf	plusw1,w,c
  1193  000BBE  2456               	addwf	btemp+11,w,c
  1194  000BC0  6E55               	movwf	btemp+10,c
  1195                           
  1196                           ;stkvar	_uSum @ sp[(-5)+4]
  1197  000BC2  0EFF               	movlw	-1
  1198  000BC4  C055  FFE3         	movff	btemp+10,plusw1
  1199                           
  1200                           ;sralloc.c: 388:  if ((uSum.byte) > 0x7F)
  1201                           ;stkvar	_uSum @ sp[(-5)+4]
  1202  000BC8  0EFF               	movlw	-1
  1203  000BCA  CFE3 F04B          	movff	plusw1,btemp
  1204  000BCE  0E7F               	movlw	127
  1205  000BD0  644B               	cpfsgt	btemp,c
  1206  000BD2  D036               	goto	l1077
  1207                           
  1208                           ;sralloc.c: 389:  {;sralloc.c: 390:   (*pSegA).byte = 0x7F;
  1209                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1210  000BD4  0EF9               	movlw	-7
  1211  000BD6  CFE3 FFD9          	movff	plusw1,fsr2l
  1212  000BDA  0EFA               	movlw	-6
  1213  000BDC  CFE3 FFDA          	movff	plusw1,fsr2h
  1214  000BE0  0E7F               	movlw	127
  1215  000BE2  6EDF               	movwf	indf2,c
  1216                           
  1217                           ;sralloc.c: 391:   pSegA += 0x7F;
  1218                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1219  000BE4  0EF9               	movlw	-7
  1220  000BE6  50E3               	movf	plusw1,w,c
  1221  000BE8  0F7F               	addlw	127
  1222  000BEA  6E4B               	movwf	btemp,c
  1223  000BEC  0EF9               	movlw	-7
  1224  000BEE  C04B  FFE3         	movff	btemp,plusw1
  1225  000BF2  6A4B               	clrf	btemp,c
  1226  000BF4  0EFA               	movlw	-6
  1227  000BF6  50E3               	movf	plusw1,w,c
  1228  000BF8  204B               	addwfc	btemp,w,c
  1229  000BFA  6E4B               	movwf	btemp,c
  1230  000BFC  0EFA               	movlw	-6
  1231  000BFE  C04B  FFE3         	movff	btemp,plusw1
  1232                           
  1233                           ;sralloc.c: 392:   pSegB += uSegB.byte;
  1234                           ;stkvar	_uSegB @ sp[(-5)+2]
  1235  000C02  0EFD               	movlw	-3
  1236  000C04  50E3               	movf	plusw1,w,c
  1237  000C06  0D01               	mullw	1
  1238                           
  1239                           ;stkvar	_pSegB @ sp[(-5)+0]
  1240  000C08  50E1               	movf	fsr1l,w,c
  1241  000C0A  0FFB               	addlw	-5
  1242  000C0C  6ED9               	movwf	fsr2l,c
  1243  000C0E  50E2               	movf	fsr1h,w,c
  1244  000C10  6EDA               	movwf	fsr2h,c
  1245  000C12  0EFF               	movlw	255
  1246  000C14  22DA               	addwfc	fsr2h,f,c
  1247  000C16  50F3               	movf	prodl,w,c
  1248  000C18  26DE               	addwf	postinc2,f,c
  1249  000C1A  50F4               	movf	prodh,w,c
  1250  000C1C  22DD               	addwfc	postdec2,f,c
  1251                           
  1252                           ;sralloc.c: 393:   (*pSegA).byte = pSegB - pSegA;
  1253                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1254  000C1E  0EF9               	movlw	-7
  1255  000C20  CFE3 FFD9          	movff	plusw1,fsr2l
  1256  000C24  0EFA               	movlw	-6
  1257  000C26  CFE3 FFDA          	movff	plusw1,fsr2h
  1258                           
  1259                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1260  000C2A  0EF9               	movlw	-7
  1261  000C2C  CFE3 F056          	movff	plusw1,btemp+11
  1262                           
  1263                           ;stkvar	_pSegB @ sp[(-5)+0]
  1264  000C30  0EFB               	movlw	-5
  1265  000C32  CFE3 F055          	movff	plusw1,btemp+10
  1266  000C36  5056               	movf	btemp+11,w,c
  1267  000C38  5C55               	subwf	btemp+10,w,c
  1268  000C3A  6EDF               	movwf	indf2,c
  1269                           
  1270                           ;sralloc.c: 395:   return (0x7F);
  1271  000C3C  0E7F               	movlw	127
  1272  000C3E  D00A               	goto	L1
  1273  000C40                     l1077:
  1274                           
  1275                           ;sralloc.c: 400:  {;sralloc.c: 401:   return ((*pSegA).byte = uSum.byte);
  1276                           ;stkvar	_uSum @ sp[(-5)+4]
  1277                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1278  000C40  0EF9               	movlw	-7
  1279  000C42  CFE3 FFD9          	movff	plusw1,fsr2l
  1280  000C46  0EFA               	movlw	-6
  1281  000C48  CFE3 FFDA          	movff	plusw1,fsr2h
  1282  000C4C  0EFF               	movlw	-1
  1283  000C4E  CFE3 FFDF          	movff	plusw1,indf2
  1284  000C52  50DF               	movf	indf2,w,c
  1285  000C54                     L1:
  1286  000C54  6E4B               	movwf	btemp,c
  1287                           
  1288                           ; __SRAMmerge: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  1289  000C56  0EF9               	movlw	249
  1290  000C58  26E1               	addwf	fsr1l,f,c
  1291  000C5A  0EFF               	movlw	255
  1292  000C5C  22E2               	addwfc	fsr1h,f,c
  1293  000C5E  0012               	return		;funcret
  1294  000C60                     __end_of__SRAMmerge:
  1295                           	opt callstack 0
  1296                           
  1297 ;; *************** function _lunos_init *****************
  1298 ;; Defined at:
  1299 ;;		line 49 in file "kernel.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1  [STACK] void 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1313 ;;      Params:         0       0       0       0       0       0       0
  1314 ;;      Locals:         0       0       0       0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0
  1316 ;;      Totals:         0       0       0       0       0       0       0
  1317 ;;Total ram usage:        0 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:   11
  1320 ;; This function calls:
  1321 ;;		_SRAMInitHeap
  1322 ;;		_lunos_createTask
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text6
  1329  00198E                     __ptext6:
  1330                           	opt callstack 0
  1331  00198E                     _lunos_init:
  1332                           	opt callstack 19
  1333                           
  1334                           ;kernel.c: 50:   SRAMInitHeap();
  1335                           
  1336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1337                           ;incstack = 0
  1338  00198E  ECB3  F009         	call	_SRAMInitHeap	;wreg free
  1339                           
  1340                           ;kernel.c: 51:   ready_queue.task_running = 0;
  1341  001992  0E00               	movlw	0
  1342  001994  CFE8 F3FE          	movff	wreg,_ready_queue+542
  1343  001998  0E00               	movlw	0
  1344  00199A  CFE8 F3FF          	movff	wreg,_ready_queue+543
  1345                           
  1346                           ;kernel.c: 52:   ready_queue.tasks_installed = 0;
  1347  00199E  0E00               	movlw	0
  1348  0019A0  CFE8 F3FC          	movff	wreg,_ready_queue+540
  1349  0019A4  0E00               	movlw	0
  1350  0019A6  CFE8 F3FD          	movff	wreg,_ready_queue+541
  1351                           
  1352                           ;kernel.c: 53:   lunos_createTask(0, &task_idle);
  1353  0019AA  0E12               	movlw	low _task_idle
  1354  0019AC  6EE6               	movwf	postinc1,c
  1355  0019AE  0E1A               	movlw	high _task_idle
  1356  0019B0  6EE6               	movwf	postinc1,c
  1357  0019B2  0E00               	movlw	0
  1358  0019B4  6EE6               	movwf	postinc1,c
  1359  0019B6  0E00               	movlw	0
  1360  0019B8  6EE6               	movwf	postinc1,c
  1361  0019BA  EC48  F008         	call	_lunos_createTask	;wreg free
  1362                           
  1363                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  1364  0019BE  0012               	return		;funcret
  1365  0019C0                     __end_of_lunos_init:
  1366                           	opt callstack 0
  1367                           
  1368 ;; *************** function _lunos_createTask *****************
  1369 ;; Defined at:
  1370 ;;		line 14 in file "kernel.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  prior           2  [STACK] unsigned int 
  1373 ;;  f               2  [STACK] PTR FTN()void 
  1374 ;;		 -> task_2(1), task_1(1), task_0(1), task_idle(1), 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  new_task      108  [STACK] struct pcb
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1  [STACK] void 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1386 ;;      Params:         0       0       0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:   10
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_lunos_init
  1397 ;;		_main
  1398 ;; This function uses a reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text7
  1402  001090                     __ptext7:
  1403                           	opt callstack 0
  1404  001090                     _lunos_createTask:
  1405                           	opt callstack 0
  1406                           
  1407                           ; autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  1408  001090  0E6C               	movlw	108
  1409  001092  26E1               	addwf	fsr1l,f,c
  1410  001094  0E00               	movlw	0
  1411  001096  22E2               	addwfc	fsr1h,f,c
  1412                           
  1413                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
  1414                           
  1415                           ;incstack = 0
  1416  001098  EE23  F0FC         	lfsr	2,_ready_queue+540
  1417  00109C  CFDE F055          	movff	postinc2,btemp+10
  1418  0010A0  CFDD F056          	movff	postdec2,btemp+11
  1419  0010A4  0E01               	movlw	1
  1420  0010A6  2655               	addwf	btemp+10,f,c
  1421  0010A8  0E00               	movlw	0
  1422  0010AA  2256               	addwfc	btemp+11,f,c
  1423                           
  1424                           ;stkvar	_new_task @ sp[(-108)+0]
  1425  0010AC  0E94               	movlw	-108
  1426  0010AE  C055  FFE3         	movff	btemp+10,plusw1
  1427  0010B2  0E95               	movlw	-107
  1428  0010B4  C056  FFE3         	movff	btemp+11,plusw1
  1429                           
  1430                           ;kernel.c: 19:   new_task.task_prior = prior;
  1431                           ;stkvar	_prior @ sp[(-108)+-2]
  1432  0010B8  50E1               	movf	fsr1l,w,c
  1433  0010BA  0F92               	addlw	-110
  1434  0010BC  6ED9               	movwf	fsr2l,c
  1435  0010BE  50E2               	movf	fsr1h,w,c
  1436  0010C0  6EDA               	movwf	fsr2h,c
  1437  0010C2  0EFF               	movlw	255
  1438  0010C4  22DA               	addwfc	fsr2h,f,c
  1439                           
  1440                           ;stkvar	_new_task @ sp[(-108)+0]
  1441  0010C6  0E96               	movlw	150
  1442  0010C8  24E1               	addwf	fsr1l,w,c
  1443  0010CA  6EE9               	movwf	fsr0l,c
  1444  0010CC  0EFF               	movlw	255
  1445  0010CE  20E2               	addwfc	fsr1h,w,c
  1446  0010D0  6EEA               	movwf	fsr0h,c
  1447  0010D2  CFDE FFEE          	movff	postinc2,postinc0
  1448  0010D6  CFDD FFED          	movff	postdec2,postdec0
  1449                           
  1450                           ;kernel.c: 20:   new_task.task_state = READY;
  1451                           ;stkvar	_new_task @ sp[(-108)+0]
  1452  0010DA  0E9C               	movlw	156
  1453  0010DC  24E1               	addwf	fsr1l,w,c
  1454  0010DE  6ED9               	movwf	fsr2l,c
  1455  0010E0  0EFF               	movlw	255
  1456  0010E2  20E2               	addwfc	fsr1h,w,c
  1457  0010E4  6EDA               	movwf	fsr2h,c
  1458  0010E6  0E00               	movlw	0
  1459  0010E8  6EDF               	movwf	indf2,c
  1460                           
  1461                           ;kernel.c: 21:   new_task.task_f = f;
  1462                           ;stkvar	_f @ sp[(-108)+-4]
  1463  0010EA  50E1               	movf	fsr1l,w,c
  1464  0010EC  0F90               	addlw	-112
  1465  0010EE  6ED9               	movwf	fsr2l,c
  1466  0010F0  50E2               	movf	fsr1h,w,c
  1467  0010F2  6EDA               	movwf	fsr2h,c
  1468  0010F4  0EFF               	movlw	255
  1469  0010F6  22DA               	addwfc	fsr2h,f,c
  1470                           
  1471                           ;stkvar	_new_task @ sp[(-108)+0]
  1472  0010F8  0EFC               	movlw	252
  1473  0010FA  24E1               	addwf	fsr1l,w,c
  1474  0010FC  6EE9               	movwf	fsr0l,c
  1475  0010FE  0EFF               	movlw	255
  1476  001100  20E2               	addwfc	fsr1h,w,c
  1477  001102  6EEA               	movwf	fsr0h,c
  1478  001104  CFDE FFEE          	movff	postinc2,postinc0
  1479  001108  CFDD FFED          	movff	postdec2,postdec0
  1480                           
  1481                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
  1482                           ;stkvar	_new_task @ sp[(-108)+0]
  1483  00110C  0EFA               	movlw	250
  1484  00110E  24E1               	addwf	fsr1l,w,c
  1485  001110  6ED9               	movwf	fsr2l,c
  1486  001112  0EFF               	movlw	255
  1487  001114  20E2               	addwfc	fsr1h,w,c
  1488  001116  6EDA               	movwf	fsr2h,c
  1489  001118  0E00               	movlw	0
  1490  00111A  6EDE               	movwf	postinc2,c
  1491  00111C  0E00               	movlw	0
  1492  00111E  6EDD               	movwf	postdec2,c
  1493                           
  1494                           ;kernel.c: 23:   new_task.task_delay_time = 0;
  1495                           ;stkvar	_new_task @ sp[(-108)+0]
  1496  001120  0EFE               	movlw	254
  1497  001122  24E1               	addwf	fsr1l,w,c
  1498  001124  6ED9               	movwf	fsr2l,c
  1499  001126  0EFF               	movlw	255
  1500  001128  20E2               	addwfc	fsr1h,w,c
  1501  00112A  6EDA               	movwf	fsr2h,c
  1502  00112C  0E00               	movlw	0
  1503  00112E  6EDE               	movwf	postinc2,c
  1504  001130  0E00               	movlw	0
  1505  001132  6EDD               	movwf	postdec2,c
  1506                           
  1507                           ;kernel.c: 25:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
  1508                           ;stkvar	_new_task @ sp[(-108)+0]
  1509  001134  0E94               	movlw	148
  1510  001136  24E1               	addwf	fsr1l,w,c
  1511  001138  6ED9               	movwf	fsr2l,c
  1512  00113A  0EFF               	movlw	255
  1513  00113C  20E2               	addwfc	fsr1h,w,c
  1514  00113E  6EDA               	movwf	fsr2h,c
  1515  001140  EE03  F0FC         	lfsr	0,_ready_queue+540
  1516  001144  CFEE F055          	movff	postinc0,btemp+10
  1517  001148  CFED F056          	movff	postdec0,btemp+11
  1518  00114C  0E6C               	movlw	108
  1519  00114E  0255               	mulwf	btemp+10,c
  1520  001150  CFF3 F053          	movff	prodl,btemp+8
  1521  001154  CFF4 F054          	movff	prodh,btemp+9
  1522  001158  0256               	mulwf	btemp+11,c
  1523  00115A  50F3               	movf	prodl,w,c
  1524  00115C  2654               	addwf	btemp+9,f,c
  1525  00115E  0EE0               	movlw	low _ready_queue
  1526  001160  2453               	addwf	btemp+8,w,c
  1527  001162  6EE9               	movwf	fsr0l,c
  1528  001164  0E01               	movlw	high _ready_queue
  1529  001166  2054               	addwfc	btemp+9,w,c
  1530  001168  6EEA               	movwf	fsr0h,c
  1531  00116A  0E6B               	movlw	107
  1532  00116C                     u411:
  1533  00116C  CFDB FFEB          	movff	plusw2,plusw0
  1534  001170  06E8               	decf	wreg,f,c
  1535  001172  E2FC               	bc	u411
  1536                           
  1537                           ;kernel.c: 26:   ready_queue.tasks_installed++;
  1538  001174  EE23  F0FC         	lfsr	2,_ready_queue+540
  1539  001178  2ADE               	incf	postinc2,f,c
  1540  00117A  0E00               	movlw	0
  1541  00117C  22DD               	addwfc	postdec2,f,c
  1542                           
  1543                           ; _lunos_createTask: autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
  1544  00117E  0E90               	movlw	144
  1545  001180  26E1               	addwf	fsr1l,f,c
  1546  001182  0EFF               	movlw	255
  1547  001184  22E2               	addwfc	fsr1h,f,c
  1548  001186  0012               	return		;funcret
  1549  001188                     __end_of_lunos_createTask:
  1550                           	opt callstack 0
  1551                           
  1552 ;; *************** function _SRAMInitHeap *****************
  1553 ;; Defined at:
  1554 ;;		line 313 in file "sralloc.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  count           2  [STACK] unsigned int 
  1559 ;;  pHeap           2  [STACK] PTR unsigned char 
  1560 ;;		 -> _uDynamicHeap(512), 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1  [STACK] void 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1570 ;;      Params:         0       0       0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0
  1573 ;;      Totals:         0       0       0       0       0       0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:   10
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_lunos_init
  1581 ;; This function uses a reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text8
  1585  001366                     __ptext8:
  1586                           	opt callstack 0
  1587  001366                     _SRAMInitHeap:
  1588                           	opt callstack 0
  1589                           
  1590                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1591  001366  52E6               	movf	postinc1,f,c
  1592  001368  52E6               	movf	postinc1,f,c
  1593  00136A  52E6               	movf	postinc1,f,c
  1594  00136C  52E6               	movf	postinc1,f,c
  1595                           
  1596                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
  1597                           ;stkvar	_pHeap @ sp[(-4)+2]
  1598                           
  1599                           ;incstack = 0
  1600  00136E  0E04               	movlw	high __uDynamicHeap
  1601  001370  6E4B               	movwf	btemp,c
  1602  001372  0EFF               	movlw	-1
  1603  001374  C04B  FFE3         	movff	btemp,plusw1
  1604  001378  0E00               	movlw	low __uDynamicHeap
  1605  00137A  6E4B               	movwf	btemp,c
  1606  00137C  0EFE               	movlw	-2
  1607  00137E  C04B  FFE3         	movff	btemp,plusw1
  1608                           
  1609                           ;sralloc.c: 319:  count = 0x200 -1;
  1610  001382  0EFF               	movlw	255
  1611  001384  6E55               	movwf	btemp+10,c
  1612  001386  0E01               	movlw	1
  1613  001388  6E56               	movwf	btemp+11,c
  1614                           
  1615                           ;stkvar	_count @ sp[(-4)+0]
  1616  00138A  0EFC               	movlw	-4
  1617  00138C  C055  FFE3         	movff	btemp+10,plusw1
  1618  001390  0EFD               	movlw	-3
  1619  001392  C056  FFE3         	movff	btemp+11,plusw1
  1620  001396                     l1541:
  1621                           
  1622                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
  1623                           ;stkvar	_count @ sp[(-4)+0]
  1624  001396  0EFD               	movlw	-3
  1625  001398  50E3               	movf	plusw1,w,c
  1626  00139A  E107               	bnz	u450
  1627  00139C  0EFC               	movlw	-4
  1628  00139E  CFE3 F04B          	movff	plusw1,btemp
  1629  0013A2  0E80               	movlw	128
  1630  0013A4  5E4B               	subwf	btemp,f,c
  1631  0013A6  A0D8               	btfss	status,0,c
  1632  0013A8  D023               	goto	l1549
  1633  0013AA                     u450:
  1634                           
  1635                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
  1636                           ;stkvar	_pHeap @ sp[(-4)+2]
  1637  0013AA  0EFE               	movlw	-2
  1638  0013AC  CFE3 FFD9          	movff	plusw1,fsr2l
  1639  0013B0  0EFF               	movlw	-1
  1640  0013B2  CFE3 FFDA          	movff	plusw1,fsr2h
  1641  0013B6  0E7F               	movlw	127
  1642  0013B8  6EDF               	movwf	indf2,c
  1643                           
  1644                           ;sralloc.c: 326:    pHeap += 0x7F;
  1645                           ;stkvar	_pHeap @ sp[(-4)+2]
  1646  0013BA  0EFE               	movlw	-2
  1647  0013BC  50E3               	movf	plusw1,w,c
  1648  0013BE  0F7F               	addlw	127
  1649  0013C0  6E4B               	movwf	btemp,c
  1650  0013C2  0EFE               	movlw	-2
  1651  0013C4  C04B  FFE3         	movff	btemp,plusw1
  1652  0013C8  6A4B               	clrf	btemp,c
  1653  0013CA  0EFF               	movlw	-1
  1654  0013CC  50E3               	movf	plusw1,w,c
  1655  0013CE  204B               	addwfc	btemp,w,c
  1656  0013D0  6E4B               	movwf	btemp,c
  1657  0013D2  0EFF               	movlw	-1
  1658  0013D4  C04B  FFE3         	movff	btemp,plusw1
  1659                           
  1660                           ;sralloc.c: 327:    count = count - 0x7F;
  1661                           ;stkvar	_count @ sp[(-4)+0]
  1662  0013D8  50E1               	movf	fsr1l,w,c
  1663  0013DA  0FFC               	addlw	-4
  1664  0013DC  6ED9               	movwf	fsr2l,c
  1665  0013DE  50E2               	movf	fsr1h,w,c
  1666  0013E0  6EDA               	movwf	fsr2h,c
  1667  0013E2  0EFF               	movlw	255
  1668  0013E4  22DA               	addwfc	fsr2h,f,c
  1669  0013E6  0E81               	movlw	129
  1670  0013E8  26DE               	addwf	postinc2,f,c
  1671  0013EA  0EFF               	movlw	255
  1672  0013EC  22DD               	addwfc	postdec2,f,c
  1673                           
  1674                           ;sralloc.c: 328:   }
  1675  0013EE  D7D3               	goto	l1541
  1676  0013F0                     l1549:
  1677                           
  1678                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1679                           ;stkvar	_count @ sp[(-4)+0]
  1680                           ;stkvar	_pHeap @ sp[(-4)+2]
  1681  0013F0  0EFE               	movlw	-2
  1682  0013F2  CFE3 FFD9          	movff	plusw1,fsr2l
  1683  0013F6  0EFF               	movlw	-1
  1684  0013F8  CFE3 FFDA          	movff	plusw1,fsr2h
  1685  0013FC  0EFC               	movlw	-4
  1686  0013FE  CFE3 FFDF          	movff	plusw1,indf2
  1687                           
  1688                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1689                           ;stkvar	_count @ sp[(-4)+0]
  1690  001402  0EFC               	movlw	-4
  1691  001404  CFE3 F055          	movff	plusw1,btemp+10
  1692  001408  0EFD               	movlw	-3
  1693  00140A  CFE3 F056          	movff	plusw1,btemp+11
  1694                           
  1695                           ;stkvar	_pHeap @ sp[(-4)+2]
  1696  00140E  0EFE               	movlw	-2
  1697  001410  CFE3 F053          	movff	plusw1,btemp+8
  1698  001414  0EFF               	movlw	-1
  1699  001416  CFE3 F054          	movff	plusw1,btemp+9
  1700  00141A  5055               	movf	btemp+10,w,c
  1701  00141C  2453               	addwf	btemp+8,w,c
  1702  00141E  6ED9               	movwf	fsr2l,c
  1703  001420  5056               	movf	btemp+11,w,c
  1704  001422  2054               	addwfc	btemp+9,w,c
  1705  001424  6EDA               	movwf	fsr2h,c
  1706  001426  0E00               	movlw	0
  1707  001428  6EDF               	movwf	indf2,c
  1708                           
  1709                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1710  00142A  52E5               	movf	postdec1,f,c
  1711  00142C  52E5               	movf	postdec1,f,c
  1712  00142E  52E5               	movf	postdec1,f,c
  1713  001430  52E5               	movf	postdec1,f,c
  1714  001432  0012               	return		;funcret
  1715  001434                     __end_of_SRAMInitHeap:
  1716                           	opt callstack 0
  1717                           
  1718 ;; *************** function _dispatcher *****************
  1719 ;; Defined at:
  1720 ;;		line 64 in file "kernel.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  state           1  [STACK] enum E4
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1  [STACK] void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         0       0       0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:   13
  1741 ;; This function calls:
  1742 ;;		_scheduler
  1743 ;; This function is called by:
  1744 ;;		_lunos_delayTask
  1745 ;;		_main
  1746 ;;		_sem_wait
  1747 ;; This function uses a reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text9
  1751  0004CC                     __ptext9:
  1752                           	opt callstack 0
  1753  0004CC                     _dispatcher:
  1754                           	opt callstack 11
  1755                           
  1756                           ;kernel.c: 65:   INTCONbits.GIE = 0;
  1757                           
  1758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1759                           ;incstack = 0
  1760  0004CC  9EF2               	bcf	4082,7,c	;volatile
  1761                           
  1762                           ;kernel.c: 67:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  1763  0004CE  C3FE  F005         	movff	_ready_queue+542,_who
  1764  0004D2  C3FF  F006         	movff	_ready_queue+543,_who+1
  1765                           
  1766                           ;stkvar	_state @ sp[(0)+-1]
  1767  0004D6  C005  F055         	movff	_who,btemp+10
  1768  0004DA  C006  F056         	movff	_who+1,btemp+11
  1769  0004DE  0E6C               	movlw	108
  1770  0004E0  0255               	mulwf	btemp+10,c
  1771  0004E2  CFF3 F053          	movff	prodl,btemp+8
  1772  0004E6  CFF4 F054          	movff	prodh,btemp+9
  1773  0004EA  0256               	mulwf	btemp+11,c
  1774  0004EC  50F3               	movf	prodl,w,c
  1775  0004EE  2654               	addwf	btemp+9,f,c
  1776  0004F0  0EE8               	movlw	low (_ready_queue+8)
  1777  0004F2  2453               	addwf	btemp+8,w,c
  1778  0004F4  6ED9               	movwf	fsr2l,c
  1779  0004F6  0E01               	movlw	high (_ready_queue+8)
  1780  0004F8  2054               	addwfc	btemp+9,w,c
  1781  0004FA  6EDA               	movwf	fsr2h,c
  1782  0004FC  0EFF               	movlw	-1
  1783  0004FE  CFE3 FFDF          	movff	plusw1,indf2
  1784  000502  C005  F055         	movff	_who,btemp+10
  1785  000506  C006  F056         	movff	_who+1,btemp+11
  1786  00050A  0E6C               	movlw	108
  1787  00050C  0255               	mulwf	btemp+10,c
  1788  00050E  CFF3 F053          	movff	prodl,btemp+8
  1789  000512  CFF4 F054          	movff	prodh,btemp+9
  1790  000516  0256               	mulwf	btemp+11,c
  1791  000518  50F3               	movf	prodl,w,c
  1792  00051A  2654               	addwf	btemp+9,f,c
  1793  00051C  0EE5               	movlw	low (_ready_queue+5)
  1794  00051E  2453               	addwf	btemp+8,w,c
  1795  000520  6ED9               	movwf	fsr2l,c
  1796  000522  0E01               	movlw	high (_ready_queue+5)
  1797  000524  2054               	addwfc	btemp+9,w,c
  1798  000526  6EDA               	movwf	fsr2h,c
  1799  000528  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1800  00052C  C005  F055         	movff	_who,btemp+10
  1801  000530  C006  F056         	movff	_who+1,btemp+11
  1802  000534  0E6C               	movlw	108
  1803  000536  0255               	mulwf	btemp+10,c
  1804  000538  CFF3 F053          	movff	prodl,btemp+8
  1805  00053C  CFF4 F054          	movff	prodh,btemp+9
  1806  000540  0256               	mulwf	btemp+11,c
  1807  000542  50F3               	movf	prodl,w,c
  1808  000544  2654               	addwf	btemp+9,f,c
  1809  000546  0EE6               	movlw	low (_ready_queue+6)
  1810  000548  2453               	addwf	btemp+8,w,c
  1811  00054A  6ED9               	movwf	fsr2l,c
  1812  00054C  0E01               	movlw	high (_ready_queue+6)
  1813  00054E  2054               	addwfc	btemp+9,w,c
  1814  000550  6EDA               	movwf	fsr2h,c
  1815  000552  CFD8 FFDF          	movff	status,indf2	;volatile
  1816  000556  C005  F055         	movff	_who,btemp+10
  1817  00055A  C006  F056         	movff	_who+1,btemp+11
  1818  00055E  0E6C               	movlw	108
  1819  000560  0255               	mulwf	btemp+10,c
  1820  000562  CFF3 F053          	movff	prodl,btemp+8
  1821  000566  CFF4 F054          	movff	prodh,btemp+9
  1822  00056A  0256               	mulwf	btemp+11,c
  1823  00056C  50F3               	movf	prodl,w,c
  1824  00056E  2654               	addwf	btemp+9,f,c
  1825  000570  0EE7               	movlw	low (_ready_queue+7)
  1826  000572  2453               	addwf	btemp+8,w,c
  1827  000574  6ED9               	movwf	fsr2l,c
  1828  000576  0E01               	movlw	high (_ready_queue+7)
  1829  000578  2054               	addwfc	btemp+9,w,c
  1830  00057A  6EDA               	movwf	fsr2h,c
  1831  00057C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1832  000580  6A03               	clrf	_size,c
  1833  000582  6A04               	clrf	_size+1,c
  1834  000584  D08D               	goto	l1513
  1835  000586                     l1509:
  1836  000586  C003  F055         	movff	_size,btemp+10
  1837  00058A  C004  F056         	movff	_size+1,btemp+11
  1838  00058E  0E03               	movlw	3
  1839  000590  0255               	mulwf	btemp+10,c
  1840  000592  CFF3 F053          	movff	prodl,btemp+8
  1841  000596  CFF4 F054          	movff	prodh,btemp+9
  1842  00059A  0256               	mulwf	btemp+11,c
  1843  00059C  50F3               	movf	prodl,w,c
  1844  00059E  2654               	addwf	btemp+9,f,c
  1845  0005A0  C005  F055         	movff	_who,btemp+10
  1846  0005A4  C006  F056         	movff	_who+1,btemp+11
  1847  0005A8  0E6C               	movlw	108
  1848  0005AA  0255               	mulwf	btemp+10,c
  1849  0005AC  CFF3 F051          	movff	prodl,btemp+6
  1850  0005B0  CFF4 F052          	movff	prodh,btemp+7
  1851  0005B4  0256               	mulwf	btemp+11,c
  1852  0005B6  50F3               	movf	prodl,w,c
  1853  0005B8  2652               	addwf	btemp+7,f,c
  1854  0005BA  0EE0               	movlw	low _ready_queue
  1855  0005BC  6E55               	movwf	btemp+10,c
  1856  0005BE  0E01               	movlw	high _ready_queue
  1857  0005C0  6E56               	movwf	btemp+11,c
  1858  0005C2  0E09               	movlw	9
  1859  0005C4  2655               	addwf	btemp+10,f,c
  1860  0005C6  0E00               	movlw	0
  1861  0005C8  2256               	addwfc	btemp+11,f,c
  1862  0005CA  5051               	movf	btemp+6,w,c
  1863  0005CC  2655               	addwf	btemp+10,f,c
  1864  0005CE  5052               	movf	btemp+7,w,c
  1865  0005D0  2256               	addwfc	btemp+11,f,c
  1866  0005D2  5053               	movf	btemp+8,w,c
  1867  0005D4  2455               	addwf	btemp+10,w,c
  1868  0005D6  6ED9               	movwf	fsr2l,c
  1869  0005D8  5054               	movf	btemp+9,w,c
  1870  0005DA  2056               	addwfc	btemp+11,w,c
  1871  0005DC  6EDA               	movwf	fsr2h,c
  1872  0005DE  CFFF FFDF          	movff	tosu,indf2	;volatile
  1873  0005E2  C003  F055         	movff	_size,btemp+10
  1874  0005E6  C004  F056         	movff	_size+1,btemp+11
  1875  0005EA  0E03               	movlw	3
  1876  0005EC  0255               	mulwf	btemp+10,c
  1877  0005EE  CFF3 F053          	movff	prodl,btemp+8
  1878  0005F2  CFF4 F054          	movff	prodh,btemp+9
  1879  0005F6  0256               	mulwf	btemp+11,c
  1880  0005F8  50F3               	movf	prodl,w,c
  1881  0005FA  2654               	addwf	btemp+9,f,c
  1882  0005FC  C005  F055         	movff	_who,btemp+10
  1883  000600  C006  F056         	movff	_who+1,btemp+11
  1884  000604  0E6C               	movlw	108
  1885  000606  0255               	mulwf	btemp+10,c
  1886  000608  CFF3 F051          	movff	prodl,btemp+6
  1887  00060C  CFF4 F052          	movff	prodh,btemp+7
  1888  000610  0256               	mulwf	btemp+11,c
  1889  000612  50F3               	movf	prodl,w,c
  1890  000614  2652               	addwf	btemp+7,f,c
  1891  000616  0EE0               	movlw	low _ready_queue
  1892  000618  6E55               	movwf	btemp+10,c
  1893  00061A  0E01               	movlw	high _ready_queue
  1894  00061C  6E56               	movwf	btemp+11,c
  1895  00061E  0E0B               	movlw	11
  1896  000620  2655               	addwf	btemp+10,f,c
  1897  000622  0E00               	movlw	0
  1898  000624  2256               	addwfc	btemp+11,f,c
  1899  000626  5051               	movf	btemp+6,w,c
  1900  000628  2655               	addwf	btemp+10,f,c
  1901  00062A  5052               	movf	btemp+7,w,c
  1902  00062C  2256               	addwfc	btemp+11,f,c
  1903  00062E  5053               	movf	btemp+8,w,c
  1904  000630  2455               	addwf	btemp+10,w,c
  1905  000632  6ED9               	movwf	fsr2l,c
  1906  000634  5054               	movf	btemp+9,w,c
  1907  000636  2056               	addwfc	btemp+11,w,c
  1908  000638  6EDA               	movwf	fsr2h,c
  1909  00063A  CFFE FFDF          	movff	tosh,indf2	;volatile
  1910  00063E  C003  F055         	movff	_size,btemp+10
  1911  000642  C004  F056         	movff	_size+1,btemp+11
  1912  000646  0E03               	movlw	3
  1913  000648  0255               	mulwf	btemp+10,c
  1914  00064A  CFF3 F053          	movff	prodl,btemp+8
  1915  00064E  CFF4 F054          	movff	prodh,btemp+9
  1916  000652  0256               	mulwf	btemp+11,c
  1917  000654  50F3               	movf	prodl,w,c
  1918  000656  2654               	addwf	btemp+9,f,c
  1919  000658  C005  F055         	movff	_who,btemp+10
  1920  00065C  C006  F056         	movff	_who+1,btemp+11
  1921  000660  0E6C               	movlw	108
  1922  000662  0255               	mulwf	btemp+10,c
  1923  000664  CFF3 F051          	movff	prodl,btemp+6
  1924  000668  CFF4 F052          	movff	prodh,btemp+7
  1925  00066C  0256               	mulwf	btemp+11,c
  1926  00066E  50F3               	movf	prodl,w,c
  1927  000670  2652               	addwf	btemp+7,f,c
  1928  000672  0EE0               	movlw	low _ready_queue
  1929  000674  6E55               	movwf	btemp+10,c
  1930  000676  0E01               	movlw	high _ready_queue
  1931  000678  6E56               	movwf	btemp+11,c
  1932  00067A  0E0A               	movlw	10
  1933  00067C  2655               	addwf	btemp+10,f,c
  1934  00067E  0E00               	movlw	0
  1935  000680  2256               	addwfc	btemp+11,f,c
  1936  000682  5051               	movf	btemp+6,w,c
  1937  000684  2655               	addwf	btemp+10,f,c
  1938  000686  5052               	movf	btemp+7,w,c
  1939  000688  2256               	addwfc	btemp+11,f,c
  1940  00068A  5053               	movf	btemp+8,w,c
  1941  00068C  2455               	addwf	btemp+10,w,c
  1942  00068E  6ED9               	movwf	fsr2l,c
  1943  000690  5054               	movf	btemp+9,w,c
  1944  000692  2056               	addwfc	btemp+11,w,c
  1945  000694  6EDA               	movwf	fsr2h,c
  1946  000696  CFFD FFDF          	movff	tosl,indf2	;volatile
  1947  00069A  4A03               	infsnz	_size,f,c
  1948  00069C  2A04               	incf	_size+1,f,c
  1949  00069E  0006               	pop		;# 
  1950  0006A0                     l1513:
  1951  0006A0  50FC               	movf	stkptr,w,c	;volatile
  1952  0006A2  A4D8               	btfss	status,2,c
  1953  0006A4  D770               	goto	l1509
  1954  0006A6  0EFF               	movlw	255
  1955  0006A8  6E55               	movwf	btemp+10,c
  1956  0006AA  0EFF               	movlw	255
  1957  0006AC  6E56               	movwf	btemp+11,c
  1958  0006AE  C003  F053         	movff	_size,btemp+8
  1959  0006B2  C004  F054         	movff	_size+1,btemp+9
  1960  0006B6  5055               	movf	btemp+10,w,c
  1961  0006B8  2653               	addwf	btemp+8,f,c
  1962  0006BA  5056               	movf	btemp+11,w,c
  1963  0006BC  2254               	addwfc	btemp+9,f,c
  1964  0006BE  C005  F055         	movff	_who,btemp+10
  1965  0006C2  C006  F056         	movff	_who+1,btemp+11
  1966  0006C6  0E6C               	movlw	108
  1967  0006C8  0255               	mulwf	btemp+10,c
  1968  0006CA  CFF3 F051          	movff	prodl,btemp+6
  1969  0006CE  CFF4 F052          	movff	prodh,btemp+7
  1970  0006D2  0256               	mulwf	btemp+11,c
  1971  0006D4  50F3               	movf	prodl,w,c
  1972  0006D6  2652               	addwf	btemp+7,f,c
  1973  0006D8  0E46               	movlw	low (_ready_queue+102)
  1974  0006DA  2451               	addwf	btemp+6,w,c
  1975  0006DC  6ED9               	movwf	fsr2l,c
  1976  0006DE  0E02               	movlw	high (_ready_queue+102)
  1977  0006E0  2052               	addwfc	btemp+7,w,c
  1978  0006E2  6EDA               	movwf	fsr2h,c
  1979  0006E4  C053  FFDE         	movff	btemp+8,postinc2
  1980  0006E8  C054  FFDD         	movff	btemp+9,postdec2
  1981                           
  1982                           ;kernel.c: 69:   ready_queue.task_running = scheduler();
  1983  0006EC  EC06  F00D         	call	_scheduler	;wreg free
  1984  0006F0  C04B  F3FE         	movff	btemp,_ready_queue+542
  1985  0006F4  C04C  F3FF         	movff	btemp+1,_ready_queue+543
  1986                           
  1987                           ;kernel.c: 71:   { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.tasks[who
      +                          ].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task_f; } e
      +                          lse { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].W_reg; 
      +                          STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg; size =
      +                           ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL = read
      +                          y_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[who].task
      +                          _stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[size].TO
      +                          SU_reg; size--; } }};
  1988  0006F8  C3FE  F005         	movff	_ready_queue+542,_who
  1989  0006FC  C3FF  F006         	movff	_ready_queue+543,_who+1
  1990  000700  6AFC               	clrf	stkptr,c	;volatile
  1991  000702  C005  F055         	movff	_who,btemp+10
  1992  000706  C006  F056         	movff	_who+1,btemp+11
  1993  00070A  0E6C               	movlw	108
  1994  00070C  0255               	mulwf	btemp+10,c
  1995  00070E  CFF3 F053          	movff	prodl,btemp+8
  1996  000712  CFF4 F054          	movff	prodh,btemp+9
  1997  000716  0256               	mulwf	btemp+11,c
  1998  000718  50F3               	movf	prodl,w,c
  1999  00071A  2654               	addwf	btemp+9,f,c
  2000  00071C  0E46               	movlw	low (_ready_queue+102)
  2001  00071E  2453               	addwf	btemp+8,w,c
  2002  000720  6ED9               	movwf	fsr2l,c
  2003  000722  0E02               	movlw	high (_ready_queue+102)
  2004  000724  2054               	addwfc	btemp+9,w,c
  2005  000726  6EDA               	movwf	fsr2h,c
  2006  000728  50DE               	movf	postinc2,w,c
  2007  00072A  10DE               	iorwf	postinc2,w,c
  2008  00072C  A4D8               	btfss	status,2,c
  2009  00072E  D01E               	goto	l1529
  2010  000730  0005               	push		;# 
  2011  000732  C005  F055         	movff	_who,btemp+10
  2012  000736  C006  F056         	movff	_who+1,btemp+11
  2013  00073A  0E6C               	movlw	108
  2014  00073C  0255               	mulwf	btemp+10,c
  2015  00073E  CFF3 F053          	movff	prodl,btemp+8
  2016  000742  CFF4 F054          	movff	prodh,btemp+9
  2017  000746  0256               	mulwf	btemp+11,c
  2018  000748  50F3               	movf	prodl,w,c
  2019  00074A  2654               	addwf	btemp+9,f,c
  2020  00074C  0E48               	movlw	low (_ready_queue+104)
  2021  00074E  2453               	addwf	btemp+8,w,c
  2022  000750  6ED9               	movwf	fsr2l,c
  2023  000752  0E02               	movlw	high (_ready_queue+104)
  2024  000754  2054               	addwfc	btemp+9,w,c
  2025  000756  6EDA               	movwf	fsr2h,c
  2026  000758  CFDE F055          	movff	postinc2,btemp+10
  2027  00075C  CFDD F056          	movff	postdec2,btemp+11
  2028  000760  C055  FFFD         	movff	btemp+10,tosl	;volatile
  2029  000764  C056  FFFE         	movff	btemp+11,tosh	;volatile
  2030  000768  6AFF               	clrf	tosu,c	;volatile
  2031  00076A  D0FF               	goto	u440
  2032  00076C                     l1529:
  2033  00076C  C005  F055         	movff	_who,btemp+10
  2034  000770  C006  F056         	movff	_who+1,btemp+11
  2035  000774  0E6C               	movlw	108
  2036  000776  0255               	mulwf	btemp+10,c
  2037  000778  CFF3 F053          	movff	prodl,btemp+8
  2038  00077C  CFF4 F054          	movff	prodh,btemp+9
  2039  000780  0256               	mulwf	btemp+11,c
  2040  000782  50F3               	movf	prodl,w,c
  2041  000784  2654               	addwf	btemp+9,f,c
  2042  000786  0EE8               	movlw	low (_ready_queue+8)
  2043  000788  2453               	addwf	btemp+8,w,c
  2044  00078A  6ED9               	movwf	fsr2l,c
  2045  00078C  0E01               	movlw	high (_ready_queue+8)
  2046  00078E  2054               	addwfc	btemp+9,w,c
  2047  000790  6EDA               	movwf	fsr2h,c
  2048  000792  0E01               	movlw	1
  2049  000794  6EDF               	movwf	indf2,c
  2050  000796  C005  F055         	movff	_who,btemp+10
  2051  00079A  C006  F056         	movff	_who+1,btemp+11
  2052  00079E  0E6C               	movlw	108
  2053  0007A0  0255               	mulwf	btemp+10,c
  2054  0007A2  CFF3 F053          	movff	prodl,btemp+8
  2055  0007A6  CFF4 F054          	movff	prodh,btemp+9
  2056  0007AA  0256               	mulwf	btemp+11,c
  2057  0007AC  50F3               	movf	prodl,w,c
  2058  0007AE  2654               	addwf	btemp+9,f,c
  2059  0007B0  0EE5               	movlw	low (_ready_queue+5)
  2060  0007B2  2453               	addwf	btemp+8,w,c
  2061  0007B4  6ED9               	movwf	fsr2l,c
  2062  0007B6  0E01               	movlw	high (_ready_queue+5)
  2063  0007B8  2054               	addwfc	btemp+9,w,c
  2064  0007BA  6EDA               	movwf	fsr2h,c
  2065  0007BC  50DF               	movf	indf2,w,c
  2066  0007BE  6E56               	movwf	btemp+11,c
  2067  0007C0  5056               	movf	btemp+11,w,c
  2068  0007C2  C005  F055         	movff	_who,btemp+10
  2069  0007C6  C006  F056         	movff	_who+1,btemp+11
  2070  0007CA  0E6C               	movlw	108
  2071  0007CC  0255               	mulwf	btemp+10,c
  2072  0007CE  CFF3 F053          	movff	prodl,btemp+8
  2073  0007D2  CFF4 F054          	movff	prodh,btemp+9
  2074  0007D6  0256               	mulwf	btemp+11,c
  2075  0007D8  50F3               	movf	prodl,w,c
  2076  0007DA  2654               	addwf	btemp+9,f,c
  2077  0007DC  0EE6               	movlw	low (_ready_queue+6)
  2078  0007DE  2453               	addwf	btemp+8,w,c
  2079  0007E0  6ED9               	movwf	fsr2l,c
  2080  0007E2  0E01               	movlw	high (_ready_queue+6)
  2081  0007E4  2054               	addwfc	btemp+9,w,c
  2082  0007E6  6EDA               	movwf	fsr2h,c
  2083  0007E8  50DF               	movf	indf2,w,c
  2084  0007EA  6ED8               	movwf	status,c	;volatile
  2085  0007EC  C005  F055         	movff	_who,btemp+10
  2086  0007F0  C006  F056         	movff	_who+1,btemp+11
  2087  0007F4  0E6C               	movlw	108
  2088  0007F6  0255               	mulwf	btemp+10,c
  2089  0007F8  CFF3 F053          	movff	prodl,btemp+8
  2090  0007FC  CFF4 F054          	movff	prodh,btemp+9
  2091  000800  0256               	mulwf	btemp+11,c
  2092  000802  50F3               	movf	prodl,w,c
  2093  000804  2654               	addwf	btemp+9,f,c
  2094  000806  0EE7               	movlw	low (_ready_queue+7)
  2095  000808  2453               	addwf	btemp+8,w,c
  2096  00080A  6ED9               	movwf	fsr2l,c
  2097  00080C  0E01               	movlw	high (_ready_queue+7)
  2098  00080E  2054               	addwfc	btemp+9,w,c
  2099  000810  6EDA               	movwf	fsr2h,c
  2100  000812  50DF               	movf	indf2,w,c
  2101  000814  6EE0               	movwf	bsr,c	;volatile
  2102  000816  C005  F055         	movff	_who,btemp+10
  2103  00081A  C006  F056         	movff	_who+1,btemp+11
  2104  00081E  0E6C               	movlw	108
  2105  000820  0255               	mulwf	btemp+10,c
  2106  000822  CFF3 F053          	movff	prodl,btemp+8
  2107  000826  CFF4 F054          	movff	prodh,btemp+9
  2108  00082A  0256               	mulwf	btemp+11,c
  2109  00082C  50F3               	movf	prodl,w,c
  2110  00082E  2654               	addwf	btemp+9,f,c
  2111  000830  0E46               	movlw	low (_ready_queue+102)
  2112  000832  2453               	addwf	btemp+8,w,c
  2113  000834  6ED9               	movwf	fsr2l,c
  2114  000836  0E02               	movlw	high (_ready_queue+102)
  2115  000838  2054               	addwfc	btemp+9,w,c
  2116  00083A  6EDA               	movwf	fsr2h,c
  2117  00083C  CFDE F003          	movff	postinc2,_size
  2118  000840  CFDD F004          	movff	postdec2,_size+1
  2119  000844  D08E               	goto	l1535
  2120  000846                     l127:
  2121  000846  0005               	push		;# 
  2122  000848  C003  F055         	movff	_size,btemp+10
  2123  00084C  C004  F056         	movff	_size+1,btemp+11
  2124  000850  0E03               	movlw	3
  2125  000852  0255               	mulwf	btemp+10,c
  2126  000854  CFF3 F053          	movff	prodl,btemp+8
  2127  000858  CFF4 F054          	movff	prodh,btemp+9
  2128  00085C  0256               	mulwf	btemp+11,c
  2129  00085E  50F3               	movf	prodl,w,c
  2130  000860  2654               	addwf	btemp+9,f,c
  2131  000862  C005  F055         	movff	_who,btemp+10
  2132  000866  C006  F056         	movff	_who+1,btemp+11
  2133  00086A  0E6C               	movlw	108
  2134  00086C  0255               	mulwf	btemp+10,c
  2135  00086E  CFF3 F051          	movff	prodl,btemp+6
  2136  000872  CFF4 F052          	movff	prodh,btemp+7
  2137  000876  0256               	mulwf	btemp+11,c
  2138  000878  50F3               	movf	prodl,w,c
  2139  00087A  2652               	addwf	btemp+7,f,c
  2140  00087C  0EE0               	movlw	low _ready_queue
  2141  00087E  6E55               	movwf	btemp+10,c
  2142  000880  0E01               	movlw	high _ready_queue
  2143  000882  6E56               	movwf	btemp+11,c
  2144  000884  0E0A               	movlw	10
  2145  000886  2655               	addwf	btemp+10,f,c
  2146  000888  0E00               	movlw	0
  2147  00088A  2256               	addwfc	btemp+11,f,c
  2148  00088C  5051               	movf	btemp+6,w,c
  2149  00088E  2655               	addwf	btemp+10,f,c
  2150  000890  5052               	movf	btemp+7,w,c
  2151  000892  2256               	addwfc	btemp+11,f,c
  2152  000894  5053               	movf	btemp+8,w,c
  2153  000896  2455               	addwf	btemp+10,w,c
  2154  000898  6ED9               	movwf	fsr2l,c
  2155  00089A  5054               	movf	btemp+9,w,c
  2156  00089C  2056               	addwfc	btemp+11,w,c
  2157  00089E  6EDA               	movwf	fsr2h,c
  2158  0008A0  50DF               	movf	indf2,w,c
  2159  0008A2  6EFD               	movwf	tosl,c	;volatile
  2160  0008A4  C003  F055         	movff	_size,btemp+10
  2161  0008A8  C004  F056         	movff	_size+1,btemp+11
  2162  0008AC  0E03               	movlw	3
  2163  0008AE  0255               	mulwf	btemp+10,c
  2164  0008B0  CFF3 F053          	movff	prodl,btemp+8
  2165  0008B4  CFF4 F054          	movff	prodh,btemp+9
  2166  0008B8  0256               	mulwf	btemp+11,c
  2167  0008BA  50F3               	movf	prodl,w,c
  2168  0008BC  2654               	addwf	btemp+9,f,c
  2169  0008BE  C005  F055         	movff	_who,btemp+10
  2170  0008C2  C006  F056         	movff	_who+1,btemp+11
  2171  0008C6  0E6C               	movlw	108
  2172  0008C8  0255               	mulwf	btemp+10,c
  2173  0008CA  CFF3 F051          	movff	prodl,btemp+6
  2174  0008CE  CFF4 F052          	movff	prodh,btemp+7
  2175  0008D2  0256               	mulwf	btemp+11,c
  2176  0008D4  50F3               	movf	prodl,w,c
  2177  0008D6  2652               	addwf	btemp+7,f,c
  2178  0008D8  0EE0               	movlw	low _ready_queue
  2179  0008DA  6E55               	movwf	btemp+10,c
  2180  0008DC  0E01               	movlw	high _ready_queue
  2181  0008DE  6E56               	movwf	btemp+11,c
  2182  0008E0  0E0B               	movlw	11
  2183  0008E2  2655               	addwf	btemp+10,f,c
  2184  0008E4  0E00               	movlw	0
  2185  0008E6  2256               	addwfc	btemp+11,f,c
  2186  0008E8  5051               	movf	btemp+6,w,c
  2187  0008EA  2655               	addwf	btemp+10,f,c
  2188  0008EC  5052               	movf	btemp+7,w,c
  2189  0008EE  2256               	addwfc	btemp+11,f,c
  2190  0008F0  5053               	movf	btemp+8,w,c
  2191  0008F2  2455               	addwf	btemp+10,w,c
  2192  0008F4  6ED9               	movwf	fsr2l,c
  2193  0008F6  5054               	movf	btemp+9,w,c
  2194  0008F8  2056               	addwfc	btemp+11,w,c
  2195  0008FA  6EDA               	movwf	fsr2h,c
  2196  0008FC  50DF               	movf	indf2,w,c
  2197  0008FE  6EFE               	movwf	tosh,c	;volatile
  2198  000900  C003  F055         	movff	_size,btemp+10
  2199  000904  C004  F056         	movff	_size+1,btemp+11
  2200  000908  0E03               	movlw	3
  2201  00090A  0255               	mulwf	btemp+10,c
  2202  00090C  CFF3 F053          	movff	prodl,btemp+8
  2203  000910  CFF4 F054          	movff	prodh,btemp+9
  2204  000914  0256               	mulwf	btemp+11,c
  2205  000916  50F3               	movf	prodl,w,c
  2206  000918  2654               	addwf	btemp+9,f,c
  2207  00091A  C005  F055         	movff	_who,btemp+10
  2208  00091E  C006  F056         	movff	_who+1,btemp+11
  2209  000922  0E6C               	movlw	108
  2210  000924  0255               	mulwf	btemp+10,c
  2211  000926  CFF3 F051          	movff	prodl,btemp+6
  2212  00092A  CFF4 F052          	movff	prodh,btemp+7
  2213  00092E  0256               	mulwf	btemp+11,c
  2214  000930  50F3               	movf	prodl,w,c
  2215  000932  2652               	addwf	btemp+7,f,c
  2216  000934  0EE0               	movlw	low _ready_queue
  2217  000936  6E55               	movwf	btemp+10,c
  2218  000938  0E01               	movlw	high _ready_queue
  2219  00093A  6E56               	movwf	btemp+11,c
  2220  00093C  0E09               	movlw	9
  2221  00093E  2655               	addwf	btemp+10,f,c
  2222  000940  0E00               	movlw	0
  2223  000942  2256               	addwfc	btemp+11,f,c
  2224  000944  5051               	movf	btemp+6,w,c
  2225  000946  2655               	addwf	btemp+10,f,c
  2226  000948  5052               	movf	btemp+7,w,c
  2227  00094A  2256               	addwfc	btemp+11,f,c
  2228  00094C  5053               	movf	btemp+8,w,c
  2229  00094E  2455               	addwf	btemp+10,w,c
  2230  000950  6ED9               	movwf	fsr2l,c
  2231  000952  5054               	movf	btemp+9,w,c
  2232  000954  2056               	addwfc	btemp+11,w,c
  2233  000956  6EDA               	movwf	fsr2h,c
  2234  000958  50DF               	movf	indf2,w,c
  2235  00095A  6EFF               	movwf	tosu,c	;volatile
  2236  00095C  0603               	decf	_size,f,c
  2237  00095E  A0D8               	btfss	status,0,c
  2238  000960  0604               	decf	_size+1,f,c
  2239  000962                     l1535:
  2240  000962  5003               	movf	_size,w,c
  2241  000964  1004               	iorwf	_size+1,w,c
  2242  000966  A4D8               	btfss	status,2,c
  2243  000968  D76E               	goto	l127
  2244  00096A                     u440:
  2245                           
  2246                           ;kernel.c: 73:   INTCONbits.GIE = 1;
  2247  00096A  8EF2               	bsf	4082,7,c	;volatile
  2248                           
  2249                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2250  00096C  52E5               	movf	postdec1,f,c
  2251  00096E  0012               	return		;funcret
  2252  000970                     __end_of_dispatcher:
  2253                           	opt callstack 0
  2254                           
  2255 ;; *************** function _scheduler *****************
  2256 ;; Defined at:
  2257 ;;		line 56 in file "kernel.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  2  [STACK] unsigned int 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2271 ;;      Params:         0       0       0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0
  2274 ;;      Totals:         0       0       0       0       0       0       0
  2275 ;;Total ram usage:        0 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:   12
  2278 ;; This function calls:
  2279 ;;		_round_robin
  2280 ;; This function is called by:
  2281 ;;		_dispatcher
  2282 ;; This function uses a reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text10
  2286  001A0C                     __ptext10:
  2287                           	opt callstack 0
  2288  001A0C                     _scheduler:
  2289                           	opt callstack 11
  2290                           
  2291                           ;kernel.c: 58:   return round_robin();
  2292                           
  2293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2294                           ;incstack = 0
  2295  001A0C  EC22  F00B         	call	_round_robin	;wreg free
  2296                           
  2297                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2298  001A10  0012               	return		;funcret
  2299  001A12                     __end_of_scheduler:
  2300                           	opt callstack 0
  2301                           
  2302 ;; *************** function _round_robin *****************
  2303 ;; Defined at:
  2304 ;;		line 76 in file "kernel.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  next_task_to    2  [STACK] int 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  2  [STACK] unsigned int 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2318 ;;      Params:         0       0       0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0       0       0
  2321 ;;      Totals:         0       0       0       0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:   11
  2325 ;; This function calls:
  2326 ;;		___lwmod
  2327 ;; This function is called by:
  2328 ;;		_ISR_timer0
  2329 ;;		_scheduler
  2330 ;; This function uses a reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text11
  2334  001644                     __ptext11:
  2335                           	opt callstack 0
  2336  001644                     _round_robin:
  2337                           	opt callstack 0
  2338                           
  2339                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2340  001644  52E6               	movf	postinc1,f,c
  2341  001646  52E6               	movf	postinc1,f,c
  2342                           
  2343                           ;kernel.c: 77:   int next_task_to_run = ready_queue.task_running;
  2344                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2345                           
  2346                           ;incstack = 0
  2347  001648  0EFE               	movlw	-2
  2348  00164A  C3FE  FFE3         	movff	_ready_queue+542,plusw1
  2349  00164E  0EFF               	movlw	-1
  2350  001650  C3FF  FFE3         	movff	_ready_queue+543,plusw1
  2351  001654                     l1593:
  2352                           
  2353                           ;kernel.c: 80:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  2354  001654  EE23  F0FC         	lfsr	2,_ready_queue+540
  2355  001658  CFDE F055          	movff	postinc2,btemp+10
  2356  00165C  CFDD F056          	movff	postdec2,btemp+11
  2357  001660  C055  FFE6         	movff	btemp+10,postinc1
  2358  001664  C056  FFE6         	movff	btemp+11,postinc1
  2359                           
  2360                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  2361  001668  0EFC               	movlw	-4
  2362  00166A  50E3               	movf	plusw1,w,c
  2363  00166C  0F01               	addlw	1
  2364  00166E  6E55               	movwf	btemp+10,c
  2365  001670  0EFD               	movlw	-3
  2366  001672  CFE3 F056          	movff	plusw1,btemp+11
  2367  001676  0E00               	movlw	0
  2368  001678  2256               	addwfc	btemp+11,f,c
  2369  00167A  C055  FFE6         	movff	btemp+10,postinc1
  2370  00167E  C056  FFE6         	movff	btemp+11,postinc1
  2371  001682  EC79  F00A         	call	___lwmod	;wreg free
  2372                           
  2373                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2374  001686  0EFE               	movlw	-2
  2375  001688  C04B  FFE3         	movff	btemp,plusw1
  2376  00168C  0EFF               	movlw	-1
  2377  00168E  C04C  FFE3         	movff	btemp+1,plusw1
  2378                           
  2379                           ;kernel.c: 81:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  2380                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2381  001692  0EFE               	movlw	-2
  2382  001694  CFE3 F055          	movff	plusw1,btemp+10
  2383  001698  0EFF               	movlw	-1
  2384  00169A  CFE3 F056          	movff	plusw1,btemp+11
  2385  00169E  0E6C               	movlw	108
  2386  0016A0  0255               	mulwf	btemp+10,c
  2387  0016A2  CFF3 F053          	movff	prodl,btemp+8
  2388  0016A6  CFF4 F054          	movff	prodh,btemp+9
  2389  0016AA  0256               	mulwf	btemp+11,c
  2390  0016AC  50F3               	movf	prodl,w,c
  2391  0016AE  2654               	addwf	btemp+9,f,c
  2392  0016B0  0EE8               	movlw	low (_ready_queue+8)
  2393  0016B2  2453               	addwf	btemp+8,w,c
  2394  0016B4  6ED9               	movwf	fsr2l,c
  2395  0016B6  0E01               	movlw	high (_ready_queue+8)
  2396  0016B8  2054               	addwfc	btemp+9,w,c
  2397  0016BA  6EDA               	movwf	fsr2h,c
  2398  0016BC  50DF               	movf	indf2,w,c
  2399  0016BE  A4D8               	btfss	status,2,c
  2400  0016C0  D7C9               	goto	l1593
  2401                           
  2402                           ;kernel.c: 83:   return next_task_to_run;
  2403                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2404  0016C2  0EFE               	movlw	-2
  2405  0016C4  CFE3 F04B          	movff	plusw1,btemp
  2406  0016C8  0EFF               	movlw	-1
  2407  0016CA  CFE3 F04C          	movff	plusw1,btemp+1
  2408                           
  2409                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2410  0016CE  52E5               	movf	postdec1,f,c
  2411  0016D0  52E5               	movf	postdec1,f,c
  2412  0016D2  0012               	return		;funcret
  2413  0016D4                     __end_of_round_robin:
  2414                           	opt callstack 0
  2415                           
  2416 ;; *************** function ___lwmod *****************
  2417 ;; Defined at:
  2418 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  dividend        2  [STACK] unsigned int 
  2421 ;;  divisor         2  [STACK] unsigned int 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  counter         1  [STACK] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  2  [STACK] unsigned int 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2433 ;;      Params:         0       0       0       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0
  2436 ;;      Totals:         0       0       0       0       0       0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:   10
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_round_robin
  2444 ;; This function uses a reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text12
  2448  0014F2                     __ptext12:
  2449                           	opt callstack 0
  2450  0014F2                     ___lwmod:
  2451                           	opt callstack 0
  2452                           
  2453                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2454  0014F2  52E6               	movf	postinc1,f,c
  2455                           
  2456                           ;stkvar	_divisor @ sp[(-1)+-4]
  2457                           
  2458                           ;incstack = 0
  2459  0014F4  0EFB               	movlw	-5
  2460  0014F6  CFE3 F04B          	movff	plusw1,btemp
  2461  0014FA  0EFC               	movlw	-4
  2462  0014FC  50E3               	movf	plusw1,w,c
  2463  0014FE  104B               	iorwf	btemp,w,c
  2464  001500  B4D8               	btfsc	status,2,c
  2465  001502  D04A               	goto	u490
  2466                           
  2467                           ;stkvar	_counter @ sp[(-1)+0]
  2468  001504  0EFF               	movlw	-1
  2469  001506  6AE3               	clrf	plusw1,c
  2470  001508  D010               	goto	L2
  2471  00150A                     l1559:
  2472                           
  2473                           ;stkvar	_divisor @ sp[(-1)+-4]
  2474  00150A  0EFB               	movlw	-5
  2475  00150C  50E3               	movf	plusw1,w,c
  2476  00150E  90D8               	bcf	status,0,c
  2477  001510  34E8               	rlcf	wreg,w,c
  2478  001512  6E4B               	movwf	btemp,c
  2479  001514  0EFB               	movlw	-5
  2480  001516  C04B  FFE3         	movff	btemp,plusw1
  2481  00151A  0EFC               	movlw	-4
  2482  00151C  50E3               	movf	plusw1,w,c
  2483  00151E  34E8               	rlcf	wreg,w,c
  2484  001520  6E4B               	movwf	btemp,c
  2485  001522  0EFC               	movlw	-4
  2486  001524  C04B  FFE3         	movff	btemp,plusw1
  2487                           
  2488                           ;stkvar	_counter @ sp[(-1)+0]
  2489  001528  0EFF               	movlw	-1
  2490  00152A                     L2:
  2491  00152A  2AE3               	incf	plusw1,f,c
  2492                           
  2493                           ;stkvar	_divisor @ sp[(-1)+-4]
  2494  00152C  0EFC               	movlw	-4
  2495  00152E  AEE3               	btfss	plusw1,7,c
  2496  001530  D7EC               	goto	l1559
  2497  001532                     u470:
  2498                           
  2499                           ;stkvar	_divisor @ sp[(-1)+-4]
  2500  001532  0EFB               	movlw	-5
  2501  001534  CFE3 F055          	movff	plusw1,btemp+10
  2502  001538  0EFC               	movlw	-4
  2503  00153A  CFE3 F056          	movff	plusw1,btemp+11
  2504                           
  2505                           ;stkvar	_dividend @ sp[(-1)+-2]
  2506  00153E  0EFD               	movlw	-3
  2507  001540  CFE3 F053          	movff	plusw1,btemp+8
  2508  001544  0EFE               	movlw	-2
  2509  001546  CFE3 F054          	movff	plusw1,btemp+9
  2510  00154A  5055               	movf	btemp+10,w,c
  2511  00154C  5C53               	subwf	btemp+8,w,c
  2512  00154E  5056               	movf	btemp+11,w,c
  2513  001550  5854               	subwfb	btemp+9,w,c
  2514  001552  A0D8               	btfss	status,0,c
  2515  001554  D012               	goto	l1569
  2516                           
  2517                           ;stkvar	_divisor @ sp[(-1)+-4]
  2518                           ;stkvar	_dividend @ sp[(-1)+-2]
  2519  001556  0EFD               	movlw	-3
  2520  001558  50E3               	movf	plusw1,w,c
  2521  00155A  6E4B               	movwf	btemp,c
  2522  00155C  0EFB               	movlw	-5
  2523  00155E  50E3               	movf	plusw1,w,c
  2524  001560  5E4B               	subwf	btemp,f,c
  2525  001562  0EFD               	movlw	-3
  2526  001564  C04B  FFE3         	movff	btemp,plusw1
  2527  001568  0EFE               	movlw	-2
  2528  00156A  50E3               	movf	plusw1,w,c
  2529  00156C  6E4B               	movwf	btemp,c
  2530  00156E  0EFC               	movlw	-4
  2531  001570  50E3               	movf	plusw1,w,c
  2532  001572  5A4B               	subwfb	btemp,f,c
  2533  001574  0EFE               	movlw	-2
  2534  001576  C04B  FFE3         	movff	btemp,plusw1
  2535  00157A                     l1569:
  2536                           
  2537                           ;stkvar	_divisor @ sp[(-1)+-4]
  2538  00157A  90D8               	bcf	status,0,c
  2539  00157C  0EFC               	movlw	-4
  2540  00157E  32E3               	rrcf	plusw1,f,c
  2541  001580  0EFB               	movlw	-5
  2542  001582  32E3               	rrcf	plusw1,f,c
  2543                           
  2544                           ;stkvar	_counter @ sp[(-1)+0]
  2545  001584  0EFF               	movlw	-1
  2546  001586  50E3               	movf	plusw1,w,c
  2547  001588  6E4B               	movwf	btemp,c
  2548  00158A  0E01               	movlw	1
  2549  00158C  5E4B               	subwf	btemp,f,c
  2550  00158E  0EFF               	movlw	-1
  2551  001590  C04B  FFE3         	movff	btemp,plusw1
  2552  001594  A4D8               	btfss	status,2,c
  2553  001596  D7CD               	goto	u470
  2554  001598                     u490:
  2555                           
  2556                           ;stkvar	_dividend @ sp[(-1)+-2]
  2557  001598  0EFD               	movlw	-3
  2558  00159A  CFE3 F04B          	movff	plusw1,btemp
  2559  00159E  0EFE               	movlw	-2
  2560  0015A0  CFE3 F04C          	movff	plusw1,btemp+1
  2561                           
  2562                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2563  0015A4  0EFB               	movlw	251
  2564  0015A6  26E1               	addwf	fsr1l,f,c
  2565  0015A8  0EFF               	movlw	255
  2566  0015AA  22E2               	addwfc	fsr1h,f,c
  2567  0015AC  0012               	return		;funcret
  2568  0015AE                     __end_of___lwmod:
  2569                           	opt callstack 0
  2570                           
  2571 ;; *************** function _config_timer0 *****************
  2572 ;; Defined at:
  2573 ;;		line 23 in file "int0_test.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1  [STACK] void 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2587 ;;      Params:         0       0       0       0       0       0       0
  2588 ;;      Locals:         0       0       0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0
  2590 ;;      Totals:         0       0       0       0       0       0       0
  2591 ;;Total ram usage:        0 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:   10
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text13
  2602  0019EA                     __ptext13:
  2603                           	opt callstack 0
  2604  0019EA                     _config_timer0:
  2605                           	opt callstack 20
  2606                           
  2607                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  2608                           
  2609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2610                           ;incstack = 0
  2611  0019EA  9AD5               	bcf	4053,5,c	;volatile
  2612                           
  2613                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  2614  0019EC  96D5               	bcf	4053,3,c	;volatile
  2615                           
  2616                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  2617  0019EE  0E07               	movlw	7
  2618  0019F0  12D5               	iorwf	4053,f,c	;volatile
  2619                           
  2620                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  2621  0019F2  8CF2               	bsf	4082,6,c	;volatile
  2622                           
  2623                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  2624  0019F4  8AF2               	bsf	4082,5,c	;volatile
  2625                           
  2626                           ;int0_test.c: 33:   TMR0L = 252;
  2627  0019F6  0EFC               	movlw	252
  2628  0019F8  6ED6               	movwf	4054,c	;volatile
  2629                           
  2630                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2631  0019FA  0012               	return		;funcret
  2632  0019FC                     __end_of_config_timer0:
  2633                           	opt callstack 0
  2634                           
  2635 ;; *************** function _config_INT0 *****************
  2636 ;; Defined at:
  2637 ;;		line 13 in file "int0_test.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1  [STACK] void 
  2644 ;; Registers used:
  2645 ;;		None
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2651 ;;      Params:         0       0       0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0
  2654 ;;      Totals:         0       0       0       0       0       0       0
  2655 ;;Total ram usage:        0 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:   10
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;; This function uses a reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text14
  2666  0019FC                     __ptext14:
  2667                           	opt callstack 0
  2668  0019FC                     _config_INT0:
  2669                           	opt callstack 20
  2670                           
  2671                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2672                           
  2673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2674                           ;incstack = 0
  2675  0019FC  9095               	bcf	3989,0,c	;volatile
  2676                           
  2677                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2678  0019FE  8EF2               	bsf	4082,7,c	;volatile
  2679                           
  2680                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2681  001A00  88F2               	bsf	4082,4,c	;volatile
  2682                           
  2683                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2684  001A02  88F2               	bsf	4082,4,c	;volatile
  2685                           
  2686                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2687  001A04  92F2               	bcf	4082,1,c	;volatile
  2688                           
  2689                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2690  001A06  9EF1               	bcf	4081,7,c	;volatile
  2691                           
  2692                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2693  001A08  9CF1               	bcf	4081,6,c	;volatile
  2694                           
  2695                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2696  001A0A  0012               	return		;funcret
  2697  001A0C                     __end_of_config_INT0:
  2698                           	opt callstack 0
  2699                           
  2700 ;; *************** function _task_idle *****************
  2701 ;; Defined at:
  2702 ;;		line 116 in file "kernel.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1  [STACK] void 
  2709 ;; Registers used:
  2710 ;;		None
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2716 ;;      Params:         0       0       0       0       0       0       0
  2717 ;;      Locals:         0       0       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0
  2719 ;;      Totals:         0       0       0       0       0       0       0
  2720 ;;Total ram usage:        0 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    3
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_lunos_init
  2727 ;; This function uses a reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text15
  2731  001A12                     __ptext15:
  2732                           	opt callstack 0
  2733  001A12                     _task_idle:
  2734                           	opt callstack 23
  2735                           
  2736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2737                           ;incstack = 0
  2738                           ;kernel.c: 118:   while (1) __nop();
  2739  001A12  F000               	nop	
  2740  001A14  D7FE               	goto	_task_idle
  2741  001A16                     __end_of_task_idle:
  2742                           	opt callstack 0
  2743                           
  2744 ;; *************** function _task_0 *****************
  2745 ;; Defined at:
  2746 ;;		line 26 in file "tasks.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1  [STACK] void 
  2753 ;; Registers used:
  2754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2760 ;;      Params:         0       0       0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0       0       0
  2763 ;;      Totals:         0       0       0       0       0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    9
  2767 ;; This function calls:
  2768 ;;		_lunos_delayTask
  2769 ;;		_pipe_write
  2770 ;; This function is called by:
  2771 ;;		_main
  2772 ;; This function uses a reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text16
  2776  001910                     __ptext16:
  2777                           	opt callstack 0
  2778  001910                     _task_0:
  2779                           	opt callstack 17
  2780                           
  2781                           ;tasks.c: 28:     pipe_write(&p, 1);
  2782                           
  2783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2784                           ;incstack = 0
  2785                           ;tasks.c: 27:   while(1){
  2786  001910  0E01               	movlw	1
  2787  001912  6EE6               	movwf	postinc1,c
  2788  001914  0E00               	movlw	0
  2789  001916  6EE6               	movwf	postinc1,c
  2790  001918  0E3F               	movlw	low _p
  2791  00191A  6EE6               	movwf	postinc1,c
  2792  00191C  0E00               	movlw	high _p
  2793  00191E  6EE6               	movwf	postinc1,c
  2794  001920  EC3F  F007         	call	_pipe_write	;wreg free
  2795                           
  2796                           ;tasks.c: 29:     PORTBbits.RB3 = ~PORTBbits.RB3;
  2797  001924  A681               	btfss	3969,3,c	;volatile
  2798  001926  D002               	goto	u62_20
  2799  001928  0E01               	movlw	1
  2800  00192A  D001               	goto	u62_26
  2801  00192C                     u62_20:
  2802  00192C  0E00               	movlw	0
  2803  00192E                     u62_26:
  2804  00192E  0AFF               	xorlw	255
  2805  001930  6E56               	movwf	btemp+11,c
  2806  001932  4656               	rlncf	btemp+11,f,c
  2807  001934  4656               	rlncf	btemp+11,f,c
  2808  001936  4656               	rlncf	btemp+11,f,c
  2809  001938  5081               	movf	3969,w,c	;volatile
  2810  00193A  1856               	xorwf	btemp+11,w,c
  2811  00193C  0BF7               	andlw	-9
  2812  00193E  1856               	xorwf	btemp+11,w,c
  2813  001940  6E81               	movwf	3969,c	;volatile
  2814                           
  2815                           ;tasks.c: 30:     lunos_delayTask(1000);
  2816  001942  0EE8               	movlw	232
  2817  001944  6EE6               	movwf	postinc1,c
  2818  001946  0E03               	movlw	3
  2819  001948  6EE6               	movwf	postinc1,c
  2820  00194A  EC39  F00C         	call	_lunos_delayTask	;wreg free
  2821  00194E  D7E0               	goto	_task_0
  2822  001950                     __end_of_task_0:
  2823                           	opt callstack 0
  2824                           
  2825 ;; *************** function _pipe_write *****************
  2826 ;; Defined at:
  2827 ;;		line 18 in file "pipe.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  p               2  [STACK] PTR struct pipe
  2830 ;;		 -> p(12), 
  2831 ;;  data            2  [STACK] unsigned int 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1  [STACK] void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2843 ;;      Params:         0       0       0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    8
  2850 ;; This function calls:
  2851 ;;		_sem_post
  2852 ;;		_sem_wait
  2853 ;; This function is called by:
  2854 ;;		_task_0
  2855 ;; This function uses a reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text17
  2859  000E7E                     __ptext17:
  2860                           	opt callstack 0
  2861  000E7E                     _pipe_write:
  2862                           	opt callstack 17
  2863                           
  2864                           ;pipe.c: 20:   sem_wait(p->w);
  2865                           ;stkvar	_p @ sp[(0)+-2]
  2866                           
  2867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2868                           ;incstack = 0
  2869  000E7E  0EFE               	movlw	-2
  2870  000E80  CFE3 F055          	movff	plusw1,btemp+10
  2871  000E84  0EFF               	movlw	-1
  2872  000E86  CFE3 F056          	movff	plusw1,btemp+11
  2873  000E8A  0E08               	movlw	8
  2874  000E8C  2455               	addwf	btemp+10,w,c
  2875  000E8E  6ED9               	movwf	fsr2l,c
  2876  000E90  0E00               	movlw	0
  2877  000E92  2056               	addwfc	btemp+11,w,c
  2878  000E94  6EDA               	movwf	fsr2h,c
  2879  000E96  CFDE F055          	movff	postinc2,btemp+10
  2880  000E9A  CFDD F056          	movff	postdec2,btemp+11
  2881  000E9E  C055  FFE6         	movff	btemp+10,postinc1
  2882  000EA2  C056  FFE6         	movff	btemp+11,postinc1
  2883  000EA6  EC3F  F009         	call	_sem_wait	;wreg free
  2884                           
  2885                           ;pipe.c: 21:   p->pipe_data[p->index_write] = data;
  2886                           ;stkvar	_data @ sp[(0)+-4]
  2887  000EAA  50E1               	movf	fsr1l,w,c
  2888  000EAC  0FFC               	addlw	-4
  2889  000EAE  6ED9               	movwf	fsr2l,c
  2890  000EB0  50E2               	movf	fsr1h,w,c
  2891  000EB2  6EDA               	movwf	fsr2h,c
  2892  000EB4  0EFF               	movlw	255
  2893  000EB6  22DA               	addwfc	fsr2h,f,c
  2894                           
  2895                           ;stkvar	_p @ sp[(0)+-2]
  2896  000EB8  0EFE               	movlw	-2
  2897  000EBA  CFE3 F055          	movff	plusw1,btemp+10
  2898  000EBE  0EFF               	movlw	-1
  2899  000EC0  CFE3 F056          	movff	plusw1,btemp+11
  2900  000EC4  0E04               	movlw	4
  2901  000EC6  2455               	addwf	btemp+10,w,c
  2902  000EC8  6EE9               	movwf	fsr0l,c
  2903  000ECA  0E00               	movlw	0
  2904  000ECC  2056               	addwfc	btemp+11,w,c
  2905  000ECE  6EEA               	movwf	fsr0h,c
  2906  000ED0  CFEE F055          	movff	postinc0,btemp+10
  2907  000ED4  CFED F056          	movff	postdec0,btemp+11
  2908  000ED8  90D8               	bcf	status,0,c
  2909  000EDA  3455               	rlcf	btemp+10,w,c
  2910  000EDC  6E53               	movwf	btemp+8,c
  2911  000EDE  3456               	rlcf	btemp+11,w,c
  2912  000EE0  6E54               	movwf	btemp+9,c
  2913                           
  2914                           ;stkvar	_p @ sp[(0)+-2]
  2915  000EE2  0EFE               	movlw	-2
  2916  000EE4  CFE3 F055          	movff	plusw1,btemp+10
  2917  000EE8  0EFF               	movlw	-1
  2918  000EEA  CFE3 F056          	movff	plusw1,btemp+11
  2919  000EEE  5053               	movf	btemp+8,w,c
  2920  000EF0  2455               	addwf	btemp+10,w,c
  2921  000EF2  6EE9               	movwf	fsr0l,c
  2922  000EF4  5054               	movf	btemp+9,w,c
  2923  000EF6  2056               	addwfc	btemp+11,w,c
  2924  000EF8  6EEA               	movwf	fsr0h,c
  2925  000EFA  CFDE FFEE          	movff	postinc2,postinc0
  2926  000EFE  CFDD FFED          	movff	postdec2,postdec0
  2927                           
  2928                           ;pipe.c: 22:   p->index_write = (p->index_write + 1) % 2;
  2929                           ;stkvar	_p @ sp[(0)+-2]
  2930  000F02  0EFE               	movlw	-2
  2931  000F04  CFE3 F055          	movff	plusw1,btemp+10
  2932  000F08  0EFF               	movlw	-1
  2933  000F0A  CFE3 F056          	movff	plusw1,btemp+11
  2934  000F0E  0E04               	movlw	4
  2935  000F10  2455               	addwf	btemp+10,w,c
  2936  000F12  6ED9               	movwf	fsr2l,c
  2937  000F14  0E00               	movlw	0
  2938  000F16  2056               	addwfc	btemp+11,w,c
  2939  000F18  6EDA               	movwf	fsr2h,c
  2940  000F1A  CFDE F055          	movff	postinc2,btemp+10
  2941  000F1E  CFDD F056          	movff	postdec2,btemp+11
  2942  000F22  0E01               	movlw	1
  2943  000F24  2655               	addwf	btemp+10,f,c
  2944  000F26  0E00               	movlw	0
  2945  000F28  2256               	addwfc	btemp+11,f,c
  2946  000F2A  0E01               	movlw	1
  2947  000F2C  1655               	andwf	btemp+10,f,c
  2948  000F2E  0E00               	movlw	0
  2949  000F30  1656               	andwf	btemp+11,f,c
  2950                           
  2951                           ;stkvar	_p @ sp[(0)+-2]
  2952  000F32  0EFE               	movlw	-2
  2953  000F34  CFE3 F053          	movff	plusw1,btemp+8
  2954  000F38  0EFF               	movlw	-1
  2955  000F3A  CFE3 F054          	movff	plusw1,btemp+9
  2956  000F3E  0E04               	movlw	4
  2957  000F40  2453               	addwf	btemp+8,w,c
  2958  000F42  6ED9               	movwf	fsr2l,c
  2959  000F44  0E00               	movlw	0
  2960  000F46  2054               	addwfc	btemp+9,w,c
  2961  000F48  6EDA               	movwf	fsr2h,c
  2962  000F4A  C055  FFDE         	movff	btemp+10,postinc2
  2963  000F4E  C056  FFDD         	movff	btemp+11,postdec2
  2964                           
  2965                           ;pipe.c: 23:   sem_post(p->r);
  2966                           ;stkvar	_p @ sp[(0)+-2]
  2967  000F52  0EFE               	movlw	-2
  2968  000F54  CFE3 F055          	movff	plusw1,btemp+10
  2969  000F58  0EFF               	movlw	-1
  2970  000F5A  CFE3 F056          	movff	plusw1,btemp+11
  2971  000F5E  0E0A               	movlw	10
  2972  000F60  2455               	addwf	btemp+10,w,c
  2973  000F62  6ED9               	movwf	fsr2l,c
  2974  000F64  0E00               	movlw	0
  2975  000F66  2056               	addwfc	btemp+11,w,c
  2976  000F68  6EDA               	movwf	fsr2h,c
  2977  000F6A  CFDE F055          	movff	postinc2,btemp+10
  2978  000F6E  CFDD F056          	movff	postdec2,btemp+11
  2979  000F72  C055  FFE6         	movff	btemp+10,postinc1
  2980  000F76  C056  FFE6         	movff	btemp+11,postinc1
  2981  000F7A  ECC4  F008         	call	_sem_post	;wreg free
  2982                           
  2983                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  2984  000F7E  52E5               	movf	postdec1,f,c
  2985  000F80  52E5               	movf	postdec1,f,c
  2986  000F82  52E5               	movf	postdec1,f,c
  2987  000F84  52E5               	movf	postdec1,f,c
  2988  000F86  0012               	return		;funcret
  2989  000F88                     __end_of_pipe_write:
  2990                           	opt callstack 0
  2991                           
  2992 ;; *************** function _sem_wait *****************
  2993 ;; Defined at:
  2994 ;;		line 20 in file "semaphore.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  s               2  [STACK] PTR struct semaphore
  2997 ;;		 -> r_pipe(14), w_pipe(14), teste_2(14), teste_1(14), 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1  [STACK] void 
  3002 ;; Registers used:
  3003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3009 ;;      Params:         0       0       0       0       0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0
  3012 ;;      Totals:         0       0       0       0       0       0       0
  3013 ;;Total ram usage:        0 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    7
  3016 ;; This function calls:
  3017 ;;		_dispatcher
  3018 ;; This function is called by:
  3019 ;;		_pipe_write
  3020 ;;		_pipe_read
  3021 ;;		_task_bozo
  3022 ;;		_task_xuxa
  3023 ;; This function uses a reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text18
  3027  00127E                     __ptext18:
  3028                           	opt callstack 0
  3029  00127E                     _sem_wait:
  3030                           	opt callstack 18
  3031                           
  3032                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  3033                           
  3034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3035                           ;incstack = 0
  3036  00127E  9EF2               	bcf	4082,7,c	;volatile
  3037                           
  3038                           ;semaphore.c: 22:   s->contador -= 1;
  3039                           ;stkvar	_s @ sp[(0)+-2]
  3040  001280  0EFE               	movlw	-2
  3041  001282  CFE3 FFD9          	movff	plusw1,fsr2l
  3042  001286  0EFF               	movlw	-1
  3043  001288  CFE3 FFDA          	movff	plusw1,fsr2h
  3044  00128C  06DE               	decf	postinc2,f,c
  3045  00128E  0E00               	movlw	0
  3046  001290  5ADD               	subwfb	postdec2,f,c
  3047                           
  3048                           ;semaphore.c: 23:   if (s->contador < 0) {
  3049                           ;stkvar	_s @ sp[(0)+-2]
  3050  001292  0EFE               	movlw	-2
  3051  001294  CFE3 FFD9          	movff	plusw1,fsr2l
  3052  001298  0EFF               	movlw	-1
  3053  00129A  CFE3 FFDA          	movff	plusw1,fsr2h
  3054  00129E  0E01               	movlw	1
  3055  0012A0  AEDB               	btfss	plusw2,7,c
  3056  0012A2  D05D               	goto	l1639
  3057                           
  3058                           ;semaphore.c: 24:     s->contador = 0;
  3059                           ;stkvar	_s @ sp[(0)+-2]
  3060  0012A4  0EFE               	movlw	-2
  3061  0012A6  CFE3 FFD9          	movff	plusw1,fsr2l
  3062  0012AA  0EFF               	movlw	-1
  3063  0012AC  CFE3 FFDA          	movff	plusw1,fsr2h
  3064  0012B0  0E00               	movlw	0
  3065  0012B2  6EDE               	movwf	postinc2,c
  3066  0012B4  0E00               	movlw	0
  3067  0012B6  6EDD               	movwf	postdec2,c
  3068                           
  3069                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  3070  0012B8  EE23  F0FE         	lfsr	2,_ready_queue+542
  3071                           
  3072                           ;stkvar	_s @ sp[(0)+-2]
  3073  0012BC  0EFE               	movlw	-2
  3074  0012BE  CFE3 F055          	movff	plusw1,btemp+10
  3075  0012C2  0EFF               	movlw	-1
  3076  0012C4  CFE3 F056          	movff	plusw1,btemp+11
  3077  0012C8  0E0A               	movlw	10
  3078  0012CA  2455               	addwf	btemp+10,w,c
  3079  0012CC  6EE9               	movwf	fsr0l,c
  3080  0012CE  0E00               	movlw	0
  3081  0012D0  2056               	addwfc	btemp+11,w,c
  3082  0012D2  6EEA               	movwf	fsr0h,c
  3083  0012D4  CFEE F055          	movff	postinc0,btemp+10
  3084  0012D8  CFED F056          	movff	postdec0,btemp+11
  3085  0012DC  90D8               	bcf	status,0,c
  3086  0012DE  3455               	rlcf	btemp+10,w,c
  3087  0012E0  6E53               	movwf	btemp+8,c
  3088  0012E2  3456               	rlcf	btemp+11,w,c
  3089  0012E4  6E54               	movwf	btemp+9,c
  3090                           
  3091                           ;stkvar	_s @ sp[(0)+-2]
  3092  0012E6  0EFE               	movlw	-2
  3093  0012E8  50E3               	movf	plusw1,w,c
  3094  0012EA  2653               	addwf	btemp+8,f,c
  3095  0012EC  0EFF               	movlw	-1
  3096  0012EE  50E3               	movf	plusw1,w,c
  3097  0012F0  2254               	addwfc	btemp+9,f,c
  3098  0012F2  0E02               	movlw	2
  3099  0012F4  2453               	addwf	btemp+8,w,c
  3100  0012F6  6EE9               	movwf	fsr0l,c
  3101  0012F8  0E00               	movlw	0
  3102  0012FA  2054               	addwfc	btemp+9,w,c
  3103  0012FC  6EEA               	movwf	fsr0h,c
  3104  0012FE  CFDE FFEE          	movff	postinc2,postinc0
  3105  001302  CFDD FFED          	movff	postdec2,postdec0
  3106                           
  3107                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 4;
  3108                           ;stkvar	_s @ sp[(0)+-2]
  3109  001306  0EFE               	movlw	-2
  3110  001308  CFE3 F055          	movff	plusw1,btemp+10
  3111  00130C  0EFF               	movlw	-1
  3112  00130E  CFE3 F056          	movff	plusw1,btemp+11
  3113  001312  0E0A               	movlw	10
  3114  001314  2455               	addwf	btemp+10,w,c
  3115  001316  6ED9               	movwf	fsr2l,c
  3116  001318  0E00               	movlw	0
  3117  00131A  2056               	addwfc	btemp+11,w,c
  3118  00131C  6EDA               	movwf	fsr2h,c
  3119  00131E  CFDE F055          	movff	postinc2,btemp+10
  3120  001322  CFDD F056          	movff	postdec2,btemp+11
  3121  001326  0E01               	movlw	1
  3122  001328  2655               	addwf	btemp+10,f,c
  3123  00132A  0E00               	movlw	0
  3124  00132C  2256               	addwfc	btemp+11,f,c
  3125  00132E  0E03               	movlw	3
  3126  001330  1655               	andwf	btemp+10,f,c
  3127  001332  0E00               	movlw	0
  3128  001334  1656               	andwf	btemp+11,f,c
  3129                           
  3130                           ;stkvar	_s @ sp[(0)+-2]
  3131  001336  0EFE               	movlw	-2
  3132  001338  CFE3 F053          	movff	plusw1,btemp+8
  3133  00133C  0EFF               	movlw	-1
  3134  00133E  CFE3 F054          	movff	plusw1,btemp+9
  3135  001342  0E0A               	movlw	10
  3136  001344  2453               	addwf	btemp+8,w,c
  3137  001346  6ED9               	movwf	fsr2l,c
  3138  001348  0E00               	movlw	0
  3139  00134A  2054               	addwfc	btemp+9,w,c
  3140  00134C  6EDA               	movwf	fsr2h,c
  3141  00134E  C055  FFDE         	movff	btemp+10,postinc2
  3142  001352  C056  FFDD         	movff	btemp+11,postdec2
  3143                           
  3144                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  3145  001356  0E05               	movlw	5
  3146  001358  6EE6               	movwf	postinc1,c
  3147  00135A  EC66  F002         	call	_dispatcher	;wreg free
  3148  00135E                     l1639:
  3149                           
  3150                           ;semaphore.c: 29:   INTCONbits.GIE = 1;
  3151  00135E  8EF2               	bsf	4082,7,c	;volatile
  3152                           
  3153                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3154  001360  52E5               	movf	postdec1,f,c
  3155  001362  52E5               	movf	postdec1,f,c
  3156  001364  0012               	return		;funcret
  3157  001366                     __end_of_sem_wait:
  3158                           	opt callstack 0
  3159                           
  3160 ;; *************** function _sem_post *****************
  3161 ;; Defined at:
  3162 ;;		line 32 in file "semaphore.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  s               2  [STACK] PTR struct semaphore
  3165 ;;		 -> r_pipe(14), w_pipe(14), teste_2(14), teste_1(14), 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1  [STACK] void 
  3170 ;; Registers used:
  3171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3177 ;;      Params:         0       0       0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0
  3180 ;;      Totals:         0       0       0       0       0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    3
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_pipe_write
  3188 ;;		_pipe_read
  3189 ;;		_task_bozo
  3190 ;;		_task_xuxa
  3191 ;; This function uses a reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text19
  3195  001188                     __ptext19:
  3196                           	opt callstack 0
  3197  001188                     _sem_post:
  3198                           	opt callstack 22
  3199                           
  3200                           ;semaphore.c: 33:   INTCONbits.GIE = 0;
  3201                           
  3202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3203                           ;incstack = 0
  3204  001188  9EF2               	bcf	4082,7,c	;volatile
  3205                           
  3206                           ;semaphore.c: 34:   s->contador += 1;
  3207                           ;stkvar	_s @ sp[(0)+-2]
  3208  00118A  0EFE               	movlw	-2
  3209  00118C  CFE3 FFD9          	movff	plusw1,fsr2l
  3210  001190  0EFF               	movlw	-1
  3211  001192  CFE3 FFDA          	movff	plusw1,fsr2h
  3212  001196  2ADE               	incf	postinc2,f,c
  3213  001198  0E00               	movlw	0
  3214  00119A  22DD               	addwfc	postdec2,f,c
  3215                           
  3216                           ;semaphore.c: 35:   if (s->contador > 0) {
  3217                           ;stkvar	_s @ sp[(0)+-2]
  3218  00119C  0EFE               	movlw	-2
  3219  00119E  CFE3 FFD9          	movff	plusw1,fsr2l
  3220  0011A2  0EFF               	movlw	-1
  3221  0011A4  CFE3 FFDA          	movff	plusw1,fsr2h
  3222  0011A8  0E01               	movlw	1
  3223  0011AA  BEDB               	btfsc	plusw2,7,c
  3224  0011AC  D064               	goto	l1651
  3225  0011AE  0E01               	movlw	1
  3226  0011B0  50DB               	movf	plusw2,w,c
  3227  0011B2  E103               	bnz	u55_20
  3228  0011B4  04DE               	decf	postinc2,w,c
  3229  0011B6  A0D8               	btfss	status,0,c
  3230  0011B8  D05E               	goto	l1651
  3231  0011BA                     u55_20:
  3232                           
  3233                           ;semaphore.c: 36:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  3234                           ;stkvar	_s @ sp[(0)+-2]
  3235  0011BA  0EFE               	movlw	-2
  3236  0011BC  CFE3 F055          	movff	plusw1,btemp+10
  3237  0011C0  0EFF               	movlw	-1
  3238  0011C2  CFE3 F056          	movff	plusw1,btemp+11
  3239  0011C6  0E0C               	movlw	12
  3240  0011C8  2455               	addwf	btemp+10,w,c
  3241  0011CA  6ED9               	movwf	fsr2l,c
  3242  0011CC  0E00               	movlw	0
  3243  0011CE  2056               	addwfc	btemp+11,w,c
  3244  0011D0  6EDA               	movwf	fsr2h,c
  3245  0011D2  CFDE F055          	movff	postinc2,btemp+10
  3246  0011D6  CFDD F056          	movff	postdec2,btemp+11
  3247  0011DA  90D8               	bcf	status,0,c
  3248  0011DC  3455               	rlcf	btemp+10,w,c
  3249  0011DE  6E53               	movwf	btemp+8,c
  3250  0011E0  3456               	rlcf	btemp+11,w,c
  3251  0011E2  6E54               	movwf	btemp+9,c
  3252                           
  3253                           ;stkvar	_s @ sp[(0)+-2]
  3254  0011E4  0EFE               	movlw	-2
  3255  0011E6  50E3               	movf	plusw1,w,c
  3256  0011E8  2653               	addwf	btemp+8,f,c
  3257  0011EA  0EFF               	movlw	-1
  3258  0011EC  50E3               	movf	plusw1,w,c
  3259  0011EE  2254               	addwfc	btemp+9,f,c
  3260  0011F0  0E02               	movlw	2
  3261  0011F2  2453               	addwf	btemp+8,w,c
  3262  0011F4  6ED9               	movwf	fsr2l,c
  3263  0011F6  0E00               	movlw	0
  3264  0011F8  2054               	addwfc	btemp+9,w,c
  3265  0011FA  6EDA               	movwf	fsr2h,c
  3266  0011FC  CFDE F055          	movff	postinc2,btemp+10
  3267  001200  CFDD F056          	movff	postdec2,btemp+11
  3268  001204  0E6C               	movlw	108
  3269  001206  0255               	mulwf	btemp+10,c
  3270  001208  CFF3 F053          	movff	prodl,btemp+8
  3271  00120C  CFF4 F054          	movff	prodh,btemp+9
  3272  001210  0256               	mulwf	btemp+11,c
  3273  001212  50F3               	movf	prodl,w,c
  3274  001214  2654               	addwf	btemp+9,f,c
  3275  001216  0EE8               	movlw	low (_ready_queue+8)
  3276  001218  2453               	addwf	btemp+8,w,c
  3277  00121A  6ED9               	movwf	fsr2l,c
  3278  00121C  0E01               	movlw	high (_ready_queue+8)
  3279  00121E  2054               	addwfc	btemp+9,w,c
  3280  001220  6EDA               	movwf	fsr2h,c
  3281  001222  0E00               	movlw	0
  3282  001224  6EDF               	movwf	indf2,c
  3283                           
  3284                           ;semaphore.c: 37:     s->task_to_ready = (s->task_to_ready + 1) % 4;
  3285                           ;stkvar	_s @ sp[(0)+-2]
  3286  001226  0EFE               	movlw	-2
  3287  001228  CFE3 F055          	movff	plusw1,btemp+10
  3288  00122C  0EFF               	movlw	-1
  3289  00122E  CFE3 F056          	movff	plusw1,btemp+11
  3290  001232  0E0C               	movlw	12
  3291  001234  2455               	addwf	btemp+10,w,c
  3292  001236  6ED9               	movwf	fsr2l,c
  3293  001238  0E00               	movlw	0
  3294  00123A  2056               	addwfc	btemp+11,w,c
  3295  00123C  6EDA               	movwf	fsr2h,c
  3296  00123E  CFDE F055          	movff	postinc2,btemp+10
  3297  001242  CFDD F056          	movff	postdec2,btemp+11
  3298  001246  0E01               	movlw	1
  3299  001248  2655               	addwf	btemp+10,f,c
  3300  00124A  0E00               	movlw	0
  3301  00124C  2256               	addwfc	btemp+11,f,c
  3302  00124E  0E03               	movlw	3
  3303  001250  1655               	andwf	btemp+10,f,c
  3304  001252  0E00               	movlw	0
  3305  001254  1656               	andwf	btemp+11,f,c
  3306                           
  3307                           ;stkvar	_s @ sp[(0)+-2]
  3308  001256  0EFE               	movlw	-2
  3309  001258  CFE3 F053          	movff	plusw1,btemp+8
  3310  00125C  0EFF               	movlw	-1
  3311  00125E  CFE3 F054          	movff	plusw1,btemp+9
  3312  001262  0E0C               	movlw	12
  3313  001264  2453               	addwf	btemp+8,w,c
  3314  001266  6ED9               	movwf	fsr2l,c
  3315  001268  0E00               	movlw	0
  3316  00126A  2054               	addwfc	btemp+9,w,c
  3317  00126C  6EDA               	movwf	fsr2h,c
  3318  00126E  C055  FFDE         	movff	btemp+10,postinc2
  3319  001272  C056  FFDD         	movff	btemp+11,postdec2
  3320  001276                     l1651:
  3321                           
  3322                           ;semaphore.c: 40:   INTCONbits.GIE = 1;
  3323  001276  8EF2               	bsf	4082,7,c	;volatile
  3324                           
  3325                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3326  001278  52E5               	movf	postdec1,f,c
  3327  00127A  52E5               	movf	postdec1,f,c
  3328  00127C  0012               	return		;funcret
  3329  00127E                     __end_of_sem_post:
  3330                           	opt callstack 0
  3331                           
  3332 ;; *************** function _lunos_delayTask *****************
  3333 ;; Defined at:
  3334 ;;		line 29 in file "kernel.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  time            2  [STACK] unsigned int 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1  [STACK] void 
  3341 ;; Registers used:
  3342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3348 ;;      Params:         0       0       0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0
  3351 ;;      Totals:         0       0       0       0       0       0       0
  3352 ;;Total ram usage:        0 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    7
  3355 ;; This function calls:
  3356 ;;		_dispatcher
  3357 ;; This function is called by:
  3358 ;;		_task_0
  3359 ;;		_task_1
  3360 ;;		_task_2
  3361 ;;		_task_xuxa
  3362 ;; This function uses a reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text20
  3366  001872                     __ptext20:
  3367                           	opt callstack 0
  3368  001872                     _lunos_delayTask:
  3369                           	opt callstack 18
  3370                           
  3371                           ;kernel.c: 30:   INTCONbits.GIE = 0;
  3372                           
  3373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3374                           ;incstack = 0
  3375  001872  9EF2               	bcf	4082,7,c	;volatile
  3376                           
  3377                           ;kernel.c: 32:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  3378                           ;stkvar	_time @ sp[(0)+-2]
  3379  001874  50E1               	movf	fsr1l,w,c
  3380  001876  0FFE               	addlw	-2
  3381  001878  6ED9               	movwf	fsr2l,c
  3382  00187A  50E2               	movf	fsr1h,w,c
  3383  00187C  6EDA               	movwf	fsr2h,c
  3384  00187E  0EFF               	movlw	255
  3385  001880  22DA               	addwfc	fsr2h,f,c
  3386  001882  EE03  F0FE         	lfsr	0,_ready_queue+542
  3387  001886  CFEE F055          	movff	postinc0,btemp+10
  3388  00188A  CFED F056          	movff	postdec0,btemp+11
  3389  00188E  0E6C               	movlw	108
  3390  001890  0255               	mulwf	btemp+10,c
  3391  001892  CFF3 F053          	movff	prodl,btemp+8
  3392  001896  CFF4 F054          	movff	prodh,btemp+9
  3393  00189A  0256               	mulwf	btemp+11,c
  3394  00189C  50F3               	movf	prodl,w,c
  3395  00189E  2654               	addwf	btemp+9,f,c
  3396  0018A0  0E4A               	movlw	low (_ready_queue+106)
  3397  0018A2  2453               	addwf	btemp+8,w,c
  3398  0018A4  6EE9               	movwf	fsr0l,c
  3399  0018A6  0E02               	movlw	high (_ready_queue+106)
  3400  0018A8  2054               	addwfc	btemp+9,w,c
  3401  0018AA  6EEA               	movwf	fsr0h,c
  3402  0018AC  CFDE FFEE          	movff	postinc2,postinc0
  3403  0018B0  CFDD FFED          	movff	postdec2,postdec0
  3404                           
  3405                           ;kernel.c: 33:   dispatcher(WAITING);
  3406  0018B4  0E02               	movlw	2
  3407  0018B6  6EE6               	movwf	postinc1,c
  3408  0018B8  EC66  F002         	call	_dispatcher	;wreg free
  3409                           
  3410                           ;kernel.c: 35:   INTCONbits.GIE = 1;
  3411  0018BC  8EF2               	bsf	4082,7,c	;volatile
  3412                           
  3413                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3414  0018BE  52E5               	movf	postdec1,f,c
  3415  0018C0  52E5               	movf	postdec1,f,c
  3416  0018C2  0012               	return		;funcret
  3417  0018C4                     __end_of_lunos_delayTask:
  3418                           	opt callstack 0
  3419                           
  3420 ;; *************** function _task_1 *****************
  3421 ;; Defined at:
  3422 ;;		line 35 in file "tasks.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  dado            2  [STACK] unsigned int 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1  [STACK] void 
  3429 ;; Registers used:
  3430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3436 ;;      Params:         0       0       0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0
  3439 ;;      Totals:         0       0       0       0       0       0       0
  3440 ;;Total ram usage:        0 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:    9
  3443 ;; This function calls:
  3444 ;;		_lunos_delayTask
  3445 ;;		_pipe_read
  3446 ;; This function is called by:
  3447 ;;		_main
  3448 ;; This function uses a reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text21
  3452  0018C4                     __ptext21:
  3453                           	opt callstack 0
  3454  0018C4                     _task_1:
  3455                           	opt callstack 0
  3456                           
  3457                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3458  0018C4  52E6               	movf	postinc1,f,c
  3459  0018C6  52E6               	movf	postinc1,f,c
  3460  0018C8                     l276:
  3461                           
  3462                           ;tasks.c: 38:     pipe_read(&p, &dado);
  3463                           ;stkvar	_dado @ sp[(-2)+0]
  3464  0018C8  0EFE               	movlw	254
  3465  0018CA  24E1               	addwf	fsr1l,w,c
  3466  0018CC  6E4B               	movwf	btemp,c
  3467  0018CE  0EFF               	movlw	255
  3468  0018D0  20E2               	addwfc	fsr1h,w,c
  3469  0018D2  6E4C               	movwf	btemp+1,c
  3470  0018D4  C04B  FFE6         	movff	btemp,postinc1
  3471  0018D8  C04C  FFE6         	movff	btemp+1,postinc1
  3472  0018DC  0E3F               	movlw	low _p
  3473  0018DE  6EE6               	movwf	postinc1,c
  3474  0018E0  0E00               	movlw	high _p
  3475  0018E2  6EE6               	movwf	postinc1,c
  3476  0018E4  ECC4  F007         	call	_pipe_read	;wreg free
  3477                           
  3478                           ;tasks.c: 39:     PORTBbits.RB4 = ~PORTBbits.RB4;
  3479  0018E8  A881               	btfss	3969,4,c	;volatile
  3480  0018EA  D002               	goto	u63_20
  3481  0018EC  0E01               	movlw	1
  3482  0018EE  D001               	goto	u63_26
  3483  0018F0                     u63_20:
  3484  0018F0  0E00               	movlw	0
  3485  0018F2                     u63_26:
  3486  0018F2  0AFF               	xorlw	255
  3487  0018F4  6E56               	movwf	btemp+11,c
  3488  0018F6  3A56               	swapf	btemp+11,f,c
  3489  0018F8  5081               	movf	3969,w,c	;volatile
  3490  0018FA  1856               	xorwf	btemp+11,w,c
  3491  0018FC  0BEF               	andlw	-17
  3492  0018FE  1856               	xorwf	btemp+11,w,c
  3493  001900  6E81               	movwf	3969,c	;volatile
  3494                           
  3495                           ;tasks.c: 40:     lunos_delayTask(2000);
  3496  001902  0ED0               	movlw	208
  3497  001904  6EE6               	movwf	postinc1,c
  3498  001906  0E07               	movlw	7
  3499  001908  6EE6               	movwf	postinc1,c
  3500  00190A  EC39  F00C         	call	_lunos_delayTask	;wreg free
  3501  00190E  D7DC               	goto	l276
  3502  001910                     __end_of_task_1:
  3503                           	opt callstack 0
  3504                           
  3505 ;; *************** function _pipe_read *****************
  3506 ;; Defined at:
  3507 ;;		line 27 in file "pipe.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  p               2  [STACK] PTR struct pipe
  3510 ;;		 -> p(12), 
  3511 ;;  data            2  [STACK] PTR unsigned int 
  3512 ;;		 -> dado(2), 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1  [STACK] void 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3524 ;;      Params:         0       0       0       0       0       0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0
  3527 ;;      Totals:         0       0       0       0       0       0       0
  3528 ;;Total ram usage:        0 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    8
  3531 ;; This function calls:
  3532 ;;		_sem_post
  3533 ;;		_sem_wait
  3534 ;; This function is called by:
  3535 ;;		_task_1
  3536 ;; This function uses a reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text22
  3540  000F88                     __ptext22:
  3541                           	opt callstack 0
  3542  000F88                     _pipe_read:
  3543                           	opt callstack 17
  3544                           
  3545                           ;pipe.c: 29:   sem_wait(p->r);
  3546                           ;stkvar	_p @ sp[(0)+-2]
  3547                           
  3548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3549                           ;incstack = 0
  3550  000F88  0EFE               	movlw	-2
  3551  000F8A  CFE3 F055          	movff	plusw1,btemp+10
  3552  000F8E  0EFF               	movlw	-1
  3553  000F90  CFE3 F056          	movff	plusw1,btemp+11
  3554  000F94  0E0A               	movlw	10
  3555  000F96  2455               	addwf	btemp+10,w,c
  3556  000F98  6ED9               	movwf	fsr2l,c
  3557  000F9A  0E00               	movlw	0
  3558  000F9C  2056               	addwfc	btemp+11,w,c
  3559  000F9E  6EDA               	movwf	fsr2h,c
  3560  000FA0  CFDE F055          	movff	postinc2,btemp+10
  3561  000FA4  CFDD F056          	movff	postdec2,btemp+11
  3562  000FA8  C055  FFE6         	movff	btemp+10,postinc1
  3563  000FAC  C056  FFE6         	movff	btemp+11,postinc1
  3564  000FB0  EC3F  F009         	call	_sem_wait	;wreg free
  3565                           
  3566                           ;pipe.c: 30:   *data = p->pipe_data[p->index_read];
  3567                           ;stkvar	_p @ sp[(0)+-2]
  3568  000FB4  0EFE               	movlw	-2
  3569  000FB6  CFE3 F055          	movff	plusw1,btemp+10
  3570  000FBA  0EFF               	movlw	-1
  3571  000FBC  CFE3 F056          	movff	plusw1,btemp+11
  3572  000FC0  0E06               	movlw	6
  3573  000FC2  2455               	addwf	btemp+10,w,c
  3574  000FC4  6ED9               	movwf	fsr2l,c
  3575  000FC6  0E00               	movlw	0
  3576  000FC8  2056               	addwfc	btemp+11,w,c
  3577  000FCA  6EDA               	movwf	fsr2h,c
  3578  000FCC  CFDE F055          	movff	postinc2,btemp+10
  3579  000FD0  CFDD F056          	movff	postdec2,btemp+11
  3580  000FD4  90D8               	bcf	status,0,c
  3581  000FD6  3455               	rlcf	btemp+10,w,c
  3582  000FD8  6E53               	movwf	btemp+8,c
  3583  000FDA  3456               	rlcf	btemp+11,w,c
  3584  000FDC  6E54               	movwf	btemp+9,c
  3585                           
  3586                           ;stkvar	_p @ sp[(0)+-2]
  3587  000FDE  0EFE               	movlw	-2
  3588  000FE0  CFE3 F055          	movff	plusw1,btemp+10
  3589  000FE4  0EFF               	movlw	-1
  3590  000FE6  CFE3 F056          	movff	plusw1,btemp+11
  3591  000FEA  5053               	movf	btemp+8,w,c
  3592  000FEC  2455               	addwf	btemp+10,w,c
  3593  000FEE  6ED9               	movwf	fsr2l,c
  3594  000FF0  5054               	movf	btemp+9,w,c
  3595  000FF2  2056               	addwfc	btemp+11,w,c
  3596  000FF4  6EDA               	movwf	fsr2h,c
  3597                           
  3598                           ;stkvar	_data @ sp[(0)+-4]
  3599  000FF6  0EFC               	movlw	-4
  3600  000FF8  CFE3 FFE9          	movff	plusw1,fsr0l
  3601  000FFC  0EFD               	movlw	-3
  3602  000FFE  CFE3 FFEA          	movff	plusw1,fsr0h
  3603  001002  CFDE FFEE          	movff	postinc2,postinc0
  3604  001006  CFDD FFED          	movff	postdec2,postdec0
  3605                           
  3606                           ;pipe.c: 31:   p->index_read = (p->index_read + 1) % 2;
  3607                           ;stkvar	_p @ sp[(0)+-2]
  3608  00100A  0EFE               	movlw	-2
  3609  00100C  CFE3 F055          	movff	plusw1,btemp+10
  3610  001010  0EFF               	movlw	-1
  3611  001012  CFE3 F056          	movff	plusw1,btemp+11
  3612  001016  0E06               	movlw	6
  3613  001018  2455               	addwf	btemp+10,w,c
  3614  00101A  6ED9               	movwf	fsr2l,c
  3615  00101C  0E00               	movlw	0
  3616  00101E  2056               	addwfc	btemp+11,w,c
  3617  001020  6EDA               	movwf	fsr2h,c
  3618  001022  CFDE F055          	movff	postinc2,btemp+10
  3619  001026  CFDD F056          	movff	postdec2,btemp+11
  3620  00102A  0E01               	movlw	1
  3621  00102C  2655               	addwf	btemp+10,f,c
  3622  00102E  0E00               	movlw	0
  3623  001030  2256               	addwfc	btemp+11,f,c
  3624  001032  0E01               	movlw	1
  3625  001034  1655               	andwf	btemp+10,f,c
  3626  001036  0E00               	movlw	0
  3627  001038  1656               	andwf	btemp+11,f,c
  3628                           
  3629                           ;stkvar	_p @ sp[(0)+-2]
  3630  00103A  0EFE               	movlw	-2
  3631  00103C  CFE3 F053          	movff	plusw1,btemp+8
  3632  001040  0EFF               	movlw	-1
  3633  001042  CFE3 F054          	movff	plusw1,btemp+9
  3634  001046  0E06               	movlw	6
  3635  001048  2453               	addwf	btemp+8,w,c
  3636  00104A  6ED9               	movwf	fsr2l,c
  3637  00104C  0E00               	movlw	0
  3638  00104E  2054               	addwfc	btemp+9,w,c
  3639  001050  6EDA               	movwf	fsr2h,c
  3640  001052  C055  FFDE         	movff	btemp+10,postinc2
  3641  001056  C056  FFDD         	movff	btemp+11,postdec2
  3642                           
  3643                           ;pipe.c: 32:   sem_post(p->w);
  3644                           ;stkvar	_p @ sp[(0)+-2]
  3645  00105A  0EFE               	movlw	-2
  3646  00105C  CFE3 F055          	movff	plusw1,btemp+10
  3647  001060  0EFF               	movlw	-1
  3648  001062  CFE3 F056          	movff	plusw1,btemp+11
  3649  001066  0E08               	movlw	8
  3650  001068  2455               	addwf	btemp+10,w,c
  3651  00106A  6ED9               	movwf	fsr2l,c
  3652  00106C  0E00               	movlw	0
  3653  00106E  2056               	addwfc	btemp+11,w,c
  3654  001070  6EDA               	movwf	fsr2h,c
  3655  001072  CFDE F055          	movff	postinc2,btemp+10
  3656  001076  CFDD F056          	movff	postdec2,btemp+11
  3657  00107A  C055  FFE6         	movff	btemp+10,postinc1
  3658  00107E  C056  FFE6         	movff	btemp+11,postinc1
  3659  001082  ECC4  F008         	call	_sem_post	;wreg free
  3660                           
  3661                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3662  001086  52E5               	movf	postdec1,f,c
  3663  001088  52E5               	movf	postdec1,f,c
  3664  00108A  52E5               	movf	postdec1,f,c
  3665  00108C  52E5               	movf	postdec1,f,c
  3666  00108E  0012               	return		;funcret
  3667  001090                     __end_of_pipe_read:
  3668                           	opt callstack 0
  3669                           
  3670 ;; *************** function _task_2 *****************
  3671 ;; Defined at:
  3672 ;;		line 44 in file "tasks.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1  [STACK] void 
  3679 ;; Registers used:
  3680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3686 ;;      Params:         0       0       0       0       0       0       0
  3687 ;;      Locals:         0       0       0       0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0
  3689 ;;      Totals:         0       0       0       0       0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; Hardware stack levels required when called:    8
  3693 ;; This function calls:
  3694 ;;		_lunos_delayTask
  3695 ;; This function is called by:
  3696 ;;		_main
  3697 ;; This function uses a reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text23
  3701  0019C0                     __ptext23:
  3702                           	opt callstack 0
  3703  0019C0                     _task_2:
  3704                           	opt callstack 18
  3705                           
  3706                           ;tasks.c: 46:     PORTBbits.RB5 = ~PORTBbits.RB5;
  3707                           
  3708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3709                           ;incstack = 0
  3710                           ;tasks.c: 45:   while(1){
  3711  0019C0  AA81               	btfss	3969,5,c	;volatile
  3712  0019C2  D002               	goto	u64_20
  3713  0019C4  0E01               	movlw	1
  3714  0019C6  D001               	goto	u64_26
  3715  0019C8                     u64_20:
  3716  0019C8  0E00               	movlw	0
  3717  0019CA                     u64_26:
  3718  0019CA  0AFF               	xorlw	255
  3719  0019CC  6E56               	movwf	btemp+11,c
  3720  0019CE  3A56               	swapf	btemp+11,f,c
  3721  0019D0  4656               	rlncf	btemp+11,f,c
  3722  0019D2  5081               	movf	3969,w,c	;volatile
  3723  0019D4  1856               	xorwf	btemp+11,w,c
  3724  0019D6  0BDF               	andlw	-33
  3725  0019D8  1856               	xorwf	btemp+11,w,c
  3726  0019DA  6E81               	movwf	3969,c	;volatile
  3727                           
  3728                           ;tasks.c: 47:     lunos_delayTask(1000);
  3729  0019DC  0EE8               	movlw	232
  3730  0019DE  6EE6               	movwf	postinc1,c
  3731  0019E0  0E03               	movlw	3
  3732  0019E2  6EE6               	movwf	postinc1,c
  3733  0019E4  EC39  F00C         	call	_lunos_delayTask	;wreg free
  3734  0019E8  D7EB               	goto	_task_2
  3735  0019EA                     __end_of_task_2:
  3736                           	opt callstack 0
  3737                           
  3738 ;; *************** function _task_bozo *****************
  3739 ;; Defined at:
  3740 ;;		line 52 in file "tasks.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  i               2  [STACK] int 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1  [STACK] void 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3754 ;;      Params:         0       0       0       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0
  3757 ;;      Totals:         0       0       0       0       0       0       0
  3758 ;;Total ram usage:        0 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    8
  3761 ;; This function calls:
  3762 ;;		_sem_post
  3763 ;;		_sem_wait
  3764 ;; This function is called by:
  3765 ;;		Interrupt level 1
  3766 ;; This function uses a reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text24
  3770  0016D4                     __ptext24:
  3771                           	opt callstack 0
  3772  0016D4                     _task_bozo:
  3773                           	opt callstack 0
  3774                           
  3775                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3776  0016D4  52E6               	movf	postinc1,f,c
  3777  0016D6  52E6               	movf	postinc1,f,c
  3778  0016D8                     l288:
  3779                           
  3780                           ;tasks.c: 54:     int i;;tasks.c: 55:     sem_wait(&teste_1);
  3781  0016D8  0E31               	movlw	low _teste_1
  3782  0016DA  6EE6               	movwf	postinc1,c
  3783  0016DC  0E00               	movlw	high _teste_1
  3784  0016DE  6EE6               	movwf	postinc1,c
  3785  0016E0  EC3F  F009         	call	_sem_wait	;wreg free
  3786                           
  3787                           ;tasks.c: 56:     for (i = 0; i < 4; i++) {
  3788                           ;stkvar	_i @ sp[(-2)+0]
  3789  0016E4  0EFE               	movlw	-2
  3790  0016E6  6AE3               	clrf	plusw1,c
  3791  0016E8  0EFF               	movlw	-1
  3792  0016EA  6AE3               	clrf	plusw1,c
  3793  0016EC                     l1767:
  3794                           
  3795                           ;tasks.c: 57:       mem[i] = i+1;
  3796                           ;stkvar	_i @ sp[(-2)+0]
  3797  0016EC  0EFE               	movlw	-2
  3798  0016EE  CFE3 F055          	movff	plusw1,btemp+10
  3799  0016F2  0EFF               	movlw	-1
  3800  0016F4  CFE3 F056          	movff	plusw1,btemp+11
  3801  0016F8  5055               	movf	btemp+10,w,c
  3802  0016FA  2401               	addwf	_mem,w,c
  3803  0016FC  6ED9               	movwf	fsr2l,c
  3804  0016FE  5056               	movf	btemp+11,w,c
  3805  001700  2002               	addwfc	_mem+1,w,c
  3806  001702  6EDA               	movwf	fsr2h,c
  3807                           
  3808                           ;stkvar	_i @ sp[(-2)+0]
  3809  001704  0EFE               	movlw	-2
  3810  001706  50E3               	movf	plusw1,w,c
  3811  001708  0F01               	addlw	1
  3812  00170A  6EDF               	movwf	indf2,c
  3813                           
  3814                           ;tasks.c: 58:     }
  3815                           ;stkvar	_i @ sp[(-2)+0]
  3816  00170C  0EFE               	movlw	-2
  3817  00170E  50E3               	movf	plusw1,w,c
  3818  001710  0F01               	addlw	1
  3819  001712  6E4B               	movwf	btemp,c
  3820  001714  0EFE               	movlw	-2
  3821  001716  C04B  FFE3         	movff	btemp,plusw1
  3822  00171A  6A4B               	clrf	btemp,c
  3823  00171C  0EFF               	movlw	-1
  3824  00171E  50E3               	movf	plusw1,w,c
  3825  001720  204B               	addwfc	btemp,w,c
  3826  001722  6E4B               	movwf	btemp,c
  3827  001724  0EFF               	movlw	-1
  3828  001726  C04B  FFE3         	movff	btemp,plusw1
  3829                           
  3830                           ;stkvar	_i @ sp[(-2)+0]
  3831  00172A  0EFF               	movlw	-1
  3832  00172C  BEE3               	btfsc	plusw1,7,c
  3833  00172E  D7DE               	goto	l1767
  3834  001730  0EFF               	movlw	-1
  3835  001732  50E3               	movf	plusw1,w,c
  3836  001734  E107               	bnz	u65_20
  3837  001736  0EFE               	movlw	-2
  3838  001738  CFE3 F04B          	movff	plusw1,btemp
  3839  00173C  0E04               	movlw	4
  3840  00173E  5E4B               	subwf	btemp,f,c
  3841  001740  A0D8               	btfss	status,0,c
  3842  001742  D7D4               	goto	l1767
  3843  001744                     u65_20:
  3844                           
  3845                           ;tasks.c: 59:     sem_post(&teste_2);
  3846  001744  0E23               	movlw	low _teste_2
  3847  001746  6EE6               	movwf	postinc1,c
  3848  001748  0E00               	movlw	high _teste_2
  3849  00174A  6EE6               	movwf	postinc1,c
  3850  00174C  ECC4  F008         	call	_sem_post	;wreg free
  3851  001750  D7C3               	goto	l288
  3852  001752                     __end_of_task_bozo:
  3853                           	opt callstack 0
  3854                           
  3855 ;; *************** function _task_xuxa *****************
  3856 ;; Defined at:
  3857 ;;		line 63 in file "tasks.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  i               2  [STACK] int 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1  [STACK] void 
  3864 ;; Registers used:
  3865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3871 ;;      Params:         0       0       0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0
  3874 ;;      Totals:         0       0       0       0       0       0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    8
  3878 ;; This function calls:
  3879 ;;		_lunos_delayTask
  3880 ;;		_sem_post
  3881 ;;		_sem_wait
  3882 ;; This function is called by:
  3883 ;;		Interrupt level 1
  3884 ;; This function uses a reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text25
  3888  001434                     __ptext25:
  3889                           	opt callstack 0
  3890  001434                     _task_xuxa:
  3891                           	opt callstack 0
  3892                           
  3893                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3894  001434  52E6               	movf	postinc1,f,c
  3895  001436  52E6               	movf	postinc1,f,c
  3896  001438                     l296:
  3897                           
  3898                           ;tasks.c: 66:     sem_wait(&teste_2);
  3899  001438  0E23               	movlw	low _teste_2
  3900  00143A  6EE6               	movwf	postinc1,c
  3901  00143C  0E00               	movlw	high _teste_2
  3902  00143E  6EE6               	movwf	postinc1,c
  3903  001440  EC3F  F009         	call	_sem_wait	;wreg free
  3904                           
  3905                           ;tasks.c: 67:     for (i = 0; i < 4; i++) {
  3906                           ;stkvar	_i @ sp[(-2)+0]
  3907  001444  0EFE               	movlw	-2
  3908  001446  6AE3               	clrf	plusw1,c
  3909  001448  0EFF               	movlw	-1
  3910  00144A  6AE3               	clrf	plusw1,c
  3911  00144C                     l1783:
  3912                           
  3913                           ;tasks.c: 68:       if (mem[i] % 2 == 0)
  3914                           ;stkvar	_i @ sp[(-2)+0]
  3915  00144C  0EFE               	movlw	-2
  3916  00144E  CFE3 F055          	movff	plusw1,btemp+10
  3917  001452  0EFF               	movlw	-1
  3918  001454  CFE3 F056          	movff	plusw1,btemp+11
  3919  001458  5055               	movf	btemp+10,w,c
  3920  00145A  2401               	addwf	_mem,w,c
  3921  00145C  6ED9               	movwf	fsr2l,c
  3922  00145E  5056               	movf	btemp+11,w,c
  3923  001460  2002               	addwfc	_mem+1,w,c
  3924  001462  6EDA               	movwf	fsr2h,c
  3925  001464  B0DF               	btfsc	indf2,0,c
  3926  001466  D00E               	goto	l1787
  3927                           
  3928                           ;tasks.c: 69:         PORTBbits.RB3 = ~PORTBbits.RB3;
  3929  001468  A681               	btfss	3969,3,c	;volatile
  3930  00146A  D002               	goto	u67_20
  3931  00146C  0E01               	movlw	1
  3932  00146E  D001               	goto	u67_26
  3933  001470                     u67_20:
  3934  001470  0E00               	movlw	0
  3935  001472                     u67_26:
  3936  001472  0AFF               	xorlw	255
  3937  001474  6E56               	movwf	btemp+11,c
  3938  001476  4656               	rlncf	btemp+11,f,c
  3939  001478  4656               	rlncf	btemp+11,f,c
  3940  00147A  4656               	rlncf	btemp+11,f,c
  3941  00147C  5081               	movf	3969,w,c	;volatile
  3942  00147E  1856               	xorwf	btemp+11,w,c
  3943  001480  0BF7               	andlw	-9
  3944  001482  D00C               	goto	L3
  3945  001484                     l1787:
  3946                           
  3947                           ;tasks.c: 71:         PORTBbits.RB5 = ~PORTBbits.RB5;
  3948  001484  AA81               	btfss	3969,5,c	;volatile
  3949  001486  D002               	goto	u68_20
  3950  001488  0E01               	movlw	1
  3951  00148A  D001               	goto	u68_26
  3952  00148C                     u68_20:
  3953  00148C  0E00               	movlw	0
  3954  00148E                     u68_26:
  3955  00148E  0AFF               	xorlw	255
  3956  001490  6E56               	movwf	btemp+11,c
  3957  001492  3A56               	swapf	btemp+11,f,c
  3958  001494  4656               	rlncf	btemp+11,f,c
  3959  001496  5081               	movf	3969,w,c	;volatile
  3960  001498  1856               	xorwf	btemp+11,w,c
  3961  00149A  0BDF               	andlw	-33
  3962  00149C                     L3:
  3963  00149C  1856               	xorwf	btemp+11,w,c
  3964  00149E  6E81               	movwf	3969,c	;volatile
  3965                           
  3966                           ;tasks.c: 72:       lunos_delayTask(1000);
  3967  0014A0  0EE8               	movlw	232
  3968  0014A2  6EE6               	movwf	postinc1,c
  3969  0014A4  0E03               	movlw	3
  3970  0014A6  6EE6               	movwf	postinc1,c
  3971  0014A8  EC39  F00C         	call	_lunos_delayTask	;wreg free
  3972                           
  3973                           ;tasks.c: 73:     }
  3974                           ;stkvar	_i @ sp[(-2)+0]
  3975  0014AC  0EFE               	movlw	-2
  3976  0014AE  50E3               	movf	plusw1,w,c
  3977  0014B0  0F01               	addlw	1
  3978  0014B2  6E4B               	movwf	btemp,c
  3979  0014B4  0EFE               	movlw	-2
  3980  0014B6  C04B  FFE3         	movff	btemp,plusw1
  3981  0014BA  6A4B               	clrf	btemp,c
  3982  0014BC  0EFF               	movlw	-1
  3983  0014BE  50E3               	movf	plusw1,w,c
  3984  0014C0  204B               	addwfc	btemp,w,c
  3985  0014C2  6E4B               	movwf	btemp,c
  3986  0014C4  0EFF               	movlw	-1
  3987  0014C6  C04B  FFE3         	movff	btemp,plusw1
  3988                           
  3989                           ;stkvar	_i @ sp[(-2)+0]
  3990  0014CA  0EFF               	movlw	-1
  3991  0014CC  BEE3               	btfsc	plusw1,7,c
  3992  0014CE  D7BE               	goto	l1783
  3993  0014D0  0EFF               	movlw	-1
  3994  0014D2  50E3               	movf	plusw1,w,c
  3995  0014D4  E107               	bnz	u69_20
  3996  0014D6  0EFE               	movlw	-2
  3997  0014D8  CFE3 F04B          	movff	plusw1,btemp
  3998  0014DC  0E04               	movlw	4
  3999  0014DE  5E4B               	subwf	btemp,f,c
  4000  0014E0  A0D8               	btfss	status,0,c
  4001  0014E2  D7B4               	goto	l1783
  4002  0014E4                     u69_20:
  4003                           
  4004                           ;tasks.c: 74:     sem_post(&teste_1);
  4005  0014E4  0E31               	movlw	low _teste_1
  4006  0014E6  6EE6               	movwf	postinc1,c
  4007  0014E8  0E00               	movlw	high _teste_1
  4008  0014EA  6EE6               	movwf	postinc1,c
  4009  0014EC  ECC4  F008         	call	_sem_post	;wreg free
  4010  0014F0  D7A3               	goto	l296
  4011  0014F2                     __end_of_task_xuxa:
  4012                           	opt callstack 0
  4013                           
  4014 ;; *************** function _ISR_timer0 *****************
  4015 ;; Defined at:
  4016 ;;		line 56 in file "int0_test.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4030 ;;      Params:         0       0       0       0       0       0       0
  4031 ;;      Locals:         0       0       0       0       0       0       0
  4032 ;;      Temps:         16       0       0       0       0       0       0
  4033 ;;      Totals:        16       0       0       0       0       0       0
  4034 ;;Total ram usage:       16 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    2
  4037 ;; This function calls:
  4038 ;;		___wmul
  4039 ;;		_delay_decrement
  4040 ;;		_round_robin
  4041 ;; This function is called by:
  4042 ;;		Interrupt level 2
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	intcode
  4047  000008                     __pintcode:
  4048                           	opt callstack 0
  4049  000008                     _ISR_timer0:
  4050                           	opt callstack 17
  4051                           
  4052                           ;incstack = 0
  4053  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  4054                           
  4055                           	psect	intcode_body
  4056  000014                     __pintcode_body:
  4057                           	opt callstack 17
  4058  000014                     int_func:
  4059                           	opt callstack 17
  4060  000014  0006               	pop		; remove dummy address from shadow register refresh
  4061  000016  CFE1 F06F          	movff	fsr1l,??_ISR_timer0+4
  4062  00001A  CFE2 F070          	movff	fsr1h,??_ISR_timer0+5
  4063  00001E  CFD9 F071          	movff	fsr2l,??_ISR_timer0+6
  4064  000022  CFDA F072          	movff	fsr2h,??_ISR_timer0+7
  4065  000026  CFF3 F073          	movff	prodl,??_ISR_timer0+8
  4066  00002A  CFF4 F074          	movff	prodh,??_ISR_timer0+9
  4067  00002E  C04B  F075         	movff	btemp,??_ISR_timer0+10
  4068  000032  C04C  F076         	movff	btemp+1,??_ISR_timer0+11
  4069  000036  C053  F077         	movff	btemp+8,??_ISR_timer0+12
  4070  00003A  C054  F078         	movff	btemp+9,??_ISR_timer0+13
  4071  00003E  C055  F079         	movff	btemp+10,??_ISR_timer0+14
  4072  000042  C056  F07A         	movff	btemp+11,??_ISR_timer0+15
  4073  000046  EE10  F0F6         	lfsr	1,___inthi_sp
  4074                           
  4075                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  4076  00004A  9EF2               	bcf	4082,7,c	;volatile
  4077                           
  4078                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  4079  00004C  A4F2               	btfss	4082,2,c	;volatile
  4080  00004E  D224               	goto	i2u61_40
  4081                           
  4082                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  4083  000050  94F2               	bcf	4082,2,c	;volatile
  4084                           
  4085                           ;int0_test.c: 61:     TMR0L = 252;
  4086  000052  0EFC               	movlw	252
  4087  000054  6ED6               	movwf	4054,c	;volatile
  4088                           
  4089                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  4090  000056  A083               	btfss	3971,0,c	;volatile
  4091  000058  D002               	goto	i2u57_40
  4092  00005A  0E01               	movlw	1
  4093  00005C  D001               	goto	i2u57_46
  4094  00005E                     i2u57_40:
  4095  00005E  0E00               	movlw	0
  4096  000060                     i2u57_46:
  4097  000060  0AFF               	xorlw	255
  4098  000062  6E6B               	movwf	??_ISR_timer0& (0+255),c
  4099  000064  5083               	movf	3971,w,c	;volatile
  4100  000066  186B               	xorwf	??_ISR_timer0,w,c
  4101  000068  0BFE               	andlw	-2
  4102  00006A  186B               	xorwf	??_ISR_timer0,w,c
  4103  00006C  6E83               	movwf	3971,c	;volatile
  4104                           
  4105                           ;int0_test.c: 63:     delay_decrement();
  4106  00006E  EC30  F006         	call	_delay_decrement	;wreg free
  4107                           
  4108                           ;int0_test.c: 65:     quantum--;
  4109  000072  067B               	decf	_quantum,f,c
  4110  000074  A0D8               	btfss	status,0,c
  4111  000076  067C               	decf	_quantum+1,f,c
  4112                           
  4113                           ;int0_test.c: 66:     if (quantum <= 0) {
  4114  000078  BE7C               	btfsc	_quantum+1,7,c
  4115  00007A  D005               	goto	i2u58_40
  4116  00007C  507C               	movf	_quantum+1,w,c
  4117  00007E  E102               	bnz	i2u58_41
  4118  000080  047B               	decf	_quantum,w,c
  4119  000082  B0D8               	btfsc	status,0,c
  4120  000084                     i2u58_41:
  4121  000084  D209               	goto	i2u61_40
  4122  000086                     i2u58_40:
  4123                           
  4124                           ;int0_test.c: 67:       quantum = 10;
  4125  000086  0E00               	movlw	0
  4126  000088  6E7C               	movwf	_quantum+1,c
  4127  00008A  0E0A               	movlw	10
  4128  00008C  6E7B               	movwf	_quantum,c
  4129                           
  4130                           ;int0_test.c: 68:       { who = ready_queue.task_running; ready_queue.tasks[who].task_st
      +                          ate = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = ST
      +                          ATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks
      +                          [who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stac
      +                          k[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL
      +                          ; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  4131  00008E  C3FE  F005         	movff	_ready_queue+542,_who
  4132  000092  C3FF  F006         	movff	_ready_queue+543,_who+1
  4133  000096  0E6C               	movlw	108
  4134  000098  6EE6               	movwf	postinc1,c
  4135  00009A  0E00               	movlw	0
  4136  00009C  6EE6               	movwf	postinc1,c
  4137  00009E  C005  FFE6         	movff	_who,postinc1
  4138  0000A2  C006  FFE6         	movff	_who+1,postinc1
  4139  0000A6  ECD7  F00A         	call	___wmul	;wreg free
  4140  0000AA  0EE8               	movlw	low (_ready_queue+8)
  4141  0000AC  244B               	addwf	btemp,w,c
  4142  0000AE  6ED9               	movwf	fsr2l,c
  4143  0000B0  0E01               	movlw	high (_ready_queue+8)
  4144  0000B2  204C               	addwfc	btemp+1,w,c
  4145  0000B4  6EDA               	movwf	fsr2h,c
  4146  0000B6  0E00               	movlw	0
  4147  0000B8  6EDF               	movwf	indf2,c
  4148  0000BA  0E6C               	movlw	108
  4149  0000BC  6EE6               	movwf	postinc1,c
  4150  0000BE  0E00               	movlw	0
  4151  0000C0  6EE6               	movwf	postinc1,c
  4152  0000C2  C005  FFE6         	movff	_who,postinc1
  4153  0000C6  C006  FFE6         	movff	_who+1,postinc1
  4154  0000CA  ECD7  F00A         	call	___wmul	;wreg free
  4155  0000CE  0EE5               	movlw	low (_ready_queue+5)
  4156  0000D0  244B               	addwf	btemp,w,c
  4157  0000D2  6ED9               	movwf	fsr2l,c
  4158  0000D4  0E01               	movlw	high (_ready_queue+5)
  4159  0000D6  204C               	addwfc	btemp+1,w,c
  4160  0000D8  6EDA               	movwf	fsr2h,c
  4161  0000DA  CFE8 FFDF          	movff	wreg,indf2	;volatile
  4162  0000DE  0E6C               	movlw	108
  4163  0000E0  6EE6               	movwf	postinc1,c
  4164  0000E2  0E00               	movlw	0
  4165  0000E4  6EE6               	movwf	postinc1,c
  4166  0000E6  C005  FFE6         	movff	_who,postinc1
  4167  0000EA  C006  FFE6         	movff	_who+1,postinc1
  4168  0000EE  ECD7  F00A         	call	___wmul	;wreg free
  4169  0000F2  0EE6               	movlw	low (_ready_queue+6)
  4170  0000F4  244B               	addwf	btemp,w,c
  4171  0000F6  6ED9               	movwf	fsr2l,c
  4172  0000F8  0E01               	movlw	high (_ready_queue+6)
  4173  0000FA  204C               	addwfc	btemp+1,w,c
  4174  0000FC  6EDA               	movwf	fsr2h,c
  4175  0000FE  CFD8 FFDF          	movff	status,indf2	;volatile
  4176  000102  0E6C               	movlw	108
  4177  000104  6EE6               	movwf	postinc1,c
  4178  000106  0E00               	movlw	0
  4179  000108  6EE6               	movwf	postinc1,c
  4180  00010A  C005  FFE6         	movff	_who,postinc1
  4181  00010E  C006  FFE6         	movff	_who+1,postinc1
  4182  000112  ECD7  F00A         	call	___wmul	;wreg free
  4183  000116  0EE7               	movlw	low (_ready_queue+7)
  4184  000118  244B               	addwf	btemp,w,c
  4185  00011A  6ED9               	movwf	fsr2l,c
  4186  00011C  0E01               	movlw	high (_ready_queue+7)
  4187  00011E  204C               	addwfc	btemp+1,w,c
  4188  000120  6EDA               	movwf	fsr2h,c
  4189  000122  CFE0 FFDF          	movff	bsr,indf2	;volatile
  4190  000126  6A03               	clrf	_size,c
  4191  000128  6A04               	clrf	_size+1,c
  4192  00012A  D07B               	goto	i2l1703
  4193  00012C                     i2l1699:
  4194  00012C  0E6C               	movlw	108
  4195  00012E  6EE6               	movwf	postinc1,c
  4196  000130  0E00               	movlw	0
  4197  000132  6EE6               	movwf	postinc1,c
  4198  000134  C005  FFE6         	movff	_who,postinc1
  4199  000138  C006  FFE6         	movff	_who+1,postinc1
  4200  00013C  ECD7  F00A         	call	___wmul	;wreg free
  4201  000140  0EE0               	movlw	low _ready_queue
  4202  000142  6E6B               	movwf	??_ISR_timer0& (0+255),c
  4203  000144  0E01               	movlw	high _ready_queue
  4204  000146  6E6C               	movwf	(??_ISR_timer0+1)& (0+255),c
  4205  000148  0E09               	movlw	9
  4206  00014A  266B               	addwf	??_ISR_timer0,f,c
  4207  00014C  0E00               	movlw	0
  4208  00014E  226C               	addwfc	??_ISR_timer0+1,f,c
  4209  000150  504B               	movf	btemp,w,c
  4210  000152  266B               	addwf	??_ISR_timer0,f,c
  4211  000154  504C               	movf	btemp+1,w,c
  4212  000156  226C               	addwfc	??_ISR_timer0+1,f,c
  4213  000158  0E03               	movlw	3
  4214  00015A  6EE6               	movwf	postinc1,c
  4215  00015C  0E00               	movlw	0
  4216  00015E  6EE6               	movwf	postinc1,c
  4217  000160  C003  FFE6         	movff	_size,postinc1
  4218  000164  C004  FFE6         	movff	_size+1,postinc1
  4219  000168  ECD7  F00A         	call	___wmul	;wreg free
  4220  00016C  504B               	movf	btemp,w,c
  4221  00016E  246B               	addwf	??_ISR_timer0,w,c
  4222  000170  6ED9               	movwf	fsr2l,c
  4223  000172  504C               	movf	btemp+1,w,c
  4224  000174  206C               	addwfc	??_ISR_timer0+1,w,c
  4225  000176  6EDA               	movwf	fsr2h,c
  4226  000178  CFFF FFDF          	movff	tosu,indf2	;volatile
  4227  00017C  0E6C               	movlw	108
  4228  00017E  6EE6               	movwf	postinc1,c
  4229  000180  0E00               	movlw	0
  4230  000182  6EE6               	movwf	postinc1,c
  4231  000184  C005  FFE6         	movff	_who,postinc1
  4232  000188  C006  FFE6         	movff	_who+1,postinc1
  4233  00018C  ECD7  F00A         	call	___wmul	;wreg free
  4234  000190  0EE0               	movlw	low _ready_queue
  4235  000192  6E6B               	movwf	??_ISR_timer0& (0+255),c
  4236  000194  0E01               	movlw	high _ready_queue
  4237  000196  6E6C               	movwf	(??_ISR_timer0+1)& (0+255),c
  4238  000198  0E0B               	movlw	11
  4239  00019A  266B               	addwf	??_ISR_timer0,f,c
  4240  00019C  0E00               	movlw	0
  4241  00019E  226C               	addwfc	??_ISR_timer0+1,f,c
  4242  0001A0  504B               	movf	btemp,w,c
  4243  0001A2  266B               	addwf	??_ISR_timer0,f,c
  4244  0001A4  504C               	movf	btemp+1,w,c
  4245  0001A6  226C               	addwfc	??_ISR_timer0+1,f,c
  4246  0001A8  0E03               	movlw	3
  4247  0001AA  6EE6               	movwf	postinc1,c
  4248  0001AC  0E00               	movlw	0
  4249  0001AE  6EE6               	movwf	postinc1,c
  4250  0001B0  C003  FFE6         	movff	_size,postinc1
  4251  0001B4  C004  FFE6         	movff	_size+1,postinc1
  4252  0001B8  ECD7  F00A         	call	___wmul	;wreg free
  4253  0001BC  504B               	movf	btemp,w,c
  4254  0001BE  246B               	addwf	??_ISR_timer0,w,c
  4255  0001C0  6ED9               	movwf	fsr2l,c
  4256  0001C2  504C               	movf	btemp+1,w,c
  4257  0001C4  206C               	addwfc	??_ISR_timer0+1,w,c
  4258  0001C6  6EDA               	movwf	fsr2h,c
  4259  0001C8  CFFE FFDF          	movff	tosh,indf2	;volatile
  4260  0001CC  0E6C               	movlw	108
  4261  0001CE  6EE6               	movwf	postinc1,c
  4262  0001D0  0E00               	movlw	0
  4263  0001D2  6EE6               	movwf	postinc1,c
  4264  0001D4  C005  FFE6         	movff	_who,postinc1
  4265  0001D8  C006  FFE6         	movff	_who+1,postinc1
  4266  0001DC  ECD7  F00A         	call	___wmul	;wreg free
  4267  0001E0  0EE0               	movlw	low _ready_queue
  4268  0001E2  6E6B               	movwf	??_ISR_timer0& (0+255),c
  4269  0001E4  0E01               	movlw	high _ready_queue
  4270  0001E6  6E6C               	movwf	(??_ISR_timer0+1)& (0+255),c
  4271  0001E8  0E0A               	movlw	10
  4272  0001EA  266B               	addwf	??_ISR_timer0,f,c
  4273  0001EC  0E00               	movlw	0
  4274  0001EE  226C               	addwfc	??_ISR_timer0+1,f,c
  4275  0001F0  504B               	movf	btemp,w,c
  4276  0001F2  266B               	addwf	??_ISR_timer0,f,c
  4277  0001F4  504C               	movf	btemp+1,w,c
  4278  0001F6  226C               	addwfc	??_ISR_timer0+1,f,c
  4279  0001F8  0E03               	movlw	3
  4280  0001FA  6EE6               	movwf	postinc1,c
  4281  0001FC  0E00               	movlw	0
  4282  0001FE  6EE6               	movwf	postinc1,c
  4283  000200  C003  FFE6         	movff	_size,postinc1
  4284  000204  C004  FFE6         	movff	_size+1,postinc1
  4285  000208  ECD7  F00A         	call	___wmul	;wreg free
  4286  00020C  504B               	movf	btemp,w,c
  4287  00020E  246B               	addwf	??_ISR_timer0,w,c
  4288  000210  6ED9               	movwf	fsr2l,c
  4289  000212  504C               	movf	btemp+1,w,c
  4290  000214  206C               	addwfc	??_ISR_timer0+1,w,c
  4291  000216  6EDA               	movwf	fsr2h,c
  4292  000218  CFFD FFDF          	movff	tosl,indf2	;volatile
  4293  00021C  4A03               	infsnz	_size,f,c
  4294  00021E  2A04               	incf	_size+1,f,c
  4295  000220  0006               	pop		;# 
  4296  000222                     i2l1703:
  4297  000222  50FC               	movf	stkptr,w,c	;volatile
  4298  000224  A4D8               	btfss	status,2,c
  4299  000226  D782               	goto	i2l1699
  4300  000228  0EFF               	movlw	255
  4301  00022A  6E6B               	movwf	??_ISR_timer0& (0+255),c
  4302  00022C  0EFF               	movlw	255
  4303  00022E  6E6C               	movwf	(??_ISR_timer0+1)& (0+255),c
  4304  000230  C003  F06D         	movff	_size,??_ISR_timer0+2
  4305  000234  C004  F06E         	movff	_size+1,??_ISR_timer0+3
  4306  000238  506B               	movf	??_ISR_timer0,w,c
  4307  00023A  266D               	addwf	??_ISR_timer0+2,f,c
  4308  00023C  506C               	movf	??_ISR_timer0+1,w,c
  4309  00023E  226E               	addwfc	??_ISR_timer0+3,f,c
  4310  000240  0E6C               	movlw	108
  4311  000242  6EE6               	movwf	postinc1,c
  4312  000244  0E00               	movlw	0
  4313  000246  6EE6               	movwf	postinc1,c
  4314  000248  C005  FFE6         	movff	_who,postinc1
  4315  00024C  C006  FFE6         	movff	_who+1,postinc1
  4316  000250  ECD7  F00A         	call	___wmul	;wreg free
  4317  000254  0E46               	movlw	low (_ready_queue+102)
  4318  000256  244B               	addwf	btemp,w,c
  4319  000258  6ED9               	movwf	fsr2l,c
  4320  00025A  0E02               	movlw	high (_ready_queue+102)
  4321  00025C  204C               	addwfc	btemp+1,w,c
  4322  00025E  6EDA               	movwf	fsr2h,c
  4323  000260  C06D  FFDE         	movff	??_ISR_timer0+2,postinc2
  4324  000264  C06E  FFDD         	movff	??_ISR_timer0+3,postdec2
  4325                           
  4326                           ;int0_test.c: 69:       ready_queue.task_running = round_robin();
  4327  000268  EC22  F00B         	call	_round_robin	;wreg free
  4328  00026C  C04B  F3FE         	movff	btemp,_ready_queue+542
  4329  000270  C04C  F3FF         	movff	btemp+1,_ready_queue+543
  4330                           
  4331                           ;int0_test.c: 70:       { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.ta
      +                          sks[who].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task
      +                          _f; } else { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].
      +                          W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg;
      +                           size = ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL
      +                           = ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[wh
      +                          o].task_stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[s
      +                          ize].TOSU_reg; size--; } }};
  4332  000274  C3FE  F005         	movff	_ready_queue+542,_who
  4333  000278  C3FF  F006         	movff	_ready_queue+543,_who+1
  4334  00027C  6AFC               	clrf	stkptr,c	;volatile
  4335  00027E  0E6C               	movlw	108
  4336  000280  6EE6               	movwf	postinc1,c
  4337  000282  0E00               	movlw	0
  4338  000284  6EE6               	movwf	postinc1,c
  4339  000286  C005  FFE6         	movff	_who,postinc1
  4340  00028A  C006  FFE6         	movff	_who+1,postinc1
  4341  00028E  ECD7  F00A         	call	___wmul	;wreg free
  4342  000292  0E46               	movlw	low (_ready_queue+102)
  4343  000294  244B               	addwf	btemp,w,c
  4344  000296  6ED9               	movwf	fsr2l,c
  4345  000298  0E02               	movlw	high (_ready_queue+102)
  4346  00029A  204C               	addwfc	btemp+1,w,c
  4347  00029C  6EDA               	movwf	fsr2h,c
  4348  00029E  50DE               	movf	postinc2,w,c
  4349  0002A0  10DE               	iorwf	postinc2,w,c
  4350  0002A2  A4D8               	btfss	status,2,c
  4351  0002A4  D01B               	goto	i2l1719
  4352  0002A6  0005               	push		;# 
  4353  0002A8  0E6C               	movlw	108
  4354  0002AA  6EE6               	movwf	postinc1,c
  4355  0002AC  0E00               	movlw	0
  4356  0002AE  6EE6               	movwf	postinc1,c
  4357  0002B0  C005  FFE6         	movff	_who,postinc1
  4358  0002B4  C006  FFE6         	movff	_who+1,postinc1
  4359  0002B8  ECD7  F00A         	call	___wmul	;wreg free
  4360  0002BC  0E48               	movlw	low (_ready_queue+104)
  4361  0002BE  244B               	addwf	btemp,w,c
  4362  0002C0  6ED9               	movwf	fsr2l,c
  4363  0002C2  0E02               	movlw	high (_ready_queue+104)
  4364  0002C4  204C               	addwfc	btemp+1,w,c
  4365  0002C6  6EDA               	movwf	fsr2h,c
  4366  0002C8  CFDE F06B          	movff	postinc2,??_ISR_timer0
  4367  0002CC  CFDD F06C          	movff	postdec2,??_ISR_timer0+1
  4368  0002D0  C06B  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  4369  0002D4  C06C  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  4370  0002D8  6AFF               	clrf	tosu,c	;volatile
  4371  0002DA  D0DE               	goto	i2u61_40
  4372  0002DC                     i2l1719:
  4373  0002DC  0E6C               	movlw	108
  4374  0002DE  6EE6               	movwf	postinc1,c
  4375  0002E0  0E00               	movlw	0
  4376  0002E2  6EE6               	movwf	postinc1,c
  4377  0002E4  C005  FFE6         	movff	_who,postinc1
  4378  0002E8  C006  FFE6         	movff	_who+1,postinc1
  4379  0002EC  ECD7  F00A         	call	___wmul	;wreg free
  4380  0002F0  0EE8               	movlw	low (_ready_queue+8)
  4381  0002F2  244B               	addwf	btemp,w,c
  4382  0002F4  6ED9               	movwf	fsr2l,c
  4383  0002F6  0E01               	movlw	high (_ready_queue+8)
  4384  0002F8  204C               	addwfc	btemp+1,w,c
  4385  0002FA  6EDA               	movwf	fsr2h,c
  4386  0002FC  0E01               	movlw	1
  4387  0002FE  6EDF               	movwf	indf2,c
  4388  000300  0E6C               	movlw	108
  4389  000302  6EE6               	movwf	postinc1,c
  4390  000304  0E00               	movlw	0
  4391  000306  6EE6               	movwf	postinc1,c
  4392  000308  C005  FFE6         	movff	_who,postinc1
  4393  00030C  C006  FFE6         	movff	_who+1,postinc1
  4394  000310  ECD7  F00A         	call	___wmul	;wreg free
  4395  000314  0EE5               	movlw	low (_ready_queue+5)
  4396  000316  244B               	addwf	btemp,w,c
  4397  000318  6ED9               	movwf	fsr2l,c
  4398  00031A  0E01               	movlw	high (_ready_queue+5)
  4399  00031C  204C               	addwfc	btemp+1,w,c
  4400  00031E  6EDA               	movwf	fsr2h,c
  4401  000320  50DF               	movf	indf2,w,c
  4402  000322  6E6B               	movwf	??_ISR_timer0& (0+255),c
  4403  000324  506B               	movf	??_ISR_timer0,w,c
  4404  000326  0E6C               	movlw	108
  4405  000328  6EE6               	movwf	postinc1,c
  4406  00032A  0E00               	movlw	0
  4407  00032C  6EE6               	movwf	postinc1,c
  4408  00032E  C005  FFE6         	movff	_who,postinc1
  4409  000332  C006  FFE6         	movff	_who+1,postinc1
  4410  000336  ECD7  F00A         	call	___wmul	;wreg free
  4411  00033A  0EE6               	movlw	low (_ready_queue+6)
  4412  00033C  244B               	addwf	btemp,w,c
  4413  00033E  6ED9               	movwf	fsr2l,c
  4414  000340  0E01               	movlw	high (_ready_queue+6)
  4415  000342  204C               	addwfc	btemp+1,w,c
  4416  000344  6EDA               	movwf	fsr2h,c
  4417  000346  50DF               	movf	indf2,w,c
  4418  000348  6ED8               	movwf	status,c	;volatile
  4419  00034A  0E6C               	movlw	108
  4420  00034C  6EE6               	movwf	postinc1,c
  4421  00034E  0E00               	movlw	0
  4422  000350  6EE6               	movwf	postinc1,c
  4423  000352  C005  FFE6         	movff	_who,postinc1
  4424  000356  C006  FFE6         	movff	_who+1,postinc1
  4425  00035A  ECD7  F00A         	call	___wmul	;wreg free
  4426  00035E  0EE7               	movlw	low (_ready_queue+7)
  4427  000360  244B               	addwf	btemp,w,c
  4428  000362  6ED9               	movwf	fsr2l,c
  4429  000364  0E01               	movlw	high (_ready_queue+7)
  4430  000366  204C               	addwfc	btemp+1,w,c
  4431  000368  6EDA               	movwf	fsr2h,c
  4432  00036A  50DF               	movf	indf2,w,c
  4433  00036C  6EE0               	movwf	bsr,c	;volatile
  4434  00036E  0E6C               	movlw	108
  4435  000370  6EE6               	movwf	postinc1,c
  4436  000372  0E00               	movlw	0
  4437  000374  6EE6               	movwf	postinc1,c
  4438  000376  C005  FFE6         	movff	_who,postinc1
  4439  00037A  C006  FFE6         	movff	_who+1,postinc1
  4440  00037E  ECD7  F00A         	call	___wmul	;wreg free
  4441  000382  0E46               	movlw	low (_ready_queue+102)
  4442  000384  244B               	addwf	btemp,w,c
  4443  000386  6ED9               	movwf	fsr2l,c
  4444  000388  0E02               	movlw	high (_ready_queue+102)
  4445  00038A  204C               	addwfc	btemp+1,w,c
  4446  00038C  6EDA               	movwf	fsr2h,c
  4447  00038E  CFDE F003          	movff	postinc2,_size
  4448  000392  CFDD F004          	movff	postdec2,_size+1
  4449  000396  D07C               	goto	i2l1725
  4450  000398                     i2l59:
  4451  000398  0005               	push		;# 
  4452  00039A  0E6C               	movlw	108
  4453  00039C  6EE6               	movwf	postinc1,c
  4454  00039E  0E00               	movlw	0
  4455  0003A0  6EE6               	movwf	postinc1,c
  4456  0003A2  C005  FFE6         	movff	_who,postinc1
  4457  0003A6  C006  FFE6         	movff	_who+1,postinc1
  4458  0003AA  ECD7  F00A         	call	___wmul	;wreg free
  4459  0003AE  0EE0               	movlw	low _ready_queue
  4460  0003B0  6E6B               	movwf	??_ISR_timer0& (0+255),c
  4461  0003B2  0E01               	movlw	high _ready_queue
  4462  0003B4  6E6C               	movwf	(??_ISR_timer0+1)& (0+255),c
  4463  0003B6  0E0A               	movlw	10
  4464  0003B8  266B               	addwf	??_ISR_timer0,f,c
  4465  0003BA  0E00               	movlw	0
  4466  0003BC  226C               	addwfc	??_ISR_timer0+1,f,c
  4467  0003BE  504B               	movf	btemp,w,c
  4468  0003C0  266B               	addwf	??_ISR_timer0,f,c
  4469  0003C2  504C               	movf	btemp+1,w,c
  4470  0003C4  226C               	addwfc	??_ISR_timer0+1,f,c
  4471  0003C6  0E03               	movlw	3
  4472  0003C8  6EE6               	movwf	postinc1,c
  4473  0003CA  0E00               	movlw	0
  4474  0003CC  6EE6               	movwf	postinc1,c
  4475  0003CE  C003  FFE6         	movff	_size,postinc1
  4476  0003D2  C004  FFE6         	movff	_size+1,postinc1
  4477  0003D6  ECD7  F00A         	call	___wmul	;wreg free
  4478  0003DA  504B               	movf	btemp,w,c
  4479  0003DC  246B               	addwf	??_ISR_timer0,w,c
  4480  0003DE  6ED9               	movwf	fsr2l,c
  4481  0003E0  504C               	movf	btemp+1,w,c
  4482  0003E2  206C               	addwfc	??_ISR_timer0+1,w,c
  4483  0003E4  6EDA               	movwf	fsr2h,c
  4484  0003E6  50DF               	movf	indf2,w,c
  4485  0003E8  6EFD               	movwf	tosl,c	;volatile
  4486  0003EA  0E6C               	movlw	108
  4487  0003EC  6EE6               	movwf	postinc1,c
  4488  0003EE  0E00               	movlw	0
  4489  0003F0  6EE6               	movwf	postinc1,c
  4490  0003F2  C005  FFE6         	movff	_who,postinc1
  4491  0003F6  C006  FFE6         	movff	_who+1,postinc1
  4492  0003FA  ECD7  F00A         	call	___wmul	;wreg free
  4493  0003FE  0EE0               	movlw	low _ready_queue
  4494  000400  6E6B               	movwf	??_ISR_timer0& (0+255),c
  4495  000402  0E01               	movlw	high _ready_queue
  4496  000404  6E6C               	movwf	(??_ISR_timer0+1)& (0+255),c
  4497  000406  0E0B               	movlw	11
  4498  000408  266B               	addwf	??_ISR_timer0,f,c
  4499  00040A  0E00               	movlw	0
  4500  00040C  226C               	addwfc	??_ISR_timer0+1,f,c
  4501  00040E  504B               	movf	btemp,w,c
  4502  000410  266B               	addwf	??_ISR_timer0,f,c
  4503  000412  504C               	movf	btemp+1,w,c
  4504  000414  226C               	addwfc	??_ISR_timer0+1,f,c
  4505  000416  0E03               	movlw	3
  4506  000418  6EE6               	movwf	postinc1,c
  4507  00041A  0E00               	movlw	0
  4508  00041C  6EE6               	movwf	postinc1,c
  4509  00041E  C003  FFE6         	movff	_size,postinc1
  4510  000422  C004  FFE6         	movff	_size+1,postinc1
  4511  000426  ECD7  F00A         	call	___wmul	;wreg free
  4512  00042A  504B               	movf	btemp,w,c
  4513  00042C  246B               	addwf	??_ISR_timer0,w,c
  4514  00042E  6ED9               	movwf	fsr2l,c
  4515  000430  504C               	movf	btemp+1,w,c
  4516  000432  206C               	addwfc	??_ISR_timer0+1,w,c
  4517  000434  6EDA               	movwf	fsr2h,c
  4518  000436  50DF               	movf	indf2,w,c
  4519  000438  6EFE               	movwf	tosh,c	;volatile
  4520  00043A  0E6C               	movlw	108
  4521  00043C  6EE6               	movwf	postinc1,c
  4522  00043E  0E00               	movlw	0
  4523  000440  6EE6               	movwf	postinc1,c
  4524  000442  C005  FFE6         	movff	_who,postinc1
  4525  000446  C006  FFE6         	movff	_who+1,postinc1
  4526  00044A  ECD7  F00A         	call	___wmul	;wreg free
  4527  00044E  0EE0               	movlw	low _ready_queue
  4528  000450  6E6B               	movwf	??_ISR_timer0& (0+255),c
  4529  000452  0E01               	movlw	high _ready_queue
  4530  000454  6E6C               	movwf	(??_ISR_timer0+1)& (0+255),c
  4531  000456  0E09               	movlw	9
  4532  000458  266B               	addwf	??_ISR_timer0,f,c
  4533  00045A  0E00               	movlw	0
  4534  00045C  226C               	addwfc	??_ISR_timer0+1,f,c
  4535  00045E  504B               	movf	btemp,w,c
  4536  000460  266B               	addwf	??_ISR_timer0,f,c
  4537  000462  504C               	movf	btemp+1,w,c
  4538  000464  226C               	addwfc	??_ISR_timer0+1,f,c
  4539  000466  0E03               	movlw	3
  4540  000468  6EE6               	movwf	postinc1,c
  4541  00046A  0E00               	movlw	0
  4542  00046C  6EE6               	movwf	postinc1,c
  4543  00046E  C003  FFE6         	movff	_size,postinc1
  4544  000472  C004  FFE6         	movff	_size+1,postinc1
  4545  000476  ECD7  F00A         	call	___wmul	;wreg free
  4546  00047A  504B               	movf	btemp,w,c
  4547  00047C  246B               	addwf	??_ISR_timer0,w,c
  4548  00047E  6ED9               	movwf	fsr2l,c
  4549  000480  504C               	movf	btemp+1,w,c
  4550  000482  206C               	addwfc	??_ISR_timer0+1,w,c
  4551  000484  6EDA               	movwf	fsr2h,c
  4552  000486  50DF               	movf	indf2,w,c
  4553  000488  6EFF               	movwf	tosu,c	;volatile
  4554  00048A  0603               	decf	_size,f,c
  4555  00048C  A0D8               	btfss	status,0,c
  4556  00048E  0604               	decf	_size+1,f,c
  4557  000490                     i2l1725:
  4558  000490  5003               	movf	_size,w,c
  4559  000492  1004               	iorwf	_size+1,w,c
  4560  000494  A4D8               	btfss	status,2,c
  4561  000496  D780               	goto	i2l59
  4562  000498                     i2u61_40:
  4563                           
  4564                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  4565                           
  4566                           ;int0_test.c: 73:   }
  4567  000498  8EF2               	bsf	4082,7,c	;volatile
  4568  00049A  C07A  F056         	movff	??_ISR_timer0+15,btemp+11
  4569  00049E  C079  F055         	movff	??_ISR_timer0+14,btemp+10
  4570  0004A2  C078  F054         	movff	??_ISR_timer0+13,btemp+9
  4571  0004A6  C077  F053         	movff	??_ISR_timer0+12,btemp+8
  4572  0004AA  C076  F04C         	movff	??_ISR_timer0+11,btemp+1
  4573  0004AE  C075  F04B         	movff	??_ISR_timer0+10,btemp
  4574  0004B2  C074  FFF4         	movff	??_ISR_timer0+9,prodh
  4575  0004B6  C073  FFF3         	movff	??_ISR_timer0+8,prodl
  4576  0004BA  C072  FFDA         	movff	??_ISR_timer0+7,fsr2h
  4577  0004BE  C071  FFD9         	movff	??_ISR_timer0+6,fsr2l
  4578  0004C2  C070  FFE2         	movff	??_ISR_timer0+5,fsr1h
  4579  0004C6  C06F  FFE1         	movff	??_ISR_timer0+4,fsr1l
  4580  0004CA  0011               	retfie		f
  4581  0004CC                     __end_of_ISR_timer0:
  4582                           	opt callstack 0
  4583                           
  4584 ;; *************** function _delay_decrement *****************
  4585 ;; Defined at:
  4586 ;;		line 99 in file "kernel.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;		None
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  i               2  [STACK] int 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1  [STACK] void 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4600 ;;      Params:         0       0       0       0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0
  4603 ;;      Totals:         0       0       0       0       0       0       0
  4604 ;;Total ram usage:        0 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		_ISR_timer0
  4610 ;; This function uses a reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text27
  4614  000C60                     __ptext27:
  4615                           	opt callstack 0
  4616  000C60                     _delay_decrement:
  4617                           	opt callstack 0
  4618                           
  4619                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4620  000C60  52E6               	movf	postinc1,f,c
  4621  000C62  52E6               	movf	postinc1,f,c
  4622                           
  4623                           ;kernel.c: 100:   int i;;kernel.c: 102:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  4624                           ;stkvar	_i @ sp[(-2)+0]
  4625                           
  4626                           ;incstack = 0
  4627  000C64  0EFE               	movlw	-2
  4628  000C66  6AE3               	clrf	plusw1,c
  4629  000C68  0EFF               	movlw	-1
  4630  000C6A  6AE3               	clrf	plusw1,c
  4631  000C6C  D070               	goto	l1589
  4632  000C6E                     l1579:
  4633                           
  4634                           ;kernel.c: 103:     if (ready_queue.tasks[i].task_state == WAITING) {
  4635                           ;stkvar	_i @ sp[(-2)+0]
  4636  000C6E  0EFE               	movlw	-2
  4637  000C70  CFE3 F055          	movff	plusw1,btemp+10
  4638  000C74  0EFF               	movlw	-1
  4639  000C76  CFE3 F056          	movff	plusw1,btemp+11
  4640  000C7A  0E6C               	movlw	108
  4641  000C7C  0255               	mulwf	btemp+10,c
  4642  000C7E  CFF3 F053          	movff	prodl,btemp+8
  4643  000C82  CFF4 F054          	movff	prodh,btemp+9
  4644  000C86  0256               	mulwf	btemp+11,c
  4645  000C88  50F3               	movf	prodl,w,c
  4646  000C8A  2654               	addwf	btemp+9,f,c
  4647  000C8C  0EE8               	movlw	low (_ready_queue+8)
  4648  000C8E  2453               	addwf	btemp+8,w,c
  4649  000C90  6ED9               	movwf	fsr2l,c
  4650  000C92  0E01               	movlw	high (_ready_queue+8)
  4651  000C94  2054               	addwfc	btemp+9,w,c
  4652  000C96  6EDA               	movwf	fsr2h,c
  4653  000C98  0E02               	movlw	2
  4654  000C9A  18DE               	xorwf	postinc2,w,c
  4655  000C9C  A4D8               	btfss	status,2,c
  4656  000C9E  D048               	goto	l1587
  4657                           
  4658                           ;kernel.c: 104:       ready_queue.tasks[i].task_delay_time--;
  4659                           ;stkvar	_i @ sp[(-2)+0]
  4660  000CA0  0EFE               	movlw	-2
  4661  000CA2  CFE3 F055          	movff	plusw1,btemp+10
  4662  000CA6  0EFF               	movlw	-1
  4663  000CA8  CFE3 F056          	movff	plusw1,btemp+11
  4664  000CAC  0E6C               	movlw	108
  4665  000CAE  0255               	mulwf	btemp+10,c
  4666  000CB0  CFF3 F053          	movff	prodl,btemp+8
  4667  000CB4  CFF4 F054          	movff	prodh,btemp+9
  4668  000CB8  0256               	mulwf	btemp+11,c
  4669  000CBA  50F3               	movf	prodl,w,c
  4670  000CBC  2654               	addwf	btemp+9,f,c
  4671  000CBE  0E4A               	movlw	low (_ready_queue+106)
  4672  000CC0  2453               	addwf	btemp+8,w,c
  4673  000CC2  6ED9               	movwf	fsr2l,c
  4674  000CC4  0E02               	movlw	high (_ready_queue+106)
  4675  000CC6  2054               	addwfc	btemp+9,w,c
  4676  000CC8  6EDA               	movwf	fsr2h,c
  4677  000CCA  06DE               	decf	postinc2,f,c
  4678  000CCC  0E00               	movlw	0
  4679  000CCE  5ADD               	subwfb	postdec2,f,c
  4680                           
  4681                           ;kernel.c: 105:       if (ready_queue.tasks[i].task_delay_time == 0) {
  4682                           ;stkvar	_i @ sp[(-2)+0]
  4683  000CD0  0EFE               	movlw	-2
  4684  000CD2  CFE3 F055          	movff	plusw1,btemp+10
  4685  000CD6  0EFF               	movlw	-1
  4686  000CD8  CFE3 F056          	movff	plusw1,btemp+11
  4687  000CDC  0E6C               	movlw	108
  4688  000CDE  0255               	mulwf	btemp+10,c
  4689  000CE0  CFF3 F053          	movff	prodl,btemp+8
  4690  000CE4  CFF4 F054          	movff	prodh,btemp+9
  4691  000CE8  0256               	mulwf	btemp+11,c
  4692  000CEA  50F3               	movf	prodl,w,c
  4693  000CEC  2654               	addwf	btemp+9,f,c
  4694  000CEE  0E4A               	movlw	low (_ready_queue+106)
  4695  000CF0  2453               	addwf	btemp+8,w,c
  4696  000CF2  6ED9               	movwf	fsr2l,c
  4697  000CF4  0E02               	movlw	high (_ready_queue+106)
  4698  000CF6  2054               	addwfc	btemp+9,w,c
  4699  000CF8  6EDA               	movwf	fsr2h,c
  4700  000CFA  50DE               	movf	postinc2,w,c
  4701  000CFC  10DE               	iorwf	postinc2,w,c
  4702  000CFE  A4D8               	btfss	status,2,c
  4703  000D00  D017               	goto	l1587
  4704                           
  4705                           ;kernel.c: 106:         ready_queue.tasks[i].task_state = READY;
  4706                           ;stkvar	_i @ sp[(-2)+0]
  4707  000D02  0EFE               	movlw	-2
  4708  000D04  CFE3 F055          	movff	plusw1,btemp+10
  4709  000D08  0EFF               	movlw	-1
  4710  000D0A  CFE3 F056          	movff	plusw1,btemp+11
  4711  000D0E  0E6C               	movlw	108
  4712  000D10  0255               	mulwf	btemp+10,c
  4713  000D12  CFF3 F053          	movff	prodl,btemp+8
  4714  000D16  CFF4 F054          	movff	prodh,btemp+9
  4715  000D1A  0256               	mulwf	btemp+11,c
  4716  000D1C  50F3               	movf	prodl,w,c
  4717  000D1E  2654               	addwf	btemp+9,f,c
  4718  000D20  0EE8               	movlw	low (_ready_queue+8)
  4719  000D22  2453               	addwf	btemp+8,w,c
  4720  000D24  6ED9               	movwf	fsr2l,c
  4721  000D26  0E01               	movlw	high (_ready_queue+8)
  4722  000D28  2054               	addwfc	btemp+9,w,c
  4723  000D2A  6EDA               	movwf	fsr2h,c
  4724  000D2C  0E00               	movlw	0
  4725  000D2E  6EDF               	movwf	indf2,c
  4726  000D30                     l1587:
  4727                           
  4728                           ;kernel.c: 113:   }
  4729                           ;stkvar	_i @ sp[(-2)+0]
  4730  000D30  0EFE               	movlw	-2
  4731  000D32  50E3               	movf	plusw1,w,c
  4732  000D34  0F01               	addlw	1
  4733  000D36  6E4B               	movwf	btemp,c
  4734  000D38  0EFE               	movlw	-2
  4735  000D3A  C04B  FFE3         	movff	btemp,plusw1
  4736  000D3E  6A4B               	clrf	btemp,c
  4737  000D40  0EFF               	movlw	-1
  4738  000D42  50E3               	movf	plusw1,w,c
  4739  000D44  204B               	addwfc	btemp,w,c
  4740  000D46  6E4B               	movwf	btemp,c
  4741  000D48  0EFF               	movlw	-1
  4742  000D4A  C04B  FFE3         	movff	btemp,plusw1
  4743  000D4E                     l1589:
  4744  000D4E  EE23  F0FC         	lfsr	2,_ready_queue+540
  4745                           
  4746                           ;stkvar	_i @ sp[(-2)+0]
  4747  000D52  0EFE               	movlw	-2
  4748  000D54  CFE3 F04B          	movff	plusw1,btemp
  4749  000D58  50DE               	movf	postinc2,w,c
  4750  000D5A  5C4B               	subwf	btemp,w,c
  4751  000D5C  0EFF               	movlw	-1
  4752  000D5E  CFE3 F04B          	movff	plusw1,btemp
  4753  000D62  50DE               	movf	postinc2,w,c
  4754  000D64  584B               	subwfb	btemp,w,c
  4755  000D66  A0D8               	btfss	status,0,c
  4756  000D68  D782               	goto	l1579
  4757                           
  4758                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  4759  000D6A  52E5               	movf	postdec1,f,c
  4760  000D6C  52E5               	movf	postdec1,f,c
  4761  000D6E  0012               	return		;funcret
  4762  000D70                     __end_of_delay_decrement:
  4763                           	opt callstack 0
  4764                           
  4765 ;; *************** function ___wmul *****************
  4766 ;; Defined at:
  4767 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  multiplier      2  [STACK] unsigned int 
  4770 ;;  multiplicand    2  [STACK] unsigned int 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  product         2  [STACK] unsigned int 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2  [STACK] unsigned int 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4782 ;;      Params:         0       0       0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0
  4785 ;;      Totals:         0       0       0       0       0       0       0
  4786 ;;Total ram usage:        0 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_ISR_timer0
  4792 ;; This function uses a reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text28
  4796  0015AE                     __ptext28:
  4797                           	opt callstack 0
  4798  0015AE                     ___wmul:
  4799                           	opt callstack 0
  4800                           
  4801                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4802  0015AE  52E6               	movf	postinc1,f,c
  4803  0015B0  52E6               	movf	postinc1,f,c
  4804                           
  4805                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4806                           
  4807                           ;incstack = 0
  4808  0015B2  0EFA               	movlw	-6
  4809  0015B4  CFE3 F056          	movff	plusw1,btemp+11
  4810                           
  4811                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4812  0015B8  0EFC               	movlw	-4
  4813  0015BA  50E3               	movf	plusw1,w,c
  4814  0015BC  0256               	mulwf	btemp+11,c
  4815                           
  4816                           ;stkvar	_product @ sp[(-2)+0]
  4817  0015BE  0EFE               	movlw	-2
  4818  0015C0  CFF3 FFE3          	movff	prodl,plusw1
  4819  0015C4  0EFF               	movlw	-1
  4820  0015C6  CFF4 FFE3          	movff	prodh,plusw1
  4821                           
  4822                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4823  0015CA  0EFB               	movlw	251
  4824  0015CC  24E1               	addwf	fsr1l,w,c
  4825  0015CE  6ED9               	movwf	fsr2l,c
  4826  0015D0  0EFF               	movlw	255
  4827  0015D2  20E2               	addwfc	fsr1h,w,c
  4828  0015D4  6EDA               	movwf	fsr2h,c
  4829  0015D6  50DF               	movf	indf2,w,c
  4830  0015D8  6E56               	movwf	btemp+11,c
  4831                           
  4832                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4833  0015DA  0EFC               	movlw	-4
  4834  0015DC  50E3               	movf	plusw1,w,c
  4835  0015DE  0256               	mulwf	btemp+11,c
  4836  0015E0  CFF3 FFF4          	movff	prodl,prodh
  4837  0015E4  6AF3               	clrf	prodl,c
  4838                           
  4839                           ;stkvar	_product @ sp[(-2)+0]
  4840  0015E6  50E1               	movf	fsr1l,w,c
  4841  0015E8  0FFE               	addlw	-2
  4842  0015EA  6ED9               	movwf	fsr2l,c
  4843  0015EC  50E2               	movf	fsr1h,w,c
  4844  0015EE  6EDA               	movwf	fsr2h,c
  4845  0015F0  0EFF               	movlw	255
  4846  0015F2  22DA               	addwfc	fsr2h,f,c
  4847  0015F4  50F3               	movf	prodl,w,c
  4848  0015F6  26DE               	addwf	postinc2,f,c
  4849  0015F8  50F4               	movf	prodh,w,c
  4850  0015FA  22DD               	addwfc	postdec2,f,c
  4851                           
  4852                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4853  0015FC  0EFA               	movlw	-6
  4854  0015FE  CFE3 F056          	movff	plusw1,btemp+11
  4855                           
  4856                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4857  001602  0EFD               	movlw	253
  4858  001604  24E1               	addwf	fsr1l,w,c
  4859  001606  6ED9               	movwf	fsr2l,c
  4860  001608  0EFF               	movlw	255
  4861  00160A  20E2               	addwfc	fsr1h,w,c
  4862  00160C  6EDA               	movwf	fsr2h,c
  4863  00160E  50DF               	movf	indf2,w,c
  4864  001610  0256               	mulwf	btemp+11,c
  4865  001612  CFF3 FFF4          	movff	prodl,prodh
  4866  001616  6AF3               	clrf	prodl,c
  4867                           
  4868                           ;stkvar	_product @ sp[(-2)+0]
  4869  001618  50E1               	movf	fsr1l,w,c
  4870  00161A  0FFE               	addlw	-2
  4871  00161C  6ED9               	movwf	fsr2l,c
  4872  00161E  50E2               	movf	fsr1h,w,c
  4873  001620  6EDA               	movwf	fsr2h,c
  4874  001622  0EFF               	movlw	255
  4875  001624  22DA               	addwfc	fsr2h,f,c
  4876  001626  50F3               	movf	prodl,w,c
  4877  001628  26DE               	addwf	postinc2,f,c
  4878  00162A  50F4               	movf	prodh,w,c
  4879  00162C  22DD               	addwfc	postdec2,f,c
  4880                           
  4881                           ;stkvar	_product @ sp[(-2)+0]
  4882  00162E  0EFE               	movlw	-2
  4883  001630  CFE3 F04B          	movff	plusw1,btemp
  4884  001634  0EFF               	movlw	-1
  4885  001636  CFE3 F04C          	movff	plusw1,btemp+1
  4886                           
  4887                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  4888  00163A  0EFA               	movlw	250
  4889  00163C  26E1               	addwf	fsr1l,f,c
  4890  00163E  0EFF               	movlw	255
  4891  001640  22E2               	addwfc	fsr1h,f,c
  4892  001642  0012               	return		;funcret
  4893  001644                     __end_of___wmul:
  4894                           	opt callstack 0
  4895  0000                     
  4896                           	psect	text29
  4897  000000                     __ptext29:
  4898                           	opt callstack 0
  4899                           
  4900                           	psect	rparam
  4901  0000                     
  4902                           	psect	temp
  4903  00004B                     btemp:
  4904                           	opt callstack 0
  4905  00004B                     	ds	32
  4906  0000                     wtemp0	set	btemp
  4907  0000                     wtemp1	set	btemp+2
  4908  0000                     wtemp2	set	btemp+4
  4909  0000                     wtemp3	set	btemp+6
  4910  0000                     wtemp4	set	btemp+8
  4911  0000                     wtemp5	set	btemp+10
  4912  0000                     wtemp8	set	btemp+1
  4913  0000                     ttemp0	set	btemp
  4914  0000                     ttemp1	set	btemp+3
  4915  0000                     ttemp2	set	btemp+6
  4916  0000                     ttemp3	set	btemp+9
  4917  0000                     ttemp5	set	btemp+1
  4918  0000                     ttemp6	set	btemp+4
  4919  0000                     ttemp7	set	btemp+8
  4920  0000                     ltemp0	set	btemp
  4921  0000                     ltemp1	set	btemp+4
  4922  0000                     ltemp2	set	btemp+8
  4923  0000                     lltemp0	set	btemp
  4924  0000                     lltemp1	set	btemp+8
  4925  0000                     lltemp2	set	btemp+16
  4926  0000                     lltemp3	set	btemp+24
  4927                           tosu	equ	0xFFF
  4928                           tosh	equ	0xFFE
  4929                           tosl	equ	0xFFD
  4930                           stkptr	equ	0xFFC
  4931                           pclatu	equ	0xFFB
  4932                           pclath	equ	0xFFA
  4933                           pcl	equ	0xFF9
  4934                           tblptru	equ	0xFF8
  4935                           tblptrh	equ	0xFF7
  4936                           tblptrl	equ	0xFF6
  4937                           tablat	equ	0xFF5
  4938                           prodh	equ	0xFF4
  4939                           prodl	equ	0xFF3
  4940                           indf0	equ	0xFEF
  4941                           postinc0	equ	0xFEE
  4942                           postdec0	equ	0xFED
  4943                           preinc0	equ	0xFEC
  4944                           plusw0	equ	0xFEB
  4945                           fsr0h	equ	0xFEA
  4946                           fsr0l	equ	0xFE9
  4947                           wreg	equ	0xFE8
  4948                           indf1	equ	0xFE7
  4949                           postinc1	equ	0xFE6
  4950                           postdec1	equ	0xFE5
  4951                           preinc1	equ	0xFE4
  4952                           plusw1	equ	0xFE3
  4953                           fsr1h	equ	0xFE2
  4954                           fsr1l	equ	0xFE1
  4955                           bsr	equ	0xFE0
  4956                           indf2	equ	0xFDF
  4957                           postinc2	equ	0xFDE
  4958                           postdec2	equ	0xFDD
  4959                           preinc2	equ	0xFDC
  4960                           plusw2	equ	0xFDB
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1130
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      92
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    mem	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(COMRAM[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(COMRAM[14]), w_pipe(COMRAM[14]), teste_2(COMRAM[14]), teste_1(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(COMRAM[14]), w_pipe(COMRAM[14]), teste_2(COMRAM[14]), teste_1(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(COMRAM[14]), w_pipe(COMRAM[14]), teste_2(COMRAM[14]), teste_1(COMRAM[14]), 

    data	PTR unsigned int  size(2) Largest target is 2
		 -> dado(STACK[2]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(COMRAM[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(COMRAM[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(COMRAM[14]), 

    w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    S533pipe$r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(COMRAM[14]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(COMRAM[14]), 

    S533pipe$w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2(), task_1(), task_0(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2(), task_1(), task_0(), task_idle(), 

    S258pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2(), task_1(), task_0(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2(), task_1(), task_0(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_0 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_0 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_bozo in COMRAM

    None.

Critical Paths under _task_xuxa in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_0 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_0 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_bozo in BANK0

    None.

Critical Paths under _task_xuxa in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_0 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_0 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_bozo in BANK1

    None.

Critical Paths under _task_xuxa in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_0 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_0 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_bozo in BANK2

    None.

Critical Paths under _task_xuxa in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_0 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_0 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_bozo in BANK3

    None.

Critical Paths under _task_xuxa in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_0 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_0 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_bozo in BANK4

    None.

Critical Paths under _task_xuxa in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_0 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_0 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_bozo in BANK5

    None.

Critical Paths under _task_xuxa in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1599
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0     840
                          _SRAMalloc
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _pipe_create                                          6     0      6     180
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _sem_init                                             4     0      4      60
 ---------------------------------------------------------------------------------
 (2) _SRAMalloc                                            7     6      1     600
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (3) __SRAMmerge                                           7     5      2     270
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     323
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   112   108      4     187
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_0                                               0     0      0     960
                    _lunos_delayTask
                         _pipe_write
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_1                                               2     2      0     984
                    _lunos_delayTask
                          _pipe_read
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_2                                               0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_0                                               0     0      0     960
                    _lunos_delayTask
                         _pipe_write
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_1                                               2     2      0     984
                    _lunos_delayTask
                          _pipe_read
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_2                                               0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_bozo                                            2     2      0     625
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_xuxa                                            2     2      0     874
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer0                                         16    16      0     498
                                              0 COMRAM    16    16      0
                             ___wmul
                    _delay_decrement
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (13) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _user_conf
     _SRAMalloc
       __SRAMmerge
     _pipe_create
       _sem_init
     _sem_init

 _task_idle (ROOT)

 _task_0 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_1 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_2 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_0 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_1 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_2 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_bozo (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_xuxa (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   _delay_decrement
   _round_robin
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     420      17       68.8%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      5C       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5C      15        0.0%
DATA                 0      0     47C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 25 19:21:02 2019

                        _p 003F   __end_of_lunos_createTask 1188                         u10 0B74  
                      l127 0846                        l311 0B04                        l182 1870  
                      l276 18C8                        l296 1438                        l288 16D8  
                      _BSR 000FE0                        u110 0984                        u150 0A1C  
                      u411 116C                        u440 096A                        u450 13AA  
                      u470 1532                        u490 1598                        _TOS 000FFD  
                      _mem 0001                        _who 0005                _round_robin 1644  
                      wreg 000FE8               __CFG_WDT$OFF 000000                       l1201 0A82  
                     l1045 0B78                       l1171 098E                       l1077 0C40  
                     l1173 09A2                       l1191 0A48                       l1513 06A0  
                     l1509 0586                       l1541 1396                       l1535 0962  
                     l1529 076C                       l1651 1276                       l1549 13F0  
                     l1639 135E                       l1559 150A                       l1569 157A  
                     l1593 1654                       l1587 0D30                       l1579 0C6E  
                     l1589 0D4E                       l1783 144C                       l1767 16EC  
                     l1787 1484                       i2l59 0398                       _TOSH 000FFE  
                     _TOSL 000FFD                       _WREG 000FE8                       _TOSU 000FFF  
                     _main 181C                       _size 0003                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 004B                       prodh 000FF4                       prodl 000FF3  
                     start 000C               ___param_bank 000000            __end_of___lwmod 15AE  
                    _TMR0L 000FD6                      u62_20 192C                      u62_26 192E  
                    u63_20 18F0                      u55_20 11BA                      u63_26 18F2  
                    u64_20 19C8                      u64_26 19CA                      u65_20 1744  
                    _TRISB 000F93                      u67_20 1470                      u67_26 1472  
                    u68_20 148C                      u68_26 148E                      u69_20 14E4  
              ?_ISR_timer0 006B                 __SRAMmerge 0B0E         __size_of_SRAMalloc 019E  
                    tablat 000FF5                      ltemp0 004B                      ltemp1 004F  
                    ltemp2 0053                      plusw0 000FEB                      plusw1 000FE3  
                    plusw2 000FDB                      ttemp0 004B                      ttemp1 004E  
                    ttemp2 0051                      ttemp3 0054                      ttemp5 004C  
                    ttemp6 004F                      ttemp7 0053                      status 000FD8  
                    wtemp0 004B                      wtemp1 004D                      wtemp2 004F  
                    wtemp3 0051                      wtemp4 0053                      wtemp5 0055  
                    wtemp8 004C   __size_of_delay_decrement 0110            __initialization 1950  
             __end_of_main 1872              __activetblptr 000000                     i2l1703 0222  
                   i2l1725 0490                     i2l1719 02DC                     i2l1699 012C  
                   _STATUS 000FD8                     _STKPTR 000FFC       __size_of_config_INT0 0010  
      __size_of_ISR_timer0 04C4                     ___wmul 15AE          __end_of_SRAMalloc 0B0E  
                   clear_0 1970                     clear_1 1982                     _r_pipe 0007  
                   _task_0 1910                     _task_1 18C4                     _task_2 19C0  
                   _w_pipe 0015           __end_of_sem_init 17C2           __end_of_sem_wait 1366  
         __end_of_sem_post 127E               __pdataCOMRAM 007B                     lltemp0 004B  
                   lltemp1 0053                     lltemp2 005B                     lltemp3 0063  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0080    __end_of__initialization 1988            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001             __pcstackCOMRAM 006B                 ___inthi_sp 00F6  
            __uDynamicHeap 0400         __size_of_scheduler 0006        __size_of__SRAMmerge 0152  
       __size_of_pipe_read 0108         __size_of_task_idle 0004         __size_of_task_bozo 007E  
       __size_of_task_xuxa 00BE               ??_ISR_timer0 006B                    i2u61_40 0498  
                  i2u57_40 005E                    i2u57_46 0060                    i2u58_40 0086  
                  i2u58_41 0084                 _dispatcher 04CC            _lunos_delayTask 1872  
     __size_of_pipe_create 010E         __size_of_user_conf 005A                    __Hparam 0000  
                  __Lparam 0000            __size_of___wmul 0096         __end_of_ISR_timer0 04CC  
                  ___lwmod 14F2                    __pcinit 1950                    __ramtop 0600  
          __size_of_task_0 0040            __size_of_task_1 004C            __size_of_task_2 002A  
                  __ptext0 181C                    __ptext1 17C2                    __ptext2 0D70  
                  __ptext3 1752                    __ptext4 0970                    __ptext5 0B0E  
                  __ptext6 198E                    __ptext7 1090                    __ptext8 1366  
                  __ptext9 04CC                  _T0CONbits 000FD5                    _teste_1 0031  
                  _teste_2 0023                    _quantum 007B          __end_of_scheduler 1A12  
           __pintcode_body 0014       end_of_initialization 1988          __end_of_pipe_read 1090  
        __end_of_task_idle 1A16          __end_of_task_bozo 1752                    int_func 0014  
        __end_of_task_xuxa 14F2                 _pipe_write 0E7E      __end_of_config_timer0 19FC  
                  postdec0 000FED                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               _lunos_init 198E          __end_of_user_conf 181C                  _PORTBbits 000F81  
                _PORTDbits 000F83    __end_of_lunos_delayTask 18C4                  _SRAMalloc 0970  
                _TRISDbits 000F95       __size_of_round_robin 0090            _delay_decrement 0C60  
       __end_of__SRAMmerge 0C60             __end_of___wmul 1644              __pidataCOMRAM 1A16  
           __end_of_task_0 1950             __end_of_task_1 1910             __end_of_task_2 19EA  
      start_initialization 1950  __size_of_lunos_createTask 00F8        __end_of_config_INT0 1A0C  
      __size_of_dispatcher 04A4                __pbssBIGRAM 01E0                __pbssCOMRAM 0001  
  __end_of_delay_decrement 0D70       __end_of_SRAMInitHeap 1434                  __pintcode 0008  
        __size_of_sem_init 0070          __size_of_sem_wait 00E8          __size_of_sem_post 00F6  
      __size_of_pipe_write 010A        __size_of_lunos_init 0032                  _scheduler 1A0C  
              _config_INT0 19FC                  _pipe_read 0F88                  _task_idle 1A12  
                _task_bozo 16D4                  _task_xuxa 1434                  _user_conf 17C2  
         _lunos_createTask 1090                _INTCON2bits 000FF1        __end_of_pipe_create 0E7E  
                 __Hrparam 0000                   __Lrparam 0000         __end_of_dispatcher 0970  
         __size_of___lwmod 00BC     __size_of_config_timer0 0012      __size_of_SRAMInitHeap 00CE  
                 __ptext10 1A0C                   __ptext11 1644                   __ptext20 1872  
                 __ptext12 14F2                   __ptext21 18C4                   __ptext13 19EA  
                 __ptext22 0F88                   __ptext14 19FC                   __ptext23 19C0  
                 __ptext15 1A12                   __ptext24 16D4                   __ptext16 1910  
                 __ptext25 1434                   __ptext17 0E7E                   __ptext18 127E  
                 __ptext27 0C60                   __ptext19 1188                   __ptext28 15AE  
                 __ptext29 0000              __size_of_main 0056                _ready_queue 01E0  
                 _sem_init 1752                   _sem_wait 127E                   _sem_post 1188  
             _SRAMInitHeap 1366                 _INTCONbits 000FF2         __end_of_pipe_write 0F88  
              _pipe_create 0D70        __end_of_round_robin 16D4                   intlevel1 0000  
                 intlevel2 0000         __end_of_lunos_init 19C0              _config_timer0 19EA  
               _ISR_timer0 0008   __size_of_lunos_delayTask 0052  
