

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun  5 15:56:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 2.05
    53                           ; Generated 20/12/2018 GMT
    54                           ; 
    55                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87 ;;_p	offset=-2 (param)
    88 ;;_w	offset=-4 (param)
    89 ;;_r	offset=-6 (param)
    90 ;;_s	offset=-2 (param)
    91 ;;_valor	offset=-4 (param)
    92 ;;_pHeap	offset	0
    93 ;;_temp	offset	2
    94 ;;_segHeader	offset	4
    95 ;;_segLen	offset	5
    96 ;;_nBytes	offset=-1 (param)
    97 ;;_pSegB	offset	0
    98 ;;_uSegB	offset	2
    99 ;;_uSegA	offset	3
   100 ;;_uSum	offset	4
   101 ;;_pSegA	offset=-2 (param)
   102 ;;_new_task	offset	0
   103 ;;_prior	offset=-2 (param)
   104 ;;_f	offset=-4 (param)
   105 ;;_count	offset	0
   106 ;;_pHeap	offset	2
   107 ;;_state	offset=-1 (param)
   108 ;;_next_task_to_run	offset	0
   109 ;;_counter	offset	0
   110 ;;_dividend	offset=-2 (param)
   111 ;;_divisor	offset=-4 (param)
   112 ;;_bottle	offset	0
   113 ;;_s	offset=-2 (param)
   114 ;;_s	offset=-2 (param)
   115 ;;_time	offset=-2 (param)
   116 ;;_state	offset=-1 (param)
   117 ;;_next_task_to_run	offset	0
   118 ;;_counter	offset	0
   119 ;;_dividend	offset=-2 (param)
   120 ;;_divisor	offset=-4 (param)
   121 ;;_p	offset=-2 (param)
   122 ;;_data	offset=-4 (param)
   123 ;;_count	offset	0
   124 ;;_p	offset=-2 (param)
   125 ;;_data	offset=-4 (param)
   126 ;;_dado	offset	0
   127 ;;_i	offset	0
   128 ;;_i	offset	0
   129 ;;_next_task_to_run	offset	0
   130 ;;_counter	offset	0
   131 ;;_dividend	offset=-2 (param)
   132 ;;_divisor	offset=-4 (param)
   133 ;;_i	offset	0
   134 ;;_product	offset	0
   135 ;;_multiplier	offset=-2 (param)
   136 ;;_multiplicand	offset=-4 (param)
   137                           
   138                           	psect	idataCOMRAM
   139  001BFC                     __pidataCOMRAM:
   140                           	opt callstack 0
   141                           
   142                           ;initializer for _quantum
   143  001BFC  000A               	dw	10
   144  0000                     _TOS	set	4093
   145  0000                     _PORTBbits	set	3969
   146  0000                     _PORTCbits	set	3970
   147  0000                     _TRISD	set	3989
   148  0000                     _TRISC	set	3988
   149  0000                     _TRISB	set	3987
   150  0000                     _STKPTR	set	4092
   151  0000                     _TOSL	set	4093
   152  0000                     _TOSH	set	4094
   153  0000                     _TOSU	set	4095
   154  0000                     _BSR	set	4064
   155  0000                     _STATUS	set	4056
   156  0000                     _WREG	set	4072
   157  0000                     _PORTDbits	set	3971
   158  0000                     _TMR0L	set	4054
   159  0000                     _T0CONbits	set	4053
   160  0000                     _INTCON2bits	set	4081
   161  0000                     _INTCONbits	set	4082
   162  0000                     _TRISDbits	set	3989
   163                           
   164                           ; #config settings
   165  0000                     
   166                           	psect	cinit
   167  001A4E                     __pcinit:
   168                           	opt callstack 0
   169  001A4E                     start_initialization:
   170                           	opt callstack 0
   171  001A4E                     __initialization:
   172                           	opt callstack 0
   173                           
   174                           ; Initialize objects allocated to COMRAM (2 bytes)
   175                           ; load TBLPTR registers with __pidataCOMRAM
   176  001A4E  0EFC               	movlw	low __pidataCOMRAM
   177  001A50  6EF6               	movwf	tblptrl,c
   178  001A52  0E1B               	movlw	high __pidataCOMRAM
   179  001A54  6EF7               	movwf	tblptrh,c
   180  001A56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   181  001A58  6EF8               	movwf	tblptru,c
   182  001A5A  0009               	tblrd		*+	;fetch initializer
   183  001A5C  CFF5 F073          	movff	tablat,__pdataCOMRAM
   184  001A60  0009               	tblrd		*+	;fetch initializer
   185  001A62  CFF5 F074          	movff	tablat,__pdataCOMRAM+1
   186                           
   187                           ; Clear objects allocated to BIGRAM (1056 bytes)
   188  001A66  EE00  F0D4         	lfsr	0,__pbssBIGRAM
   189  001A6A  EE24 F020          	lfsr	2,1056
   190  001A6E                     clear_0:
   191  001A6E  6AEE               	clrf	postinc0,c
   192  001A70  50DD               	movf	postdec2,w,c
   193  001A72  50D9               	movf	fsr2l,w,c
   194  001A74  E1FC               	bnz	clear_0
   195  001A76  50DA               	movf	fsr2h,w,c
   196  001A78  E1FA               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to BANK0 (84 bytes)
   199  001A7A  EE00  F080         	lfsr	0,__pbssBANK0
   200  001A7E  0E54               	movlw	84
   201  001A80                     clear_1:
   202  001A80  6AEE               	clrf	postinc0,c
   203  001A82  06E8               	decf	wreg,f,c
   204  001A84  E1FD               	bnz	clear_1
   205                           
   206                           ; Clear objects allocated to COMRAM (66 bytes)
   207  001A86  EE00  F001         	lfsr	0,__pbssCOMRAM
   208  001A8A  0E42               	movlw	66
   209  001A8C                     clear_2:
   210  001A8C  6AEE               	clrf	postinc0,c
   211  001A8E  06E8               	decf	wreg,f,c
   212  001A90  E1FD               	bnz	clear_2
   213  001A92                     end_of_initialization:
   214                           	opt callstack 0
   215  001A92                     __end_of__initialization:
   216                           	opt callstack 0
   217  001A92  0100               	movlb	0
   218  001A94  EFC2  F00B         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMRAM
   221  000001                     __pbssCOMRAM:
   222                           	opt callstack 0
   223  000001                     _global_buffer:
   224                           	opt callstack 0
   225  000001                     	ds	6
   226  000007                     _mem:
   227                           	opt callstack 0
   228  000007                     	ds	2
   229  000009                     _size:
   230                           	opt callstack 0
   231  000009                     	ds	2
   232  00000B                     _who:
   233                           	opt callstack 0
   234  00000B                     	ds	2
   235  00000D                     _check_sem:
   236                           	opt callstack 0
   237  00000D                     	ds	14
   238  00001B                     _fill_sem:
   239                           	opt callstack 0
   240  00001B                     	ds	14
   241  000029                     _count_sem:
   242                           	opt callstack 0
   243  000029                     	ds	14
   244  000037                     _p:
   245                           	opt callstack 0
   246  000037                     	ds	12
   247                           
   248                           	psect	dataCOMRAM
   249  000073                     __pdataCOMRAM:
   250                           	opt callstack 0
   251  000073                     _quantum:
   252                           	opt callstack 0
   253  000073                     	ds	2
   254                           
   255                           	psect	bssBANK0
   256  000080                     __pbssBANK0:
   257                           	opt callstack 0
   258  000080                     _out_sem:
   259                           	opt callstack 0
   260  000080                     	ds	14
   261  00008E                     _cover_sem:
   262                           	opt callstack 0
   263  00008E                     	ds	14
   264  00009C                     _r_pipe:
   265                           	opt callstack 0
   266  00009C                     	ds	14
   267  0000AA                     _w_pipe:
   268                           	opt callstack 0
   269  0000AA                     	ds	14
   270  0000B8                     _teste_2:
   271                           	opt callstack 0
   272  0000B8                     	ds	14
   273  0000C6                     _teste_1:
   274                           	opt callstack 0
   275  0000C6                     	ds	14
   276                           
   277                           	psect	bssBIGRAM
   278  0000D4                     __pbssBIGRAM:
   279                           	opt callstack 0
   280  0000D4                     _ready_queue:
   281                           	opt callstack 0
   282  0000D4                     	ds	544
   283  0002F4                     __uDynamicHeap:
   284                           	opt callstack 0
   285  0002F4                     	ds	512
   286                           
   287                           	psect	cstackCOMRAM
   288  000063                     __pcstackCOMRAM:
   289                           	opt callstack 0
   290  000063                     ??_ISR_timer0:
   291                           
   292                           ; 1 bytes @ 0x0
   293  000063                     	ds	16
   294                           
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 16 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1  [STACK] void 
   307 ;; Registers used:
   308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   314 ;;      Params:         0       0       0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels required when called:   14
   320 ;; This function calls:
   321 ;;		_config_INT0
   322 ;;		_config_timer0
   323 ;;		_dispatcher
   324 ;;		_lunos_createTask
   325 ;;		_lunos_init
   326 ;;		_user_conf
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a reentrant model
   330 ;;
   331                           
   332                           	psect	text0
   333  001784                     __ptext0:
   334                           	opt callstack 0
   335  001784                     _main:
   336                           	opt callstack 17
   337                           
   338                           ;main.c: 18:   lunos_createTask(5, &check_level);
   339                           
   340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   341                           ;incstack = 0
   342  001784  ECA6  F00D         	call	_lunos_init	;wreg free
   343                           
   344                           ;main.c: 20:   lunos_createTask(7, &count_out);
   345  001788  ECD7  F00A         	call	_user_conf	;wreg free
   346                           
   347                           ;main.c: 21: 
   348  00178C  ECF1  F00D         	call	_config_INT0	;wreg free
   349                           
   350                           ;main.c: 22: 
   351  001790  ECE8  F00D         	call	_config_timer0	;wreg free
   352                           
   353                           ;main.c: 30: }
   354  001794  0EF0               	movlw	low _count_bottles
   355  001796  6EE6               	movwf	postinc1,c
   356  001798  0E18               	movlw	high _count_bottles
   357  00179A  6EE6               	movwf	postinc1,c
   358  00179C  0E03               	movlw	3
   359  00179E  6EE6               	movwf	postinc1,c
   360  0017A0  0E00               	movlw	0
   361  0017A2  6EE6               	movwf	postinc1,c
   362  0017A4  EC48  F008         	call	_lunos_createTask	;wreg free
   363  0017A8  0EA8               	movlw	low _fill_bottle
   364  0017AA  6EE6               	movwf	postinc1,c
   365  0017AC  0E1B               	movlw	high _fill_bottle
   366  0017AE  6EE6               	movwf	postinc1,c
   367  0017B0  0E04               	movlw	4
   368  0017B2  6EE6               	movwf	postinc1,c
   369  0017B4  0E00               	movlw	0
   370  0017B6  6EE6               	movwf	postinc1,c
   371  0017B8  EC48  F008         	call	_lunos_createTask	;wreg free
   372  0017BC  0E98               	movlw	low _check_level
   373  0017BE  6EE6               	movwf	postinc1,c
   374  0017C0  0E1A               	movlw	high _check_level
   375  0017C2  6EE6               	movwf	postinc1,c
   376  0017C4  0E05               	movlw	5
   377  0017C6  6EE6               	movwf	postinc1,c
   378  0017C8  0E00               	movlw	0
   379  0017CA  6EE6               	movwf	postinc1,c
   380  0017CC  EC48  F008         	call	_lunos_createTask	;wreg free
   381  0017D0  0EB0               	movlw	low _cover_bottle
   382  0017D2  6EE6               	movwf	postinc1,c
   383  0017D4  0E19               	movlw	high _cover_bottle
   384  0017D6  6EE6               	movwf	postinc1,c
   385  0017D8  0E06               	movlw	6
   386  0017DA  6EE6               	movwf	postinc1,c
   387  0017DC  0E00               	movlw	0
   388  0017DE  6EE6               	movwf	postinc1,c
   389  0017E0  EC48  F008         	call	_lunos_createTask	;wreg free
   390  0017E4  0E18               	movlw	low _count_out
   391  0017E6  6EE6               	movwf	postinc1,c
   392  0017E8  0E1B               	movlw	high _count_out
   393  0017EA  6EE6               	movwf	postinc1,c
   394  0017EC  0E07               	movlw	7
   395  0017EE  6EE6               	movwf	postinc1,c
   396  0017F0  0E00               	movlw	0
   397  0017F2  6EE6               	movwf	postinc1,c
   398  0017F4  EC48  F008         	call	_lunos_createTask	;wreg free
   399  0017F8  0E00               	movlw	0
   400  0017FA  6EE6               	movwf	postinc1,c
   401  0017FC  EC66  F002         	call	_dispatcher	;wreg free
   402  001800                     l186:
   403  001800  D7FF               	goto	l186
   404  001802                     __end_of_main:
   405                           	opt callstack 0
   406                           
   407 ;; *************** function _user_conf *****************
   408 ;; Defined at:
   409 ;;		line 21 in file "tasks.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1  [STACK] void 
   416 ;; Registers used:
   417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   423 ;;      Params:         0       0       0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:   12
   430 ;; This function calls:
   431 ;;		_SRAMalloc
   432 ;;		_pipe_create
   433 ;;		_sem_init
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a reentrant model
   437 ;;
   438                           
   439                           	psect	text1
   440  0015AE                     __ptext1:
   441                           	opt callstack 0
   442  0015AE                     _user_conf:
   443                           	opt callstack 18
   444                           
   445                           ;tasks.c: 22:   TRISB = 0b00000001;
   446                           
   447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   448                           ;incstack = 0
   449  0015AE  0E01               	movlw	1
   450  0015B0  6E93               	movwf	3987,c	;volatile
   451                           
   452                           ;tasks.c: 23:   TRISC = 0b01111111;
   453  0015B2  0E7F               	movlw	127
   454  0015B4  6E94               	movwf	3988,c	;volatile
   455                           
   456                           ;tasks.c: 24:   TRISD = 0b11110001;
   457  0015B6  0EF1               	movlw	241
   458  0015B8  6E95               	movwf	3989,c	;volatile
   459                           
   460                           ;tasks.c: 25:   PORTCbits.RC7 = 1;
   461  0015BA  8E82               	bsf	3970,7,c	;volatile
   462                           
   463                           ;tasks.c: 27:   PORTDbits.RD4 = 1;
   464  0015BC  8883               	bsf	3971,4,c	;volatile
   465                           
   466                           ;tasks.c: 28:   PORTDbits.RD5 = 1;
   467  0015BE  8A83               	bsf	3971,5,c	;volatile
   468                           
   469                           ;tasks.c: 29:   PORTDbits.RD6 = 1;
   470  0015C0  8C83               	bsf	3971,6,c	;volatile
   471                           
   472                           ;tasks.c: 30:   PORTDbits.RD7 = 1;
   473  0015C2  8E83               	bsf	3971,7,c	;volatile
   474                           
   475                           ;tasks.c: 31:   PORTBbits.RB1 = 1;
   476  0015C4  8281               	bsf	3969,1,c	;volatile
   477                           
   478                           ;tasks.c: 34:   sem_init(&count_sem, 1);
   479  0015C6  0E01               	movlw	1
   480  0015C8  6EE6               	movwf	postinc1,c
   481  0015CA  0E00               	movlw	0
   482  0015CC  6EE6               	movwf	postinc1,c
   483  0015CE  0E29               	movlw	low _count_sem
   484  0015D0  6EE6               	movwf	postinc1,c
   485  0015D2  0E00               	movlw	high _count_sem
   486  0015D4  6EE6               	movwf	postinc1,c
   487  0015D6  EC40  F00C         	call	_sem_init	;wreg free
   488                           
   489                           ;tasks.c: 35:   sem_init(&fill_sem, 0);
   490  0015DA  0E00               	movlw	0
   491  0015DC  6EE6               	movwf	postinc1,c
   492  0015DE  0E00               	movlw	0
   493  0015E0  6EE6               	movwf	postinc1,c
   494  0015E2  0E1B               	movlw	low _fill_sem
   495  0015E4  6EE6               	movwf	postinc1,c
   496  0015E6  0E00               	movlw	high _fill_sem
   497  0015E8  6EE6               	movwf	postinc1,c
   498  0015EA  EC40  F00C         	call	_sem_init	;wreg free
   499                           
   500                           ;tasks.c: 36:   sem_init(&check_sem, 0);
   501  0015EE  0E00               	movlw	0
   502  0015F0  6EE6               	movwf	postinc1,c
   503  0015F2  0E00               	movlw	0
   504  0015F4  6EE6               	movwf	postinc1,c
   505  0015F6  0E0D               	movlw	low _check_sem
   506  0015F8  6EE6               	movwf	postinc1,c
   507  0015FA  0E00               	movlw	high _check_sem
   508  0015FC  6EE6               	movwf	postinc1,c
   509  0015FE  EC40  F00C         	call	_sem_init	;wreg free
   510                           
   511                           ;tasks.c: 37:   sem_init(&cover_sem, 0);
   512  001602  0E00               	movlw	0
   513  001604  6EE6               	movwf	postinc1,c
   514  001606  0E00               	movlw	0
   515  001608  6EE6               	movwf	postinc1,c
   516  00160A  0E8E               	movlw	low _cover_sem
   517  00160C  6EE6               	movwf	postinc1,c
   518  00160E  0E00               	movlw	high _cover_sem
   519  001610  6EE6               	movwf	postinc1,c
   520  001612  EC40  F00C         	call	_sem_init	;wreg free
   521                           
   522                           ;tasks.c: 38:   sem_init(&out_sem, 0);
   523  001616  0E00               	movlw	0
   524  001618  6EE6               	movwf	postinc1,c
   525  00161A  0E00               	movlw	0
   526  00161C  6EE6               	movwf	postinc1,c
   527  00161E  0E80               	movlw	low _out_sem
   528  001620  6EE6               	movwf	postinc1,c
   529  001622  0E00               	movlw	high _out_sem
   530  001624  6EE6               	movwf	postinc1,c
   531  001626  EC40  F00C         	call	_sem_init	;wreg free
   532                           
   533                           ;tasks.c: 39:   pipe_create(&p, &w_pipe, &r_pipe);
   534  00162A  0E9C               	movlw	low _r_pipe
   535  00162C  6EE6               	movwf	postinc1,c
   536  00162E  0E00               	movlw	high _r_pipe
   537  001630  6EE6               	movwf	postinc1,c
   538  001632  0EAA               	movlw	low _w_pipe
   539  001634  6EE6               	movwf	postinc1,c
   540  001636  0E00               	movlw	high _w_pipe
   541  001638  6EE6               	movwf	postinc1,c
   542  00163A  0E37               	movlw	low _p
   543  00163C  6EE6               	movwf	postinc1,c
   544  00163E  0E00               	movlw	high _p
   545  001640  6EE6               	movwf	postinc1,c
   546  001642  ECB8  F006         	call	_pipe_create	;wreg free
   547                           
   548                           ;tasks.c: 40:   mem = SRAMalloc(5);
   549  001646  0E05               	movlw	5
   550  001648  6EE6               	movwf	postinc1,c
   551  00164A  ECB8  F004         	call	_SRAMalloc	;wreg free
   552  00164E  C043  F007         	movff	btemp,_mem
   553  001652  C044  F008         	movff	btemp+1,_mem+1
   554                           
   555                           ;tasks.c: 42:   global_buffer.count = 0;
   556  001656  6A01               	clrf	_global_buffer,c
   557  001658  6A02               	clrf	_global_buffer+1,c
   558                           
   559                           ;tasks.c: 43:   global_buffer.p_state = FREE_;
   560  00165A  6A06               	clrf	_global_buffer+5,c
   561                           
   562                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   563  00165C  0012               	return		;funcret
   564  00165E                     __end_of_user_conf:
   565                           	opt callstack 0
   566                           
   567 ;; *************** function _pipe_create *****************
   568 ;; Defined at:
   569 ;;		line 9 in file "pipe.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  p               2  [STACK] PTR struct pipe
   572 ;;		 -> p(12), 
   573 ;;  w               2  [STACK] PTR struct semaphore
   574 ;;		 -> w_pipe(14), 
   575 ;;  r               2  [STACK] PTR struct semaphore
   576 ;;		 -> r_pipe(14), 
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1  [STACK] void 
   581 ;; Registers used:
   582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   588 ;;      Params:         0       0       0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; Hardware stack levels required when called:   11
   595 ;; This function calls:
   596 ;;		_sem_init
   597 ;; This function is called by:
   598 ;;		_user_conf
   599 ;; This function uses a reentrant model
   600 ;;
   601                           
   602                           	psect	text2
   603  000D70                     __ptext2:
   604                           	opt callstack 0
   605  000D70                     _pipe_create:
   606                           	opt callstack 18
   607                           
   608                           ;pipe.c: 10:   p->index_write = 0;
   609                           ;stkvar	_p @ sp[(0)+-2]
   610                           
   611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   612                           ;incstack = 0
   613  000D70  0EFE               	movlw	-2
   614  000D72  CFE3 F04D          	movff	plusw1,btemp+10
   615  000D76  0EFF               	movlw	-1
   616  000D78  CFE3 F04E          	movff	plusw1,btemp+11
   617  000D7C  0E04               	movlw	4
   618  000D7E  244D               	addwf	btemp+10,w,c
   619  000D80  6ED9               	movwf	fsr2l,c
   620  000D82  0E00               	movlw	0
   621  000D84  204E               	addwfc	btemp+11,w,c
   622  000D86  6EDA               	movwf	fsr2h,c
   623  000D88  0E00               	movlw	0
   624  000D8A  6EDE               	movwf	postinc2,c
   625  000D8C  0E00               	movlw	0
   626  000D8E  6EDD               	movwf	postdec2,c
   627                           
   628                           ;pipe.c: 11:   p->index_read = 0;
   629                           ;stkvar	_p @ sp[(0)+-2]
   630  000D90  0EFE               	movlw	-2
   631  000D92  CFE3 F04D          	movff	plusw1,btemp+10
   632  000D96  0EFF               	movlw	-1
   633  000D98  CFE3 F04E          	movff	plusw1,btemp+11
   634  000D9C  0E06               	movlw	6
   635  000D9E  244D               	addwf	btemp+10,w,c
   636  000DA0  6ED9               	movwf	fsr2l,c
   637  000DA2  0E00               	movlw	0
   638  000DA4  204E               	addwfc	btemp+11,w,c
   639  000DA6  6EDA               	movwf	fsr2h,c
   640  000DA8  0E00               	movlw	0
   641  000DAA  6EDE               	movwf	postinc2,c
   642  000DAC  0E00               	movlw	0
   643  000DAE  6EDD               	movwf	postdec2,c
   644                           
   645                           ;pipe.c: 12:   p->w = w;
   646                           ;stkvar	_w @ sp[(0)+-4]
   647  000DB0  50E1               	movf	fsr1l,w,c
   648  000DB2  0FFC               	addlw	-4
   649  000DB4  6ED9               	movwf	fsr2l,c
   650  000DB6  50E2               	movf	fsr1h,w,c
   651  000DB8  6EDA               	movwf	fsr2h,c
   652  000DBA  0EFF               	movlw	255
   653  000DBC  22DA               	addwfc	fsr2h,f,c
   654                           
   655                           ;stkvar	_p @ sp[(0)+-2]
   656  000DBE  0EFE               	movlw	-2
   657  000DC0  CFE3 F04D          	movff	plusw1,btemp+10
   658  000DC4  0EFF               	movlw	-1
   659  000DC6  CFE3 F04E          	movff	plusw1,btemp+11
   660  000DCA  0E08               	movlw	8
   661  000DCC  244D               	addwf	btemp+10,w,c
   662  000DCE  6EE9               	movwf	fsr0l,c
   663  000DD0  0E00               	movlw	0
   664  000DD2  204E               	addwfc	btemp+11,w,c
   665  000DD4  6EEA               	movwf	fsr0h,c
   666  000DD6  CFDE FFEE          	movff	postinc2,postinc0
   667  000DDA  CFDD FFED          	movff	postdec2,postdec0
   668                           
   669                           ;pipe.c: 13:   p->r = r;
   670                           ;stkvar	_r @ sp[(0)+-6]
   671  000DDE  50E1               	movf	fsr1l,w,c
   672  000DE0  0FFA               	addlw	-6
   673  000DE2  6ED9               	movwf	fsr2l,c
   674  000DE4  50E2               	movf	fsr1h,w,c
   675  000DE6  6EDA               	movwf	fsr2h,c
   676  000DE8  0EFF               	movlw	255
   677  000DEA  22DA               	addwfc	fsr2h,f,c
   678                           
   679                           ;stkvar	_p @ sp[(0)+-2]
   680  000DEC  0EFE               	movlw	-2
   681  000DEE  CFE3 F04D          	movff	plusw1,btemp+10
   682  000DF2  0EFF               	movlw	-1
   683  000DF4  CFE3 F04E          	movff	plusw1,btemp+11
   684  000DF8  0E0A               	movlw	10
   685  000DFA  244D               	addwf	btemp+10,w,c
   686  000DFC  6EE9               	movwf	fsr0l,c
   687  000DFE  0E00               	movlw	0
   688  000E00  204E               	addwfc	btemp+11,w,c
   689  000E02  6EEA               	movwf	fsr0h,c
   690  000E04  CFDE FFEE          	movff	postinc2,postinc0
   691  000E08  CFDD FFED          	movff	postdec2,postdec0
   692                           
   693                           ;pipe.c: 14:   sem_init(p->w, 2);
   694  000E0C  0E02               	movlw	2
   695  000E0E  6EE6               	movwf	postinc1,c
   696  000E10  0E00               	movlw	0
   697  000E12  6EE6               	movwf	postinc1,c
   698                           
   699                           ;stkvar	_p @ sp[(-2)+-2]
   700  000E14  0EFC               	movlw	-4
   701  000E16  CFE3 F04D          	movff	plusw1,btemp+10
   702  000E1A  0EFD               	movlw	-3
   703  000E1C  CFE3 F04E          	movff	plusw1,btemp+11
   704  000E20  0E08               	movlw	8
   705  000E22  244D               	addwf	btemp+10,w,c
   706  000E24  6ED9               	movwf	fsr2l,c
   707  000E26  0E00               	movlw	0
   708  000E28  204E               	addwfc	btemp+11,w,c
   709  000E2A  6EDA               	movwf	fsr2h,c
   710  000E2C  CFDE F04D          	movff	postinc2,btemp+10
   711  000E30  CFDD F04E          	movff	postdec2,btemp+11
   712  000E34  C04D  FFE6         	movff	btemp+10,postinc1
   713  000E38  C04E  FFE6         	movff	btemp+11,postinc1
   714  000E3C  EC40  F00C         	call	_sem_init	;wreg free
   715                           
   716                           ;pipe.c: 15:   sem_init(p->r, 0);
   717  000E40  0E00               	movlw	0
   718  000E42  6EE6               	movwf	postinc1,c
   719  000E44  0E00               	movlw	0
   720  000E46  6EE6               	movwf	postinc1,c
   721                           
   722                           ;stkvar	_p @ sp[(-2)+-2]
   723  000E48  0EFC               	movlw	-4
   724  000E4A  CFE3 F04D          	movff	plusw1,btemp+10
   725  000E4E  0EFD               	movlw	-3
   726  000E50  CFE3 F04E          	movff	plusw1,btemp+11
   727  000E54  0E0A               	movlw	10
   728  000E56  244D               	addwf	btemp+10,w,c
   729  000E58  6ED9               	movwf	fsr2l,c
   730  000E5A  0E00               	movlw	0
   731  000E5C  204E               	addwfc	btemp+11,w,c
   732  000E5E  6EDA               	movwf	fsr2h,c
   733  000E60  CFDE F04D          	movff	postinc2,btemp+10
   734  000E64  CFDD F04E          	movff	postdec2,btemp+11
   735  000E68  C04D  FFE6         	movff	btemp+10,postinc1
   736  000E6C  C04E  FFE6         	movff	btemp+11,postinc1
   737  000E70  EC40  F00C         	call	_sem_init	;wreg free
   738                           
   739                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
   740  000E74  0EFA               	movlw	250
   741  000E76  26E1               	addwf	fsr1l,f,c
   742  000E78  0EFF               	movlw	255
   743  000E7A  22E2               	addwfc	fsr1h,f,c
   744  000E7C  0012               	return		;funcret
   745  000E7E                     __end_of_pipe_create:
   746                           	opt callstack 0
   747                           
   748 ;; *************** function _sem_init *****************
   749 ;; Defined at:
   750 ;;		line 10 in file "semaphore.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  s               2  [STACK] PTR struct semaphore
   753 ;;		 -> r_pipe(14), w_pipe(14), out_sem(14), cover_sem(14), 
   754 ;;		 -> check_sem(14), fill_sem(14), count_sem(14), 
   755 ;;  valor           2  [STACK] int 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1  [STACK] void 
   760 ;; Registers used:
   761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   767 ;;      Params:         0       0       0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0
   770 ;;      Totals:         0       0       0       0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:   10
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_pipe_create
   778 ;;		_user_conf
   779 ;; This function uses a reentrant model
   780 ;;
   781                           
   782                           	psect	text3
   783  001880                     __ptext3:
   784                           	opt callstack 0
   785  001880                     _sem_init:
   786                           	opt callstack 19
   787                           
   788                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   789                           
   790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   791                           ;incstack = 0
   792  001880  9EF2               	bcf	4082,7,c	;volatile
   793                           
   794                           ;semaphore.c: 13:   s->contador = valor;
   795                           ;stkvar	_valor @ sp[(0)+-4]
   796  001882  50E1               	movf	fsr1l,w,c
   797  001884  0FFC               	addlw	-4
   798  001886  6ED9               	movwf	fsr2l,c
   799  001888  50E2               	movf	fsr1h,w,c
   800  00188A  6EDA               	movwf	fsr2h,c
   801  00188C  0EFF               	movlw	255
   802  00188E  22DA               	addwfc	fsr2h,f,c
   803                           
   804                           ;stkvar	_s @ sp[(0)+-2]
   805  001890  0EFE               	movlw	-2
   806  001892  CFE3 FFE9          	movff	plusw1,fsr0l
   807  001896  0EFF               	movlw	-1
   808  001898  CFE3 FFEA          	movff	plusw1,fsr0h
   809  00189C  CFDE FFEE          	movff	postinc2,postinc0
   810  0018A0  CFDD FFED          	movff	postdec2,postdec0
   811                           
   812                           ;semaphore.c: 14:   s->bloqued_size = 0;
   813                           ;stkvar	_s @ sp[(0)+-2]
   814  0018A4  0EFE               	movlw	-2
   815  0018A6  CFE3 F04D          	movff	plusw1,btemp+10
   816  0018AA  0EFF               	movlw	-1
   817  0018AC  CFE3 F04E          	movff	plusw1,btemp+11
   818  0018B0  0E0A               	movlw	10
   819  0018B2  244D               	addwf	btemp+10,w,c
   820  0018B4  6ED9               	movwf	fsr2l,c
   821  0018B6  0E00               	movlw	0
   822  0018B8  204E               	addwfc	btemp+11,w,c
   823  0018BA  6EDA               	movwf	fsr2h,c
   824  0018BC  0E00               	movlw	0
   825  0018BE  6EDE               	movwf	postinc2,c
   826  0018C0  0E00               	movlw	0
   827  0018C2  6EDD               	movwf	postdec2,c
   828                           
   829                           ;semaphore.c: 15:   s->task_to_ready = 0;
   830                           ;stkvar	_s @ sp[(0)+-2]
   831  0018C4  0EFE               	movlw	-2
   832  0018C6  CFE3 F04D          	movff	plusw1,btemp+10
   833  0018CA  0EFF               	movlw	-1
   834  0018CC  CFE3 F04E          	movff	plusw1,btemp+11
   835  0018D0  0E0C               	movlw	12
   836  0018D2  244D               	addwf	btemp+10,w,c
   837  0018D4  6ED9               	movwf	fsr2l,c
   838  0018D6  0E00               	movlw	0
   839  0018D8  204E               	addwfc	btemp+11,w,c
   840  0018DA  6EDA               	movwf	fsr2h,c
   841  0018DC  0E00               	movlw	0
   842  0018DE  6EDE               	movwf	postinc2,c
   843  0018E0  0E00               	movlw	0
   844  0018E2  6EDD               	movwf	postdec2,c
   845                           
   846                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   847  0018E4  8EF2               	bsf	4082,7,c	;volatile
   848                           
   849                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   850  0018E6  52E5               	movf	postdec1,f,c
   851  0018E8  52E5               	movf	postdec1,f,c
   852  0018EA  52E5               	movf	postdec1,f,c
   853  0018EC  52E5               	movf	postdec1,f,c
   854  0018EE  0012               	return		;funcret
   855  0018F0                     __end_of_sem_init:
   856                           	opt callstack 0
   857                           
   858 ;; *************** function _SRAMalloc *****************
   859 ;; Defined at:
   860 ;;		line 191 in file "sralloc.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  nBytes          1  [STACK] unsigned char 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  pHeap           2  [STACK] PTR struct _SALLOC
   865 ;;		 -> _uDynamicHeap(512), 
   866 ;;  temp            2  [STACK] PTR struct _SALLOC
   867 ;;		 -> _uDynamicHeap(512), 
   868 ;;  segHeader       1  [STACK] struct _SALLOC
   869 ;;  segLen          1  [STACK] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  2  [STACK] PTR unsigned char 
   872 ;; Registers used:
   873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   879 ;;      Params:         0       0       0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0
   882 ;;      Totals:         0       0       0       0       0       0       0
   883 ;;Total ram usage:        0 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:   11
   886 ;; This function calls:
   887 ;;		__SRAMmerge
   888 ;; This function is called by:
   889 ;;		_user_conf
   890 ;; This function uses a reentrant model
   891 ;;
   892                           
   893                           	psect	text4
   894  000970                     __ptext4:
   895                           	opt callstack 0
   896  000970                     _SRAMalloc:
   897                           	opt callstack 0
   898                           
   899                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   900  000970  0E06               	movlw	6
   901  000972  26E1               	addwf	fsr1l,f,c
   902  000974  0E00               	movlw	0
   903  000976  22E2               	addwfc	fsr1h,f,c
   904                           
   905                           ;sralloc.c: 191: unsigned char * SRAMalloc( unsigned char nBytes);sralloc.c: 192: {;sral
      +                          loc.c: 193:  SALLOC * pHeap;;sralloc.c: 194:  SALLOC * temp;;sralloc.c: 195:       SALLO
      +                          C segHeader;;sralloc.c: 196:       unsigned char segLen;;sralloc.c: 199:  if (nBytes > (
      +                          0x7F - 1)) return (0);
   906                           ;stkvar	_nBytes @ sp[(-6)+-1]
   907                           
   908                           ;incstack = 0
   909  000978  0EF9               	movlw	-7
   910  00097A  CFE3 F043          	movff	plusw1,btemp
   911  00097E  0E7E               	movlw	126
   912  000980  6443               	cpfsgt	btemp,c
   913  000982  D005               	goto	l1840
   914  000984                     u710:
   915  000984  0E00               	movlw	0
   916  000986  6E43               	movwf	btemp,c
   917  000988  0E00               	movlw	0
   918  00098A  6E44               	movwf	btemp+1,c
   919  00098C  D0BB               	goto	l404
   920  00098E                     l1840:
   921                           
   922                           ;sralloc.c: 202:  pHeap = (SALLOC *)_uDynamicHeap;
   923                           ;stkvar	_pHeap @ sp[(-6)+0]
   924  00098E  0E02               	movlw	high __uDynamicHeap
   925  000990  6E43               	movwf	btemp,c
   926  000992  0EFB               	movlw	-5
   927  000994  C043  FFE3         	movff	btemp,plusw1
   928  000998  0EF4               	movlw	low __uDynamicHeap
   929  00099A  6E43               	movwf	btemp,c
   930  00099C  0EFA               	movlw	-6
   931  00099E  C043  FFE3         	movff	btemp,plusw1
   932  0009A2                     l1842:
   933                           
   934                           ;sralloc.c: 205:  {;sralloc.c: 207:   segHeader = *pHeap;
   935                           ;stkvar	_pHeap @ sp[(-6)+0]
   936  0009A2  0EFA               	movlw	-6
   937  0009A4  CFE3 FFD9          	movff	plusw1,fsr2l
   938  0009A8  0EFB               	movlw	-5
   939  0009AA  CFE3 FFDA          	movff	plusw1,fsr2h
   940  0009AE  50DF               	movf	indf2,w,c
   941  0009B0  6E4E               	movwf	btemp+11,c
   942                           
   943                           ;stkvar	_segHeader @ sp[(-6)+4]
   944  0009B2  0EFE               	movlw	-2
   945  0009B4  C04E  FFE3         	movff	btemp+11,plusw1
   946                           
   947                           ;sralloc.c: 210:   segLen = segHeader.bits.count - 1;
   948                           ;stkvar	_segHeader @ sp[(-6)+4]
   949  0009B8  50E1               	movf	fsr1l,w,c
   950  0009BA  0FFE               	addlw	-2
   951  0009BC  6ED9               	movwf	fsr2l,c
   952  0009BE  50E2               	movf	fsr1h,w,c
   953  0009C0  6EDA               	movwf	fsr2h,c
   954  0009C2  0EFF               	movlw	255
   955  0009C4  22DA               	addwfc	fsr2h,f,c
   956  0009C6  50DF               	movf	223,w,c
   957  0009C8  0B7F               	andlw	127
   958  0009CA  6E4E               	movwf	btemp+11,c
   959  0009CC  0EFF               	movlw	255
   960  0009CE  264E               	addwf	btemp+11,f,c
   961                           
   962                           ;stkvar	_segLen @ sp[(-6)+5]
   963  0009D0  0EFF               	movlw	-1
   964  0009D2  C04E  FFE3         	movff	btemp+11,plusw1
   965                           
   966                           ;sralloc.c: 213:   if (segHeader.byte == 0) return (0);
   967                           ;stkvar	_segHeader @ sp[(-6)+4]
   968  0009D6  0EFE               	movlw	-2
   969  0009D8  50E3               	movf	plusw1,w,c
   970  0009DA  B4D8               	btfsc	status,2,c
   971  0009DC  D7D3               	goto	u710
   972                           
   973                           ;sralloc.c: 216:   if (!(segHeader.bits.alloc))
   974                           ;stkvar	_segHeader @ sp[(-6)+4]
   975  0009DE  50E1               	movf	fsr1l,w,c
   976  0009E0  0FFE               	addlw	-2
   977  0009E2  6ED9               	movwf	fsr2l,c
   978  0009E4  50E2               	movf	fsr1h,w,c
   979  0009E6  6EDA               	movwf	fsr2h,c
   980  0009E8  0EFF               	movlw	255
   981  0009EA  22DA               	addwfc	fsr2h,f,c
   982  0009EC  BEDF               	btfsc	indf2,7,c
   983  0009EE  D016               	goto	u750
   984                           
   985                           ;sralloc.c: 217:   {;sralloc.c: 219:    if (nBytes > segLen)
   986                           ;stkvar	_nBytes @ sp[(-6)+-1]
   987                           ;stkvar	_segLen @ sp[(-6)+5]
   988  0009F0  50E1               	movf	fsr1l,w,c
   989  0009F2  0FFF               	addlw	-1
   990  0009F4  6ED9               	movwf	fsr2l,c
   991  0009F6  50E2               	movf	fsr1h,w,c
   992  0009F8  6EDA               	movwf	fsr2h,c
   993  0009FA  0EFF               	movlw	255
   994  0009FC  22DA               	addwfc	fsr2h,f,c
   995  0009FE  0EF9               	movlw	-7
   996  000A00  50E3               	movf	plusw1,w,c
   997  000A02  5CDE               	subwf	postinc2,w,c
   998  000A04  B0D8               	btfsc	status,0,c
   999  000A06  D020               	goto	l1860
  1000                           
  1001                           ;sralloc.c: 220:    {;sralloc.c: 222:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.b
      +                          its.count;
  1002                           ;stkvar	_pHeap @ sp[(-6)+0]
  1003  000A08  0EFA               	movlw	-6
  1004  000A0A  CFE3 FFE6          	movff	plusw1,postinc1
  1005  000A0E  CFE3 FFE6          	movff	plusw1,postinc1
  1006  000A12  EC87  F005         	call	__SRAMmerge	;wreg free
  1007  000A16  5043               	movf	btemp,w,c
  1008  000A18  A4D8               	btfss	status,2,c
  1009  000A1A  D7C3               	goto	l1842
  1010  000A1C                     u750:
  1011                           
  1012                           ;stkvar	_segHeader @ sp[(-6)+4]
  1013  000A1C  50E1               	movf	fsr1l,w,c
  1014  000A1E  0FFE               	addlw	-2
  1015  000A20  6ED9               	movwf	fsr2l,c
  1016  000A22  50E2               	movf	fsr1h,w,c
  1017  000A24  6EDA               	movwf	fsr2h,c
  1018  000A26  0EFF               	movlw	255
  1019  000A28  22DA               	addwfc	fsr2h,f,c
  1020  000A2A  50DF               	movf	223,w,c
  1021  000A2C  0B7F               	andlw	127
  1022  000A2E  0D01               	mullw	1
  1023                           
  1024                           ;stkvar	_pHeap @ sp[(-6)+0]
  1025  000A30  50E1               	movf	fsr1l,w,c
  1026  000A32  0FFA               	addlw	-6
  1027  000A34  6ED9               	movwf	fsr2l,c
  1028  000A36  50E2               	movf	fsr1h,w,c
  1029  000A38  6EDA               	movwf	fsr2h,c
  1030  000A3A  0EFF               	movlw	255
  1031  000A3C  22DA               	addwfc	fsr2h,f,c
  1032  000A3E  50F3               	movf	prodl,w,c
  1033  000A40  26DE               	addwf	postinc2,f,c
  1034  000A42  50F4               	movf	prodh,w,c
  1035  000A44  22DD               	addwfc	postdec2,f,c
  1036  000A46  D7AD               	goto	l1842
  1037  000A48                     l1860:
  1038                           
  1039                           ;sralloc.c: 228:    if (nBytes == segLen)
  1040                           ;stkvar	_segLen @ sp[(-6)+5]
  1041                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1042  000A48  50E1               	movf	fsr1l,w,c
  1043  000A4A  0FF9               	addlw	-7
  1044  000A4C  6ED9               	movwf	fsr2l,c
  1045  000A4E  50E2               	movf	fsr1h,w,c
  1046  000A50  6EDA               	movwf	fsr2h,c
  1047  000A52  0EFF               	movlw	255
  1048  000A54  22DA               	addwfc	fsr2h,f,c
  1049  000A56  0EFF               	movlw	-1
  1050  000A58  50E3               	movf	plusw1,w,c
  1051  000A5A  18DE               	xorwf	postinc2,w,c
  1052  000A5C  A4D8               	btfss	status,2,c
  1053  000A5E  D011               	goto	l1870
  1054                           
  1055                           ;sralloc.c: 229:    {;sralloc.c: 231:     (*pHeap).bits.alloc = 1;
  1056                           ;stkvar	_pHeap @ sp[(-6)+0]
  1057  000A60  0EFA               	movlw	-6
  1058  000A62  CFE3 FFD9          	movff	plusw1,fsr2l
  1059  000A66  0EFB               	movlw	-5
  1060  000A68  CFE3 FFDA          	movff	plusw1,fsr2h
  1061  000A6C  8EDF               	bsf	indf2,7,c
  1062                           
  1063                           ;sralloc.c: 234:     return ((unsigned char *)(pHeap + 1));
  1064                           ;stkvar	_pHeap @ sp[(-6)+0]
  1065  000A6E  0EFA               	movlw	-6
  1066  000A70  50E3               	movf	plusw1,w,c
  1067  000A72  0F01               	addlw	1
  1068  000A74  6E43               	movwf	btemp,c
  1069  000A76  0EFB               	movlw	-5
  1070  000A78  CFE3 F044          	movff	plusw1,btemp+1
  1071  000A7C  0E00               	movlw	0
  1072  000A7E  2244               	addwfc	btemp+1,f,c
  1073  000A80  D041               	goto	l404
  1074  000A82                     l1870:
  1075                           
  1076                           ;sralloc.c: 239:    {;sralloc.c: 241:     (*pHeap).byte = nBytes + 0x81;
  1077                           ;stkvar	_pHeap @ sp[(-6)+0]
  1078  000A82  0EFA               	movlw	-6
  1079  000A84  CFE3 FFD9          	movff	plusw1,fsr2l
  1080  000A88  0EFB               	movlw	-5
  1081  000A8A  CFE3 FFDA          	movff	plusw1,fsr2h
  1082                           
  1083                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1084  000A8E  0EF9               	movlw	-7
  1085  000A90  50E3               	movf	plusw1,w,c
  1086  000A92  0F81               	addlw	129
  1087  000A94  6EDF               	movwf	indf2,c
  1088                           
  1089                           ;sralloc.c: 244:     temp = pHeap + 1;
  1090                           ;stkvar	_pHeap @ sp[(-6)+0]
  1091  000A96  0EFA               	movlw	-6
  1092  000A98  50E3               	movf	plusw1,w,c
  1093  000A9A  0F01               	addlw	1
  1094  000A9C  6E4D               	movwf	btemp+10,c
  1095  000A9E  0EFB               	movlw	-5
  1096  000AA0  CFE3 F04E          	movff	plusw1,btemp+11
  1097  000AA4  0E00               	movlw	0
  1098  000AA6  224E               	addwfc	btemp+11,f,c
  1099                           
  1100                           ;stkvar	_temp @ sp[(-6)+2]
  1101  000AA8  0EFD               	movlw	-3
  1102  000AAA  C04E  FFE3         	movff	btemp+11,plusw1
  1103  000AAE  0EFC               	movlw	-4
  1104  000AB0  C04D  FFE3         	movff	btemp+10,plusw1
  1105                           
  1106                           ;sralloc.c: 247:     pHeap += (nBytes + 1);
  1107                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1108  000AB4  0EF9               	movlw	-7
  1109  000AB6  50E3               	movf	plusw1,w,c
  1110  000AB8  6E4D               	movwf	btemp+10,c
  1111  000ABA  6A4E               	clrf	btemp+11,c
  1112  000ABC  0E01               	movlw	1
  1113  000ABE  264D               	addwf	btemp+10,f,c
  1114  000AC0  0E00               	movlw	0
  1115  000AC2  224E               	addwfc	btemp+11,f,c
  1116                           
  1117                           ;stkvar	_pHeap @ sp[(-6)+0]
  1118  000AC4  50E1               	movf	fsr1l,w,c
  1119  000AC6  0FFA               	addlw	-6
  1120  000AC8  6ED9               	movwf	fsr2l,c
  1121  000ACA  50E2               	movf	fsr1h,w,c
  1122  000ACC  6EDA               	movwf	fsr2h,c
  1123  000ACE  0EFF               	movlw	255
  1124  000AD0  22DA               	addwfc	fsr2h,f,c
  1125  000AD2  504D               	movf	btemp+10,w,c
  1126  000AD4  26DE               	addwf	postinc2,f,c
  1127  000AD6  504E               	movf	btemp+11,w,c
  1128  000AD8  22DD               	addwfc	postdec2,f,c
  1129                           
  1130                           ;sralloc.c: 250:     (*pHeap).byte = segLen - nBytes;
  1131                           ;stkvar	_pHeap @ sp[(-6)+0]
  1132  000ADA  0EFA               	movlw	-6
  1133  000ADC  CFE3 FFD9          	movff	plusw1,fsr2l
  1134  000AE0  0EFB               	movlw	-5
  1135  000AE2  CFE3 FFDA          	movff	plusw1,fsr2h
  1136                           
  1137                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1138  000AE6  0EF9               	movlw	-7
  1139  000AE8  CFE3 F04E          	movff	plusw1,btemp+11
  1140                           
  1141                           ;stkvar	_segLen @ sp[(-6)+5]
  1142  000AEC  0EFF               	movlw	-1
  1143  000AEE  CFE3 F04D          	movff	plusw1,btemp+10
  1144  000AF2  504E               	movf	btemp+11,w,c
  1145  000AF4  5C4D               	subwf	btemp+10,w,c
  1146  000AF6  6EDF               	movwf	indf2,c
  1147                           
  1148                           ;sralloc.c: 253:     return ((unsigned char *) temp);
  1149                           ;stkvar	_temp @ sp[(-6)+2]
  1150  000AF8  0EFC               	movlw	-4
  1151  000AFA  CFE3 F043          	movff	plusw1,btemp
  1152  000AFE  0EFD               	movlw	-3
  1153  000B00  CFE3 F044          	movff	plusw1,btemp+1
  1154  000B04                     l404:
  1155                           
  1156                           ; _SRAMalloc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  1157  000B04  0EF9               	movlw	249
  1158  000B06  26E1               	addwf	fsr1l,f,c
  1159  000B08  0EFF               	movlw	255
  1160  000B0A  22E2               	addwfc	fsr1h,f,c
  1161  000B0C  0012               	return		;funcret
  1162  000B0E                     __end_of_SRAMalloc:
  1163                           	opt callstack 0
  1164                           
  1165 ;; *************** function __SRAMmerge *****************
  1166 ;; Defined at:
  1167 ;;		line 359 in file "sralloc.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  pSegA           2  [STACK] PTR struct _SALLOC
  1170 ;;		 -> _uDynamicHeap(512), 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  pSegB           2  [STACK] PTR struct _SALLOC
  1173 ;;		 -> _uDynamicHeap(512), 
  1174 ;;  uSegB           1  [STACK] struct _SALLOC
  1175 ;;  uSegA           1  [STACK] struct _SALLOC
  1176 ;;  uSum            1  [STACK] struct _SALLOC
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1  [STACK] unsigned char 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1186 ;;      Params:         0       0       0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0
  1189 ;;      Totals:         0       0       0       0       0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:   10
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_SRAMalloc
  1197 ;; This function uses a reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text5
  1201  000B0E                     __ptext5:
  1202                           	opt callstack 0
  1203  000B0E                     __SRAMmerge:
  1204                           	opt callstack 0
  1205                           
  1206                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1207  000B0E  0E05               	movlw	5
  1208  000B10  26E1               	addwf	fsr1l,f,c
  1209  000B12  0E00               	movlw	0
  1210  000B14  22E2               	addwfc	fsr1h,f,c
  1211                           
  1212                           ;sralloc.c: 359:      unsigned char _SRAMmerge(SALLOC * pSegA);sralloc.c: 360: {;sralloc
      +                          .c: 361:  SALLOC * pSegB;;sralloc.c: 362:       SALLOC uSegA, uSegB, uSum;;sralloc.c: 36
      +                          6:  pSegB = pSegA + (*pSegA).byte;
  1213                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1214                           
  1215                           ;incstack = 0
  1216  000B16  0EF9               	movlw	-7
  1217  000B18  CFE3 FFD9          	movff	plusw1,fsr2l
  1218  000B1C  0EFA               	movlw	-6
  1219  000B1E  CFE3 FFDA          	movff	plusw1,fsr2h
  1220  000B22  50DF               	movf	indf2,w,c
  1221  000B24  6E4D               	movwf	btemp+10,c
  1222  000B26  6A4E               	clrf	btemp+11,c
  1223                           
  1224                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1225  000B28  0EF9               	movlw	-7
  1226  000B2A  50E3               	movf	plusw1,w,c
  1227  000B2C  264D               	addwf	btemp+10,f,c
  1228  000B2E  0EFA               	movlw	-6
  1229  000B30  50E3               	movf	plusw1,w,c
  1230  000B32  224E               	addwfc	btemp+11,f,c
  1231                           
  1232                           ;stkvar	_pSegB @ sp[(-5)+0]
  1233  000B34  0EFC               	movlw	-4
  1234  000B36  C04E  FFE3         	movff	btemp+11,plusw1
  1235  000B3A  0EFB               	movlw	-5
  1236  000B3C  C04D  FFE3         	movff	btemp+10,plusw1
  1237                           
  1238                           ;sralloc.c: 369:  uSegA = *pSegA;
  1239                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1240  000B40  0EF9               	movlw	-7
  1241  000B42  CFE3 FFD9          	movff	plusw1,fsr2l
  1242  000B46  0EFA               	movlw	-6
  1243  000B48  CFE3 FFDA          	movff	plusw1,fsr2h
  1244  000B4C  50DF               	movf	indf2,w,c
  1245  000B4E  6E4E               	movwf	btemp+11,c
  1246                           
  1247                           ;stkvar	_uSegA @ sp[(-5)+3]
  1248  000B50  0EFE               	movlw	-2
  1249  000B52  C04E  FFE3         	movff	btemp+11,plusw1
  1250                           
  1251                           ;sralloc.c: 370:  uSegB = *pSegB;
  1252                           ;stkvar	_pSegB @ sp[(-5)+0]
  1253  000B56  0EFB               	movlw	-5
  1254  000B58  CFE3 FFD9          	movff	plusw1,fsr2l
  1255  000B5C  0EFC               	movlw	-4
  1256  000B5E  CFE3 FFDA          	movff	plusw1,fsr2h
  1257  000B62  50DF               	movf	indf2,w,c
  1258  000B64  6E4E               	movwf	btemp+11,c
  1259                           
  1260                           ;stkvar	_uSegB @ sp[(-5)+2]
  1261  000B66  0EFD               	movlw	-3
  1262  000B68  C04E  FFE3         	movff	btemp+11,plusw1
  1263                           
  1264                           ;sralloc.c: 373:  if (uSegB.byte == 0) return (0);
  1265                           ;stkvar	_uSegB @ sp[(-5)+2]
  1266  000B6C  0EFD               	movlw	-3
  1267  000B6E  50E3               	movf	plusw1,w,c
  1268  000B70  A4D8               	btfss	status,2,c
  1269  000B72  D002               	goto	l1714
  1270  000B74                     u610:
  1271  000B74  0E00               	movlw	0
  1272  000B76  D06E               	goto	L1
  1273  000B78                     l1714:
  1274                           
  1275                           ;sralloc.c: 376:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1276                           ;stkvar	_uSegA @ sp[(-5)+3]
  1277  000B78  50E1               	movf	fsr1l,w,c
  1278  000B7A  0FFE               	addlw	-2
  1279  000B7C  6ED9               	movwf	fsr2l,c
  1280  000B7E  50E2               	movf	fsr1h,w,c
  1281  000B80  6EDA               	movwf	fsr2h,c
  1282  000B82  0EFF               	movlw	255
  1283  000B84  22DA               	addwfc	fsr2h,f,c
  1284  000B86  BEDF               	btfsc	indf2,7,c
  1285  000B88  D7F5               	goto	u610
  1286                           
  1287                           ;stkvar	_uSegB @ sp[(-5)+2]
  1288  000B8A  50E1               	movf	fsr1l,w,c
  1289  000B8C  0FFD               	addlw	-3
  1290  000B8E  6ED9               	movwf	fsr2l,c
  1291  000B90  50E2               	movf	fsr1h,w,c
  1292  000B92  6EDA               	movwf	fsr2h,c
  1293  000B94  0EFF               	movlw	255
  1294  000B96  22DA               	addwfc	fsr2h,f,c
  1295  000B98  BEDF               	btfsc	indf2,7,c
  1296  000B9A  D7EC               	goto	u610
  1297                           
  1298                           ;sralloc.c: 379:  if (uSegA.bits.count == 0x7F) return (0);
  1299                           ;stkvar	_uSegA @ sp[(-5)+3]
  1300  000B9C  50E1               	movf	fsr1l,w,c
  1301  000B9E  0FFE               	addlw	-2
  1302  000BA0  6ED9               	movwf	fsr2l,c
  1303  000BA2  50E2               	movf	fsr1h,w,c
  1304  000BA4  6EDA               	movwf	fsr2h,c
  1305  000BA6  0EFF               	movlw	255
  1306  000BA8  22DA               	addwfc	fsr2h,f,c
  1307  000BAA  50DF               	movf	223,w,c
  1308  000BAC  0B7F               	andlw	127
  1309  000BAE  0A7F               	xorlw	127
  1310  000BB0  B4D8               	btfsc	status,2,c
  1311  000BB2  D7E0               	goto	u610
  1312                           
  1313                           ;sralloc.c: 382:  uSum.byte = uSegA.byte + uSegB.byte;
  1314                           ;stkvar	_uSegB @ sp[(-5)+2]
  1315  000BB4  0EFD               	movlw	-3
  1316  000BB6  CFE3 F04E          	movff	plusw1,btemp+11
  1317                           
  1318                           ;stkvar	_uSegA @ sp[(-5)+3]
  1319  000BBA  0EFE               	movlw	-2
  1320  000BBC  50E3               	movf	plusw1,w,c
  1321  000BBE  244E               	addwf	btemp+11,w,c
  1322  000BC0  6E4D               	movwf	btemp+10,c
  1323                           
  1324                           ;stkvar	_uSum @ sp[(-5)+4]
  1325  000BC2  0EFF               	movlw	-1
  1326  000BC4  C04D  FFE3         	movff	btemp+10,plusw1
  1327                           
  1328                           ;sralloc.c: 388:  if ((uSum.byte) > 0x7F)
  1329                           ;stkvar	_uSum @ sp[(-5)+4]
  1330  000BC8  0EFF               	movlw	-1
  1331  000BCA  CFE3 F043          	movff	plusw1,btemp
  1332  000BCE  0E7F               	movlw	127
  1333  000BD0  6443               	cpfsgt	btemp,c
  1334  000BD2  D036               	goto	l1746
  1335                           
  1336                           ;sralloc.c: 389:  {;sralloc.c: 390:   (*pSegA).byte = 0x7F;
  1337                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1338  000BD4  0EF9               	movlw	-7
  1339  000BD6  CFE3 FFD9          	movff	plusw1,fsr2l
  1340  000BDA  0EFA               	movlw	-6
  1341  000BDC  CFE3 FFDA          	movff	plusw1,fsr2h
  1342  000BE0  0E7F               	movlw	127
  1343  000BE2  6EDF               	movwf	indf2,c
  1344                           
  1345                           ;sralloc.c: 391:   pSegA += 0x7F;
  1346                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1347  000BE4  0EF9               	movlw	-7
  1348  000BE6  50E3               	movf	plusw1,w,c
  1349  000BE8  0F7F               	addlw	127
  1350  000BEA  6E43               	movwf	btemp,c
  1351  000BEC  0EF9               	movlw	-7
  1352  000BEE  C043  FFE3         	movff	btemp,plusw1
  1353  000BF2  6A43               	clrf	btemp,c
  1354  000BF4  0EFA               	movlw	-6
  1355  000BF6  50E3               	movf	plusw1,w,c
  1356  000BF8  2043               	addwfc	btemp,w,c
  1357  000BFA  6E43               	movwf	btemp,c
  1358  000BFC  0EFA               	movlw	-6
  1359  000BFE  C043  FFE3         	movff	btemp,plusw1
  1360                           
  1361                           ;sralloc.c: 392:   pSegB += uSegB.byte;
  1362                           ;stkvar	_uSegB @ sp[(-5)+2]
  1363  000C02  0EFD               	movlw	-3
  1364  000C04  50E3               	movf	plusw1,w,c
  1365  000C06  0D01               	mullw	1
  1366                           
  1367                           ;stkvar	_pSegB @ sp[(-5)+0]
  1368  000C08  50E1               	movf	fsr1l,w,c
  1369  000C0A  0FFB               	addlw	-5
  1370  000C0C  6ED9               	movwf	fsr2l,c
  1371  000C0E  50E2               	movf	fsr1h,w,c
  1372  000C10  6EDA               	movwf	fsr2h,c
  1373  000C12  0EFF               	movlw	255
  1374  000C14  22DA               	addwfc	fsr2h,f,c
  1375  000C16  50F3               	movf	prodl,w,c
  1376  000C18  26DE               	addwf	postinc2,f,c
  1377  000C1A  50F4               	movf	prodh,w,c
  1378  000C1C  22DD               	addwfc	postdec2,f,c
  1379                           
  1380                           ;sralloc.c: 393:   (*pSegA).byte = pSegB - pSegA;
  1381                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1382  000C1E  0EF9               	movlw	-7
  1383  000C20  CFE3 FFD9          	movff	plusw1,fsr2l
  1384  000C24  0EFA               	movlw	-6
  1385  000C26  CFE3 FFDA          	movff	plusw1,fsr2h
  1386                           
  1387                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1388  000C2A  0EF9               	movlw	-7
  1389  000C2C  CFE3 F04E          	movff	plusw1,btemp+11
  1390                           
  1391                           ;stkvar	_pSegB @ sp[(-5)+0]
  1392  000C30  0EFB               	movlw	-5
  1393  000C32  CFE3 F04D          	movff	plusw1,btemp+10
  1394  000C36  504E               	movf	btemp+11,w,c
  1395  000C38  5C4D               	subwf	btemp+10,w,c
  1396  000C3A  6EDF               	movwf	indf2,c
  1397                           
  1398                           ;sralloc.c: 395:   return (0x7F);
  1399  000C3C  0E7F               	movlw	127
  1400  000C3E  D00A               	goto	L1
  1401  000C40                     l1746:
  1402                           
  1403                           ;sralloc.c: 400:  {;sralloc.c: 401:   return ((*pSegA).byte = uSum.byte);
  1404                           ;stkvar	_uSum @ sp[(-5)+4]
  1405                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1406  000C40  0EF9               	movlw	-7
  1407  000C42  CFE3 FFD9          	movff	plusw1,fsr2l
  1408  000C46  0EFA               	movlw	-6
  1409  000C48  CFE3 FFDA          	movff	plusw1,fsr2h
  1410  000C4C  0EFF               	movlw	-1
  1411  000C4E  CFE3 FFDF          	movff	plusw1,indf2
  1412  000C52  50DF               	movf	indf2,w,c
  1413  000C54                     L1:
  1414  000C54  6E43               	movwf	btemp,c
  1415                           
  1416                           ; __SRAMmerge: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  1417  000C56  0EF9               	movlw	249
  1418  000C58  26E1               	addwf	fsr1l,f,c
  1419  000C5A  0EFF               	movlw	255
  1420  000C5C  22E2               	addwfc	fsr1h,f,c
  1421  000C5E  0012               	return		;funcret
  1422  000C60                     __end_of__SRAMmerge:
  1423                           	opt callstack 0
  1424                           
  1425 ;; *************** function _lunos_init *****************
  1426 ;; Defined at:
  1427 ;;		line 49 in file "kernel.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1  [STACK] void 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1441 ;;      Params:         0       0       0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0
  1444 ;;      Totals:         0       0       0       0       0       0       0
  1445 ;;Total ram usage:        0 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:   11
  1448 ;; This function calls:
  1449 ;;		_SRAMInitHeap
  1450 ;;		_lunos_createTask
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text6
  1457  001B4C                     __ptext6:
  1458                           	opt callstack 0
  1459  001B4C                     _lunos_init:
  1460                           	opt callstack 19
  1461                           
  1462                           ;kernel.c: 50:   SRAMInitHeap();
  1463                           
  1464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1465                           ;incstack = 0
  1466  001B4C  ECB3  F009         	call	_SRAMInitHeap	;wreg free
  1467                           
  1468                           ;kernel.c: 51:   ready_queue.task_running = 0;
  1469  001B50  0E00               	movlw	0
  1470  001B52  CFE8 F2F2          	movff	wreg,_ready_queue+542
  1471  001B56  0E00               	movlw	0
  1472  001B58  CFE8 F2F3          	movff	wreg,_ready_queue+543
  1473                           
  1474                           ;kernel.c: 52:   ready_queue.tasks_installed = 0;
  1475  001B5C  0E00               	movlw	0
  1476  001B5E  CFE8 F2F0          	movff	wreg,_ready_queue+540
  1477  001B62  0E00               	movlw	0
  1478  001B64  CFE8 F2F1          	movff	wreg,_ready_queue+541
  1479                           
  1480                           ;kernel.c: 53:   lunos_createTask(0, &task_idle);
  1481  001B68  0EF8               	movlw	low _task_idle
  1482  001B6A  6EE6               	movwf	postinc1,c
  1483  001B6C  0E1B               	movlw	high _task_idle
  1484  001B6E  6EE6               	movwf	postinc1,c
  1485  001B70  0E00               	movlw	0
  1486  001B72  6EE6               	movwf	postinc1,c
  1487  001B74  0E00               	movlw	0
  1488  001B76  6EE6               	movwf	postinc1,c
  1489  001B78  EC48  F008         	call	_lunos_createTask	;wreg free
  1490                           
  1491                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  1492  001B7C  0012               	return		;funcret
  1493  001B7E                     __end_of_lunos_init:
  1494                           	opt callstack 0
  1495                           
  1496 ;; *************** function _lunos_createTask *****************
  1497 ;; Defined at:
  1498 ;;		line 14 in file "kernel.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  prior           2  [STACK] unsigned int 
  1501 ;;  f               2  [STACK] PTR FTN()void 
  1502 ;;		 -> count_out(1), cover_bottle(1), check_level(1), fill_bottle(1), 
  1503 ;;		 -> count_bottles(1), task_idle(1), 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  new_task      108  [STACK] struct pcb
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1  [STACK] void 
  1508 ;; Registers used:
  1509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1515 ;;      Params:         0       0       0       0       0       0       0
  1516 ;;      Locals:         0       0       0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0
  1518 ;;      Totals:         0       0       0       0       0       0       0
  1519 ;;Total ram usage:        0 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:   10
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_lunos_init
  1526 ;;		_main
  1527 ;; This function uses a reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text7
  1531  001090                     __ptext7:
  1532                           	opt callstack 0
  1533  001090                     _lunos_createTask:
  1534                           	opt callstack 0
  1535                           
  1536                           ; autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  1537  001090  0E6C               	movlw	108
  1538  001092  26E1               	addwf	fsr1l,f,c
  1539  001094  0E00               	movlw	0
  1540  001096  22E2               	addwfc	fsr1h,f,c
  1541                           
  1542                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
  1543                           
  1544                           ;incstack = 0
  1545  001098  EE22  F0F0         	lfsr	2,_ready_queue+540
  1546  00109C  CFDE F04D          	movff	postinc2,btemp+10
  1547  0010A0  CFDD F04E          	movff	postdec2,btemp+11
  1548  0010A4  0E01               	movlw	1
  1549  0010A6  264D               	addwf	btemp+10,f,c
  1550  0010A8  0E00               	movlw	0
  1551  0010AA  224E               	addwfc	btemp+11,f,c
  1552                           
  1553                           ;stkvar	_new_task @ sp[(-108)+0]
  1554  0010AC  0E94               	movlw	-108
  1555  0010AE  C04D  FFE3         	movff	btemp+10,plusw1
  1556  0010B2  0E95               	movlw	-107
  1557  0010B4  C04E  FFE3         	movff	btemp+11,plusw1
  1558                           
  1559                           ;kernel.c: 19:   new_task.task_prior = prior;
  1560                           ;stkvar	_prior @ sp[(-108)+-2]
  1561  0010B8  50E1               	movf	fsr1l,w,c
  1562  0010BA  0F92               	addlw	-110
  1563  0010BC  6ED9               	movwf	fsr2l,c
  1564  0010BE  50E2               	movf	fsr1h,w,c
  1565  0010C0  6EDA               	movwf	fsr2h,c
  1566  0010C2  0EFF               	movlw	255
  1567  0010C4  22DA               	addwfc	fsr2h,f,c
  1568                           
  1569                           ;stkvar	_new_task @ sp[(-108)+0]
  1570  0010C6  0E96               	movlw	150
  1571  0010C8  24E1               	addwf	fsr1l,w,c
  1572  0010CA  6EE9               	movwf	fsr0l,c
  1573  0010CC  0EFF               	movlw	255
  1574  0010CE  20E2               	addwfc	fsr1h,w,c
  1575  0010D0  6EEA               	movwf	fsr0h,c
  1576  0010D2  CFDE FFEE          	movff	postinc2,postinc0
  1577  0010D6  CFDD FFED          	movff	postdec2,postdec0
  1578                           
  1579                           ;kernel.c: 20:   new_task.task_state = READY;
  1580                           ;stkvar	_new_task @ sp[(-108)+0]
  1581  0010DA  0E9C               	movlw	156
  1582  0010DC  24E1               	addwf	fsr1l,w,c
  1583  0010DE  6ED9               	movwf	fsr2l,c
  1584  0010E0  0EFF               	movlw	255
  1585  0010E2  20E2               	addwfc	fsr1h,w,c
  1586  0010E4  6EDA               	movwf	fsr2h,c
  1587  0010E6  0E00               	movlw	0
  1588  0010E8  6EDF               	movwf	indf2,c
  1589                           
  1590                           ;kernel.c: 21:   new_task.task_f = f;
  1591                           ;stkvar	_f @ sp[(-108)+-4]
  1592  0010EA  50E1               	movf	fsr1l,w,c
  1593  0010EC  0F90               	addlw	-112
  1594  0010EE  6ED9               	movwf	fsr2l,c
  1595  0010F0  50E2               	movf	fsr1h,w,c
  1596  0010F2  6EDA               	movwf	fsr2h,c
  1597  0010F4  0EFF               	movlw	255
  1598  0010F6  22DA               	addwfc	fsr2h,f,c
  1599                           
  1600                           ;stkvar	_new_task @ sp[(-108)+0]
  1601  0010F8  0EFC               	movlw	252
  1602  0010FA  24E1               	addwf	fsr1l,w,c
  1603  0010FC  6EE9               	movwf	fsr0l,c
  1604  0010FE  0EFF               	movlw	255
  1605  001100  20E2               	addwfc	fsr1h,w,c
  1606  001102  6EEA               	movwf	fsr0h,c
  1607  001104  CFDE FFEE          	movff	postinc2,postinc0
  1608  001108  CFDD FFED          	movff	postdec2,postdec0
  1609                           
  1610                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
  1611                           ;stkvar	_new_task @ sp[(-108)+0]
  1612  00110C  0EFA               	movlw	250
  1613  00110E  24E1               	addwf	fsr1l,w,c
  1614  001110  6ED9               	movwf	fsr2l,c
  1615  001112  0EFF               	movlw	255
  1616  001114  20E2               	addwfc	fsr1h,w,c
  1617  001116  6EDA               	movwf	fsr2h,c
  1618  001118  0E00               	movlw	0
  1619  00111A  6EDE               	movwf	postinc2,c
  1620  00111C  0E00               	movlw	0
  1621  00111E  6EDD               	movwf	postdec2,c
  1622                           
  1623                           ;kernel.c: 23:   new_task.task_delay_time = 0;
  1624                           ;stkvar	_new_task @ sp[(-108)+0]
  1625  001120  0EFE               	movlw	254
  1626  001122  24E1               	addwf	fsr1l,w,c
  1627  001124  6ED9               	movwf	fsr2l,c
  1628  001126  0EFF               	movlw	255
  1629  001128  20E2               	addwfc	fsr1h,w,c
  1630  00112A  6EDA               	movwf	fsr2h,c
  1631  00112C  0E00               	movlw	0
  1632  00112E  6EDE               	movwf	postinc2,c
  1633  001130  0E00               	movlw	0
  1634  001132  6EDD               	movwf	postdec2,c
  1635                           
  1636                           ;kernel.c: 25:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
  1637                           ;stkvar	_new_task @ sp[(-108)+0]
  1638  001134  0E94               	movlw	148
  1639  001136  24E1               	addwf	fsr1l,w,c
  1640  001138  6ED9               	movwf	fsr2l,c
  1641  00113A  0EFF               	movlw	255
  1642  00113C  20E2               	addwfc	fsr1h,w,c
  1643  00113E  6EDA               	movwf	fsr2h,c
  1644  001140  EE02  F0F0         	lfsr	0,_ready_queue+540
  1645  001144  CFEE F04D          	movff	postinc0,btemp+10
  1646  001148  CFED F04E          	movff	postdec0,btemp+11
  1647  00114C  0E6C               	movlw	108
  1648  00114E  024D               	mulwf	btemp+10,c
  1649  001150  CFF3 F04B          	movff	prodl,btemp+8
  1650  001154  CFF4 F04C          	movff	prodh,btemp+9
  1651  001158  024E               	mulwf	btemp+11,c
  1652  00115A  50F3               	movf	prodl,w,c
  1653  00115C  264C               	addwf	btemp+9,f,c
  1654  00115E  0ED4               	movlw	low _ready_queue
  1655  001160  244B               	addwf	btemp+8,w,c
  1656  001162  6EE9               	movwf	fsr0l,c
  1657  001164  0E00               	movlw	high _ready_queue
  1658  001166  204C               	addwfc	btemp+9,w,c
  1659  001168  6EEA               	movwf	fsr0h,c
  1660  00116A  0E6B               	movlw	107
  1661  00116C                     u661:
  1662  00116C  CFDB FFEB          	movff	plusw2,plusw0
  1663  001170  06E8               	decf	wreg,f,c
  1664  001172  E2FC               	bc	u661
  1665                           
  1666                           ;kernel.c: 26:   ready_queue.tasks_installed++;
  1667  001174  EE22  F0F0         	lfsr	2,_ready_queue+540
  1668  001178  2ADE               	incf	postinc2,f,c
  1669  00117A  0E00               	movlw	0
  1670  00117C  22DD               	addwfc	postdec2,f,c
  1671                           
  1672                           ; _lunos_createTask: autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
  1673  00117E  0E90               	movlw	144
  1674  001180  26E1               	addwf	fsr1l,f,c
  1675  001182  0EFF               	movlw	255
  1676  001184  22E2               	addwfc	fsr1h,f,c
  1677  001186  0012               	return		;funcret
  1678  001188                     __end_of_lunos_createTask:
  1679                           	opt callstack 0
  1680                           
  1681 ;; *************** function _SRAMInitHeap *****************
  1682 ;; Defined at:
  1683 ;;		line 313 in file "sralloc.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  count           2  [STACK] unsigned int 
  1688 ;;  pHeap           2  [STACK] PTR unsigned char 
  1689 ;;		 -> _uDynamicHeap(512), 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1  [STACK] void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1699 ;;      Params:         0       0       0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:   10
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_lunos_init
  1710 ;; This function uses a reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text8
  1714  001366                     __ptext8:
  1715                           	opt callstack 0
  1716  001366                     _SRAMInitHeap:
  1717                           	opt callstack 0
  1718                           
  1719                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1720  001366  52E6               	movf	postinc1,f,c
  1721  001368  52E6               	movf	postinc1,f,c
  1722  00136A  52E6               	movf	postinc1,f,c
  1723  00136C  52E6               	movf	postinc1,f,c
  1724                           
  1725                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
  1726                           ;stkvar	_pHeap @ sp[(-4)+2]
  1727                           
  1728                           ;incstack = 0
  1729  00136E  0E02               	movlw	high __uDynamicHeap
  1730  001370  6E43               	movwf	btemp,c
  1731  001372  0EFF               	movlw	-1
  1732  001374  C043  FFE3         	movff	btemp,plusw1
  1733  001378  0EF4               	movlw	low __uDynamicHeap
  1734  00137A  6E43               	movwf	btemp,c
  1735  00137C  0EFE               	movlw	-2
  1736  00137E  C043  FFE3         	movff	btemp,plusw1
  1737                           
  1738                           ;sralloc.c: 319:  count = 0x200 -1;
  1739  001382  0EFF               	movlw	255
  1740  001384  6E4D               	movwf	btemp+10,c
  1741  001386  0E01               	movlw	1
  1742  001388  6E4E               	movwf	btemp+11,c
  1743                           
  1744                           ;stkvar	_count @ sp[(-4)+0]
  1745  00138A  0EFC               	movlw	-4
  1746  00138C  C04D  FFE3         	movff	btemp+10,plusw1
  1747  001390  0EFD               	movlw	-3
  1748  001392  C04E  FFE3         	movff	btemp+11,plusw1
  1749  001396                     l1810:
  1750                           
  1751                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
  1752                           ;stkvar	_count @ sp[(-4)+0]
  1753  001396  0EFD               	movlw	-3
  1754  001398  50E3               	movf	plusw1,w,c
  1755  00139A  E107               	bnz	u700
  1756  00139C  0EFC               	movlw	-4
  1757  00139E  CFE3 F043          	movff	plusw1,btemp
  1758  0013A2  0E80               	movlw	128
  1759  0013A4  5E43               	subwf	btemp,f,c
  1760  0013A6  A0D8               	btfss	status,0,c
  1761  0013A8  D023               	goto	l1818
  1762  0013AA                     u700:
  1763                           
  1764                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
  1765                           ;stkvar	_pHeap @ sp[(-4)+2]
  1766  0013AA  0EFE               	movlw	-2
  1767  0013AC  CFE3 FFD9          	movff	plusw1,fsr2l
  1768  0013B0  0EFF               	movlw	-1
  1769  0013B2  CFE3 FFDA          	movff	plusw1,fsr2h
  1770  0013B6  0E7F               	movlw	127
  1771  0013B8  6EDF               	movwf	indf2,c
  1772                           
  1773                           ;sralloc.c: 326:    pHeap += 0x7F;
  1774                           ;stkvar	_pHeap @ sp[(-4)+2]
  1775  0013BA  0EFE               	movlw	-2
  1776  0013BC  50E3               	movf	plusw1,w,c
  1777  0013BE  0F7F               	addlw	127
  1778  0013C0  6E43               	movwf	btemp,c
  1779  0013C2  0EFE               	movlw	-2
  1780  0013C4  C043  FFE3         	movff	btemp,plusw1
  1781  0013C8  6A43               	clrf	btemp,c
  1782  0013CA  0EFF               	movlw	-1
  1783  0013CC  50E3               	movf	plusw1,w,c
  1784  0013CE  2043               	addwfc	btemp,w,c
  1785  0013D0  6E43               	movwf	btemp,c
  1786  0013D2  0EFF               	movlw	-1
  1787  0013D4  C043  FFE3         	movff	btemp,plusw1
  1788                           
  1789                           ;sralloc.c: 327:    count = count - 0x7F;
  1790                           ;stkvar	_count @ sp[(-4)+0]
  1791  0013D8  50E1               	movf	fsr1l,w,c
  1792  0013DA  0FFC               	addlw	-4
  1793  0013DC  6ED9               	movwf	fsr2l,c
  1794  0013DE  50E2               	movf	fsr1h,w,c
  1795  0013E0  6EDA               	movwf	fsr2h,c
  1796  0013E2  0EFF               	movlw	255
  1797  0013E4  22DA               	addwfc	fsr2h,f,c
  1798  0013E6  0E81               	movlw	129
  1799  0013E8  26DE               	addwf	postinc2,f,c
  1800  0013EA  0EFF               	movlw	255
  1801  0013EC  22DD               	addwfc	postdec2,f,c
  1802                           
  1803                           ;sralloc.c: 328:   }
  1804  0013EE  D7D3               	goto	l1810
  1805  0013F0                     l1818:
  1806                           
  1807                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1808                           ;stkvar	_count @ sp[(-4)+0]
  1809                           ;stkvar	_pHeap @ sp[(-4)+2]
  1810  0013F0  0EFE               	movlw	-2
  1811  0013F2  CFE3 FFD9          	movff	plusw1,fsr2l
  1812  0013F6  0EFF               	movlw	-1
  1813  0013F8  CFE3 FFDA          	movff	plusw1,fsr2h
  1814  0013FC  0EFC               	movlw	-4
  1815  0013FE  CFE3 FFDF          	movff	plusw1,indf2
  1816                           
  1817                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1818                           ;stkvar	_count @ sp[(-4)+0]
  1819  001402  0EFC               	movlw	-4
  1820  001404  CFE3 F04D          	movff	plusw1,btemp+10
  1821  001408  0EFD               	movlw	-3
  1822  00140A  CFE3 F04E          	movff	plusw1,btemp+11
  1823                           
  1824                           ;stkvar	_pHeap @ sp[(-4)+2]
  1825  00140E  0EFE               	movlw	-2
  1826  001410  CFE3 F04B          	movff	plusw1,btemp+8
  1827  001414  0EFF               	movlw	-1
  1828  001416  CFE3 F04C          	movff	plusw1,btemp+9
  1829  00141A  504D               	movf	btemp+10,w,c
  1830  00141C  244B               	addwf	btemp+8,w,c
  1831  00141E  6ED9               	movwf	fsr2l,c
  1832  001420  504E               	movf	btemp+11,w,c
  1833  001422  204C               	addwfc	btemp+9,w,c
  1834  001424  6EDA               	movwf	fsr2h,c
  1835  001426  0E00               	movlw	0
  1836  001428  6EDF               	movwf	indf2,c
  1837                           
  1838                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1839  00142A  52E5               	movf	postdec1,f,c
  1840  00142C  52E5               	movf	postdec1,f,c
  1841  00142E  52E5               	movf	postdec1,f,c
  1842  001430  52E5               	movf	postdec1,f,c
  1843  001432  0012               	return		;funcret
  1844  001434                     __end_of_SRAMInitHeap:
  1845                           	opt callstack 0
  1846                           
  1847 ;; *************** function _dispatcher *****************
  1848 ;; Defined at:
  1849 ;;		line 64 in file "kernel.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  state           1  [STACK] enum E4
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1  [STACK] void 
  1856 ;; Registers used:
  1857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1863 ;;      Params:         0       0       0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0
  1866 ;;      Totals:         0       0       0       0       0       0       0
  1867 ;;Total ram usage:        0 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:   13
  1870 ;; This function calls:
  1871 ;;		_scheduler
  1872 ;; This function is called by:
  1873 ;;		_lunos_delayTask
  1874 ;;		_main
  1875 ;;		_sem_wait
  1876 ;; This function uses a reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text9
  1880  0004CC                     __ptext9:
  1881                           	opt callstack 0
  1882  0004CC                     _dispatcher:
  1883                           	opt callstack 11
  1884                           
  1885                           ;kernel.c: 65:   INTCONbits.GIE = 0;
  1886                           
  1887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1888                           ;incstack = 0
  1889  0004CC  9EF2               	bcf	4082,7,c	;volatile
  1890                           
  1891                           ;kernel.c: 67:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  1892  0004CE  C2F2  F00B         	movff	_ready_queue+542,_who
  1893  0004D2  C2F3  F00C         	movff	_ready_queue+543,_who+1
  1894                           
  1895                           ;stkvar	_state @ sp[(0)+-1]
  1896  0004D6  C00B  F04D         	movff	_who,btemp+10
  1897  0004DA  C00C  F04E         	movff	_who+1,btemp+11
  1898  0004DE  0E6C               	movlw	108
  1899  0004E0  024D               	mulwf	btemp+10,c
  1900  0004E2  CFF3 F04B          	movff	prodl,btemp+8
  1901  0004E6  CFF4 F04C          	movff	prodh,btemp+9
  1902  0004EA  024E               	mulwf	btemp+11,c
  1903  0004EC  50F3               	movf	prodl,w,c
  1904  0004EE  264C               	addwf	btemp+9,f,c
  1905  0004F0  0EDC               	movlw	low (_ready_queue+8)
  1906  0004F2  244B               	addwf	btemp+8,w,c
  1907  0004F4  6ED9               	movwf	fsr2l,c
  1908  0004F6  0E00               	movlw	high (_ready_queue+8)
  1909  0004F8  204C               	addwfc	btemp+9,w,c
  1910  0004FA  6EDA               	movwf	fsr2h,c
  1911  0004FC  0EFF               	movlw	-1
  1912  0004FE  CFE3 FFDF          	movff	plusw1,indf2
  1913  000502  C00B  F04D         	movff	_who,btemp+10
  1914  000506  C00C  F04E         	movff	_who+1,btemp+11
  1915  00050A  0E6C               	movlw	108
  1916  00050C  024D               	mulwf	btemp+10,c
  1917  00050E  CFF3 F04B          	movff	prodl,btemp+8
  1918  000512  CFF4 F04C          	movff	prodh,btemp+9
  1919  000516  024E               	mulwf	btemp+11,c
  1920  000518  50F3               	movf	prodl,w,c
  1921  00051A  264C               	addwf	btemp+9,f,c
  1922  00051C  0ED9               	movlw	low (_ready_queue+5)
  1923  00051E  244B               	addwf	btemp+8,w,c
  1924  000520  6ED9               	movwf	fsr2l,c
  1925  000522  0E00               	movlw	high (_ready_queue+5)
  1926  000524  204C               	addwfc	btemp+9,w,c
  1927  000526  6EDA               	movwf	fsr2h,c
  1928  000528  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1929  00052C  C00B  F04D         	movff	_who,btemp+10
  1930  000530  C00C  F04E         	movff	_who+1,btemp+11
  1931  000534  0E6C               	movlw	108
  1932  000536  024D               	mulwf	btemp+10,c
  1933  000538  CFF3 F04B          	movff	prodl,btemp+8
  1934  00053C  CFF4 F04C          	movff	prodh,btemp+9
  1935  000540  024E               	mulwf	btemp+11,c
  1936  000542  50F3               	movf	prodl,w,c
  1937  000544  264C               	addwf	btemp+9,f,c
  1938  000546  0EDA               	movlw	low (_ready_queue+6)
  1939  000548  244B               	addwf	btemp+8,w,c
  1940  00054A  6ED9               	movwf	fsr2l,c
  1941  00054C  0E00               	movlw	high (_ready_queue+6)
  1942  00054E  204C               	addwfc	btemp+9,w,c
  1943  000550  6EDA               	movwf	fsr2h,c
  1944  000552  CFD8 FFDF          	movff	status,indf2	;volatile
  1945  000556  C00B  F04D         	movff	_who,btemp+10
  1946  00055A  C00C  F04E         	movff	_who+1,btemp+11
  1947  00055E  0E6C               	movlw	108
  1948  000560  024D               	mulwf	btemp+10,c
  1949  000562  CFF3 F04B          	movff	prodl,btemp+8
  1950  000566  CFF4 F04C          	movff	prodh,btemp+9
  1951  00056A  024E               	mulwf	btemp+11,c
  1952  00056C  50F3               	movf	prodl,w,c
  1953  00056E  264C               	addwf	btemp+9,f,c
  1954  000570  0EDB               	movlw	low (_ready_queue+7)
  1955  000572  244B               	addwf	btemp+8,w,c
  1956  000574  6ED9               	movwf	fsr2l,c
  1957  000576  0E00               	movlw	high (_ready_queue+7)
  1958  000578  204C               	addwfc	btemp+9,w,c
  1959  00057A  6EDA               	movwf	fsr2h,c
  1960  00057C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1961  000580  6A09               	clrf	_size,c
  1962  000582  6A0A               	clrf	_size+1,c
  1963  000584  D08D               	goto	l1782
  1964  000586                     l1778:
  1965  000586  C009  F04D         	movff	_size,btemp+10
  1966  00058A  C00A  F04E         	movff	_size+1,btemp+11
  1967  00058E  0E03               	movlw	3
  1968  000590  024D               	mulwf	btemp+10,c
  1969  000592  CFF3 F04B          	movff	prodl,btemp+8
  1970  000596  CFF4 F04C          	movff	prodh,btemp+9
  1971  00059A  024E               	mulwf	btemp+11,c
  1972  00059C  50F3               	movf	prodl,w,c
  1973  00059E  264C               	addwf	btemp+9,f,c
  1974  0005A0  C00B  F04D         	movff	_who,btemp+10
  1975  0005A4  C00C  F04E         	movff	_who+1,btemp+11
  1976  0005A8  0E6C               	movlw	108
  1977  0005AA  024D               	mulwf	btemp+10,c
  1978  0005AC  CFF3 F049          	movff	prodl,btemp+6
  1979  0005B0  CFF4 F04A          	movff	prodh,btemp+7
  1980  0005B4  024E               	mulwf	btemp+11,c
  1981  0005B6  50F3               	movf	prodl,w,c
  1982  0005B8  264A               	addwf	btemp+7,f,c
  1983  0005BA  0ED4               	movlw	low _ready_queue
  1984  0005BC  6E4D               	movwf	btemp+10,c
  1985  0005BE  0E00               	movlw	high _ready_queue
  1986  0005C0  6E4E               	movwf	btemp+11,c
  1987  0005C2  0E09               	movlw	9
  1988  0005C4  264D               	addwf	btemp+10,f,c
  1989  0005C6  0E00               	movlw	0
  1990  0005C8  224E               	addwfc	btemp+11,f,c
  1991  0005CA  5049               	movf	btemp+6,w,c
  1992  0005CC  264D               	addwf	btemp+10,f,c
  1993  0005CE  504A               	movf	btemp+7,w,c
  1994  0005D0  224E               	addwfc	btemp+11,f,c
  1995  0005D2  504B               	movf	btemp+8,w,c
  1996  0005D4  244D               	addwf	btemp+10,w,c
  1997  0005D6  6ED9               	movwf	fsr2l,c
  1998  0005D8  504C               	movf	btemp+9,w,c
  1999  0005DA  204E               	addwfc	btemp+11,w,c
  2000  0005DC  6EDA               	movwf	fsr2h,c
  2001  0005DE  CFFF FFDF          	movff	tosu,indf2	;volatile
  2002  0005E2  C009  F04D         	movff	_size,btemp+10
  2003  0005E6  C00A  F04E         	movff	_size+1,btemp+11
  2004  0005EA  0E03               	movlw	3
  2005  0005EC  024D               	mulwf	btemp+10,c
  2006  0005EE  CFF3 F04B          	movff	prodl,btemp+8
  2007  0005F2  CFF4 F04C          	movff	prodh,btemp+9
  2008  0005F6  024E               	mulwf	btemp+11,c
  2009  0005F8  50F3               	movf	prodl,w,c
  2010  0005FA  264C               	addwf	btemp+9,f,c
  2011  0005FC  C00B  F04D         	movff	_who,btemp+10
  2012  000600  C00C  F04E         	movff	_who+1,btemp+11
  2013  000604  0E6C               	movlw	108
  2014  000606  024D               	mulwf	btemp+10,c
  2015  000608  CFF3 F049          	movff	prodl,btemp+6
  2016  00060C  CFF4 F04A          	movff	prodh,btemp+7
  2017  000610  024E               	mulwf	btemp+11,c
  2018  000612  50F3               	movf	prodl,w,c
  2019  000614  264A               	addwf	btemp+7,f,c
  2020  000616  0ED4               	movlw	low _ready_queue
  2021  000618  6E4D               	movwf	btemp+10,c
  2022  00061A  0E00               	movlw	high _ready_queue
  2023  00061C  6E4E               	movwf	btemp+11,c
  2024  00061E  0E0B               	movlw	11
  2025  000620  264D               	addwf	btemp+10,f,c
  2026  000622  0E00               	movlw	0
  2027  000624  224E               	addwfc	btemp+11,f,c
  2028  000626  5049               	movf	btemp+6,w,c
  2029  000628  264D               	addwf	btemp+10,f,c
  2030  00062A  504A               	movf	btemp+7,w,c
  2031  00062C  224E               	addwfc	btemp+11,f,c
  2032  00062E  504B               	movf	btemp+8,w,c
  2033  000630  244D               	addwf	btemp+10,w,c
  2034  000632  6ED9               	movwf	fsr2l,c
  2035  000634  504C               	movf	btemp+9,w,c
  2036  000636  204E               	addwfc	btemp+11,w,c
  2037  000638  6EDA               	movwf	fsr2h,c
  2038  00063A  CFFE FFDF          	movff	tosh,indf2	;volatile
  2039  00063E  C009  F04D         	movff	_size,btemp+10
  2040  000642  C00A  F04E         	movff	_size+1,btemp+11
  2041  000646  0E03               	movlw	3
  2042  000648  024D               	mulwf	btemp+10,c
  2043  00064A  CFF3 F04B          	movff	prodl,btemp+8
  2044  00064E  CFF4 F04C          	movff	prodh,btemp+9
  2045  000652  024E               	mulwf	btemp+11,c
  2046  000654  50F3               	movf	prodl,w,c
  2047  000656  264C               	addwf	btemp+9,f,c
  2048  000658  C00B  F04D         	movff	_who,btemp+10
  2049  00065C  C00C  F04E         	movff	_who+1,btemp+11
  2050  000660  0E6C               	movlw	108
  2051  000662  024D               	mulwf	btemp+10,c
  2052  000664  CFF3 F049          	movff	prodl,btemp+6
  2053  000668  CFF4 F04A          	movff	prodh,btemp+7
  2054  00066C  024E               	mulwf	btemp+11,c
  2055  00066E  50F3               	movf	prodl,w,c
  2056  000670  264A               	addwf	btemp+7,f,c
  2057  000672  0ED4               	movlw	low _ready_queue
  2058  000674  6E4D               	movwf	btemp+10,c
  2059  000676  0E00               	movlw	high _ready_queue
  2060  000678  6E4E               	movwf	btemp+11,c
  2061  00067A  0E0A               	movlw	10
  2062  00067C  264D               	addwf	btemp+10,f,c
  2063  00067E  0E00               	movlw	0
  2064  000680  224E               	addwfc	btemp+11,f,c
  2065  000682  5049               	movf	btemp+6,w,c
  2066  000684  264D               	addwf	btemp+10,f,c
  2067  000686  504A               	movf	btemp+7,w,c
  2068  000688  224E               	addwfc	btemp+11,f,c
  2069  00068A  504B               	movf	btemp+8,w,c
  2070  00068C  244D               	addwf	btemp+10,w,c
  2071  00068E  6ED9               	movwf	fsr2l,c
  2072  000690  504C               	movf	btemp+9,w,c
  2073  000692  204E               	addwfc	btemp+11,w,c
  2074  000694  6EDA               	movwf	fsr2h,c
  2075  000696  CFFD FFDF          	movff	tosl,indf2	;volatile
  2076  00069A  4A09               	infsnz	_size,f,c
  2077  00069C  2A0A               	incf	_size+1,f,c
  2078  00069E  0006               	pop		;# 
  2079  0006A0                     l1782:
  2080  0006A0  50FC               	movf	stkptr,w,c	;volatile
  2081  0006A2  A4D8               	btfss	status,2,c
  2082  0006A4  D770               	goto	l1778
  2083  0006A6  0EFF               	movlw	255
  2084  0006A8  6E4D               	movwf	btemp+10,c
  2085  0006AA  0EFF               	movlw	255
  2086  0006AC  6E4E               	movwf	btemp+11,c
  2087  0006AE  C009  F04B         	movff	_size,btemp+8
  2088  0006B2  C00A  F04C         	movff	_size+1,btemp+9
  2089  0006B6  504D               	movf	btemp+10,w,c
  2090  0006B8  264B               	addwf	btemp+8,f,c
  2091  0006BA  504E               	movf	btemp+11,w,c
  2092  0006BC  224C               	addwfc	btemp+9,f,c
  2093  0006BE  C00B  F04D         	movff	_who,btemp+10
  2094  0006C2  C00C  F04E         	movff	_who+1,btemp+11
  2095  0006C6  0E6C               	movlw	108
  2096  0006C8  024D               	mulwf	btemp+10,c
  2097  0006CA  CFF3 F049          	movff	prodl,btemp+6
  2098  0006CE  CFF4 F04A          	movff	prodh,btemp+7
  2099  0006D2  024E               	mulwf	btemp+11,c
  2100  0006D4  50F3               	movf	prodl,w,c
  2101  0006D6  264A               	addwf	btemp+7,f,c
  2102  0006D8  0E3A               	movlw	low (_ready_queue+102)
  2103  0006DA  2449               	addwf	btemp+6,w,c
  2104  0006DC  6ED9               	movwf	fsr2l,c
  2105  0006DE  0E01               	movlw	high (_ready_queue+102)
  2106  0006E0  204A               	addwfc	btemp+7,w,c
  2107  0006E2  6EDA               	movwf	fsr2h,c
  2108  0006E4  C04B  FFDE         	movff	btemp+8,postinc2
  2109  0006E8  C04C  FFDD         	movff	btemp+9,postdec2
  2110                           
  2111                           ;kernel.c: 69:   ready_queue.task_running = scheduler();
  2112  0006EC  ECF9  F00D         	call	_scheduler	;wreg free
  2113  0006F0  C043  F2F2         	movff	btemp,_ready_queue+542
  2114  0006F4  C044  F2F3         	movff	btemp+1,_ready_queue+543
  2115                           
  2116                           ;kernel.c: 71:   { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.tasks[who
      +                          ].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task_f; } e
      +                          lse { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].W_reg; 
      +                          STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg; size =
      +                           ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL = read
      +                          y_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[who].task
      +                          _stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[size].TO
      +                          SU_reg; size--; } }};
  2117  0006F8  C2F2  F00B         	movff	_ready_queue+542,_who
  2118  0006FC  C2F3  F00C         	movff	_ready_queue+543,_who+1
  2119  000700  6AFC               	clrf	stkptr,c	;volatile
  2120  000702  C00B  F04D         	movff	_who,btemp+10
  2121  000706  C00C  F04E         	movff	_who+1,btemp+11
  2122  00070A  0E6C               	movlw	108
  2123  00070C  024D               	mulwf	btemp+10,c
  2124  00070E  CFF3 F04B          	movff	prodl,btemp+8
  2125  000712  CFF4 F04C          	movff	prodh,btemp+9
  2126  000716  024E               	mulwf	btemp+11,c
  2127  000718  50F3               	movf	prodl,w,c
  2128  00071A  264C               	addwf	btemp+9,f,c
  2129  00071C  0E3A               	movlw	low (_ready_queue+102)
  2130  00071E  244B               	addwf	btemp+8,w,c
  2131  000720  6ED9               	movwf	fsr2l,c
  2132  000722  0E01               	movlw	high (_ready_queue+102)
  2133  000724  204C               	addwfc	btemp+9,w,c
  2134  000726  6EDA               	movwf	fsr2h,c
  2135  000728  50DE               	movf	postinc2,w,c
  2136  00072A  10DE               	iorwf	postinc2,w,c
  2137  00072C  A4D8               	btfss	status,2,c
  2138  00072E  D01E               	goto	l1798
  2139  000730  0005               	push		;# 
  2140  000732  C00B  F04D         	movff	_who,btemp+10
  2141  000736  C00C  F04E         	movff	_who+1,btemp+11
  2142  00073A  0E6C               	movlw	108
  2143  00073C  024D               	mulwf	btemp+10,c
  2144  00073E  CFF3 F04B          	movff	prodl,btemp+8
  2145  000742  CFF4 F04C          	movff	prodh,btemp+9
  2146  000746  024E               	mulwf	btemp+11,c
  2147  000748  50F3               	movf	prodl,w,c
  2148  00074A  264C               	addwf	btemp+9,f,c
  2149  00074C  0E3C               	movlw	low (_ready_queue+104)
  2150  00074E  244B               	addwf	btemp+8,w,c
  2151  000750  6ED9               	movwf	fsr2l,c
  2152  000752  0E01               	movlw	high (_ready_queue+104)
  2153  000754  204C               	addwfc	btemp+9,w,c
  2154  000756  6EDA               	movwf	fsr2h,c
  2155  000758  CFDE F04D          	movff	postinc2,btemp+10
  2156  00075C  CFDD F04E          	movff	postdec2,btemp+11
  2157  000760  C04D  FFFD         	movff	btemp+10,tosl	;volatile
  2158  000764  C04E  FFFE         	movff	btemp+11,tosh	;volatile
  2159  000768  6AFF               	clrf	tosu,c	;volatile
  2160  00076A  D0FF               	goto	u690
  2161  00076C                     l1798:
  2162  00076C  C00B  F04D         	movff	_who,btemp+10
  2163  000770  C00C  F04E         	movff	_who+1,btemp+11
  2164  000774  0E6C               	movlw	108
  2165  000776  024D               	mulwf	btemp+10,c
  2166  000778  CFF3 F04B          	movff	prodl,btemp+8
  2167  00077C  CFF4 F04C          	movff	prodh,btemp+9
  2168  000780  024E               	mulwf	btemp+11,c
  2169  000782  50F3               	movf	prodl,w,c
  2170  000784  264C               	addwf	btemp+9,f,c
  2171  000786  0EDC               	movlw	low (_ready_queue+8)
  2172  000788  244B               	addwf	btemp+8,w,c
  2173  00078A  6ED9               	movwf	fsr2l,c
  2174  00078C  0E00               	movlw	high (_ready_queue+8)
  2175  00078E  204C               	addwfc	btemp+9,w,c
  2176  000790  6EDA               	movwf	fsr2h,c
  2177  000792  0E01               	movlw	1
  2178  000794  6EDF               	movwf	indf2,c
  2179  000796  C00B  F04D         	movff	_who,btemp+10
  2180  00079A  C00C  F04E         	movff	_who+1,btemp+11
  2181  00079E  0E6C               	movlw	108
  2182  0007A0  024D               	mulwf	btemp+10,c
  2183  0007A2  CFF3 F04B          	movff	prodl,btemp+8
  2184  0007A6  CFF4 F04C          	movff	prodh,btemp+9
  2185  0007AA  024E               	mulwf	btemp+11,c
  2186  0007AC  50F3               	movf	prodl,w,c
  2187  0007AE  264C               	addwf	btemp+9,f,c
  2188  0007B0  0ED9               	movlw	low (_ready_queue+5)
  2189  0007B2  244B               	addwf	btemp+8,w,c
  2190  0007B4  6ED9               	movwf	fsr2l,c
  2191  0007B6  0E00               	movlw	high (_ready_queue+5)
  2192  0007B8  204C               	addwfc	btemp+9,w,c
  2193  0007BA  6EDA               	movwf	fsr2h,c
  2194  0007BC  50DF               	movf	indf2,w,c
  2195  0007BE  6E4E               	movwf	btemp+11,c
  2196  0007C0  504E               	movf	btemp+11,w,c
  2197  0007C2  C00B  F04D         	movff	_who,btemp+10
  2198  0007C6  C00C  F04E         	movff	_who+1,btemp+11
  2199  0007CA  0E6C               	movlw	108
  2200  0007CC  024D               	mulwf	btemp+10,c
  2201  0007CE  CFF3 F04B          	movff	prodl,btemp+8
  2202  0007D2  CFF4 F04C          	movff	prodh,btemp+9
  2203  0007D6  024E               	mulwf	btemp+11,c
  2204  0007D8  50F3               	movf	prodl,w,c
  2205  0007DA  264C               	addwf	btemp+9,f,c
  2206  0007DC  0EDA               	movlw	low (_ready_queue+6)
  2207  0007DE  244B               	addwf	btemp+8,w,c
  2208  0007E0  6ED9               	movwf	fsr2l,c
  2209  0007E2  0E00               	movlw	high (_ready_queue+6)
  2210  0007E4  204C               	addwfc	btemp+9,w,c
  2211  0007E6  6EDA               	movwf	fsr2h,c
  2212  0007E8  50DF               	movf	indf2,w,c
  2213  0007EA  6ED8               	movwf	status,c	;volatile
  2214  0007EC  C00B  F04D         	movff	_who,btemp+10
  2215  0007F0  C00C  F04E         	movff	_who+1,btemp+11
  2216  0007F4  0E6C               	movlw	108
  2217  0007F6  024D               	mulwf	btemp+10,c
  2218  0007F8  CFF3 F04B          	movff	prodl,btemp+8
  2219  0007FC  CFF4 F04C          	movff	prodh,btemp+9
  2220  000800  024E               	mulwf	btemp+11,c
  2221  000802  50F3               	movf	prodl,w,c
  2222  000804  264C               	addwf	btemp+9,f,c
  2223  000806  0EDB               	movlw	low (_ready_queue+7)
  2224  000808  244B               	addwf	btemp+8,w,c
  2225  00080A  6ED9               	movwf	fsr2l,c
  2226  00080C  0E00               	movlw	high (_ready_queue+7)
  2227  00080E  204C               	addwfc	btemp+9,w,c
  2228  000810  6EDA               	movwf	fsr2h,c
  2229  000812  50DF               	movf	indf2,w,c
  2230  000814  6EE0               	movwf	bsr,c	;volatile
  2231  000816  C00B  F04D         	movff	_who,btemp+10
  2232  00081A  C00C  F04E         	movff	_who+1,btemp+11
  2233  00081E  0E6C               	movlw	108
  2234  000820  024D               	mulwf	btemp+10,c
  2235  000822  CFF3 F04B          	movff	prodl,btemp+8
  2236  000826  CFF4 F04C          	movff	prodh,btemp+9
  2237  00082A  024E               	mulwf	btemp+11,c
  2238  00082C  50F3               	movf	prodl,w,c
  2239  00082E  264C               	addwf	btemp+9,f,c
  2240  000830  0E3A               	movlw	low (_ready_queue+102)
  2241  000832  244B               	addwf	btemp+8,w,c
  2242  000834  6ED9               	movwf	fsr2l,c
  2243  000836  0E01               	movlw	high (_ready_queue+102)
  2244  000838  204C               	addwfc	btemp+9,w,c
  2245  00083A  6EDA               	movwf	fsr2h,c
  2246  00083C  CFDE F009          	movff	postinc2,_size
  2247  000840  CFDD F00A          	movff	postdec2,_size+1
  2248  000844  D08E               	goto	l1804
  2249  000846                     l127:
  2250  000846  0005               	push		;# 
  2251  000848  C009  F04D         	movff	_size,btemp+10
  2252  00084C  C00A  F04E         	movff	_size+1,btemp+11
  2253  000850  0E03               	movlw	3
  2254  000852  024D               	mulwf	btemp+10,c
  2255  000854  CFF3 F04B          	movff	prodl,btemp+8
  2256  000858  CFF4 F04C          	movff	prodh,btemp+9
  2257  00085C  024E               	mulwf	btemp+11,c
  2258  00085E  50F3               	movf	prodl,w,c
  2259  000860  264C               	addwf	btemp+9,f,c
  2260  000862  C00B  F04D         	movff	_who,btemp+10
  2261  000866  C00C  F04E         	movff	_who+1,btemp+11
  2262  00086A  0E6C               	movlw	108
  2263  00086C  024D               	mulwf	btemp+10,c
  2264  00086E  CFF3 F049          	movff	prodl,btemp+6
  2265  000872  CFF4 F04A          	movff	prodh,btemp+7
  2266  000876  024E               	mulwf	btemp+11,c
  2267  000878  50F3               	movf	prodl,w,c
  2268  00087A  264A               	addwf	btemp+7,f,c
  2269  00087C  0ED4               	movlw	low _ready_queue
  2270  00087E  6E4D               	movwf	btemp+10,c
  2271  000880  0E00               	movlw	high _ready_queue
  2272  000882  6E4E               	movwf	btemp+11,c
  2273  000884  0E0A               	movlw	10
  2274  000886  264D               	addwf	btemp+10,f,c
  2275  000888  0E00               	movlw	0
  2276  00088A  224E               	addwfc	btemp+11,f,c
  2277  00088C  5049               	movf	btemp+6,w,c
  2278  00088E  264D               	addwf	btemp+10,f,c
  2279  000890  504A               	movf	btemp+7,w,c
  2280  000892  224E               	addwfc	btemp+11,f,c
  2281  000894  504B               	movf	btemp+8,w,c
  2282  000896  244D               	addwf	btemp+10,w,c
  2283  000898  6ED9               	movwf	fsr2l,c
  2284  00089A  504C               	movf	btemp+9,w,c
  2285  00089C  204E               	addwfc	btemp+11,w,c
  2286  00089E  6EDA               	movwf	fsr2h,c
  2287  0008A0  50DF               	movf	indf2,w,c
  2288  0008A2  6EFD               	movwf	tosl,c	;volatile
  2289  0008A4  C009  F04D         	movff	_size,btemp+10
  2290  0008A8  C00A  F04E         	movff	_size+1,btemp+11
  2291  0008AC  0E03               	movlw	3
  2292  0008AE  024D               	mulwf	btemp+10,c
  2293  0008B0  CFF3 F04B          	movff	prodl,btemp+8
  2294  0008B4  CFF4 F04C          	movff	prodh,btemp+9
  2295  0008B8  024E               	mulwf	btemp+11,c
  2296  0008BA  50F3               	movf	prodl,w,c
  2297  0008BC  264C               	addwf	btemp+9,f,c
  2298  0008BE  C00B  F04D         	movff	_who,btemp+10
  2299  0008C2  C00C  F04E         	movff	_who+1,btemp+11
  2300  0008C6  0E6C               	movlw	108
  2301  0008C8  024D               	mulwf	btemp+10,c
  2302  0008CA  CFF3 F049          	movff	prodl,btemp+6
  2303  0008CE  CFF4 F04A          	movff	prodh,btemp+7
  2304  0008D2  024E               	mulwf	btemp+11,c
  2305  0008D4  50F3               	movf	prodl,w,c
  2306  0008D6  264A               	addwf	btemp+7,f,c
  2307  0008D8  0ED4               	movlw	low _ready_queue
  2308  0008DA  6E4D               	movwf	btemp+10,c
  2309  0008DC  0E00               	movlw	high _ready_queue
  2310  0008DE  6E4E               	movwf	btemp+11,c
  2311  0008E0  0E0B               	movlw	11
  2312  0008E2  264D               	addwf	btemp+10,f,c
  2313  0008E4  0E00               	movlw	0
  2314  0008E6  224E               	addwfc	btemp+11,f,c
  2315  0008E8  5049               	movf	btemp+6,w,c
  2316  0008EA  264D               	addwf	btemp+10,f,c
  2317  0008EC  504A               	movf	btemp+7,w,c
  2318  0008EE  224E               	addwfc	btemp+11,f,c
  2319  0008F0  504B               	movf	btemp+8,w,c
  2320  0008F2  244D               	addwf	btemp+10,w,c
  2321  0008F4  6ED9               	movwf	fsr2l,c
  2322  0008F6  504C               	movf	btemp+9,w,c
  2323  0008F8  204E               	addwfc	btemp+11,w,c
  2324  0008FA  6EDA               	movwf	fsr2h,c
  2325  0008FC  50DF               	movf	indf2,w,c
  2326  0008FE  6EFE               	movwf	tosh,c	;volatile
  2327  000900  C009  F04D         	movff	_size,btemp+10
  2328  000904  C00A  F04E         	movff	_size+1,btemp+11
  2329  000908  0E03               	movlw	3
  2330  00090A  024D               	mulwf	btemp+10,c
  2331  00090C  CFF3 F04B          	movff	prodl,btemp+8
  2332  000910  CFF4 F04C          	movff	prodh,btemp+9
  2333  000914  024E               	mulwf	btemp+11,c
  2334  000916  50F3               	movf	prodl,w,c
  2335  000918  264C               	addwf	btemp+9,f,c
  2336  00091A  C00B  F04D         	movff	_who,btemp+10
  2337  00091E  C00C  F04E         	movff	_who+1,btemp+11
  2338  000922  0E6C               	movlw	108
  2339  000924  024D               	mulwf	btemp+10,c
  2340  000926  CFF3 F049          	movff	prodl,btemp+6
  2341  00092A  CFF4 F04A          	movff	prodh,btemp+7
  2342  00092E  024E               	mulwf	btemp+11,c
  2343  000930  50F3               	movf	prodl,w,c
  2344  000932  264A               	addwf	btemp+7,f,c
  2345  000934  0ED4               	movlw	low _ready_queue
  2346  000936  6E4D               	movwf	btemp+10,c
  2347  000938  0E00               	movlw	high _ready_queue
  2348  00093A  6E4E               	movwf	btemp+11,c
  2349  00093C  0E09               	movlw	9
  2350  00093E  264D               	addwf	btemp+10,f,c
  2351  000940  0E00               	movlw	0
  2352  000942  224E               	addwfc	btemp+11,f,c
  2353  000944  5049               	movf	btemp+6,w,c
  2354  000946  264D               	addwf	btemp+10,f,c
  2355  000948  504A               	movf	btemp+7,w,c
  2356  00094A  224E               	addwfc	btemp+11,f,c
  2357  00094C  504B               	movf	btemp+8,w,c
  2358  00094E  244D               	addwf	btemp+10,w,c
  2359  000950  6ED9               	movwf	fsr2l,c
  2360  000952  504C               	movf	btemp+9,w,c
  2361  000954  204E               	addwfc	btemp+11,w,c
  2362  000956  6EDA               	movwf	fsr2h,c
  2363  000958  50DF               	movf	indf2,w,c
  2364  00095A  6EFF               	movwf	tosu,c	;volatile
  2365  00095C  0609               	decf	_size,f,c
  2366  00095E  A0D8               	btfss	status,0,c
  2367  000960  060A               	decf	_size+1,f,c
  2368  000962                     l1804:
  2369  000962  5009               	movf	_size,w,c
  2370  000964  100A               	iorwf	_size+1,w,c
  2371  000966  A4D8               	btfss	status,2,c
  2372  000968  D76E               	goto	l127
  2373  00096A                     u690:
  2374                           
  2375                           ;kernel.c: 73:   INTCONbits.GIE = 1;
  2376  00096A  8EF2               	bsf	4082,7,c	;volatile
  2377                           
  2378                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2379  00096C  52E5               	movf	postdec1,f,c
  2380  00096E  0012               	return		;funcret
  2381  000970                     __end_of_dispatcher:
  2382                           	opt callstack 0
  2383                           
  2384 ;; *************** function _scheduler *****************
  2385 ;; Defined at:
  2386 ;;		line 56 in file "kernel.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  2  [STACK] unsigned int 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2400 ;;      Params:         0       0       0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0
  2403 ;;      Totals:         0       0       0       0       0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:   12
  2407 ;; This function calls:
  2408 ;;		_round_robin
  2409 ;; This function is called by:
  2410 ;;		_dispatcher
  2411 ;; This function uses a reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text10
  2415  001BF2                     __ptext10:
  2416                           	opt callstack 0
  2417  001BF2                     _scheduler:
  2418                           	opt callstack 11
  2419                           
  2420                           ;kernel.c: 58:   return round_robin();
  2421                           
  2422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2423                           ;incstack = 0
  2424  001BF2  EC7A  F00B         	call	_round_robin	;wreg free
  2425                           
  2426                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2427  001BF6  0012               	return		;funcret
  2428  001BF8                     __end_of_scheduler:
  2429                           	opt callstack 0
  2430                           
  2431 ;; *************** function _round_robin *****************
  2432 ;; Defined at:
  2433 ;;		line 76 in file "kernel.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  next_task_to    2  [STACK] int 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  2  [STACK] unsigned int 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2447 ;;      Params:         0       0       0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0
  2450 ;;      Totals:         0       0       0       0       0       0       0
  2451 ;;Total ram usage:        0 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:   11
  2454 ;; This function calls:
  2455 ;;		___lwmod
  2456 ;; This function is called by:
  2457 ;;		_ISR_timer0
  2458 ;;		_scheduler
  2459 ;; This function uses a reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text11
  2463  0016F4                     __ptext11:
  2464                           	opt callstack 0
  2465  0016F4                     _round_robin:
  2466                           	opt callstack 0
  2467                           
  2468                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2469  0016F4  52E6               	movf	postinc1,f,c
  2470  0016F6  52E6               	movf	postinc1,f,c
  2471                           
  2472                           ;kernel.c: 77:   int next_task_to_run = ready_queue.task_running;
  2473                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2474                           
  2475                           ;incstack = 0
  2476  0016F8  0EFE               	movlw	-2
  2477  0016FA  C2F2  FFE3         	movff	_ready_queue+542,plusw1
  2478  0016FE  0EFF               	movlw	-1
  2479  001700  C2F3  FFE3         	movff	_ready_queue+543,plusw1
  2480  001704                     l1922:
  2481                           
  2482                           ;kernel.c: 80:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  2483  001704  EE22  F0F0         	lfsr	2,_ready_queue+540
  2484  001708  CFDE F04D          	movff	postinc2,btemp+10
  2485  00170C  CFDD F04E          	movff	postdec2,btemp+11
  2486  001710  C04D  FFE6         	movff	btemp+10,postinc1
  2487  001714  C04E  FFE6         	movff	btemp+11,postinc1
  2488                           
  2489                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  2490  001718  0EFC               	movlw	-4
  2491  00171A  50E3               	movf	plusw1,w,c
  2492  00171C  0F01               	addlw	1
  2493  00171E  6E4D               	movwf	btemp+10,c
  2494  001720  0EFD               	movlw	-3
  2495  001722  CFE3 F04E          	movff	plusw1,btemp+11
  2496  001726  0E00               	movlw	0
  2497  001728  224E               	addwfc	btemp+11,f,c
  2498  00172A  C04D  FFE6         	movff	btemp+10,postinc1
  2499  00172E  C04E  FFE6         	movff	btemp+11,postinc1
  2500  001732  EC79  F00A         	call	___lwmod	;wreg free
  2501                           
  2502                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2503  001736  0EFE               	movlw	-2
  2504  001738  C043  FFE3         	movff	btemp,plusw1
  2505  00173C  0EFF               	movlw	-1
  2506  00173E  C044  FFE3         	movff	btemp+1,plusw1
  2507                           
  2508                           ;kernel.c: 81:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  2509                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2510  001742  0EFE               	movlw	-2
  2511  001744  CFE3 F04D          	movff	plusw1,btemp+10
  2512  001748  0EFF               	movlw	-1
  2513  00174A  CFE3 F04E          	movff	plusw1,btemp+11
  2514  00174E  0E6C               	movlw	108
  2515  001750  024D               	mulwf	btemp+10,c
  2516  001752  CFF3 F04B          	movff	prodl,btemp+8
  2517  001756  CFF4 F04C          	movff	prodh,btemp+9
  2518  00175A  024E               	mulwf	btemp+11,c
  2519  00175C  50F3               	movf	prodl,w,c
  2520  00175E  264C               	addwf	btemp+9,f,c
  2521  001760  0EDC               	movlw	low (_ready_queue+8)
  2522  001762  244B               	addwf	btemp+8,w,c
  2523  001764  6ED9               	movwf	fsr2l,c
  2524  001766  0E00               	movlw	high (_ready_queue+8)
  2525  001768  204C               	addwfc	btemp+9,w,c
  2526  00176A  6EDA               	movwf	fsr2h,c
  2527  00176C  50DF               	movf	indf2,w,c
  2528  00176E  A4D8               	btfss	status,2,c
  2529  001770  D7C9               	goto	l1922
  2530                           
  2531                           ;kernel.c: 83:   return next_task_to_run;
  2532                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2533  001772  0EFE               	movlw	-2
  2534  001774  CFE3 F043          	movff	plusw1,btemp
  2535  001778  0EFF               	movlw	-1
  2536  00177A  CFE3 F044          	movff	plusw1,btemp+1
  2537                           
  2538                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2539  00177E  52E5               	movf	postdec1,f,c
  2540  001780  52E5               	movf	postdec1,f,c
  2541  001782  0012               	return		;funcret
  2542  001784                     __end_of_round_robin:
  2543                           	opt callstack 0
  2544                           
  2545 ;; *************** function ___lwmod *****************
  2546 ;; Defined at:
  2547 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  dividend        2  [STACK] unsigned int 
  2550 ;;  divisor         2  [STACK] unsigned int 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  counter         1  [STACK] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  2  [STACK] unsigned int 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2562 ;;      Params:         0       0       0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:   10
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_round_robin
  2573 ;; This function uses a reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text12
  2577  0014F2                     __ptext12:
  2578                           	opt callstack 0
  2579  0014F2                     ___lwmod:
  2580                           	opt callstack 0
  2581                           
  2582                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2583  0014F2  52E6               	movf	postinc1,f,c
  2584                           
  2585                           ;stkvar	_divisor @ sp[(-1)+-4]
  2586                           
  2587                           ;incstack = 0
  2588  0014F4  0EFB               	movlw	-5
  2589  0014F6  CFE3 F043          	movff	plusw1,btemp
  2590  0014FA  0EFC               	movlw	-4
  2591  0014FC  50E3               	movf	plusw1,w,c
  2592  0014FE  1043               	iorwf	btemp,w,c
  2593  001500  B4D8               	btfsc	status,2,c
  2594  001502  D04A               	goto	u800
  2595                           
  2596                           ;stkvar	_counter @ sp[(-1)+0]
  2597  001504  0EFF               	movlw	-1
  2598  001506  6AE3               	clrf	plusw1,c
  2599  001508  D010               	goto	L2
  2600  00150A                     l1888:
  2601                           
  2602                           ;stkvar	_divisor @ sp[(-1)+-4]
  2603  00150A  0EFB               	movlw	-5
  2604  00150C  50E3               	movf	plusw1,w,c
  2605  00150E  90D8               	bcf	status,0,c
  2606  001510  34E8               	rlcf	wreg,w,c
  2607  001512  6E43               	movwf	btemp,c
  2608  001514  0EFB               	movlw	-5
  2609  001516  C043  FFE3         	movff	btemp,plusw1
  2610  00151A  0EFC               	movlw	-4
  2611  00151C  50E3               	movf	plusw1,w,c
  2612  00151E  34E8               	rlcf	wreg,w,c
  2613  001520  6E43               	movwf	btemp,c
  2614  001522  0EFC               	movlw	-4
  2615  001524  C043  FFE3         	movff	btemp,plusw1
  2616                           
  2617                           ;stkvar	_counter @ sp[(-1)+0]
  2618  001528  0EFF               	movlw	-1
  2619  00152A                     L2:
  2620  00152A  2AE3               	incf	plusw1,f,c
  2621                           
  2622                           ;stkvar	_divisor @ sp[(-1)+-4]
  2623  00152C  0EFC               	movlw	-4
  2624  00152E  AEE3               	btfss	plusw1,7,c
  2625  001530  D7EC               	goto	l1888
  2626  001532                     u780:
  2627                           
  2628                           ;stkvar	_divisor @ sp[(-1)+-4]
  2629  001532  0EFB               	movlw	-5
  2630  001534  CFE3 F04D          	movff	plusw1,btemp+10
  2631  001538  0EFC               	movlw	-4
  2632  00153A  CFE3 F04E          	movff	plusw1,btemp+11
  2633                           
  2634                           ;stkvar	_dividend @ sp[(-1)+-2]
  2635  00153E  0EFD               	movlw	-3
  2636  001540  CFE3 F04B          	movff	plusw1,btemp+8
  2637  001544  0EFE               	movlw	-2
  2638  001546  CFE3 F04C          	movff	plusw1,btemp+9
  2639  00154A  504D               	movf	btemp+10,w,c
  2640  00154C  5C4B               	subwf	btemp+8,w,c
  2641  00154E  504E               	movf	btemp+11,w,c
  2642  001550  584C               	subwfb	btemp+9,w,c
  2643  001552  A0D8               	btfss	status,0,c
  2644  001554  D012               	goto	l1898
  2645                           
  2646                           ;stkvar	_divisor @ sp[(-1)+-4]
  2647                           ;stkvar	_dividend @ sp[(-1)+-2]
  2648  001556  0EFD               	movlw	-3
  2649  001558  50E3               	movf	plusw1,w,c
  2650  00155A  6E43               	movwf	btemp,c
  2651  00155C  0EFB               	movlw	-5
  2652  00155E  50E3               	movf	plusw1,w,c
  2653  001560  5E43               	subwf	btemp,f,c
  2654  001562  0EFD               	movlw	-3
  2655  001564  C043  FFE3         	movff	btemp,plusw1
  2656  001568  0EFE               	movlw	-2
  2657  00156A  50E3               	movf	plusw1,w,c
  2658  00156C  6E43               	movwf	btemp,c
  2659  00156E  0EFC               	movlw	-4
  2660  001570  50E3               	movf	plusw1,w,c
  2661  001572  5A43               	subwfb	btemp,f,c
  2662  001574  0EFE               	movlw	-2
  2663  001576  C043  FFE3         	movff	btemp,plusw1
  2664  00157A                     l1898:
  2665                           
  2666                           ;stkvar	_divisor @ sp[(-1)+-4]
  2667  00157A  90D8               	bcf	status,0,c
  2668  00157C  0EFC               	movlw	-4
  2669  00157E  32E3               	rrcf	plusw1,f,c
  2670  001580  0EFB               	movlw	-5
  2671  001582  32E3               	rrcf	plusw1,f,c
  2672                           
  2673                           ;stkvar	_counter @ sp[(-1)+0]
  2674  001584  0EFF               	movlw	-1
  2675  001586  50E3               	movf	plusw1,w,c
  2676  001588  6E43               	movwf	btemp,c
  2677  00158A  0E01               	movlw	1
  2678  00158C  5E43               	subwf	btemp,f,c
  2679  00158E  0EFF               	movlw	-1
  2680  001590  C043  FFE3         	movff	btemp,plusw1
  2681  001594  A4D8               	btfss	status,2,c
  2682  001596  D7CD               	goto	u780
  2683  001598                     u800:
  2684                           
  2685                           ;stkvar	_dividend @ sp[(-1)+-2]
  2686  001598  0EFD               	movlw	-3
  2687  00159A  CFE3 F043          	movff	plusw1,btemp
  2688  00159E  0EFE               	movlw	-2
  2689  0015A0  CFE3 F044          	movff	plusw1,btemp+1
  2690                           
  2691                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2692  0015A4  0EFB               	movlw	251
  2693  0015A6  26E1               	addwf	fsr1l,f,c
  2694  0015A8  0EFF               	movlw	255
  2695  0015AA  22E2               	addwfc	fsr1h,f,c
  2696  0015AC  0012               	return		;funcret
  2697  0015AE                     __end_of___lwmod:
  2698                           	opt callstack 0
  2699                           
  2700 ;; *************** function _config_timer0 *****************
  2701 ;; Defined at:
  2702 ;;		line 23 in file "int0_test.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1  [STACK] void 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2716 ;;      Params:         0       0       0       0       0       0       0
  2717 ;;      Locals:         0       0       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0
  2719 ;;      Totals:         0       0       0       0       0       0       0
  2720 ;;Total ram usage:        0 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:   10
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_main
  2727 ;; This function uses a reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text13
  2731  001BD0                     __ptext13:
  2732                           	opt callstack 0
  2733  001BD0                     _config_timer0:
  2734                           	opt callstack 20
  2735                           
  2736                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  2737                           
  2738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2739                           ;incstack = 0
  2740  001BD0  9AD5               	bcf	4053,5,c	;volatile
  2741                           
  2742                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  2743  001BD2  96D5               	bcf	4053,3,c	;volatile
  2744                           
  2745                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  2746  001BD4  0E07               	movlw	7
  2747  001BD6  12D5               	iorwf	4053,f,c	;volatile
  2748                           
  2749                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  2750  001BD8  8CF2               	bsf	4082,6,c	;volatile
  2751                           
  2752                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  2753  001BDA  8AF2               	bsf	4082,5,c	;volatile
  2754                           
  2755                           ;int0_test.c: 33:   TMR0L = 252;
  2756  001BDC  0EFC               	movlw	252
  2757  001BDE  6ED6               	movwf	4054,c	;volatile
  2758                           
  2759                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2760  001BE0  0012               	return		;funcret
  2761  001BE2                     __end_of_config_timer0:
  2762                           	opt callstack 0
  2763                           
  2764 ;; *************** function _config_INT0 *****************
  2765 ;; Defined at:
  2766 ;;		line 13 in file "int0_test.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1  [STACK] void 
  2773 ;; Registers used:
  2774 ;;		None
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2780 ;;      Params:         0       0       0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0
  2783 ;;      Totals:         0       0       0       0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:   10
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_main
  2791 ;; This function uses a reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text14
  2795  001BE2                     __ptext14:
  2796                           	opt callstack 0
  2797  001BE2                     _config_INT0:
  2798                           	opt callstack 20
  2799                           
  2800                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2801                           
  2802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2803                           ;incstack = 0
  2804  001BE2  9095               	bcf	3989,0,c	;volatile
  2805                           
  2806                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2807  001BE4  8EF2               	bsf	4082,7,c	;volatile
  2808                           
  2809                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2810  001BE6  88F2               	bsf	4082,4,c	;volatile
  2811                           
  2812                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2813  001BE8  88F2               	bsf	4082,4,c	;volatile
  2814                           
  2815                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2816  001BEA  92F2               	bcf	4082,1,c	;volatile
  2817                           
  2818                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2819  001BEC  9EF1               	bcf	4081,7,c	;volatile
  2820                           
  2821                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2822  001BEE  9CF1               	bcf	4081,6,c	;volatile
  2823                           
  2824                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2825  001BF0  0012               	return		;funcret
  2826  001BF2                     __end_of_config_INT0:
  2827                           	opt callstack 0
  2828                           
  2829 ;; *************** function _task_idle *****************
  2830 ;; Defined at:
  2831 ;;		line 116 in file "kernel.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1  [STACK] void 
  2838 ;; Registers used:
  2839 ;;		None
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2845 ;;      Params:         0       0       0       0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0
  2848 ;;      Totals:         0       0       0       0       0       0       0
  2849 ;;Total ram usage:        0 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    3
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_lunos_init
  2856 ;; This function uses a reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text15
  2860  001BF8                     __ptext15:
  2861                           	opt callstack 0
  2862  001BF8                     _task_idle:
  2863                           	opt callstack 23
  2864                           
  2865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2866                           ;incstack = 0
  2867                           ;kernel.c: 118:   while (1) __nop();
  2868  001BF8  F000               	nop	
  2869  001BFA  D7FE               	goto	_task_idle
  2870  001BFC                     __end_of_task_idle:
  2871                           	opt callstack 0
  2872                           
  2873 ;; *************** function _count_bottles *****************
  2874 ;; Defined at:
  2875 ;;		line 47 in file "tasks.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  bottle          1  [STACK] struct .
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1  [STACK] void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2889 ;;      Params:         0       0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    8
  2896 ;; This function calls:
  2897 ;;		_lunos_delayTask
  2898 ;;		_sem_post
  2899 ;;		_sem_wait
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text16
  2906  0018F0                     __ptext16:
  2907                           	opt callstack 0
  2908  0018F0                     _count_bottles:
  2909                           	opt callstack 0
  2910                           
  2911                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2912  0018F0  52E6               	movf	postinc1,f,c
  2913  0018F2                     l294:
  2914                           
  2915                           ;tasks.c: 49:         sem_wait(&count_sem);
  2916  0018F2  0E29               	movlw	low _count_sem
  2917  0018F4  6EE6               	movwf	postinc1,c
  2918  0018F6  0E00               	movlw	high _count_sem
  2919  0018F8  6EE6               	movwf	postinc1,c
  2920  0018FA  EC3F  F009         	call	_sem_wait	;wreg free
  2921                           
  2922                           ;tasks.c: 50:         PORTDbits.RD4 = 0;
  2923  0018FE  9883               	bcf	3971,4,c	;volatile
  2924                           
  2925                           ;tasks.c: 51:         while(global_buffer.count < 3){
  2926  001900  D023               	goto	l2120
  2927  001902                     l296:
  2928                           
  2929                           ;tasks.c: 52:             if(!PORTBbits.RB6){
  2930  001902  BC81               	btfsc	3969,6,c	;volatile
  2931  001904  D021               	goto	l2120
  2932                           
  2933                           ;tasks.c: 53:                 lunos_delayTask(500);
  2934  001906  0EF4               	movlw	244
  2935  001908  6EE6               	movwf	postinc1,c
  2936  00190A  0E01               	movlw	1
  2937  00190C  6EE6               	movwf	postinc1,c
  2938  00190E  ECAF  F00C         	call	_lunos_delayTask	;wreg free
  2939                           
  2940                           ;tasks.c: 54:                 t_bottle bottle;;tasks.c: 55:                 global_buffe
      +                          r.bottles[global_buffer.count] = bottle;
  2941                           ;stkvar	_bottle @ sp[(-1)+0]
  2942  001912  C001  F04D         	movff	_global_buffer,btemp+10
  2943  001916  C002  F04E         	movff	_global_buffer+1,btemp+11
  2944  00191A  0E03               	movlw	low (_global_buffer+2)
  2945  00191C  244D               	addwf	btemp+10,w,c
  2946  00191E  6ED9               	movwf	fsr2l,c
  2947  001920  0E00               	movlw	high (_global_buffer+2)
  2948  001922  204E               	addwfc	btemp+11,w,c
  2949  001924  6EDA               	movwf	fsr2h,c
  2950  001926  0EFF               	movlw	-1
  2951  001928  CFE3 FFDF          	movff	plusw1,indf2
  2952                           
  2953                           ;tasks.c: 56:                 global_buffer.bottles[global_buffer.count].bottle_state = 
      +                          EMPTY;
  2954  00192C  C001  F04D         	movff	_global_buffer,btemp+10
  2955  001930  C002  F04E         	movff	_global_buffer+1,btemp+11
  2956  001934  0E03               	movlw	low (_global_buffer+2)
  2957  001936  244D               	addwf	btemp+10,w,c
  2958  001938  6ED9               	movwf	fsr2l,c
  2959  00193A  0E00               	movlw	high (_global_buffer+2)
  2960  00193C  204E               	addwfc	btemp+11,w,c
  2961  00193E  6EDA               	movwf	fsr2h,c
  2962  001940  0E00               	movlw	0
  2963  001942  6EDF               	movwf	indf2,c
  2964                           
  2965                           ;tasks.c: 57:                 global_buffer.count += 1;
  2966  001944  4A01               	infsnz	_global_buffer,f,c
  2967  001946  2A02               	incf	_global_buffer+1,f,c
  2968  001948                     l2120:
  2969                           
  2970                           ;tasks.c: 51:         while(global_buffer.count < 3){
  2971  001948  BE02               	btfsc	_global_buffer+1,7,c
  2972  00194A  D7DB               	goto	l296
  2973  00194C  5002               	movf	_global_buffer+1,w,c
  2974  00194E  E104               	bnz	u94_20
  2975  001950  0E03               	movlw	3
  2976  001952  5C01               	subwf	_global_buffer,w,c
  2977  001954  A0D8               	btfss	status,0,c
  2978  001956  D7D5               	goto	l296
  2979  001958                     u94_20:
  2980                           
  2981                           ;tasks.c: 60:         global_buffer.p_state = BUSY_;
  2982  001958  0E01               	movlw	1
  2983  00195A  6E06               	movwf	_global_buffer+5,c
  2984  00195C  D7CA               	goto	l294
  2985  00195E                     __end_of_count_bottles:
  2986                           	opt callstack 0
  2987                           
  2988 ;; *************** function _sem_wait *****************
  2989 ;; Defined at:
  2990 ;;		line 20 in file "semaphore.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  s               2  [STACK] PTR struct semaphore
  2993 ;;		 -> teste_2(14), teste_1(14), r_pipe(14), w_pipe(14), 
  2994 ;;		 -> out_sem(14), cover_sem(14), check_sem(14), fill_sem(14), 
  2995 ;;		 -> count_sem(14), 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1  [STACK] void 
  3000 ;; Registers used:
  3001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3007 ;;      Params:         0       0       0       0       0       0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0
  3010 ;;      Totals:         0       0       0       0       0       0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    7
  3014 ;; This function calls:
  3015 ;;		_dispatcher
  3016 ;; This function is called by:
  3017 ;;		_pipe_write
  3018 ;;		_pipe_read
  3019 ;;		_count_bottles
  3020 ;;		_fill_bottle
  3021 ;;		_check_level
  3022 ;;		_cover_bottle
  3023 ;;		_count_out
  3024 ;;		_task_bozo
  3025 ;;		_task_xuxa
  3026 ;; This function uses a reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text17
  3030  00127E                     __ptext17:
  3031                           	opt callstack 0
  3032  00127E                     _sem_wait:
  3033                           	opt callstack 18
  3034                           
  3035                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  3036                           
  3037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3038                           ;incstack = 0
  3039  00127E  9EF2               	bcf	4082,7,c	;volatile
  3040                           
  3041                           ;semaphore.c: 22:   s->contador -= 1;
  3042                           ;stkvar	_s @ sp[(0)+-2]
  3043  001280  0EFE               	movlw	-2
  3044  001282  CFE3 FFD9          	movff	plusw1,fsr2l
  3045  001286  0EFF               	movlw	-1
  3046  001288  CFE3 FFDA          	movff	plusw1,fsr2h
  3047  00128C  06DE               	decf	postinc2,f,c
  3048  00128E  0E00               	movlw	0
  3049  001290  5ADD               	subwfb	postdec2,f,c
  3050                           
  3051                           ;semaphore.c: 23:   if (s->contador < 0) {
  3052                           ;stkvar	_s @ sp[(0)+-2]
  3053  001292  0EFE               	movlw	-2
  3054  001294  CFE3 FFD9          	movff	plusw1,fsr2l
  3055  001298  0EFF               	movlw	-1
  3056  00129A  CFE3 FFDA          	movff	plusw1,fsr2h
  3057  00129E  0E01               	movlw	1
  3058  0012A0  AEDB               	btfss	plusw2,7,c
  3059  0012A2  D05D               	goto	l2000
  3060                           
  3061                           ;semaphore.c: 24:     s->contador = 0;
  3062                           ;stkvar	_s @ sp[(0)+-2]
  3063  0012A4  0EFE               	movlw	-2
  3064  0012A6  CFE3 FFD9          	movff	plusw1,fsr2l
  3065  0012AA  0EFF               	movlw	-1
  3066  0012AC  CFE3 FFDA          	movff	plusw1,fsr2h
  3067  0012B0  0E00               	movlw	0
  3068  0012B2  6EDE               	movwf	postinc2,c
  3069  0012B4  0E00               	movlw	0
  3070  0012B6  6EDD               	movwf	postdec2,c
  3071                           
  3072                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  3073  0012B8  EE22  F0F2         	lfsr	2,_ready_queue+542
  3074                           
  3075                           ;stkvar	_s @ sp[(0)+-2]
  3076  0012BC  0EFE               	movlw	-2
  3077  0012BE  CFE3 F04D          	movff	plusw1,btemp+10
  3078  0012C2  0EFF               	movlw	-1
  3079  0012C4  CFE3 F04E          	movff	plusw1,btemp+11
  3080  0012C8  0E0A               	movlw	10
  3081  0012CA  244D               	addwf	btemp+10,w,c
  3082  0012CC  6EE9               	movwf	fsr0l,c
  3083  0012CE  0E00               	movlw	0
  3084  0012D0  204E               	addwfc	btemp+11,w,c
  3085  0012D2  6EEA               	movwf	fsr0h,c
  3086  0012D4  CFEE F04D          	movff	postinc0,btemp+10
  3087  0012D8  CFED F04E          	movff	postdec0,btemp+11
  3088  0012DC  90D8               	bcf	status,0,c
  3089  0012DE  344D               	rlcf	btemp+10,w,c
  3090  0012E0  6E4B               	movwf	btemp+8,c
  3091  0012E2  344E               	rlcf	btemp+11,w,c
  3092  0012E4  6E4C               	movwf	btemp+9,c
  3093                           
  3094                           ;stkvar	_s @ sp[(0)+-2]
  3095  0012E6  0EFE               	movlw	-2
  3096  0012E8  50E3               	movf	plusw1,w,c
  3097  0012EA  264B               	addwf	btemp+8,f,c
  3098  0012EC  0EFF               	movlw	-1
  3099  0012EE  50E3               	movf	plusw1,w,c
  3100  0012F0  224C               	addwfc	btemp+9,f,c
  3101  0012F2  0E02               	movlw	2
  3102  0012F4  244B               	addwf	btemp+8,w,c
  3103  0012F6  6EE9               	movwf	fsr0l,c
  3104  0012F8  0E00               	movlw	0
  3105  0012FA  204C               	addwfc	btemp+9,w,c
  3106  0012FC  6EEA               	movwf	fsr0h,c
  3107  0012FE  CFDE FFEE          	movff	postinc2,postinc0
  3108  001302  CFDD FFED          	movff	postdec2,postdec0
  3109                           
  3110                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 4;
  3111                           ;stkvar	_s @ sp[(0)+-2]
  3112  001306  0EFE               	movlw	-2
  3113  001308  CFE3 F04D          	movff	plusw1,btemp+10
  3114  00130C  0EFF               	movlw	-1
  3115  00130E  CFE3 F04E          	movff	plusw1,btemp+11
  3116  001312  0E0A               	movlw	10
  3117  001314  244D               	addwf	btemp+10,w,c
  3118  001316  6ED9               	movwf	fsr2l,c
  3119  001318  0E00               	movlw	0
  3120  00131A  204E               	addwfc	btemp+11,w,c
  3121  00131C  6EDA               	movwf	fsr2h,c
  3122  00131E  CFDE F04D          	movff	postinc2,btemp+10
  3123  001322  CFDD F04E          	movff	postdec2,btemp+11
  3124  001326  0E01               	movlw	1
  3125  001328  264D               	addwf	btemp+10,f,c
  3126  00132A  0E00               	movlw	0
  3127  00132C  224E               	addwfc	btemp+11,f,c
  3128  00132E  0E03               	movlw	3
  3129  001330  164D               	andwf	btemp+10,f,c
  3130  001332  0E00               	movlw	0
  3131  001334  164E               	andwf	btemp+11,f,c
  3132                           
  3133                           ;stkvar	_s @ sp[(0)+-2]
  3134  001336  0EFE               	movlw	-2
  3135  001338  CFE3 F04B          	movff	plusw1,btemp+8
  3136  00133C  0EFF               	movlw	-1
  3137  00133E  CFE3 F04C          	movff	plusw1,btemp+9
  3138  001342  0E0A               	movlw	10
  3139  001344  244B               	addwf	btemp+8,w,c
  3140  001346  6ED9               	movwf	fsr2l,c
  3141  001348  0E00               	movlw	0
  3142  00134A  204C               	addwfc	btemp+9,w,c
  3143  00134C  6EDA               	movwf	fsr2h,c
  3144  00134E  C04D  FFDE         	movff	btemp+10,postinc2
  3145  001352  C04E  FFDD         	movff	btemp+11,postdec2
  3146                           
  3147                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  3148  001356  0E05               	movlw	5
  3149  001358  6EE6               	movwf	postinc1,c
  3150  00135A  EC66  F002         	call	_dispatcher	;wreg free
  3151  00135E                     l2000:
  3152                           
  3153                           ;semaphore.c: 29:   INTCONbits.GIE = 1;
  3154  00135E  8EF2               	bsf	4082,7,c	;volatile
  3155                           
  3156                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3157  001360  52E5               	movf	postdec1,f,c
  3158  001362  52E5               	movf	postdec1,f,c
  3159  001364  0012               	return		;funcret
  3160  001366                     __end_of_sem_wait:
  3161                           	opt callstack 0
  3162                           
  3163 ;; *************** function _sem_post *****************
  3164 ;; Defined at:
  3165 ;;		line 32 in file "semaphore.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  s               2  [STACK] PTR struct semaphore
  3168 ;;		 -> teste_2(14), teste_1(14), r_pipe(14), w_pipe(14), 
  3169 ;;		 -> out_sem(14), cover_sem(14), check_sem(14), fill_sem(14), 
  3170 ;;		 -> count_sem(14), 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1  [STACK] void 
  3175 ;; Registers used:
  3176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3182 ;;      Params:         0       0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0
  3185 ;;      Totals:         0       0       0       0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    3
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_pipe_write
  3193 ;;		_pipe_read
  3194 ;;		_count_bottles
  3195 ;;		_fill_bottle
  3196 ;;		_check_level
  3197 ;;		_cover_bottle
  3198 ;;		_count_out
  3199 ;;		_task_bozo
  3200 ;;		_task_xuxa
  3201 ;; This function uses a reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text18
  3205  001188                     __ptext18:
  3206                           	opt callstack 0
  3207  001188                     _sem_post:
  3208                           	opt callstack 22
  3209                           
  3210                           ;semaphore.c: 33:   INTCONbits.GIE = 0;
  3211                           
  3212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3213                           ;incstack = 0
  3214  001188  9EF2               	bcf	4082,7,c	;volatile
  3215                           
  3216                           ;semaphore.c: 34:   s->contador += 1;
  3217                           ;stkvar	_s @ sp[(0)+-2]
  3218  00118A  0EFE               	movlw	-2
  3219  00118C  CFE3 FFD9          	movff	plusw1,fsr2l
  3220  001190  0EFF               	movlw	-1
  3221  001192  CFE3 FFDA          	movff	plusw1,fsr2h
  3222  001196  2ADE               	incf	postinc2,f,c
  3223  001198  0E00               	movlw	0
  3224  00119A  22DD               	addwfc	postdec2,f,c
  3225                           
  3226                           ;semaphore.c: 35:   if (s->contador > 0) {
  3227                           ;stkvar	_s @ sp[(0)+-2]
  3228  00119C  0EFE               	movlw	-2
  3229  00119E  CFE3 FFD9          	movff	plusw1,fsr2l
  3230  0011A2  0EFF               	movlw	-1
  3231  0011A4  CFE3 FFDA          	movff	plusw1,fsr2h
  3232  0011A8  0E01               	movlw	1
  3233  0011AA  BEDB               	btfsc	plusw2,7,c
  3234  0011AC  D064               	goto	l2012
  3235  0011AE  0E01               	movlw	1
  3236  0011B0  50DB               	movf	plusw2,w,c
  3237  0011B2  E103               	bnz	u86_20
  3238  0011B4  04DE               	decf	postinc2,w,c
  3239  0011B6  A0D8               	btfss	status,0,c
  3240  0011B8  D05E               	goto	l2012
  3241  0011BA                     u86_20:
  3242                           
  3243                           ;semaphore.c: 36:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  3244                           ;stkvar	_s @ sp[(0)+-2]
  3245  0011BA  0EFE               	movlw	-2
  3246  0011BC  CFE3 F04D          	movff	plusw1,btemp+10
  3247  0011C0  0EFF               	movlw	-1
  3248  0011C2  CFE3 F04E          	movff	plusw1,btemp+11
  3249  0011C6  0E0C               	movlw	12
  3250  0011C8  244D               	addwf	btemp+10,w,c
  3251  0011CA  6ED9               	movwf	fsr2l,c
  3252  0011CC  0E00               	movlw	0
  3253  0011CE  204E               	addwfc	btemp+11,w,c
  3254  0011D0  6EDA               	movwf	fsr2h,c
  3255  0011D2  CFDE F04D          	movff	postinc2,btemp+10
  3256  0011D6  CFDD F04E          	movff	postdec2,btemp+11
  3257  0011DA  90D8               	bcf	status,0,c
  3258  0011DC  344D               	rlcf	btemp+10,w,c
  3259  0011DE  6E4B               	movwf	btemp+8,c
  3260  0011E0  344E               	rlcf	btemp+11,w,c
  3261  0011E2  6E4C               	movwf	btemp+9,c
  3262                           
  3263                           ;stkvar	_s @ sp[(0)+-2]
  3264  0011E4  0EFE               	movlw	-2
  3265  0011E6  50E3               	movf	plusw1,w,c
  3266  0011E8  264B               	addwf	btemp+8,f,c
  3267  0011EA  0EFF               	movlw	-1
  3268  0011EC  50E3               	movf	plusw1,w,c
  3269  0011EE  224C               	addwfc	btemp+9,f,c
  3270  0011F0  0E02               	movlw	2
  3271  0011F2  244B               	addwf	btemp+8,w,c
  3272  0011F4  6ED9               	movwf	fsr2l,c
  3273  0011F6  0E00               	movlw	0
  3274  0011F8  204C               	addwfc	btemp+9,w,c
  3275  0011FA  6EDA               	movwf	fsr2h,c
  3276  0011FC  CFDE F04D          	movff	postinc2,btemp+10
  3277  001200  CFDD F04E          	movff	postdec2,btemp+11
  3278  001204  0E6C               	movlw	108
  3279  001206  024D               	mulwf	btemp+10,c
  3280  001208  CFF3 F04B          	movff	prodl,btemp+8
  3281  00120C  CFF4 F04C          	movff	prodh,btemp+9
  3282  001210  024E               	mulwf	btemp+11,c
  3283  001212  50F3               	movf	prodl,w,c
  3284  001214  264C               	addwf	btemp+9,f,c
  3285  001216  0EDC               	movlw	low (_ready_queue+8)
  3286  001218  244B               	addwf	btemp+8,w,c
  3287  00121A  6ED9               	movwf	fsr2l,c
  3288  00121C  0E00               	movlw	high (_ready_queue+8)
  3289  00121E  204C               	addwfc	btemp+9,w,c
  3290  001220  6EDA               	movwf	fsr2h,c
  3291  001222  0E00               	movlw	0
  3292  001224  6EDF               	movwf	indf2,c
  3293                           
  3294                           ;semaphore.c: 37:     s->task_to_ready = (s->task_to_ready + 1) % 4;
  3295                           ;stkvar	_s @ sp[(0)+-2]
  3296  001226  0EFE               	movlw	-2
  3297  001228  CFE3 F04D          	movff	plusw1,btemp+10
  3298  00122C  0EFF               	movlw	-1
  3299  00122E  CFE3 F04E          	movff	plusw1,btemp+11
  3300  001232  0E0C               	movlw	12
  3301  001234  244D               	addwf	btemp+10,w,c
  3302  001236  6ED9               	movwf	fsr2l,c
  3303  001238  0E00               	movlw	0
  3304  00123A  204E               	addwfc	btemp+11,w,c
  3305  00123C  6EDA               	movwf	fsr2h,c
  3306  00123E  CFDE F04D          	movff	postinc2,btemp+10
  3307  001242  CFDD F04E          	movff	postdec2,btemp+11
  3308  001246  0E01               	movlw	1
  3309  001248  264D               	addwf	btemp+10,f,c
  3310  00124A  0E00               	movlw	0
  3311  00124C  224E               	addwfc	btemp+11,f,c
  3312  00124E  0E03               	movlw	3
  3313  001250  164D               	andwf	btemp+10,f,c
  3314  001252  0E00               	movlw	0
  3315  001254  164E               	andwf	btemp+11,f,c
  3316                           
  3317                           ;stkvar	_s @ sp[(0)+-2]
  3318  001256  0EFE               	movlw	-2
  3319  001258  CFE3 F04B          	movff	plusw1,btemp+8
  3320  00125C  0EFF               	movlw	-1
  3321  00125E  CFE3 F04C          	movff	plusw1,btemp+9
  3322  001262  0E0C               	movlw	12
  3323  001264  244B               	addwf	btemp+8,w,c
  3324  001266  6ED9               	movwf	fsr2l,c
  3325  001268  0E00               	movlw	0
  3326  00126A  204C               	addwfc	btemp+9,w,c
  3327  00126C  6EDA               	movwf	fsr2h,c
  3328  00126E  C04D  FFDE         	movff	btemp+10,postinc2
  3329  001272  C04E  FFDD         	movff	btemp+11,postdec2
  3330  001276                     l2012:
  3331                           
  3332                           ;semaphore.c: 40:   INTCONbits.GIE = 1;
  3333  001276  8EF2               	bsf	4082,7,c	;volatile
  3334                           
  3335                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3336  001278  52E5               	movf	postdec1,f,c
  3337  00127A  52E5               	movf	postdec1,f,c
  3338  00127C  0012               	return		;funcret
  3339  00127E                     __end_of_sem_post:
  3340                           	opt callstack 0
  3341                           
  3342 ;; *************** function _lunos_delayTask *****************
  3343 ;; Defined at:
  3344 ;;		line 29 in file "kernel.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  time            2  [STACK] unsigned int 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1  [STACK] void 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3358 ;;      Params:         0       0       0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0
  3361 ;;      Totals:         0       0       0       0       0       0       0
  3362 ;;Total ram usage:        0 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    7
  3365 ;; This function calls:
  3366 ;;		_dispatcher
  3367 ;; This function is called by:
  3368 ;;		_count_bottles
  3369 ;;		_fill_bottle
  3370 ;;		_task_0
  3371 ;;		_task_1
  3372 ;;		_task_2
  3373 ;;		_task_xuxa
  3374 ;; This function uses a reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text19
  3378  00195E                     __ptext19:
  3379                           	opt callstack 0
  3380  00195E                     _lunos_delayTask:
  3381                           	opt callstack 18
  3382                           
  3383                           ;kernel.c: 30:   INTCONbits.GIE = 0;
  3384                           
  3385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3386                           ;incstack = 0
  3387  00195E  9EF2               	bcf	4082,7,c	;volatile
  3388                           
  3389                           ;kernel.c: 32:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  3390                           ;stkvar	_time @ sp[(0)+-2]
  3391  001960  50E1               	movf	fsr1l,w,c
  3392  001962  0FFE               	addlw	-2
  3393  001964  6ED9               	movwf	fsr2l,c
  3394  001966  50E2               	movf	fsr1h,w,c
  3395  001968  6EDA               	movwf	fsr2h,c
  3396  00196A  0EFF               	movlw	255
  3397  00196C  22DA               	addwfc	fsr2h,f,c
  3398  00196E  EE02  F0F2         	lfsr	0,_ready_queue+542
  3399  001972  CFEE F04D          	movff	postinc0,btemp+10
  3400  001976  CFED F04E          	movff	postdec0,btemp+11
  3401  00197A  0E6C               	movlw	108
  3402  00197C  024D               	mulwf	btemp+10,c
  3403  00197E  CFF3 F04B          	movff	prodl,btemp+8
  3404  001982  CFF4 F04C          	movff	prodh,btemp+9
  3405  001986  024E               	mulwf	btemp+11,c
  3406  001988  50F3               	movf	prodl,w,c
  3407  00198A  264C               	addwf	btemp+9,f,c
  3408  00198C  0E3E               	movlw	low (_ready_queue+106)
  3409  00198E  244B               	addwf	btemp+8,w,c
  3410  001990  6EE9               	movwf	fsr0l,c
  3411  001992  0E01               	movlw	high (_ready_queue+106)
  3412  001994  204C               	addwfc	btemp+9,w,c
  3413  001996  6EEA               	movwf	fsr0h,c
  3414  001998  CFDE FFEE          	movff	postinc2,postinc0
  3415  00199C  CFDD FFED          	movff	postdec2,postdec0
  3416                           
  3417                           ;kernel.c: 33:   dispatcher(WAITING);
  3418  0019A0  0E02               	movlw	2
  3419  0019A2  6EE6               	movwf	postinc1,c
  3420  0019A4  EC66  F002         	call	_dispatcher	;wreg free
  3421                           
  3422                           ;kernel.c: 35:   INTCONbits.GIE = 1;
  3423  0019A8  8EF2               	bsf	4082,7,c	;volatile
  3424                           
  3425                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3426  0019AA  52E5               	movf	postdec1,f,c
  3427  0019AC  52E5               	movf	postdec1,f,c
  3428  0019AE  0012               	return		;funcret
  3429  0019B0                     __end_of_lunos_delayTask:
  3430                           	opt callstack 0
  3431                           
  3432 ;; *************** function _fill_bottle *****************
  3433 ;; Defined at:
  3434 ;;		line 66 in file "tasks.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1  [STACK] void 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3448 ;;      Params:         0       0       0       0       0       0       0
  3449 ;;      Locals:         0       0       0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0
  3451 ;;      Totals:         0       0       0       0       0       0       0
  3452 ;;Total ram usage:        0 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    8
  3455 ;; This function calls:
  3456 ;;		_lunos_delayTask
  3457 ;;		_sem_post
  3458 ;;		_sem_wait
  3459 ;; This function is called by:
  3460 ;;		_main
  3461 ;; This function uses a reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text20
  3465  001BA8                     __ptext20:
  3466                           	opt callstack 0
  3467  001BA8                     _fill_bottle:
  3468                           	opt callstack 18
  3469                           
  3470                           ;tasks.c: 68:         PORTDbits.RD5 = 0;
  3471                           
  3472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3473                           ;incstack = 0
  3474                           ;tasks.c: 67:     while(1){
  3475  001BA8  9A83               	bcf	3971,5,c	;volatile
  3476                           
  3477                           ;tasks.c: 69:         sem_wait(&fill_sem);
  3478  001BAA  0E1B               	movlw	low _fill_sem
  3479  001BAC  6EE6               	movwf	postinc1,c
  3480  001BAE  0E00               	movlw	high _fill_sem
  3481  001BB0  6EE6               	movwf	postinc1,c
  3482  001BB2  EC3F  F009         	call	_sem_wait	;wreg free
  3483                           
  3484                           ;tasks.c: 70:         while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  3485  001BB6  D006               	goto	l2130
  3486  001BB8                     l2128:
  3487                           
  3488                           ;tasks.c: 71:             lunos_delayTask(100);
  3489  001BB8  0E64               	movlw	100
  3490  001BBA  6EE6               	movwf	postinc1,c
  3491  001BBC  0E00               	movlw	0
  3492  001BBE  6EE6               	movwf	postinc1,c
  3493  001BC0  ECAF  F00C         	call	_lunos_delayTask	;wreg free
  3494  001BC4                     l2130:
  3495                           
  3496                           ;tasks.c: 70:         while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  3497  001BC4  A082               	btfss	3970,0,c	;volatile
  3498  001BC6  B282               	btfsc	3970,1,c	;volatile
  3499  001BC8  D7EF               	goto	_fill_bottle
  3500  001BCA  B482               	btfsc	3970,2,c	;volatile
  3501  001BCC  D7ED               	goto	_fill_bottle
  3502  001BCE  D7F4               	goto	l2128
  3503  001BD0                     __end_of_fill_bottle:
  3504                           	opt callstack 0
  3505                           
  3506 ;; *************** function _check_level *****************
  3507 ;; Defined at:
  3508 ;;		line 78 in file "tasks.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1  [STACK] void 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3522 ;;      Params:         0       0       0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0
  3525 ;;      Totals:         0       0       0       0       0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    8
  3529 ;; This function calls:
  3530 ;;		_sem_post
  3531 ;;		_sem_wait
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text21
  3538  001A98                     __ptext21:
  3539                           	opt callstack 0
  3540  001A98                     _check_level:
  3541                           	opt callstack 18
  3542                           
  3543                           ;tasks.c: 80:         PORTDbits.RD6 = 0;
  3544                           
  3545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3546                           ;incstack = 0
  3547                           ;tasks.c: 79:     while(1){
  3548  001A98  9C83               	bcf	3971,6,c	;volatile
  3549                           
  3550                           ;tasks.c: 81:         sem_wait(&check_sem);
  3551  001A9A  0E0D               	movlw	low _check_sem
  3552  001A9C  6EE6               	movwf	postinc1,c
  3553  001A9E  0E00               	movlw	high _check_sem
  3554  001AA0  6EE6               	movwf	postinc1,c
  3555  001AA2  EC3F  F009         	call	_sem_wait	;wreg free
  3556                           
  3557                           ;tasks.c: 82:         if (!PORTDbits.RD1)
  3558  001AA6  B283               	btfsc	3971,1,c	;volatile
  3559  001AA8  D002               	goto	l316
  3560                           
  3561                           ;tasks.c: 83:             global_buffer.bottles[0].bottle_state = EMPTY;
  3562  001AAA  6A03               	clrf	_global_buffer+2,c
  3563  001AAC  D004               	goto	l317
  3564  001AAE                     l316:
  3565  001AAE  A283               	btfss	3971,1,c	;volatile
  3566  001AB0  D002               	goto	l317
  3567                           
  3568                           ;tasks.c: 85:             global_buffer.bottles[0].bottle_state = FULL;
  3569  001AB2  0E01               	movlw	1
  3570  001AB4  6E03               	movwf	_global_buffer+2,c
  3571  001AB6                     l317:
  3572                           
  3573                           ;tasks.c: 88:         if (!PORTDbits.RD2)
  3574  001AB6  B483               	btfsc	3971,2,c	;volatile
  3575  001AB8  D002               	goto	l320
  3576                           
  3577                           ;tasks.c: 89:             global_buffer.bottles[1].bottle_state = EMPTY;
  3578  001ABA  6A04               	clrf	_global_buffer+3,c
  3579  001ABC  D004               	goto	l321
  3580  001ABE                     l320:
  3581  001ABE  A483               	btfss	3971,2,c	;volatile
  3582  001AC0  D002               	goto	l321
  3583                           
  3584                           ;tasks.c: 91:             global_buffer.bottles[1].bottle_state = FULL;
  3585  001AC2  0E01               	movlw	1
  3586  001AC4  6E04               	movwf	_global_buffer+3,c
  3587  001AC6                     l321:
  3588                           
  3589                           ;tasks.c: 94:         if (!PORTDbits.RD3)
  3590  001AC6  B683               	btfsc	3971,3,c	;volatile
  3591  001AC8  D002               	goto	l324
  3592                           
  3593                           ;tasks.c: 95:             global_buffer.bottles[2].bottle_state = EMPTY;
  3594  001ACA  6A05               	clrf	_global_buffer+4,c
  3595  001ACC  D7E5               	goto	_check_level
  3596  001ACE                     l324:
  3597  001ACE  A683               	btfss	3971,3,c	;volatile
  3598  001AD0  D7E3               	goto	_check_level
  3599                           
  3600                           ;tasks.c: 97:             global_buffer.bottles[2].bottle_state = FULL;
  3601  001AD2  0E01               	movlw	1
  3602  001AD4  6E05               	movwf	_global_buffer+4,c
  3603  001AD6  D7E0               	goto	_check_level
  3604  001AD8                     __end_of_check_level:
  3605                           	opt callstack 0
  3606                           
  3607 ;; *************** function _cover_bottle *****************
  3608 ;; Defined at:
  3609 ;;		line 104 in file "tasks.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  i               2    0        int 
  3614 ;;  count           2    0        int 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1  [STACK] void 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3624 ;;      Params:         0       0       0       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0
  3627 ;;      Totals:         0       0       0       0       0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    9
  3631 ;; This function calls:
  3632 ;;		_pipe_write
  3633 ;;		_sem_post
  3634 ;;		_sem_wait
  3635 ;; This function is called by:
  3636 ;;		_main
  3637 ;; This function uses a reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text22
  3641  0019B0                     __ptext22:
  3642                           	opt callstack 0
  3643  0019B0                     _cover_bottle:
  3644                           	opt callstack 17
  3645                           
  3646                           ;tasks.c: 106:         PORTDbits.RD7 = 0;
  3647                           
  3648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3649                           ;incstack = 0
  3650                           ;tasks.c: 105:     while(1){
  3651  0019B0  9E83               	bcf	3971,7,c	;volatile
  3652                           
  3653                           ;tasks.c: 107:         sem_wait(&cover_sem);
  3654  0019B2  0E8E               	movlw	low _cover_sem
  3655  0019B4  6EE6               	movwf	postinc1,c
  3656  0019B6  0E00               	movlw	high _cover_sem
  3657  0019B8  6EE6               	movwf	postinc1,c
  3658  0019BA  EC3F  F009         	call	_sem_wait	;wreg free
  3659                           
  3660                           ;tasks.c: 108:         if (PORTCbits.RC3){
  3661  0019BE  A682               	btfss	3970,3,c	;volatile
  3662  0019C0  D009               	goto	l334
  3663                           
  3664                           ;tasks.c: 109:             if(global_buffer.bottles[0].bottle_state == FULL)
  3665  0019C2  0403               	decf	_global_buffer+2,w,c
  3666  0019C4  A4D8               	btfss	status,2,c
  3667  0019C6  D002               	goto	l335
  3668                           
  3669                           ;tasks.c: 110:                 global_buffer.bottles[0].bottle_state = CLOSED;
  3670  0019C8  0E02               	movlw	2
  3671  0019CA  D003               	goto	L3
  3672  0019CC                     l335:
  3673  0019CC  A682               	btfss	3970,3,c	;volatile
  3674  0019CE  D002               	goto	l334
  3675                           
  3676                           ;tasks.c: 112:                 global_buffer.bottles[0].bottle_state = FAIL;
  3677  0019D0  0E03               	movlw	3
  3678  0019D2                     L3:
  3679  0019D2  6E03               	movwf	_global_buffer+2,c
  3680  0019D4                     l334:
  3681                           
  3682                           ;tasks.c: 115:         if (PORTCbits.RC4){
  3683  0019D4  A882               	btfss	3970,4,c	;volatile
  3684  0019D6  D009               	goto	l339
  3685                           
  3686                           ;tasks.c: 116:             if(global_buffer.bottles[1].bottle_state == FULL)
  3687  0019D8  0404               	decf	_global_buffer+3,w,c
  3688  0019DA  A4D8               	btfss	status,2,c
  3689  0019DC  D002               	goto	l340
  3690                           
  3691                           ;tasks.c: 117:                 global_buffer.bottles[1].bottle_state = CLOSED;
  3692  0019DE  0E02               	movlw	2
  3693  0019E0  D003               	goto	L4
  3694  0019E2                     l340:
  3695  0019E2  A882               	btfss	3970,4,c	;volatile
  3696  0019E4  D002               	goto	l339
  3697                           
  3698                           ;tasks.c: 119:                 global_buffer.bottles[1].bottle_state = FAIL;
  3699  0019E6  0E03               	movlw	3
  3700  0019E8                     L4:
  3701  0019E8  6E04               	movwf	_global_buffer+3,c
  3702  0019EA                     l339:
  3703                           
  3704                           ;tasks.c: 122:         if (PORTCbits.RC5){
  3705  0019EA  AA82               	btfss	3970,5,c	;volatile
  3706  0019EC  D7E1               	goto	_cover_bottle
  3707                           
  3708                           ;tasks.c: 123:             if(global_buffer.bottles[2].bottle_state == FULL)
  3709  0019EE  0405               	decf	_global_buffer+4,w,c
  3710  0019F0  A4D8               	btfss	status,2,c
  3711  0019F2  D002               	goto	l345
  3712                           
  3713                           ;tasks.c: 124:                 global_buffer.bottles[2].bottle_state = CLOSED;
  3714  0019F4  0E02               	movlw	2
  3715  0019F6  D003               	goto	L5
  3716  0019F8                     l345:
  3717  0019F8  AA82               	btfss	3970,5,c	;volatile
  3718  0019FA  D7DA               	goto	_cover_bottle
  3719                           
  3720                           ;tasks.c: 126:                 global_buffer.bottles[2].bottle_state = FAIL;
  3721  0019FC  0E03               	movlw	3
  3722  0019FE                     L5:
  3723  0019FE  6E05               	movwf	_global_buffer+4,c
  3724                           
  3725                           ;tasks.c: 128:         }
  3726  001A00  D7D7               	goto	_cover_bottle
  3727  001A02                     __end_of_cover_bottle:
  3728                           	opt callstack 0
  3729                           
  3730 ;; *************** function _pipe_write *****************
  3731 ;; Defined at:
  3732 ;;		line 18 in file "pipe.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  p               2  [STACK] PTR struct pipe
  3735 ;;		 -> p(12), 
  3736 ;;  data            2  [STACK] unsigned int 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1  [STACK] void 
  3741 ;; Registers used:
  3742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3748 ;;      Params:         0       0       0       0       0       0       0
  3749 ;;      Locals:         0       0       0       0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0
  3751 ;;      Totals:         0       0       0       0       0       0       0
  3752 ;;Total ram usage:        0 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    8
  3755 ;; This function calls:
  3756 ;;		_sem_post
  3757 ;;		_sem_wait
  3758 ;; This function is called by:
  3759 ;;		_cover_bottle
  3760 ;;		_task_0
  3761 ;; This function uses a reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text23
  3765  000E7E                     __ptext23:
  3766                           	opt callstack 0
  3767  000E7E                     _pipe_write:
  3768                           	opt callstack 17
  3769                           
  3770                           ;pipe.c: 20:   sem_wait(p->w);
  3771                           ;stkvar	_p @ sp[(0)+-2]
  3772                           
  3773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3774                           ;incstack = 0
  3775  000E7E  0EFE               	movlw	-2
  3776  000E80  CFE3 F04D          	movff	plusw1,btemp+10
  3777  000E84  0EFF               	movlw	-1
  3778  000E86  CFE3 F04E          	movff	plusw1,btemp+11
  3779  000E8A  0E08               	movlw	8
  3780  000E8C  244D               	addwf	btemp+10,w,c
  3781  000E8E  6ED9               	movwf	fsr2l,c
  3782  000E90  0E00               	movlw	0
  3783  000E92  204E               	addwfc	btemp+11,w,c
  3784  000E94  6EDA               	movwf	fsr2h,c
  3785  000E96  CFDE F04D          	movff	postinc2,btemp+10
  3786  000E9A  CFDD F04E          	movff	postdec2,btemp+11
  3787  000E9E  C04D  FFE6         	movff	btemp+10,postinc1
  3788  000EA2  C04E  FFE6         	movff	btemp+11,postinc1
  3789  000EA6  EC3F  F009         	call	_sem_wait	;wreg free
  3790                           
  3791                           ;pipe.c: 21:   p->pipe_data[p->index_write] = data;
  3792                           ;stkvar	_data @ sp[(0)+-4]
  3793  000EAA  50E1               	movf	fsr1l,w,c
  3794  000EAC  0FFC               	addlw	-4
  3795  000EAE  6ED9               	movwf	fsr2l,c
  3796  000EB0  50E2               	movf	fsr1h,w,c
  3797  000EB2  6EDA               	movwf	fsr2h,c
  3798  000EB4  0EFF               	movlw	255
  3799  000EB6  22DA               	addwfc	fsr2h,f,c
  3800                           
  3801                           ;stkvar	_p @ sp[(0)+-2]
  3802  000EB8  0EFE               	movlw	-2
  3803  000EBA  CFE3 F04D          	movff	plusw1,btemp+10
  3804  000EBE  0EFF               	movlw	-1
  3805  000EC0  CFE3 F04E          	movff	plusw1,btemp+11
  3806  000EC4  0E04               	movlw	4
  3807  000EC6  244D               	addwf	btemp+10,w,c
  3808  000EC8  6EE9               	movwf	fsr0l,c
  3809  000ECA  0E00               	movlw	0
  3810  000ECC  204E               	addwfc	btemp+11,w,c
  3811  000ECE  6EEA               	movwf	fsr0h,c
  3812  000ED0  CFEE F04D          	movff	postinc0,btemp+10
  3813  000ED4  CFED F04E          	movff	postdec0,btemp+11
  3814  000ED8  90D8               	bcf	status,0,c
  3815  000EDA  344D               	rlcf	btemp+10,w,c
  3816  000EDC  6E4B               	movwf	btemp+8,c
  3817  000EDE  344E               	rlcf	btemp+11,w,c
  3818  000EE0  6E4C               	movwf	btemp+9,c
  3819                           
  3820                           ;stkvar	_p @ sp[(0)+-2]
  3821  000EE2  0EFE               	movlw	-2
  3822  000EE4  CFE3 F04D          	movff	plusw1,btemp+10
  3823  000EE8  0EFF               	movlw	-1
  3824  000EEA  CFE3 F04E          	movff	plusw1,btemp+11
  3825  000EEE  504B               	movf	btemp+8,w,c
  3826  000EF0  244D               	addwf	btemp+10,w,c
  3827  000EF2  6EE9               	movwf	fsr0l,c
  3828  000EF4  504C               	movf	btemp+9,w,c
  3829  000EF6  204E               	addwfc	btemp+11,w,c
  3830  000EF8  6EEA               	movwf	fsr0h,c
  3831  000EFA  CFDE FFEE          	movff	postinc2,postinc0
  3832  000EFE  CFDD FFED          	movff	postdec2,postdec0
  3833                           
  3834                           ;pipe.c: 22:   p->index_write = (p->index_write + 1) % 2;
  3835                           ;stkvar	_p @ sp[(0)+-2]
  3836  000F02  0EFE               	movlw	-2
  3837  000F04  CFE3 F04D          	movff	plusw1,btemp+10
  3838  000F08  0EFF               	movlw	-1
  3839  000F0A  CFE3 F04E          	movff	plusw1,btemp+11
  3840  000F0E  0E04               	movlw	4
  3841  000F10  244D               	addwf	btemp+10,w,c
  3842  000F12  6ED9               	movwf	fsr2l,c
  3843  000F14  0E00               	movlw	0
  3844  000F16  204E               	addwfc	btemp+11,w,c
  3845  000F18  6EDA               	movwf	fsr2h,c
  3846  000F1A  CFDE F04D          	movff	postinc2,btemp+10
  3847  000F1E  CFDD F04E          	movff	postdec2,btemp+11
  3848  000F22  0E01               	movlw	1
  3849  000F24  264D               	addwf	btemp+10,f,c
  3850  000F26  0E00               	movlw	0
  3851  000F28  224E               	addwfc	btemp+11,f,c
  3852  000F2A  0E01               	movlw	1
  3853  000F2C  164D               	andwf	btemp+10,f,c
  3854  000F2E  0E00               	movlw	0
  3855  000F30  164E               	andwf	btemp+11,f,c
  3856                           
  3857                           ;stkvar	_p @ sp[(0)+-2]
  3858  000F32  0EFE               	movlw	-2
  3859  000F34  CFE3 F04B          	movff	plusw1,btemp+8
  3860  000F38  0EFF               	movlw	-1
  3861  000F3A  CFE3 F04C          	movff	plusw1,btemp+9
  3862  000F3E  0E04               	movlw	4
  3863  000F40  244B               	addwf	btemp+8,w,c
  3864  000F42  6ED9               	movwf	fsr2l,c
  3865  000F44  0E00               	movlw	0
  3866  000F46  204C               	addwfc	btemp+9,w,c
  3867  000F48  6EDA               	movwf	fsr2h,c
  3868  000F4A  C04D  FFDE         	movff	btemp+10,postinc2
  3869  000F4E  C04E  FFDD         	movff	btemp+11,postdec2
  3870                           
  3871                           ;pipe.c: 23:   sem_post(p->r);
  3872                           ;stkvar	_p @ sp[(0)+-2]
  3873  000F52  0EFE               	movlw	-2
  3874  000F54  CFE3 F04D          	movff	plusw1,btemp+10
  3875  000F58  0EFF               	movlw	-1
  3876  000F5A  CFE3 F04E          	movff	plusw1,btemp+11
  3877  000F5E  0E0A               	movlw	10
  3878  000F60  244D               	addwf	btemp+10,w,c
  3879  000F62  6ED9               	movwf	fsr2l,c
  3880  000F64  0E00               	movlw	0
  3881  000F66  204E               	addwfc	btemp+11,w,c
  3882  000F68  6EDA               	movwf	fsr2h,c
  3883  000F6A  CFDE F04D          	movff	postinc2,btemp+10
  3884  000F6E  CFDD F04E          	movff	postdec2,btemp+11
  3885  000F72  C04D  FFE6         	movff	btemp+10,postinc1
  3886  000F76  C04E  FFE6         	movff	btemp+11,postinc1
  3887  000F7A  ECC4  F008         	call	_sem_post	;wreg free
  3888                           
  3889                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  3890  000F7E  52E5               	movf	postdec1,f,c
  3891  000F80  52E5               	movf	postdec1,f,c
  3892  000F82  52E5               	movf	postdec1,f,c
  3893  000F84  52E5               	movf	postdec1,f,c
  3894  000F86  0012               	return		;funcret
  3895  000F88                     __end_of_pipe_write:
  3896                           	opt callstack 0
  3897                           
  3898 ;; *************** function _count_out *****************
  3899 ;; Defined at:
  3900 ;;		line 139 in file "tasks.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  count           2  [STACK] unsigned int 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1  [STACK] void 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3914 ;;      Params:         0       0       0       0       0       0       0
  3915 ;;      Locals:         0       0       0       0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0
  3917 ;;      Totals:         0       0       0       0       0       0       0
  3918 ;;Total ram usage:        0 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    9
  3921 ;; This function calls:
  3922 ;;		_pipe_read
  3923 ;;		_sem_post
  3924 ;;		_sem_wait
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;; This function uses a reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text24
  3931  001B18                     __ptext24:
  3932                           	opt callstack 0
  3933  001B18                     _count_out:
  3934                           	opt callstack 0
  3935                           
  3936                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3937  001B18  52E6               	movf	postinc1,f,c
  3938  001B1A  52E6               	movf	postinc1,f,c
  3939                           
  3940                           ;tasks.c: 141:     sem_wait(&out_sem);
  3941                           
  3942                           ;incstack = 0
  3943  001B1C  0E80               	movlw	low _out_sem
  3944  001B1E  6EE6               	movwf	postinc1,c
  3945  001B20  0E00               	movlw	high _out_sem
  3946  001B22  6EE6               	movwf	postinc1,c
  3947  001B24  EC3F  F009         	call	_sem_wait	;wreg free
  3948  001B28                     l2194:
  3949                           
  3950                           ;tasks.c: 144:         PORTBbits.RB1 = 0;
  3951  001B28  9281               	bcf	3969,1,c	;volatile
  3952                           
  3953                           ;tasks.c: 145:         pipe_read(&p, &count);
  3954                           ;stkvar	_count @ sp[(-2)+0]
  3955  001B2A  0EFE               	movlw	254
  3956  001B2C  24E1               	addwf	fsr1l,w,c
  3957  001B2E  6E43               	movwf	btemp,c
  3958  001B30  0EFF               	movlw	255
  3959  001B32  20E2               	addwfc	fsr1h,w,c
  3960  001B34  6E44               	movwf	btemp+1,c
  3961  001B36  C043  FFE6         	movff	btemp,postinc1
  3962  001B3A  C044  FFE6         	movff	btemp+1,postinc1
  3963  001B3E  0E37               	movlw	low _p
  3964  001B40  6EE6               	movwf	postinc1,c
  3965  001B42  0E00               	movlw	high _p
  3966  001B44  6EE6               	movwf	postinc1,c
  3967  001B46  ECC4  F007         	call	_pipe_read	;wreg free
  3968  001B4A  D7EE               	goto	l2194
  3969  001B4C                     __end_of_count_out:
  3970                           	opt callstack 0
  3971                           
  3972 ;; *************** function _pipe_read *****************
  3973 ;; Defined at:
  3974 ;;		line 27 in file "pipe.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  p               2  [STACK] PTR struct pipe
  3977 ;;		 -> p(12), 
  3978 ;;  data            2  [STACK] PTR unsigned int 
  3979 ;;		 -> dado(2), count(2), 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1  [STACK] void 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3991 ;;      Params:         0       0       0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    8
  3998 ;; This function calls:
  3999 ;;		_sem_post
  4000 ;;		_sem_wait
  4001 ;; This function is called by:
  4002 ;;		_count_out
  4003 ;;		_task_1
  4004 ;; This function uses a reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text25
  4008  000F88                     __ptext25:
  4009                           	opt callstack 0
  4010  000F88                     _pipe_read:
  4011                           	opt callstack 17
  4012                           
  4013                           ;pipe.c: 29:   sem_wait(p->r);
  4014                           ;stkvar	_p @ sp[(0)+-2]
  4015                           
  4016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4017                           ;incstack = 0
  4018  000F88  0EFE               	movlw	-2
  4019  000F8A  CFE3 F04D          	movff	plusw1,btemp+10
  4020  000F8E  0EFF               	movlw	-1
  4021  000F90  CFE3 F04E          	movff	plusw1,btemp+11
  4022  000F94  0E0A               	movlw	10
  4023  000F96  244D               	addwf	btemp+10,w,c
  4024  000F98  6ED9               	movwf	fsr2l,c
  4025  000F9A  0E00               	movlw	0
  4026  000F9C  204E               	addwfc	btemp+11,w,c
  4027  000F9E  6EDA               	movwf	fsr2h,c
  4028  000FA0  CFDE F04D          	movff	postinc2,btemp+10
  4029  000FA4  CFDD F04E          	movff	postdec2,btemp+11
  4030  000FA8  C04D  FFE6         	movff	btemp+10,postinc1
  4031  000FAC  C04E  FFE6         	movff	btemp+11,postinc1
  4032  000FB0  EC3F  F009         	call	_sem_wait	;wreg free
  4033                           
  4034                           ;pipe.c: 30:   *data = p->pipe_data[p->index_read];
  4035                           ;stkvar	_p @ sp[(0)+-2]
  4036  000FB4  0EFE               	movlw	-2
  4037  000FB6  CFE3 F04D          	movff	plusw1,btemp+10
  4038  000FBA  0EFF               	movlw	-1
  4039  000FBC  CFE3 F04E          	movff	plusw1,btemp+11
  4040  000FC0  0E06               	movlw	6
  4041  000FC2  244D               	addwf	btemp+10,w,c
  4042  000FC4  6ED9               	movwf	fsr2l,c
  4043  000FC6  0E00               	movlw	0
  4044  000FC8  204E               	addwfc	btemp+11,w,c
  4045  000FCA  6EDA               	movwf	fsr2h,c
  4046  000FCC  CFDE F04D          	movff	postinc2,btemp+10
  4047  000FD0  CFDD F04E          	movff	postdec2,btemp+11
  4048  000FD4  90D8               	bcf	status,0,c
  4049  000FD6  344D               	rlcf	btemp+10,w,c
  4050  000FD8  6E4B               	movwf	btemp+8,c
  4051  000FDA  344E               	rlcf	btemp+11,w,c
  4052  000FDC  6E4C               	movwf	btemp+9,c
  4053                           
  4054                           ;stkvar	_p @ sp[(0)+-2]
  4055  000FDE  0EFE               	movlw	-2
  4056  000FE0  CFE3 F04D          	movff	plusw1,btemp+10
  4057  000FE4  0EFF               	movlw	-1
  4058  000FE6  CFE3 F04E          	movff	plusw1,btemp+11
  4059  000FEA  504B               	movf	btemp+8,w,c
  4060  000FEC  244D               	addwf	btemp+10,w,c
  4061  000FEE  6ED9               	movwf	fsr2l,c
  4062  000FF0  504C               	movf	btemp+9,w,c
  4063  000FF2  204E               	addwfc	btemp+11,w,c
  4064  000FF4  6EDA               	movwf	fsr2h,c
  4065                           
  4066                           ;stkvar	_data @ sp[(0)+-4]
  4067  000FF6  0EFC               	movlw	-4
  4068  000FF8  CFE3 FFE9          	movff	plusw1,fsr0l
  4069  000FFC  0EFD               	movlw	-3
  4070  000FFE  CFE3 FFEA          	movff	plusw1,fsr0h
  4071  001002  CFDE FFEE          	movff	postinc2,postinc0
  4072  001006  CFDD FFED          	movff	postdec2,postdec0
  4073                           
  4074                           ;pipe.c: 31:   p->index_read = (p->index_read + 1) % 2;
  4075                           ;stkvar	_p @ sp[(0)+-2]
  4076  00100A  0EFE               	movlw	-2
  4077  00100C  CFE3 F04D          	movff	plusw1,btemp+10
  4078  001010  0EFF               	movlw	-1
  4079  001012  CFE3 F04E          	movff	plusw1,btemp+11
  4080  001016  0E06               	movlw	6
  4081  001018  244D               	addwf	btemp+10,w,c
  4082  00101A  6ED9               	movwf	fsr2l,c
  4083  00101C  0E00               	movlw	0
  4084  00101E  204E               	addwfc	btemp+11,w,c
  4085  001020  6EDA               	movwf	fsr2h,c
  4086  001022  CFDE F04D          	movff	postinc2,btemp+10
  4087  001026  CFDD F04E          	movff	postdec2,btemp+11
  4088  00102A  0E01               	movlw	1
  4089  00102C  264D               	addwf	btemp+10,f,c
  4090  00102E  0E00               	movlw	0
  4091  001030  224E               	addwfc	btemp+11,f,c
  4092  001032  0E01               	movlw	1
  4093  001034  164D               	andwf	btemp+10,f,c
  4094  001036  0E00               	movlw	0
  4095  001038  164E               	andwf	btemp+11,f,c
  4096                           
  4097                           ;stkvar	_p @ sp[(0)+-2]
  4098  00103A  0EFE               	movlw	-2
  4099  00103C  CFE3 F04B          	movff	plusw1,btemp+8
  4100  001040  0EFF               	movlw	-1
  4101  001042  CFE3 F04C          	movff	plusw1,btemp+9
  4102  001046  0E06               	movlw	6
  4103  001048  244B               	addwf	btemp+8,w,c
  4104  00104A  6ED9               	movwf	fsr2l,c
  4105  00104C  0E00               	movlw	0
  4106  00104E  204C               	addwfc	btemp+9,w,c
  4107  001050  6EDA               	movwf	fsr2h,c
  4108  001052  C04D  FFDE         	movff	btemp+10,postinc2
  4109  001056  C04E  FFDD         	movff	btemp+11,postdec2
  4110                           
  4111                           ;pipe.c: 32:   sem_post(p->w);
  4112                           ;stkvar	_p @ sp[(0)+-2]
  4113  00105A  0EFE               	movlw	-2
  4114  00105C  CFE3 F04D          	movff	plusw1,btemp+10
  4115  001060  0EFF               	movlw	-1
  4116  001062  CFE3 F04E          	movff	plusw1,btemp+11
  4117  001066  0E08               	movlw	8
  4118  001068  244D               	addwf	btemp+10,w,c
  4119  00106A  6ED9               	movwf	fsr2l,c
  4120  00106C  0E00               	movlw	0
  4121  00106E  204E               	addwfc	btemp+11,w,c
  4122  001070  6EDA               	movwf	fsr2h,c
  4123  001072  CFDE F04D          	movff	postinc2,btemp+10
  4124  001076  CFDD F04E          	movff	postdec2,btemp+11
  4125  00107A  C04D  FFE6         	movff	btemp+10,postinc1
  4126  00107E  C04E  FFE6         	movff	btemp+11,postinc1
  4127  001082  ECC4  F008         	call	_sem_post	;wreg free
  4128                           
  4129                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  4130  001086  52E5               	movf	postdec1,f,c
  4131  001088  52E5               	movf	postdec1,f,c
  4132  00108A  52E5               	movf	postdec1,f,c
  4133  00108C  52E5               	movf	postdec1,f,c
  4134  00108E  0012               	return		;funcret
  4135  001090                     __end_of_pipe_read:
  4136                           	opt callstack 0
  4137                           
  4138 ;; *************** function _task_0 *****************
  4139 ;; Defined at:
  4140 ;;		line 151 in file "tasks.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1  [STACK] void 
  4147 ;; Registers used:
  4148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4154 ;;      Params:         0       0       0       0       0       0       0
  4155 ;;      Locals:         0       0       0       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0
  4157 ;;      Totals:         0       0       0       0       0       0       0
  4158 ;;Total ram usage:        0 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; Hardware stack levels required when called:    9
  4161 ;; This function calls:
  4162 ;;		_lunos_delayTask
  4163 ;;		_pipe_write
  4164 ;; This function is called by:
  4165 ;;		Interrupt level 1
  4166 ;; This function uses a reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text26
  4170  001AD8                     __ptext26:
  4171                           	opt callstack 0
  4172  001AD8                     _task_0:
  4173                           	opt callstack 17
  4174                           
  4175                           ;tasks.c: 153:     pipe_write(&p, 1);
  4176                           
  4177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4178                           ;incstack = 0
  4179                           ;tasks.c: 152:   while(1){
  4180  001AD8  0E01               	movlw	1
  4181  001ADA  6EE6               	movwf	postinc1,c
  4182  001ADC  0E00               	movlw	0
  4183  001ADE  6EE6               	movwf	postinc1,c
  4184  001AE0  0E37               	movlw	low _p
  4185  001AE2  6EE6               	movwf	postinc1,c
  4186  001AE4  0E00               	movlw	high _p
  4187  001AE6  6EE6               	movwf	postinc1,c
  4188  001AE8  EC3F  F007         	call	_pipe_write	;wreg free
  4189                           
  4190                           ;tasks.c: 154:     PORTBbits.RB3 = ~PORTBbits.RB3;
  4191  001AEC  A681               	btfss	3969,3,c	;volatile
  4192  001AEE  D002               	goto	u113_20
  4193  001AF0  0E01               	movlw	1
  4194  001AF2  D001               	goto	u113_26
  4195  001AF4                     u113_20:
  4196  001AF4  0E00               	movlw	0
  4197  001AF6                     u113_26:
  4198  001AF6  0AFF               	xorlw	255
  4199  001AF8  6E4E               	movwf	btemp+11,c
  4200  001AFA  464E               	rlncf	btemp+11,f,c
  4201  001AFC  464E               	rlncf	btemp+11,f,c
  4202  001AFE  464E               	rlncf	btemp+11,f,c
  4203  001B00  5081               	movf	3969,w,c	;volatile
  4204  001B02  184E               	xorwf	btemp+11,w,c
  4205  001B04  0BF7               	andlw	-9
  4206  001B06  184E               	xorwf	btemp+11,w,c
  4207  001B08  6E81               	movwf	3969,c	;volatile
  4208                           
  4209                           ;tasks.c: 155:     lunos_delayTask(1000);
  4210  001B0A  0EE8               	movlw	232
  4211  001B0C  6EE6               	movwf	postinc1,c
  4212  001B0E  0E03               	movlw	3
  4213  001B10  6EE6               	movwf	postinc1,c
  4214  001B12  ECAF  F00C         	call	_lunos_delayTask	;wreg free
  4215  001B16  D7E0               	goto	_task_0
  4216  001B18                     __end_of_task_0:
  4217                           	opt callstack 0
  4218                           
  4219 ;; *************** function _task_1 *****************
  4220 ;; Defined at:
  4221 ;;		line 160 in file "tasks.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  dado            2  [STACK] unsigned int 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1  [STACK] void 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4235 ;;      Params:         0       0       0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0
  4238 ;;      Totals:         0       0       0       0       0       0       0
  4239 ;;Total ram usage:        0 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    9
  4242 ;; This function calls:
  4243 ;;		_lunos_delayTask
  4244 ;;		_pipe_read
  4245 ;; This function is called by:
  4246 ;;		Interrupt level 1
  4247 ;; This function uses a reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text27
  4251  001A02                     __ptext27:
  4252                           	opt callstack 0
  4253  001A02                     _task_1:
  4254                           	opt callstack 0
  4255                           
  4256                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4257  001A02  52E6               	movf	postinc1,f,c
  4258  001A04  52E6               	movf	postinc1,f,c
  4259  001A06                     l369:
  4260                           
  4261                           ;tasks.c: 163:     pipe_read(&p, &dado);
  4262                           ;stkvar	_dado @ sp[(-2)+0]
  4263  001A06  0EFE               	movlw	254
  4264  001A08  24E1               	addwf	fsr1l,w,c
  4265  001A0A  6E43               	movwf	btemp,c
  4266  001A0C  0EFF               	movlw	255
  4267  001A0E  20E2               	addwfc	fsr1h,w,c
  4268  001A10  6E44               	movwf	btemp+1,c
  4269  001A12  C043  FFE6         	movff	btemp,postinc1
  4270  001A16  C044  FFE6         	movff	btemp+1,postinc1
  4271  001A1A  0E37               	movlw	low _p
  4272  001A1C  6EE6               	movwf	postinc1,c
  4273  001A1E  0E00               	movlw	high _p
  4274  001A20  6EE6               	movwf	postinc1,c
  4275  001A22  ECC4  F007         	call	_pipe_read	;wreg free
  4276                           
  4277                           ;tasks.c: 164:     PORTBbits.RB4 = ~PORTBbits.RB4;
  4278  001A26  A881               	btfss	3969,4,c	;volatile
  4279  001A28  D002               	goto	u114_20
  4280  001A2A  0E01               	movlw	1
  4281  001A2C  D001               	goto	u114_26
  4282  001A2E                     u114_20:
  4283  001A2E  0E00               	movlw	0
  4284  001A30                     u114_26:
  4285  001A30  0AFF               	xorlw	255
  4286  001A32  6E4E               	movwf	btemp+11,c
  4287  001A34  3A4E               	swapf	btemp+11,f,c
  4288  001A36  5081               	movf	3969,w,c	;volatile
  4289  001A38  184E               	xorwf	btemp+11,w,c
  4290  001A3A  0BEF               	andlw	-17
  4291  001A3C  184E               	xorwf	btemp+11,w,c
  4292  001A3E  6E81               	movwf	3969,c	;volatile
  4293                           
  4294                           ;tasks.c: 165:     lunos_delayTask(2000);
  4295  001A40  0ED0               	movlw	208
  4296  001A42  6EE6               	movwf	postinc1,c
  4297  001A44  0E07               	movlw	7
  4298  001A46  6EE6               	movwf	postinc1,c
  4299  001A48  ECAF  F00C         	call	_lunos_delayTask	;wreg free
  4300  001A4C  D7DC               	goto	l369
  4301  001A4E                     __end_of_task_1:
  4302                           	opt callstack 0
  4303                           
  4304 ;; *************** function _task_2 *****************
  4305 ;; Defined at:
  4306 ;;		line 169 in file "tasks.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1  [STACK] void 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4320 ;;      Params:         0       0       0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0
  4323 ;;      Totals:         0       0       0       0       0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    8
  4327 ;; This function calls:
  4328 ;;		_lunos_delayTask
  4329 ;; This function is called by:
  4330 ;;		Interrupt level 1
  4331 ;; This function uses a reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text28
  4335  001B7E                     __ptext28:
  4336                           	opt callstack 0
  4337  001B7E                     _task_2:
  4338                           	opt callstack 18
  4339                           
  4340                           ;tasks.c: 171:     PORTBbits.RB5 = ~PORTBbits.RB5;
  4341                           
  4342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4343                           ;incstack = 0
  4344                           ;tasks.c: 170:   while(1){
  4345  001B7E  AA81               	btfss	3969,5,c	;volatile
  4346  001B80  D002               	goto	u115_20
  4347  001B82  0E01               	movlw	1
  4348  001B84  D001               	goto	u115_26
  4349  001B86                     u115_20:
  4350  001B86  0E00               	movlw	0
  4351  001B88                     u115_26:
  4352  001B88  0AFF               	xorlw	255
  4353  001B8A  6E4E               	movwf	btemp+11,c
  4354  001B8C  3A4E               	swapf	btemp+11,f,c
  4355  001B8E  464E               	rlncf	btemp+11,f,c
  4356  001B90  5081               	movf	3969,w,c	;volatile
  4357  001B92  184E               	xorwf	btemp+11,w,c
  4358  001B94  0BDF               	andlw	-33
  4359  001B96  184E               	xorwf	btemp+11,w,c
  4360  001B98  6E81               	movwf	3969,c	;volatile
  4361                           
  4362                           ;tasks.c: 172:     lunos_delayTask(1000);
  4363  001B9A  0EE8               	movlw	232
  4364  001B9C  6EE6               	movwf	postinc1,c
  4365  001B9E  0E03               	movlw	3
  4366  001BA0  6EE6               	movwf	postinc1,c
  4367  001BA2  ECAF  F00C         	call	_lunos_delayTask	;wreg free
  4368  001BA6  D7EB               	goto	_task_2
  4369  001BA8                     __end_of_task_2:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _task_bozo *****************
  4373 ;; Defined at:
  4374 ;;		line 177 in file "tasks.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  i               2  [STACK] int 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1  [STACK] void 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4388 ;;      Params:         0       0       0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    8
  4395 ;; This function calls:
  4396 ;;		_sem_post
  4397 ;;		_sem_wait
  4398 ;; This function is called by:
  4399 ;;		Interrupt level 1
  4400 ;; This function uses a reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text29
  4404  001802                     __ptext29:
  4405                           	opt callstack 0
  4406  001802                     _task_bozo:
  4407                           	opt callstack 0
  4408                           
  4409                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4410  001802  52E6               	movf	postinc1,f,c
  4411  001804  52E6               	movf	postinc1,f,c
  4412  001806                     l381:
  4413                           
  4414                           ;tasks.c: 179:     int i;;tasks.c: 180:     sem_wait(&teste_1);
  4415  001806  0EC6               	movlw	low _teste_1
  4416  001808  6EE6               	movwf	postinc1,c
  4417  00180A  0E00               	movlw	high _teste_1
  4418  00180C  6EE6               	movwf	postinc1,c
  4419  00180E  EC3F  F009         	call	_sem_wait	;wreg free
  4420                           
  4421                           ;tasks.c: 181:     for (i = 0; i < 4; i++) {
  4422                           ;stkvar	_i @ sp[(-2)+0]
  4423  001812  0EFE               	movlw	-2
  4424  001814  6AE3               	clrf	plusw1,c
  4425  001816  0EFF               	movlw	-1
  4426  001818  6AE3               	clrf	plusw1,c
  4427  00181A                     l2224:
  4428                           
  4429                           ;tasks.c: 182:       mem[i] = i+1;
  4430                           ;stkvar	_i @ sp[(-2)+0]
  4431  00181A  0EFE               	movlw	-2
  4432  00181C  CFE3 F04D          	movff	plusw1,btemp+10
  4433  001820  0EFF               	movlw	-1
  4434  001822  CFE3 F04E          	movff	plusw1,btemp+11
  4435  001826  504D               	movf	btemp+10,w,c
  4436  001828  2407               	addwf	_mem,w,c
  4437  00182A  6ED9               	movwf	fsr2l,c
  4438  00182C  504E               	movf	btemp+11,w,c
  4439  00182E  2008               	addwfc	_mem+1,w,c
  4440  001830  6EDA               	movwf	fsr2h,c
  4441                           
  4442                           ;stkvar	_i @ sp[(-2)+0]
  4443  001832  0EFE               	movlw	-2
  4444  001834  50E3               	movf	plusw1,w,c
  4445  001836  0F01               	addlw	1
  4446  001838  6EDF               	movwf	indf2,c
  4447                           
  4448                           ;tasks.c: 183:     }
  4449                           ;stkvar	_i @ sp[(-2)+0]
  4450  00183A  0EFE               	movlw	-2
  4451  00183C  50E3               	movf	plusw1,w,c
  4452  00183E  0F01               	addlw	1
  4453  001840  6E43               	movwf	btemp,c
  4454  001842  0EFE               	movlw	-2
  4455  001844  C043  FFE3         	movff	btemp,plusw1
  4456  001848  6A43               	clrf	btemp,c
  4457  00184A  0EFF               	movlw	-1
  4458  00184C  50E3               	movf	plusw1,w,c
  4459  00184E  2043               	addwfc	btemp,w,c
  4460  001850  6E43               	movwf	btemp,c
  4461  001852  0EFF               	movlw	-1
  4462  001854  C043  FFE3         	movff	btemp,plusw1
  4463                           
  4464                           ;stkvar	_i @ sp[(-2)+0]
  4465  001858  0EFF               	movlw	-1
  4466  00185A  BEE3               	btfsc	plusw1,7,c
  4467  00185C  D7DE               	goto	l2224
  4468  00185E  0EFF               	movlw	-1
  4469  001860  50E3               	movf	plusw1,w,c
  4470  001862  E107               	bnz	u116_20
  4471  001864  0EFE               	movlw	-2
  4472  001866  CFE3 F043          	movff	plusw1,btemp
  4473  00186A  0E04               	movlw	4
  4474  00186C  5E43               	subwf	btemp,f,c
  4475  00186E  A0D8               	btfss	status,0,c
  4476  001870  D7D4               	goto	l2224
  4477  001872                     u116_20:
  4478                           
  4479                           ;tasks.c: 184:     sem_post(&teste_2);
  4480  001872  0EB8               	movlw	low _teste_2
  4481  001874  6EE6               	movwf	postinc1,c
  4482  001876  0E00               	movlw	high _teste_2
  4483  001878  6EE6               	movwf	postinc1,c
  4484  00187A  ECC4  F008         	call	_sem_post	;wreg free
  4485  00187E  D7C3               	goto	l381
  4486  001880                     __end_of_task_bozo:
  4487                           	opt callstack 0
  4488                           
  4489 ;; *************** function _task_xuxa *****************
  4490 ;; Defined at:
  4491 ;;		line 188 in file "tasks.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  i               2  [STACK] int 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1  [STACK] void 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4505 ;;      Params:         0       0       0       0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0
  4507 ;;      Temps:          0       0       0       0       0       0       0
  4508 ;;      Totals:         0       0       0       0       0       0       0
  4509 ;;Total ram usage:        0 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    8
  4512 ;; This function calls:
  4513 ;;		_lunos_delayTask
  4514 ;;		_sem_post
  4515 ;;		_sem_wait
  4516 ;; This function is called by:
  4517 ;;		Interrupt level 1
  4518 ;; This function uses a reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text30
  4522  001434                     __ptext30:
  4523                           	opt callstack 0
  4524  001434                     _task_xuxa:
  4525                           	opt callstack 0
  4526                           
  4527                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4528  001434  52E6               	movf	postinc1,f,c
  4529  001436  52E6               	movf	postinc1,f,c
  4530  001438                     l389:
  4531                           
  4532                           ;tasks.c: 191:     sem_wait(&teste_2);
  4533  001438  0EB8               	movlw	low _teste_2
  4534  00143A  6EE6               	movwf	postinc1,c
  4535  00143C  0E00               	movlw	high _teste_2
  4536  00143E  6EE6               	movwf	postinc1,c
  4537  001440  EC3F  F009         	call	_sem_wait	;wreg free
  4538                           
  4539                           ;tasks.c: 192:     for (i = 0; i < 4; i++) {
  4540                           ;stkvar	_i @ sp[(-2)+0]
  4541  001444  0EFE               	movlw	-2
  4542  001446  6AE3               	clrf	plusw1,c
  4543  001448  0EFF               	movlw	-1
  4544  00144A  6AE3               	clrf	plusw1,c
  4545  00144C                     l2240:
  4546                           
  4547                           ;tasks.c: 193:       if (mem[i] % 2 == 0)
  4548                           ;stkvar	_i @ sp[(-2)+0]
  4549  00144C  0EFE               	movlw	-2
  4550  00144E  CFE3 F04D          	movff	plusw1,btemp+10
  4551  001452  0EFF               	movlw	-1
  4552  001454  CFE3 F04E          	movff	plusw1,btemp+11
  4553  001458  504D               	movf	btemp+10,w,c
  4554  00145A  2407               	addwf	_mem,w,c
  4555  00145C  6ED9               	movwf	fsr2l,c
  4556  00145E  504E               	movf	btemp+11,w,c
  4557  001460  2008               	addwfc	_mem+1,w,c
  4558  001462  6EDA               	movwf	fsr2h,c
  4559  001464  B0DF               	btfsc	indf2,0,c
  4560  001466  D00E               	goto	l2244
  4561                           
  4562                           ;tasks.c: 194:         PORTBbits.RB3 = ~PORTBbits.RB3;
  4563  001468  A681               	btfss	3969,3,c	;volatile
  4564  00146A  D002               	goto	u118_20
  4565  00146C  0E01               	movlw	1
  4566  00146E  D001               	goto	u118_26
  4567  001470                     u118_20:
  4568  001470  0E00               	movlw	0
  4569  001472                     u118_26:
  4570  001472  0AFF               	xorlw	255
  4571  001474  6E4E               	movwf	btemp+11,c
  4572  001476  464E               	rlncf	btemp+11,f,c
  4573  001478  464E               	rlncf	btemp+11,f,c
  4574  00147A  464E               	rlncf	btemp+11,f,c
  4575  00147C  5081               	movf	3969,w,c	;volatile
  4576  00147E  184E               	xorwf	btemp+11,w,c
  4577  001480  0BF7               	andlw	-9
  4578  001482  D00C               	goto	L6
  4579  001484                     l2244:
  4580                           
  4581                           ;tasks.c: 196:         PORTBbits.RB5 = ~PORTBbits.RB5;
  4582  001484  AA81               	btfss	3969,5,c	;volatile
  4583  001486  D002               	goto	u119_20
  4584  001488  0E01               	movlw	1
  4585  00148A  D001               	goto	u119_26
  4586  00148C                     u119_20:
  4587  00148C  0E00               	movlw	0
  4588  00148E                     u119_26:
  4589  00148E  0AFF               	xorlw	255
  4590  001490  6E4E               	movwf	btemp+11,c
  4591  001492  3A4E               	swapf	btemp+11,f,c
  4592  001494  464E               	rlncf	btemp+11,f,c
  4593  001496  5081               	movf	3969,w,c	;volatile
  4594  001498  184E               	xorwf	btemp+11,w,c
  4595  00149A  0BDF               	andlw	-33
  4596  00149C                     L6:
  4597  00149C  184E               	xorwf	btemp+11,w,c
  4598  00149E  6E81               	movwf	3969,c	;volatile
  4599                           
  4600                           ;tasks.c: 197:       lunos_delayTask(1000);
  4601  0014A0  0EE8               	movlw	232
  4602  0014A2  6EE6               	movwf	postinc1,c
  4603  0014A4  0E03               	movlw	3
  4604  0014A6  6EE6               	movwf	postinc1,c
  4605  0014A8  ECAF  F00C         	call	_lunos_delayTask	;wreg free
  4606                           
  4607                           ;tasks.c: 198:     }
  4608                           ;stkvar	_i @ sp[(-2)+0]
  4609  0014AC  0EFE               	movlw	-2
  4610  0014AE  50E3               	movf	plusw1,w,c
  4611  0014B0  0F01               	addlw	1
  4612  0014B2  6E43               	movwf	btemp,c
  4613  0014B4  0EFE               	movlw	-2
  4614  0014B6  C043  FFE3         	movff	btemp,plusw1
  4615  0014BA  6A43               	clrf	btemp,c
  4616  0014BC  0EFF               	movlw	-1
  4617  0014BE  50E3               	movf	plusw1,w,c
  4618  0014C0  2043               	addwfc	btemp,w,c
  4619  0014C2  6E43               	movwf	btemp,c
  4620  0014C4  0EFF               	movlw	-1
  4621  0014C6  C043  FFE3         	movff	btemp,plusw1
  4622                           
  4623                           ;stkvar	_i @ sp[(-2)+0]
  4624  0014CA  0EFF               	movlw	-1
  4625  0014CC  BEE3               	btfsc	plusw1,7,c
  4626  0014CE  D7BE               	goto	l2240
  4627  0014D0  0EFF               	movlw	-1
  4628  0014D2  50E3               	movf	plusw1,w,c
  4629  0014D4  E107               	bnz	u120_20
  4630  0014D6  0EFE               	movlw	-2
  4631  0014D8  CFE3 F043          	movff	plusw1,btemp
  4632  0014DC  0E04               	movlw	4
  4633  0014DE  5E43               	subwf	btemp,f,c
  4634  0014E0  A0D8               	btfss	status,0,c
  4635  0014E2  D7B4               	goto	l2240
  4636  0014E4                     u120_20:
  4637                           
  4638                           ;tasks.c: 199:     sem_post(&teste_1);
  4639  0014E4  0EC6               	movlw	low _teste_1
  4640  0014E6  6EE6               	movwf	postinc1,c
  4641  0014E8  0E00               	movlw	high _teste_1
  4642  0014EA  6EE6               	movwf	postinc1,c
  4643  0014EC  ECC4  F008         	call	_sem_post	;wreg free
  4644  0014F0  D7A3               	goto	l389
  4645  0014F2                     __end_of_task_xuxa:
  4646                           	opt callstack 0
  4647                           
  4648 ;; *************** function _ISR_timer0 *****************
  4649 ;; Defined at:
  4650 ;;		line 56 in file "int0_test.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4664 ;;      Params:         0       0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0
  4666 ;;      Temps:         16       0       0       0       0       0       0
  4667 ;;      Totals:        16       0       0       0       0       0       0
  4668 ;;Total ram usage:       16 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    2
  4671 ;; This function calls:
  4672 ;;		___wmul
  4673 ;;		_delay_decrement
  4674 ;;		_round_robin
  4675 ;; This function is called by:
  4676 ;;		Interrupt level 2
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	intcode
  4681  000008                     __pintcode:
  4682                           	opt callstack 0
  4683  000008                     _ISR_timer0:
  4684                           	opt callstack 17
  4685                           
  4686                           ;incstack = 0
  4687  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  4688                           
  4689                           	psect	intcode_body
  4690  000014                     __pintcode_body:
  4691                           	opt callstack 17
  4692  000014                     int_func:
  4693                           	opt callstack 17
  4694  000014  0006               	pop		; remove dummy address from shadow register refresh
  4695  000016  CFE1 F067          	movff	fsr1l,??_ISR_timer0+4
  4696  00001A  CFE2 F068          	movff	fsr1h,??_ISR_timer0+5
  4697  00001E  CFD9 F069          	movff	fsr2l,??_ISR_timer0+6
  4698  000022  CFDA F06A          	movff	fsr2h,??_ISR_timer0+7
  4699  000026  CFF3 F06B          	movff	prodl,??_ISR_timer0+8
  4700  00002A  CFF4 F06C          	movff	prodh,??_ISR_timer0+9
  4701  00002E  C043  F06D         	movff	btemp,??_ISR_timer0+10
  4702  000032  C044  F06E         	movff	btemp+1,??_ISR_timer0+11
  4703  000036  C04B  F06F         	movff	btemp+8,??_ISR_timer0+12
  4704  00003A  C04C  F070         	movff	btemp+9,??_ISR_timer0+13
  4705  00003E  C04D  F071         	movff	btemp+10,??_ISR_timer0+14
  4706  000042  C04E  F072         	movff	btemp+11,??_ISR_timer0+15
  4707  000046  EE15  F04E         	lfsr	1,___inthi_sp
  4708                           
  4709                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  4710  00004A  9EF2               	bcf	4082,7,c	;volatile
  4711                           
  4712                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  4713  00004C  A4F2               	btfss	4082,2,c	;volatile
  4714  00004E  D224               	goto	i2u92_40
  4715                           
  4716                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  4717  000050  94F2               	bcf	4082,2,c	;volatile
  4718                           
  4719                           ;int0_test.c: 61:     TMR0L = 252;
  4720  000052  0EFC               	movlw	252
  4721  000054  6ED6               	movwf	4054,c	;volatile
  4722                           
  4723                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  4724  000056  A083               	btfss	3971,0,c	;volatile
  4725  000058  D002               	goto	i2u88_40
  4726  00005A  0E01               	movlw	1
  4727  00005C  D001               	goto	i2u88_46
  4728  00005E                     i2u88_40:
  4729  00005E  0E00               	movlw	0
  4730  000060                     i2u88_46:
  4731  000060  0AFF               	xorlw	255
  4732  000062  6E63               	movwf	??_ISR_timer0& (0+255),c
  4733  000064  5083               	movf	3971,w,c	;volatile
  4734  000066  1863               	xorwf	??_ISR_timer0,w,c
  4735  000068  0BFE               	andlw	-2
  4736  00006A  1863               	xorwf	??_ISR_timer0,w,c
  4737  00006C  6E83               	movwf	3971,c	;volatile
  4738                           
  4739                           ;int0_test.c: 63:     delay_decrement();
  4740  00006E  EC30  F006         	call	_delay_decrement	;wreg free
  4741                           
  4742                           ;int0_test.c: 65:     quantum--;
  4743  000072  0673               	decf	_quantum,f,c
  4744  000074  A0D8               	btfss	status,0,c
  4745  000076  0674               	decf	_quantum+1,f,c
  4746                           
  4747                           ;int0_test.c: 66:     if (quantum <= 0) {
  4748  000078  BE74               	btfsc	_quantum+1,7,c
  4749  00007A  D005               	goto	i2u89_40
  4750  00007C  5074               	movf	_quantum+1,w,c
  4751  00007E  E102               	bnz	i2u89_41
  4752  000080  0473               	decf	_quantum,w,c
  4753  000082  B0D8               	btfsc	status,0,c
  4754  000084                     i2u89_41:
  4755  000084  D209               	goto	i2u92_40
  4756  000086                     i2u89_40:
  4757                           
  4758                           ;int0_test.c: 67:       quantum = 10;
  4759  000086  0E00               	movlw	0
  4760  000088  6E74               	movwf	_quantum+1,c
  4761  00008A  0E0A               	movlw	10
  4762  00008C  6E73               	movwf	_quantum,c
  4763                           
  4764                           ;int0_test.c: 68:       { who = ready_queue.task_running; ready_queue.tasks[who].task_st
      +                          ate = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = ST
      +                          ATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks
      +                          [who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stac
      +                          k[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL
      +                          ; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  4765  00008E  C2F2  F00B         	movff	_ready_queue+542,_who
  4766  000092  C2F3  F00C         	movff	_ready_queue+543,_who+1
  4767  000096  0E6C               	movlw	108
  4768  000098  6EE6               	movwf	postinc1,c
  4769  00009A  0E00               	movlw	0
  4770  00009C  6EE6               	movwf	postinc1,c
  4771  00009E  C00B  FFE6         	movff	_who,postinc1
  4772  0000A2  C00C  FFE6         	movff	_who+1,postinc1
  4773  0000A6  EC2F  F00B         	call	___wmul	;wreg free
  4774  0000AA  0EDC               	movlw	low (_ready_queue+8)
  4775  0000AC  2443               	addwf	btemp,w,c
  4776  0000AE  6ED9               	movwf	fsr2l,c
  4777  0000B0  0E00               	movlw	high (_ready_queue+8)
  4778  0000B2  2044               	addwfc	btemp+1,w,c
  4779  0000B4  6EDA               	movwf	fsr2h,c
  4780  0000B6  0E00               	movlw	0
  4781  0000B8  6EDF               	movwf	indf2,c
  4782  0000BA  0E6C               	movlw	108
  4783  0000BC  6EE6               	movwf	postinc1,c
  4784  0000BE  0E00               	movlw	0
  4785  0000C0  6EE6               	movwf	postinc1,c
  4786  0000C2  C00B  FFE6         	movff	_who,postinc1
  4787  0000C6  C00C  FFE6         	movff	_who+1,postinc1
  4788  0000CA  EC2F  F00B         	call	___wmul	;wreg free
  4789  0000CE  0ED9               	movlw	low (_ready_queue+5)
  4790  0000D0  2443               	addwf	btemp,w,c
  4791  0000D2  6ED9               	movwf	fsr2l,c
  4792  0000D4  0E00               	movlw	high (_ready_queue+5)
  4793  0000D6  2044               	addwfc	btemp+1,w,c
  4794  0000D8  6EDA               	movwf	fsr2h,c
  4795  0000DA  CFE8 FFDF          	movff	wreg,indf2	;volatile
  4796  0000DE  0E6C               	movlw	108
  4797  0000E0  6EE6               	movwf	postinc1,c
  4798  0000E2  0E00               	movlw	0
  4799  0000E4  6EE6               	movwf	postinc1,c
  4800  0000E6  C00B  FFE6         	movff	_who,postinc1
  4801  0000EA  C00C  FFE6         	movff	_who+1,postinc1
  4802  0000EE  EC2F  F00B         	call	___wmul	;wreg free
  4803  0000F2  0EDA               	movlw	low (_ready_queue+6)
  4804  0000F4  2443               	addwf	btemp,w,c
  4805  0000F6  6ED9               	movwf	fsr2l,c
  4806  0000F8  0E00               	movlw	high (_ready_queue+6)
  4807  0000FA  2044               	addwfc	btemp+1,w,c
  4808  0000FC  6EDA               	movwf	fsr2h,c
  4809  0000FE  CFD8 FFDF          	movff	status,indf2	;volatile
  4810  000102  0E6C               	movlw	108
  4811  000104  6EE6               	movwf	postinc1,c
  4812  000106  0E00               	movlw	0
  4813  000108  6EE6               	movwf	postinc1,c
  4814  00010A  C00B  FFE6         	movff	_who,postinc1
  4815  00010E  C00C  FFE6         	movff	_who+1,postinc1
  4816  000112  EC2F  F00B         	call	___wmul	;wreg free
  4817  000116  0EDB               	movlw	low (_ready_queue+7)
  4818  000118  2443               	addwf	btemp,w,c
  4819  00011A  6ED9               	movwf	fsr2l,c
  4820  00011C  0E00               	movlw	high (_ready_queue+7)
  4821  00011E  2044               	addwfc	btemp+1,w,c
  4822  000120  6EDA               	movwf	fsr2h,c
  4823  000122  CFE0 FFDF          	movff	bsr,indf2	;volatile
  4824  000126  6A09               	clrf	_size,c
  4825  000128  6A0A               	clrf	_size+1,c
  4826  00012A  D07B               	goto	i2l2064
  4827  00012C                     i2l2060:
  4828  00012C  0E6C               	movlw	108
  4829  00012E  6EE6               	movwf	postinc1,c
  4830  000130  0E00               	movlw	0
  4831  000132  6EE6               	movwf	postinc1,c
  4832  000134  C00B  FFE6         	movff	_who,postinc1
  4833  000138  C00C  FFE6         	movff	_who+1,postinc1
  4834  00013C  EC2F  F00B         	call	___wmul	;wreg free
  4835  000140  0ED4               	movlw	low _ready_queue
  4836  000142  6E63               	movwf	??_ISR_timer0& (0+255),c
  4837  000144  0E00               	movlw	high _ready_queue
  4838  000146  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4839  000148  0E09               	movlw	9
  4840  00014A  2663               	addwf	??_ISR_timer0,f,c
  4841  00014C  0E00               	movlw	0
  4842  00014E  2264               	addwfc	??_ISR_timer0+1,f,c
  4843  000150  5043               	movf	btemp,w,c
  4844  000152  2663               	addwf	??_ISR_timer0,f,c
  4845  000154  5044               	movf	btemp+1,w,c
  4846  000156  2264               	addwfc	??_ISR_timer0+1,f,c
  4847  000158  0E03               	movlw	3
  4848  00015A  6EE6               	movwf	postinc1,c
  4849  00015C  0E00               	movlw	0
  4850  00015E  6EE6               	movwf	postinc1,c
  4851  000160  C009  FFE6         	movff	_size,postinc1
  4852  000164  C00A  FFE6         	movff	_size+1,postinc1
  4853  000168  EC2F  F00B         	call	___wmul	;wreg free
  4854  00016C  5043               	movf	btemp,w,c
  4855  00016E  2463               	addwf	??_ISR_timer0,w,c
  4856  000170  6ED9               	movwf	fsr2l,c
  4857  000172  5044               	movf	btemp+1,w,c
  4858  000174  2064               	addwfc	??_ISR_timer0+1,w,c
  4859  000176  6EDA               	movwf	fsr2h,c
  4860  000178  CFFF FFDF          	movff	tosu,indf2	;volatile
  4861  00017C  0E6C               	movlw	108
  4862  00017E  6EE6               	movwf	postinc1,c
  4863  000180  0E00               	movlw	0
  4864  000182  6EE6               	movwf	postinc1,c
  4865  000184  C00B  FFE6         	movff	_who,postinc1
  4866  000188  C00C  FFE6         	movff	_who+1,postinc1
  4867  00018C  EC2F  F00B         	call	___wmul	;wreg free
  4868  000190  0ED4               	movlw	low _ready_queue
  4869  000192  6E63               	movwf	??_ISR_timer0& (0+255),c
  4870  000194  0E00               	movlw	high _ready_queue
  4871  000196  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4872  000198  0E0B               	movlw	11
  4873  00019A  2663               	addwf	??_ISR_timer0,f,c
  4874  00019C  0E00               	movlw	0
  4875  00019E  2264               	addwfc	??_ISR_timer0+1,f,c
  4876  0001A0  5043               	movf	btemp,w,c
  4877  0001A2  2663               	addwf	??_ISR_timer0,f,c
  4878  0001A4  5044               	movf	btemp+1,w,c
  4879  0001A6  2264               	addwfc	??_ISR_timer0+1,f,c
  4880  0001A8  0E03               	movlw	3
  4881  0001AA  6EE6               	movwf	postinc1,c
  4882  0001AC  0E00               	movlw	0
  4883  0001AE  6EE6               	movwf	postinc1,c
  4884  0001B0  C009  FFE6         	movff	_size,postinc1
  4885  0001B4  C00A  FFE6         	movff	_size+1,postinc1
  4886  0001B8  EC2F  F00B         	call	___wmul	;wreg free
  4887  0001BC  5043               	movf	btemp,w,c
  4888  0001BE  2463               	addwf	??_ISR_timer0,w,c
  4889  0001C0  6ED9               	movwf	fsr2l,c
  4890  0001C2  5044               	movf	btemp+1,w,c
  4891  0001C4  2064               	addwfc	??_ISR_timer0+1,w,c
  4892  0001C6  6EDA               	movwf	fsr2h,c
  4893  0001C8  CFFE FFDF          	movff	tosh,indf2	;volatile
  4894  0001CC  0E6C               	movlw	108
  4895  0001CE  6EE6               	movwf	postinc1,c
  4896  0001D0  0E00               	movlw	0
  4897  0001D2  6EE6               	movwf	postinc1,c
  4898  0001D4  C00B  FFE6         	movff	_who,postinc1
  4899  0001D8  C00C  FFE6         	movff	_who+1,postinc1
  4900  0001DC  EC2F  F00B         	call	___wmul	;wreg free
  4901  0001E0  0ED4               	movlw	low _ready_queue
  4902  0001E2  6E63               	movwf	??_ISR_timer0& (0+255),c
  4903  0001E4  0E00               	movlw	high _ready_queue
  4904  0001E6  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4905  0001E8  0E0A               	movlw	10
  4906  0001EA  2663               	addwf	??_ISR_timer0,f,c
  4907  0001EC  0E00               	movlw	0
  4908  0001EE  2264               	addwfc	??_ISR_timer0+1,f,c
  4909  0001F0  5043               	movf	btemp,w,c
  4910  0001F2  2663               	addwf	??_ISR_timer0,f,c
  4911  0001F4  5044               	movf	btemp+1,w,c
  4912  0001F6  2264               	addwfc	??_ISR_timer0+1,f,c
  4913  0001F8  0E03               	movlw	3
  4914  0001FA  6EE6               	movwf	postinc1,c
  4915  0001FC  0E00               	movlw	0
  4916  0001FE  6EE6               	movwf	postinc1,c
  4917  000200  C009  FFE6         	movff	_size,postinc1
  4918  000204  C00A  FFE6         	movff	_size+1,postinc1
  4919  000208  EC2F  F00B         	call	___wmul	;wreg free
  4920  00020C  5043               	movf	btemp,w,c
  4921  00020E  2463               	addwf	??_ISR_timer0,w,c
  4922  000210  6ED9               	movwf	fsr2l,c
  4923  000212  5044               	movf	btemp+1,w,c
  4924  000214  2064               	addwfc	??_ISR_timer0+1,w,c
  4925  000216  6EDA               	movwf	fsr2h,c
  4926  000218  CFFD FFDF          	movff	tosl,indf2	;volatile
  4927  00021C  4A09               	infsnz	_size,f,c
  4928  00021E  2A0A               	incf	_size+1,f,c
  4929  000220  0006               	pop		;# 
  4930  000222                     i2l2064:
  4931  000222  50FC               	movf	stkptr,w,c	;volatile
  4932  000224  A4D8               	btfss	status,2,c
  4933  000226  D782               	goto	i2l2060
  4934  000228  0EFF               	movlw	255
  4935  00022A  6E63               	movwf	??_ISR_timer0& (0+255),c
  4936  00022C  0EFF               	movlw	255
  4937  00022E  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4938  000230  C009  F065         	movff	_size,??_ISR_timer0+2
  4939  000234  C00A  F066         	movff	_size+1,??_ISR_timer0+3
  4940  000238  5063               	movf	??_ISR_timer0,w,c
  4941  00023A  2665               	addwf	??_ISR_timer0+2,f,c
  4942  00023C  5064               	movf	??_ISR_timer0+1,w,c
  4943  00023E  2266               	addwfc	??_ISR_timer0+3,f,c
  4944  000240  0E6C               	movlw	108
  4945  000242  6EE6               	movwf	postinc1,c
  4946  000244  0E00               	movlw	0
  4947  000246  6EE6               	movwf	postinc1,c
  4948  000248  C00B  FFE6         	movff	_who,postinc1
  4949  00024C  C00C  FFE6         	movff	_who+1,postinc1
  4950  000250  EC2F  F00B         	call	___wmul	;wreg free
  4951  000254  0E3A               	movlw	low (_ready_queue+102)
  4952  000256  2443               	addwf	btemp,w,c
  4953  000258  6ED9               	movwf	fsr2l,c
  4954  00025A  0E01               	movlw	high (_ready_queue+102)
  4955  00025C  2044               	addwfc	btemp+1,w,c
  4956  00025E  6EDA               	movwf	fsr2h,c
  4957  000260  C065  FFDE         	movff	??_ISR_timer0+2,postinc2
  4958  000264  C066  FFDD         	movff	??_ISR_timer0+3,postdec2
  4959                           
  4960                           ;int0_test.c: 69:       ready_queue.task_running = round_robin();
  4961  000268  EC7A  F00B         	call	_round_robin	;wreg free
  4962  00026C  C043  F2F2         	movff	btemp,_ready_queue+542
  4963  000270  C044  F2F3         	movff	btemp+1,_ready_queue+543
  4964                           
  4965                           ;int0_test.c: 70:       { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.ta
      +                          sks[who].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task
      +                          _f; } else { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].
      +                          W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg;
      +                           size = ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL
      +                           = ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[wh
      +                          o].task_stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[s
      +                          ize].TOSU_reg; size--; } }};
  4966  000274  C2F2  F00B         	movff	_ready_queue+542,_who
  4967  000278  C2F3  F00C         	movff	_ready_queue+543,_who+1
  4968  00027C  6AFC               	clrf	stkptr,c	;volatile
  4969  00027E  0E6C               	movlw	108
  4970  000280  6EE6               	movwf	postinc1,c
  4971  000282  0E00               	movlw	0
  4972  000284  6EE6               	movwf	postinc1,c
  4973  000286  C00B  FFE6         	movff	_who,postinc1
  4974  00028A  C00C  FFE6         	movff	_who+1,postinc1
  4975  00028E  EC2F  F00B         	call	___wmul	;wreg free
  4976  000292  0E3A               	movlw	low (_ready_queue+102)
  4977  000294  2443               	addwf	btemp,w,c
  4978  000296  6ED9               	movwf	fsr2l,c
  4979  000298  0E01               	movlw	high (_ready_queue+102)
  4980  00029A  2044               	addwfc	btemp+1,w,c
  4981  00029C  6EDA               	movwf	fsr2h,c
  4982  00029E  50DE               	movf	postinc2,w,c
  4983  0002A0  10DE               	iorwf	postinc2,w,c
  4984  0002A2  A4D8               	btfss	status,2,c
  4985  0002A4  D01B               	goto	i2l2080
  4986  0002A6  0005               	push		;# 
  4987  0002A8  0E6C               	movlw	108
  4988  0002AA  6EE6               	movwf	postinc1,c
  4989  0002AC  0E00               	movlw	0
  4990  0002AE  6EE6               	movwf	postinc1,c
  4991  0002B0  C00B  FFE6         	movff	_who,postinc1
  4992  0002B4  C00C  FFE6         	movff	_who+1,postinc1
  4993  0002B8  EC2F  F00B         	call	___wmul	;wreg free
  4994  0002BC  0E3C               	movlw	low (_ready_queue+104)
  4995  0002BE  2443               	addwf	btemp,w,c
  4996  0002C0  6ED9               	movwf	fsr2l,c
  4997  0002C2  0E01               	movlw	high (_ready_queue+104)
  4998  0002C4  2044               	addwfc	btemp+1,w,c
  4999  0002C6  6EDA               	movwf	fsr2h,c
  5000  0002C8  CFDE F063          	movff	postinc2,??_ISR_timer0
  5001  0002CC  CFDD F064          	movff	postdec2,??_ISR_timer0+1
  5002  0002D0  C063  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  5003  0002D4  C064  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  5004  0002D8  6AFF               	clrf	tosu,c	;volatile
  5005  0002DA  D0DE               	goto	i2u92_40
  5006  0002DC                     i2l2080:
  5007  0002DC  0E6C               	movlw	108
  5008  0002DE  6EE6               	movwf	postinc1,c
  5009  0002E0  0E00               	movlw	0
  5010  0002E2  6EE6               	movwf	postinc1,c
  5011  0002E4  C00B  FFE6         	movff	_who,postinc1
  5012  0002E8  C00C  FFE6         	movff	_who+1,postinc1
  5013  0002EC  EC2F  F00B         	call	___wmul	;wreg free
  5014  0002F0  0EDC               	movlw	low (_ready_queue+8)
  5015  0002F2  2443               	addwf	btemp,w,c
  5016  0002F4  6ED9               	movwf	fsr2l,c
  5017  0002F6  0E00               	movlw	high (_ready_queue+8)
  5018  0002F8  2044               	addwfc	btemp+1,w,c
  5019  0002FA  6EDA               	movwf	fsr2h,c
  5020  0002FC  0E01               	movlw	1
  5021  0002FE  6EDF               	movwf	indf2,c
  5022  000300  0E6C               	movlw	108
  5023  000302  6EE6               	movwf	postinc1,c
  5024  000304  0E00               	movlw	0
  5025  000306  6EE6               	movwf	postinc1,c
  5026  000308  C00B  FFE6         	movff	_who,postinc1
  5027  00030C  C00C  FFE6         	movff	_who+1,postinc1
  5028  000310  EC2F  F00B         	call	___wmul	;wreg free
  5029  000314  0ED9               	movlw	low (_ready_queue+5)
  5030  000316  2443               	addwf	btemp,w,c
  5031  000318  6ED9               	movwf	fsr2l,c
  5032  00031A  0E00               	movlw	high (_ready_queue+5)
  5033  00031C  2044               	addwfc	btemp+1,w,c
  5034  00031E  6EDA               	movwf	fsr2h,c
  5035  000320  50DF               	movf	indf2,w,c
  5036  000322  6E63               	movwf	??_ISR_timer0& (0+255),c
  5037  000324  5063               	movf	??_ISR_timer0,w,c
  5038  000326  0E6C               	movlw	108
  5039  000328  6EE6               	movwf	postinc1,c
  5040  00032A  0E00               	movlw	0
  5041  00032C  6EE6               	movwf	postinc1,c
  5042  00032E  C00B  FFE6         	movff	_who,postinc1
  5043  000332  C00C  FFE6         	movff	_who+1,postinc1
  5044  000336  EC2F  F00B         	call	___wmul	;wreg free
  5045  00033A  0EDA               	movlw	low (_ready_queue+6)
  5046  00033C  2443               	addwf	btemp,w,c
  5047  00033E  6ED9               	movwf	fsr2l,c
  5048  000340  0E00               	movlw	high (_ready_queue+6)
  5049  000342  2044               	addwfc	btemp+1,w,c
  5050  000344  6EDA               	movwf	fsr2h,c
  5051  000346  50DF               	movf	indf2,w,c
  5052  000348  6ED8               	movwf	status,c	;volatile
  5053  00034A  0E6C               	movlw	108
  5054  00034C  6EE6               	movwf	postinc1,c
  5055  00034E  0E00               	movlw	0
  5056  000350  6EE6               	movwf	postinc1,c
  5057  000352  C00B  FFE6         	movff	_who,postinc1
  5058  000356  C00C  FFE6         	movff	_who+1,postinc1
  5059  00035A  EC2F  F00B         	call	___wmul	;wreg free
  5060  00035E  0EDB               	movlw	low (_ready_queue+7)
  5061  000360  2443               	addwf	btemp,w,c
  5062  000362  6ED9               	movwf	fsr2l,c
  5063  000364  0E00               	movlw	high (_ready_queue+7)
  5064  000366  2044               	addwfc	btemp+1,w,c
  5065  000368  6EDA               	movwf	fsr2h,c
  5066  00036A  50DF               	movf	indf2,w,c
  5067  00036C  6EE0               	movwf	bsr,c	;volatile
  5068  00036E  0E6C               	movlw	108
  5069  000370  6EE6               	movwf	postinc1,c
  5070  000372  0E00               	movlw	0
  5071  000374  6EE6               	movwf	postinc1,c
  5072  000376  C00B  FFE6         	movff	_who,postinc1
  5073  00037A  C00C  FFE6         	movff	_who+1,postinc1
  5074  00037E  EC2F  F00B         	call	___wmul	;wreg free
  5075  000382  0E3A               	movlw	low (_ready_queue+102)
  5076  000384  2443               	addwf	btemp,w,c
  5077  000386  6ED9               	movwf	fsr2l,c
  5078  000388  0E01               	movlw	high (_ready_queue+102)
  5079  00038A  2044               	addwfc	btemp+1,w,c
  5080  00038C  6EDA               	movwf	fsr2h,c
  5081  00038E  CFDE F009          	movff	postinc2,_size
  5082  000392  CFDD F00A          	movff	postdec2,_size+1
  5083  000396  D07C               	goto	i2l2086
  5084  000398                     i2l59:
  5085  000398  0005               	push		;# 
  5086  00039A  0E6C               	movlw	108
  5087  00039C  6EE6               	movwf	postinc1,c
  5088  00039E  0E00               	movlw	0
  5089  0003A0  6EE6               	movwf	postinc1,c
  5090  0003A2  C00B  FFE6         	movff	_who,postinc1
  5091  0003A6  C00C  FFE6         	movff	_who+1,postinc1
  5092  0003AA  EC2F  F00B         	call	___wmul	;wreg free
  5093  0003AE  0ED4               	movlw	low _ready_queue
  5094  0003B0  6E63               	movwf	??_ISR_timer0& (0+255),c
  5095  0003B2  0E00               	movlw	high _ready_queue
  5096  0003B4  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5097  0003B6  0E0A               	movlw	10
  5098  0003B8  2663               	addwf	??_ISR_timer0,f,c
  5099  0003BA  0E00               	movlw	0
  5100  0003BC  2264               	addwfc	??_ISR_timer0+1,f,c
  5101  0003BE  5043               	movf	btemp,w,c
  5102  0003C0  2663               	addwf	??_ISR_timer0,f,c
  5103  0003C2  5044               	movf	btemp+1,w,c
  5104  0003C4  2264               	addwfc	??_ISR_timer0+1,f,c
  5105  0003C6  0E03               	movlw	3
  5106  0003C8  6EE6               	movwf	postinc1,c
  5107  0003CA  0E00               	movlw	0
  5108  0003CC  6EE6               	movwf	postinc1,c
  5109  0003CE  C009  FFE6         	movff	_size,postinc1
  5110  0003D2  C00A  FFE6         	movff	_size+1,postinc1
  5111  0003D6  EC2F  F00B         	call	___wmul	;wreg free
  5112  0003DA  5043               	movf	btemp,w,c
  5113  0003DC  2463               	addwf	??_ISR_timer0,w,c
  5114  0003DE  6ED9               	movwf	fsr2l,c
  5115  0003E0  5044               	movf	btemp+1,w,c
  5116  0003E2  2064               	addwfc	??_ISR_timer0+1,w,c
  5117  0003E4  6EDA               	movwf	fsr2h,c
  5118  0003E6  50DF               	movf	indf2,w,c
  5119  0003E8  6EFD               	movwf	tosl,c	;volatile
  5120  0003EA  0E6C               	movlw	108
  5121  0003EC  6EE6               	movwf	postinc1,c
  5122  0003EE  0E00               	movlw	0
  5123  0003F0  6EE6               	movwf	postinc1,c
  5124  0003F2  C00B  FFE6         	movff	_who,postinc1
  5125  0003F6  C00C  FFE6         	movff	_who+1,postinc1
  5126  0003FA  EC2F  F00B         	call	___wmul	;wreg free
  5127  0003FE  0ED4               	movlw	low _ready_queue
  5128  000400  6E63               	movwf	??_ISR_timer0& (0+255),c
  5129  000402  0E00               	movlw	high _ready_queue
  5130  000404  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5131  000406  0E0B               	movlw	11
  5132  000408  2663               	addwf	??_ISR_timer0,f,c
  5133  00040A  0E00               	movlw	0
  5134  00040C  2264               	addwfc	??_ISR_timer0+1,f,c
  5135  00040E  5043               	movf	btemp,w,c
  5136  000410  2663               	addwf	??_ISR_timer0,f,c
  5137  000412  5044               	movf	btemp+1,w,c
  5138  000414  2264               	addwfc	??_ISR_timer0+1,f,c
  5139  000416  0E03               	movlw	3
  5140  000418  6EE6               	movwf	postinc1,c
  5141  00041A  0E00               	movlw	0
  5142  00041C  6EE6               	movwf	postinc1,c
  5143  00041E  C009  FFE6         	movff	_size,postinc1
  5144  000422  C00A  FFE6         	movff	_size+1,postinc1
  5145  000426  EC2F  F00B         	call	___wmul	;wreg free
  5146  00042A  5043               	movf	btemp,w,c
  5147  00042C  2463               	addwf	??_ISR_timer0,w,c
  5148  00042E  6ED9               	movwf	fsr2l,c
  5149  000430  5044               	movf	btemp+1,w,c
  5150  000432  2064               	addwfc	??_ISR_timer0+1,w,c
  5151  000434  6EDA               	movwf	fsr2h,c
  5152  000436  50DF               	movf	indf2,w,c
  5153  000438  6EFE               	movwf	tosh,c	;volatile
  5154  00043A  0E6C               	movlw	108
  5155  00043C  6EE6               	movwf	postinc1,c
  5156  00043E  0E00               	movlw	0
  5157  000440  6EE6               	movwf	postinc1,c
  5158  000442  C00B  FFE6         	movff	_who,postinc1
  5159  000446  C00C  FFE6         	movff	_who+1,postinc1
  5160  00044A  EC2F  F00B         	call	___wmul	;wreg free
  5161  00044E  0ED4               	movlw	low _ready_queue
  5162  000450  6E63               	movwf	??_ISR_timer0& (0+255),c
  5163  000452  0E00               	movlw	high _ready_queue
  5164  000454  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5165  000456  0E09               	movlw	9
  5166  000458  2663               	addwf	??_ISR_timer0,f,c
  5167  00045A  0E00               	movlw	0
  5168  00045C  2264               	addwfc	??_ISR_timer0+1,f,c
  5169  00045E  5043               	movf	btemp,w,c
  5170  000460  2663               	addwf	??_ISR_timer0,f,c
  5171  000462  5044               	movf	btemp+1,w,c
  5172  000464  2264               	addwfc	??_ISR_timer0+1,f,c
  5173  000466  0E03               	movlw	3
  5174  000468  6EE6               	movwf	postinc1,c
  5175  00046A  0E00               	movlw	0
  5176  00046C  6EE6               	movwf	postinc1,c
  5177  00046E  C009  FFE6         	movff	_size,postinc1
  5178  000472  C00A  FFE6         	movff	_size+1,postinc1
  5179  000476  EC2F  F00B         	call	___wmul	;wreg free
  5180  00047A  5043               	movf	btemp,w,c
  5181  00047C  2463               	addwf	??_ISR_timer0,w,c
  5182  00047E  6ED9               	movwf	fsr2l,c
  5183  000480  5044               	movf	btemp+1,w,c
  5184  000482  2064               	addwfc	??_ISR_timer0+1,w,c
  5185  000484  6EDA               	movwf	fsr2h,c
  5186  000486  50DF               	movf	indf2,w,c
  5187  000488  6EFF               	movwf	tosu,c	;volatile
  5188  00048A  0609               	decf	_size,f,c
  5189  00048C  A0D8               	btfss	status,0,c
  5190  00048E  060A               	decf	_size+1,f,c
  5191  000490                     i2l2086:
  5192  000490  5009               	movf	_size,w,c
  5193  000492  100A               	iorwf	_size+1,w,c
  5194  000494  A4D8               	btfss	status,2,c
  5195  000496  D780               	goto	i2l59
  5196  000498                     i2u92_40:
  5197                           
  5198                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  5199                           
  5200                           ;int0_test.c: 73:   }
  5201  000498  8EF2               	bsf	4082,7,c	;volatile
  5202  00049A  C072  F04E         	movff	??_ISR_timer0+15,btemp+11
  5203  00049E  C071  F04D         	movff	??_ISR_timer0+14,btemp+10
  5204  0004A2  C070  F04C         	movff	??_ISR_timer0+13,btemp+9
  5205  0004A6  C06F  F04B         	movff	??_ISR_timer0+12,btemp+8
  5206  0004AA  C06E  F044         	movff	??_ISR_timer0+11,btemp+1
  5207  0004AE  C06D  F043         	movff	??_ISR_timer0+10,btemp
  5208  0004B2  C06C  FFF4         	movff	??_ISR_timer0+9,prodh
  5209  0004B6  C06B  FFF3         	movff	??_ISR_timer0+8,prodl
  5210  0004BA  C06A  FFDA         	movff	??_ISR_timer0+7,fsr2h
  5211  0004BE  C069  FFD9         	movff	??_ISR_timer0+6,fsr2l
  5212  0004C2  C068  FFE2         	movff	??_ISR_timer0+5,fsr1h
  5213  0004C6  C067  FFE1         	movff	??_ISR_timer0+4,fsr1l
  5214  0004CA  0011               	retfie		f
  5215  0004CC                     __end_of_ISR_timer0:
  5216                           	opt callstack 0
  5217                           
  5218 ;; *************** function _delay_decrement *****************
  5219 ;; Defined at:
  5220 ;;		line 99 in file "kernel.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  i               2  [STACK] int 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1  [STACK] void 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5234 ;;      Params:         0       0       0       0       0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0
  5237 ;;      Totals:         0       0       0       0       0       0       0
  5238 ;;Total ram usage:        0 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		_ISR_timer0
  5244 ;; This function uses a reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text32
  5248  000C60                     __ptext32:
  5249                           	opt callstack 0
  5250  000C60                     _delay_decrement:
  5251                           	opt callstack 0
  5252                           
  5253                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5254  000C60  52E6               	movf	postinc1,f,c
  5255  000C62  52E6               	movf	postinc1,f,c
  5256                           
  5257                           ;kernel.c: 100:   int i;;kernel.c: 102:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  5258                           ;stkvar	_i @ sp[(-2)+0]
  5259                           
  5260                           ;incstack = 0
  5261  000C64  0EFE               	movlw	-2
  5262  000C66  6AE3               	clrf	plusw1,c
  5263  000C68  0EFF               	movlw	-1
  5264  000C6A  6AE3               	clrf	plusw1,c
  5265  000C6C  D070               	goto	l1918
  5266  000C6E                     l1908:
  5267                           
  5268                           ;kernel.c: 103:     if (ready_queue.tasks[i].task_state == WAITING) {
  5269                           ;stkvar	_i @ sp[(-2)+0]
  5270  000C6E  0EFE               	movlw	-2
  5271  000C70  CFE3 F04D          	movff	plusw1,btemp+10
  5272  000C74  0EFF               	movlw	-1
  5273  000C76  CFE3 F04E          	movff	plusw1,btemp+11
  5274  000C7A  0E6C               	movlw	108
  5275  000C7C  024D               	mulwf	btemp+10,c
  5276  000C7E  CFF3 F04B          	movff	prodl,btemp+8
  5277  000C82  CFF4 F04C          	movff	prodh,btemp+9
  5278  000C86  024E               	mulwf	btemp+11,c
  5279  000C88  50F3               	movf	prodl,w,c
  5280  000C8A  264C               	addwf	btemp+9,f,c
  5281  000C8C  0EDC               	movlw	low (_ready_queue+8)
  5282  000C8E  244B               	addwf	btemp+8,w,c
  5283  000C90  6ED9               	movwf	fsr2l,c
  5284  000C92  0E00               	movlw	high (_ready_queue+8)
  5285  000C94  204C               	addwfc	btemp+9,w,c
  5286  000C96  6EDA               	movwf	fsr2h,c
  5287  000C98  0E02               	movlw	2
  5288  000C9A  18DE               	xorwf	postinc2,w,c
  5289  000C9C  A4D8               	btfss	status,2,c
  5290  000C9E  D048               	goto	l1916
  5291                           
  5292                           ;kernel.c: 104:       ready_queue.tasks[i].task_delay_time--;
  5293                           ;stkvar	_i @ sp[(-2)+0]
  5294  000CA0  0EFE               	movlw	-2
  5295  000CA2  CFE3 F04D          	movff	plusw1,btemp+10
  5296  000CA6  0EFF               	movlw	-1
  5297  000CA8  CFE3 F04E          	movff	plusw1,btemp+11
  5298  000CAC  0E6C               	movlw	108
  5299  000CAE  024D               	mulwf	btemp+10,c
  5300  000CB0  CFF3 F04B          	movff	prodl,btemp+8
  5301  000CB4  CFF4 F04C          	movff	prodh,btemp+9
  5302  000CB8  024E               	mulwf	btemp+11,c
  5303  000CBA  50F3               	movf	prodl,w,c
  5304  000CBC  264C               	addwf	btemp+9,f,c
  5305  000CBE  0E3E               	movlw	low (_ready_queue+106)
  5306  000CC0  244B               	addwf	btemp+8,w,c
  5307  000CC2  6ED9               	movwf	fsr2l,c
  5308  000CC4  0E01               	movlw	high (_ready_queue+106)
  5309  000CC6  204C               	addwfc	btemp+9,w,c
  5310  000CC8  6EDA               	movwf	fsr2h,c
  5311  000CCA  06DE               	decf	postinc2,f,c
  5312  000CCC  0E00               	movlw	0
  5313  000CCE  5ADD               	subwfb	postdec2,f,c
  5314                           
  5315                           ;kernel.c: 105:       if (ready_queue.tasks[i].task_delay_time == 0) {
  5316                           ;stkvar	_i @ sp[(-2)+0]
  5317  000CD0  0EFE               	movlw	-2
  5318  000CD2  CFE3 F04D          	movff	plusw1,btemp+10
  5319  000CD6  0EFF               	movlw	-1
  5320  000CD8  CFE3 F04E          	movff	plusw1,btemp+11
  5321  000CDC  0E6C               	movlw	108
  5322  000CDE  024D               	mulwf	btemp+10,c
  5323  000CE0  CFF3 F04B          	movff	prodl,btemp+8
  5324  000CE4  CFF4 F04C          	movff	prodh,btemp+9
  5325  000CE8  024E               	mulwf	btemp+11,c
  5326  000CEA  50F3               	movf	prodl,w,c
  5327  000CEC  264C               	addwf	btemp+9,f,c
  5328  000CEE  0E3E               	movlw	low (_ready_queue+106)
  5329  000CF0  244B               	addwf	btemp+8,w,c
  5330  000CF2  6ED9               	movwf	fsr2l,c
  5331  000CF4  0E01               	movlw	high (_ready_queue+106)
  5332  000CF6  204C               	addwfc	btemp+9,w,c
  5333  000CF8  6EDA               	movwf	fsr2h,c
  5334  000CFA  50DE               	movf	postinc2,w,c
  5335  000CFC  10DE               	iorwf	postinc2,w,c
  5336  000CFE  A4D8               	btfss	status,2,c
  5337  000D00  D017               	goto	l1916
  5338                           
  5339                           ;kernel.c: 106:         ready_queue.tasks[i].task_state = READY;
  5340                           ;stkvar	_i @ sp[(-2)+0]
  5341  000D02  0EFE               	movlw	-2
  5342  000D04  CFE3 F04D          	movff	plusw1,btemp+10
  5343  000D08  0EFF               	movlw	-1
  5344  000D0A  CFE3 F04E          	movff	plusw1,btemp+11
  5345  000D0E  0E6C               	movlw	108
  5346  000D10  024D               	mulwf	btemp+10,c
  5347  000D12  CFF3 F04B          	movff	prodl,btemp+8
  5348  000D16  CFF4 F04C          	movff	prodh,btemp+9
  5349  000D1A  024E               	mulwf	btemp+11,c
  5350  000D1C  50F3               	movf	prodl,w,c
  5351  000D1E  264C               	addwf	btemp+9,f,c
  5352  000D20  0EDC               	movlw	low (_ready_queue+8)
  5353  000D22  244B               	addwf	btemp+8,w,c
  5354  000D24  6ED9               	movwf	fsr2l,c
  5355  000D26  0E00               	movlw	high (_ready_queue+8)
  5356  000D28  204C               	addwfc	btemp+9,w,c
  5357  000D2A  6EDA               	movwf	fsr2h,c
  5358  000D2C  0E00               	movlw	0
  5359  000D2E  6EDF               	movwf	indf2,c
  5360  000D30                     l1916:
  5361                           
  5362                           ;kernel.c: 113:   }
  5363                           ;stkvar	_i @ sp[(-2)+0]
  5364  000D30  0EFE               	movlw	-2
  5365  000D32  50E3               	movf	plusw1,w,c
  5366  000D34  0F01               	addlw	1
  5367  000D36  6E43               	movwf	btemp,c
  5368  000D38  0EFE               	movlw	-2
  5369  000D3A  C043  FFE3         	movff	btemp,plusw1
  5370  000D3E  6A43               	clrf	btemp,c
  5371  000D40  0EFF               	movlw	-1
  5372  000D42  50E3               	movf	plusw1,w,c
  5373  000D44  2043               	addwfc	btemp,w,c
  5374  000D46  6E43               	movwf	btemp,c
  5375  000D48  0EFF               	movlw	-1
  5376  000D4A  C043  FFE3         	movff	btemp,plusw1
  5377  000D4E                     l1918:
  5378  000D4E  EE22  F0F0         	lfsr	2,_ready_queue+540
  5379                           
  5380                           ;stkvar	_i @ sp[(-2)+0]
  5381  000D52  0EFE               	movlw	-2
  5382  000D54  CFE3 F043          	movff	plusw1,btemp
  5383  000D58  50DE               	movf	postinc2,w,c
  5384  000D5A  5C43               	subwf	btemp,w,c
  5385  000D5C  0EFF               	movlw	-1
  5386  000D5E  CFE3 F043          	movff	plusw1,btemp
  5387  000D62  50DE               	movf	postinc2,w,c
  5388  000D64  5843               	subwfb	btemp,w,c
  5389  000D66  A0D8               	btfss	status,0,c
  5390  000D68  D782               	goto	l1908
  5391                           
  5392                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  5393  000D6A  52E5               	movf	postdec1,f,c
  5394  000D6C  52E5               	movf	postdec1,f,c
  5395  000D6E  0012               	return		;funcret
  5396  000D70                     __end_of_delay_decrement:
  5397                           	opt callstack 0
  5398                           
  5399 ;; *************** function ___wmul *****************
  5400 ;; Defined at:
  5401 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  multiplier      2  [STACK] unsigned int 
  5404 ;;  multiplicand    2  [STACK] unsigned int 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  product         2  [STACK] unsigned int 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  2  [STACK] unsigned int 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5416 ;;      Params:         0       0       0       0       0       0       0
  5417 ;;      Locals:         0       0       0       0       0       0       0
  5418 ;;      Temps:          0       0       0       0       0       0       0
  5419 ;;      Totals:         0       0       0       0       0       0       0
  5420 ;;Total ram usage:        0 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_ISR_timer0
  5426 ;; This function uses a reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text33
  5430  00165E                     __ptext33:
  5431                           	opt callstack 0
  5432  00165E                     ___wmul:
  5433                           	opt callstack 0
  5434                           
  5435                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5436  00165E  52E6               	movf	postinc1,f,c
  5437  001660  52E6               	movf	postinc1,f,c
  5438                           
  5439                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5440                           
  5441                           ;incstack = 0
  5442  001662  0EFA               	movlw	-6
  5443  001664  CFE3 F04E          	movff	plusw1,btemp+11
  5444                           
  5445                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5446  001668  0EFC               	movlw	-4
  5447  00166A  50E3               	movf	plusw1,w,c
  5448  00166C  024E               	mulwf	btemp+11,c
  5449                           
  5450                           ;stkvar	_product @ sp[(-2)+0]
  5451  00166E  0EFE               	movlw	-2
  5452  001670  CFF3 FFE3          	movff	prodl,plusw1
  5453  001674  0EFF               	movlw	-1
  5454  001676  CFF4 FFE3          	movff	prodh,plusw1
  5455                           
  5456                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5457  00167A  0EFB               	movlw	251
  5458  00167C  24E1               	addwf	fsr1l,w,c
  5459  00167E  6ED9               	movwf	fsr2l,c
  5460  001680  0EFF               	movlw	255
  5461  001682  20E2               	addwfc	fsr1h,w,c
  5462  001684  6EDA               	movwf	fsr2h,c
  5463  001686  50DF               	movf	indf2,w,c
  5464  001688  6E4E               	movwf	btemp+11,c
  5465                           
  5466                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5467  00168A  0EFC               	movlw	-4
  5468  00168C  50E3               	movf	plusw1,w,c
  5469  00168E  024E               	mulwf	btemp+11,c
  5470  001690  CFF3 FFF4          	movff	prodl,prodh
  5471  001694  6AF3               	clrf	prodl,c
  5472                           
  5473                           ;stkvar	_product @ sp[(-2)+0]
  5474  001696  50E1               	movf	fsr1l,w,c
  5475  001698  0FFE               	addlw	-2
  5476  00169A  6ED9               	movwf	fsr2l,c
  5477  00169C  50E2               	movf	fsr1h,w,c
  5478  00169E  6EDA               	movwf	fsr2h,c
  5479  0016A0  0EFF               	movlw	255
  5480  0016A2  22DA               	addwfc	fsr2h,f,c
  5481  0016A4  50F3               	movf	prodl,w,c
  5482  0016A6  26DE               	addwf	postinc2,f,c
  5483  0016A8  50F4               	movf	prodh,w,c
  5484  0016AA  22DD               	addwfc	postdec2,f,c
  5485                           
  5486                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5487  0016AC  0EFA               	movlw	-6
  5488  0016AE  CFE3 F04E          	movff	plusw1,btemp+11
  5489                           
  5490                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5491  0016B2  0EFD               	movlw	253
  5492  0016B4  24E1               	addwf	fsr1l,w,c
  5493  0016B6  6ED9               	movwf	fsr2l,c
  5494  0016B8  0EFF               	movlw	255
  5495  0016BA  20E2               	addwfc	fsr1h,w,c
  5496  0016BC  6EDA               	movwf	fsr2h,c
  5497  0016BE  50DF               	movf	indf2,w,c
  5498  0016C0  024E               	mulwf	btemp+11,c
  5499  0016C2  CFF3 FFF4          	movff	prodl,prodh
  5500  0016C6  6AF3               	clrf	prodl,c
  5501                           
  5502                           ;stkvar	_product @ sp[(-2)+0]
  5503  0016C8  50E1               	movf	fsr1l,w,c
  5504  0016CA  0FFE               	addlw	-2
  5505  0016CC  6ED9               	movwf	fsr2l,c
  5506  0016CE  50E2               	movf	fsr1h,w,c
  5507  0016D0  6EDA               	movwf	fsr2h,c
  5508  0016D2  0EFF               	movlw	255
  5509  0016D4  22DA               	addwfc	fsr2h,f,c
  5510  0016D6  50F3               	movf	prodl,w,c
  5511  0016D8  26DE               	addwf	postinc2,f,c
  5512  0016DA  50F4               	movf	prodh,w,c
  5513  0016DC  22DD               	addwfc	postdec2,f,c
  5514                           
  5515                           ;stkvar	_product @ sp[(-2)+0]
  5516  0016DE  0EFE               	movlw	-2
  5517  0016E0  CFE3 F043          	movff	plusw1,btemp
  5518  0016E4  0EFF               	movlw	-1
  5519  0016E6  CFE3 F044          	movff	plusw1,btemp+1
  5520                           
  5521                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  5522  0016EA  0EFA               	movlw	250
  5523  0016EC  26E1               	addwf	fsr1l,f,c
  5524  0016EE  0EFF               	movlw	255
  5525  0016F0  22E2               	addwfc	fsr1h,f,c
  5526  0016F2  0012               	return		;funcret
  5527  0016F4                     __end_of___wmul:
  5528                           	opt callstack 0
  5529  0000                     
  5530                           	psect	text34
  5531  000000                     __ptext34:
  5532                           	opt callstack 0
  5533                           
  5534                           	psect	rparam
  5535  0000                     
  5536                           	psect	temp
  5537  000043                     btemp:
  5538                           	opt callstack 0
  5539  000043                     	ds	32
  5540  0000                     wtemp0	set	btemp
  5541  0000                     wtemp1	set	btemp+2
  5542  0000                     wtemp2	set	btemp+4
  5543  0000                     wtemp3	set	btemp+6
  5544  0000                     wtemp4	set	btemp+8
  5545  0000                     wtemp5	set	btemp+10
  5546  0000                     wtemp8	set	btemp+1
  5547  0000                     ttemp0	set	btemp
  5548  0000                     ttemp1	set	btemp+3
  5549  0000                     ttemp2	set	btemp+6
  5550  0000                     ttemp3	set	btemp+9
  5551  0000                     ttemp5	set	btemp+1
  5552  0000                     ttemp6	set	btemp+4
  5553  0000                     ttemp7	set	btemp+8
  5554  0000                     ltemp0	set	btemp
  5555  0000                     ltemp1	set	btemp+4
  5556  0000                     ltemp2	set	btemp+8
  5557  0000                     lltemp0	set	btemp
  5558  0000                     lltemp1	set	btemp+8
  5559  0000                     lltemp2	set	btemp+16
  5560  0000                     lltemp3	set	btemp+24
  5561                           tosu	equ	0xFFF
  5562                           tosh	equ	0xFFE
  5563                           tosl	equ	0xFFD
  5564                           stkptr	equ	0xFFC
  5565                           pclatu	equ	0xFFB
  5566                           pclath	equ	0xFFA
  5567                           pcl	equ	0xFF9
  5568                           tblptru	equ	0xFF8
  5569                           tblptrh	equ	0xFF7
  5570                           tblptrl	equ	0xFF6
  5571                           tablat	equ	0xFF5
  5572                           prodh	equ	0xFF4
  5573                           prodl	equ	0xFF3
  5574                           indf0	equ	0xFEF
  5575                           postinc0	equ	0xFEE
  5576                           postdec0	equ	0xFED
  5577                           preinc0	equ	0xFEC
  5578                           plusw0	equ	0xFEB
  5579                           fsr0h	equ	0xFEA
  5580                           fsr0l	equ	0xFE9
  5581                           wreg	equ	0xFE8
  5582                           indf1	equ	0xFE7
  5583                           postinc1	equ	0xFE6
  5584                           postdec1	equ	0xFE5
  5585                           preinc1	equ	0xFE4
  5586                           plusw1	equ	0xFE3
  5587                           fsr1h	equ	0xFE2
  5588                           fsr1l	equ	0xFE1
  5589                           bsr	equ	0xFE0
  5590                           indf2	equ	0xFDF
  5591                           postinc2	equ	0xFDE
  5592                           postdec2	equ	0xFDD
  5593                           preinc2	equ	0xFDC
  5594                           plusw2	equ	0xFDB
  5595                           fsr2h	equ	0xFDA
  5596                           fsr2l	equ	0xFD9
  5597                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1206
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      84
    BANK0           128      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    mem	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> teste_2(BANK0[14]), teste_1(BANK0[14]), r_pipe(BANK0[14]), w_pipe(BANK0[14]), 
		 -> out_sem(BANK0[14]), cover_sem(BANK0[14]), check_sem(COMRAM[14]), fill_sem(COMRAM[14]), 
		 -> count_sem(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> teste_2(BANK0[14]), teste_1(BANK0[14]), r_pipe(BANK0[14]), w_pipe(BANK0[14]), 
		 -> out_sem(BANK0[14]), cover_sem(BANK0[14]), check_sem(COMRAM[14]), fill_sem(COMRAM[14]), 
		 -> count_sem(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), w_pipe(BANK0[14]), out_sem(BANK0[14]), cover_sem(BANK0[14]), 
		 -> check_sem(COMRAM[14]), fill_sem(COMRAM[14]), count_sem(COMRAM[14]), 

    data	PTR unsigned int  size(2) Largest target is 2
		 -> dado(STACK[2]), count(STACK[2]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    S541pipe$r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    S541pipe$w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    S258pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _task_0 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_bozo in COMRAM

    None.

Critical Paths under _task_xuxa in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _task_0 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_bozo in BANK0

    None.

Critical Paths under _task_xuxa in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _task_0 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_bozo in BANK1

    None.

Critical Paths under _task_xuxa in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _task_0 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_bozo in BANK2

    None.

Critical Paths under _task_xuxa in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _task_0 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_bozo in BANK3

    None.

Critical Paths under _task_xuxa in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _task_0 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_bozo in BANK4

    None.

Critical Paths under _task_xuxa in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _task_0 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_bozo in BANK5

    None.

Critical Paths under _task_xuxa in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2004
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0    1245
                          _SRAMalloc
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _pipe_create                                          6     0      6     264
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (2) _SRAMalloc                                            7     6      1     893
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (3) __SRAMmerge                                           7     5      2     402
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     323
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   112   108      4     187
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     828
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     806
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0     535
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         4     4      0    1316
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            2     2      0    1248
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     828
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     806
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0     535
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         4     4      0    1316
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            2     2      0    1248
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_0                                               0     0      0     960
                    _lunos_delayTask
                         _pipe_write
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_1                                               2     2      0     984
                    _lunos_delayTask
                          _pipe_read
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_2                                               0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_bozo                                            2     2      0     625
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_xuxa                                            2     2      0     874
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer0                                         16    16      0     498
                                              0 COMRAM    16    16      0
                             ___wmul
                    _delay_decrement
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (13) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _user_conf
     _SRAMalloc
       __SRAMmerge
     _pipe_create
       _sem_init
     _sem_init

 _task_idle (ROOT)

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_0 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_1 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_2 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_bozo (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_xuxa (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   _delay_decrement
   _round_robin
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     420      17       68.8%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      54       5       65.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      54       1       88.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8      15        0.0%
DATA                 0      0     4C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun  5 15:56:51 2019

                        _p 0037   __end_of_lunos_createTask 1188                        l127 0846  
                      l320 1ABE                        l321 1AC6                        l340 19E2  
                      l324 1ACE                        l316 1AAE                        l404 0B04  
                      l317 1AB6                        l334 19D4                        l335 19CC  
                      l345 19F8                        l186 1800                        l339 19EA  
                      l381 1806                        l294 18F2                        l296 1902  
                      l369 1A06                        l389 1438                        _BSR 000FE0  
                      u610 0B74                        u700 13AA                        u710 0984  
                      u800 1598                        u661 116C                        u750 0A1C  
                      u690 096A                        u780 1532                        _TOS 000FFD  
                      _mem 0007                        _who 000B                _round_robin 16F4  
                      wreg 000FE8               __CFG_WDT$OFF 000000                       l2000 135E  
                     l2012 1276                       l2120 1948                       l2130 1BC4  
                     l2240 144C                       l2224 181A                       l2128 1BB8  
                     l2244 1484                       l2194 1B28                       l1810 1396  
                     l1714 0B78                       l1804 0962                       l1840 098E  
                     l1922 1704                       l1818 13F0                       l1746 0C40  
                     l1842 09A2                       l1916 0D30                       l1908 0C6E  
                     l1860 0A48                       l1918 0D4E                       l1782 06A0  
                     l1870 0A82                       l1778 0586                       l1798 076C  
                     l1888 150A                       l1898 157A                       i2l59 0398  
                     _TOSH 000FFE                       _TOSL 000FFD                       _WREG 000FE8  
                     _TOSU 000FFF                       _main 1784              _global_buffer 0001  
   __size_of_count_bottles 006E                       _size 0009                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0043                       prodh 000FF4                       prodl 000FF3  
                     start 000C               ___param_bank 000000            __end_of___lwmod 15AE  
                    _TMR0L 000FD6                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      u86_20 11BA                      u94_20 1958  
              ?_ISR_timer0 0063                 __SRAMmerge 0B0E       __size_of_check_level 0040  
       __size_of_SRAMalloc 019E                      tablat 000FF5                      ltemp0 0043  
                    ltemp1 0047                      ltemp2 004B                      plusw0 000FEB  
                    plusw1 000FE3                      plusw2 000FDB                      ttemp0 0043  
                    ttemp1 0046                      ttemp2 0049                      ttemp3 004C  
                    ttemp5 0044                      ttemp6 0047                      ttemp7 004B  
                    status 000FD8                      wtemp0 0043                      wtemp1 0045  
                    wtemp2 0047                      wtemp3 0049                      wtemp4 004B  
                    wtemp5 004D                      wtemp8 0044   __size_of_delay_decrement 0110  
          __initialization 1A4E               __end_of_main 1802              _count_bottles 18F0  
            __activetblptr 000000                     u120_20 14E4                     u113_20 1AF4  
                   u113_26 1AF6                     u114_20 1A2E                     u114_26 1A30  
                   u115_20 1B86                     i2l2060 012C                     u115_26 1B88  
                   i2l2080 02DC                     i2l2064 0222                     u116_20 1872  
                   i2l2086 0490                     u118_20 1470                     u118_26 1472  
                   u119_20 148C                     u119_26 148E                     _STATUS 000FD8  
                   _STKPTR 000FFC       __size_of_config_INT0 0010       __size_of_fill_bottle 0028  
      __size_of_ISR_timer0 04C4                     ___wmul 165E          __end_of_SRAMalloc 0B0E  
                   clear_0 1A6E                     clear_1 1A80                     clear_2 1A8C  
                   _r_pipe 009C                     _task_0 1AD8                     _task_1 1A02  
                   _task_2 1B7E                     _w_pipe 00AA           __end_of_sem_init 18F0  
         __end_of_sem_wait 1366           __end_of_sem_post 127E               __pdataCOMRAM 0073  
                   lltemp0 0043                     lltemp1 004B                     lltemp2 0053  
                   lltemp3 005B                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0080    __end_of__initialization 1A92  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001             __pcstackCOMRAM 0063  
               ___inthi_sp 054E       __end_of_cover_bottle 1A02                 __pbssBANK0 0080  
       __size_of_count_out 0034              __uDynamicHeap 02F4         __size_of_scheduler 0006  
      __size_of__SRAMmerge 0152         __size_of_pipe_read 0108         __size_of_task_idle 0004  
       __size_of_task_bozo 007E         __size_of_task_xuxa 00BE               ??_ISR_timer0 0063  
                  i2u92_40 0498                 _dispatcher 04CC                    i2u88_40 005E  
                  i2u88_46 0060                    i2u89_40 0086                    i2u89_41 0084  
          _lunos_delayTask 195E       __size_of_pipe_create 010E         __size_of_user_conf 00B0  
                  __Hparam 0000                    __Lparam 0000            __size_of___wmul 0096  
       __end_of_ISR_timer0 04CC                    ___lwmod 14F2                    __pcinit 1A4E  
                  __ramtop 0600            __size_of_task_0 0040            __size_of_task_1 004C  
          __size_of_task_2 002A          __end_of_count_out 1B4C                    __ptext0 1784  
                  __ptext1 15AE                    __ptext2 0D70                    __ptext3 1880  
                  __ptext4 0970                    __ptext5 0B0E                    __ptext6 1B4C  
                  __ptext7 1090                    __ptext8 1366                    __ptext9 04CC  
                _T0CONbits 000FD5                    _teste_1 00C6                    _teste_2 00B8  
                  _quantum 0073                    _out_sem 0080          __end_of_scheduler 1BF8  
           __pintcode_body 0014       end_of_initialization 1A92          __end_of_pipe_read 1090  
        __end_of_task_idle 1BFC          __end_of_task_bozo 1880                    int_func 0014  
        __end_of_task_xuxa 14F2                 _pipe_write 0E7E      __end_of_config_timer0 1BE2  
                  postdec0 000FED                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               _lunos_init 1B4C          __end_of_user_conf 165E                  _PORTBbits 000F81  
                _PORTCbits 000F82                  _PORTDbits 000F83    __end_of_lunos_delayTask 19B0  
                _SRAMalloc 0970      __size_of_cover_bottle 0052                  _TRISDbits 000F95  
     __size_of_round_robin 0090        __end_of_check_level 1AD8            _delay_decrement 0C60  
             _cover_bottle 19B0         __end_of__SRAMmerge 0C60             __end_of___wmul 16F4  
            __pidataCOMRAM 1BFC             __end_of_task_0 1B18             __end_of_task_1 1A4E  
           __end_of_task_2 1BA8        start_initialization 1A4E  __size_of_lunos_createTask 00F8  
      __end_of_config_INT0 1BF2        __size_of_dispatcher 04A4        __end_of_fill_bottle 1BD0  
              __pbssBIGRAM 00D4                __pbssCOMRAM 0001                _check_level 1A98  
  __end_of_delay_decrement 0D70       __end_of_SRAMInitHeap 1434                  _check_sem 000D  
                __pintcode 0008          __size_of_sem_init 0070          __size_of_sem_wait 00E8  
        __size_of_sem_post 00F6      __end_of_count_bottles 195E        __size_of_pipe_write 010A  
                _cover_sem 008E                  _count_sem 0029                  _count_out 1B18  
      __size_of_lunos_init 0032                  _scheduler 1BF2                _config_INT0 1BE2  
                _pipe_read 0F88                _fill_bottle 1BA8                  _task_idle 1BF8  
                _task_bozo 1802                  _task_xuxa 1434                  _user_conf 15AE  
         _lunos_createTask 1090                _INTCON2bits 000FF1        __end_of_pipe_create 0E7E  
                 __Hrparam 0000                   __Lrparam 0000         __end_of_dispatcher 0970  
         __size_of___lwmod 00BC     __size_of_config_timer0 0012      __size_of_SRAMInitHeap 00CE  
                 __ptext10 1BF2                   __ptext11 16F4                   __ptext20 1BA8  
                 __ptext12 14F2                   __ptext21 1A98                   __ptext13 1BD0  
                 __ptext30 1434                   __ptext22 19B0                   __ptext14 1BE2  
                 __ptext23 0E7E                   __ptext15 1BF8                   __ptext32 0C60  
                 __ptext24 1B18                   __ptext16 18F0                   __ptext33 165E  
                 __ptext25 0F88                   __ptext17 127E                   __ptext34 0000  
                 __ptext26 1AD8                   __ptext18 1188                   __ptext27 1A02  
                 __ptext19 195E                   __ptext28 1B7E                   __ptext29 1802  
                 _fill_sem 001B              __size_of_main 007E                _ready_queue 00D4  
                 _sem_init 1880                   _sem_wait 127E                   _sem_post 1188  
             _SRAMInitHeap 1366                 _INTCONbits 000FF2         __end_of_pipe_write 0F88  
              _pipe_create 0D70        __end_of_round_robin 1784                   intlevel1 0000  
                 intlevel2 0000         __end_of_lunos_init 1B7E              _config_timer0 1BD0  
               _ISR_timer0 0008   __size_of_lunos_delayTask 0052  
