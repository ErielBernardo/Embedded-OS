

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jun 06 14:10:53 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80 ;;_p	offset=-2 (param)
    81 ;;_w	offset=-4 (param)
    82 ;;_r	offset=-6 (param)
    83 ;;_s	offset=-2 (param)
    84 ;;_valor	offset=-4 (param)
    85 ;;_new_task	offset	0
    86 ;;_prior	offset=-2 (param)
    87 ;;_f	offset=-4 (param)
    88 ;;_count	offset	0
    89 ;;_pHeap	offset	2
    90 ;;_state	offset=-1 (param)
    91 ;;_next_task_to_run	offset	0
    92 ;;_counter	offset	0
    93 ;;_dividend	offset=-2 (param)
    94 ;;_divisor	offset=-4 (param)
    95 ;;_bottle	offset	0
    96 ;;_s	offset=-2 (param)
    97 ;;_s	offset=-2 (param)
    98 ;;_time	offset=-2 (param)
    99 ;;_state	offset=-1 (param)
   100 ;;_next_task_to_run	offset	0
   101 ;;_counter	offset	0
   102 ;;_dividend	offset=-2 (param)
   103 ;;_divisor	offset=-4 (param)
   104 ;;_p	offset=-2 (param)
   105 ;;_data	offset=-4 (param)
   106 ;;_data	offset	0
   107 ;;_count	offset	2
   108 ;;_p	offset=-2 (param)
   109 ;;_data	offset=-4 (param)
   110 ;;_next_task_to_run	offset	0
   111 ;;_counter	offset	0
   112 ;;_dividend	offset=-2 (param)
   113 ;;_divisor	offset=-4 (param)
   114 ;;_i	offset	0
   115 ;;_product	offset	0
   116 ;;_multiplier	offset=-2 (param)
   117 ;;_multiplicand	offset=-4 (param)
   118                           
   119                           	psect	idataCOMRAM
   120  001836                     __pidataCOMRAM:
   121                           	opt callstack 0
   122                           
   123                           ;initializer for _quantum
   124  001836  000A               	dw	10
   125  0000                     _TOS	set	4093
   126  0000                     _PORTCbits	set	3970
   127  0000                     _PORTBbits	set	3969
   128  0000                     _TRISD	set	3989
   129  0000                     _TRISC	set	3988
   130  0000                     _TRISB	set	3987
   131  0000                     _STKPTR	set	4092
   132  0000                     _TOSL	set	4093
   133  0000                     _TOSH	set	4094
   134  0000                     _TOSU	set	4095
   135  0000                     _BSR	set	4064
   136  0000                     _STATUS	set	4056
   137  0000                     _WREG	set	4072
   138  0000                     _PORTDbits	set	3971
   139  0000                     _TMR0L	set	4054
   140  0000                     _T0CONbits	set	4053
   141  0000                     _INTCON2bits	set	4081
   142  0000                     _INTCONbits	set	4082
   143  0000                     _TRISDbits	set	3989
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  00178E                     __pcinit:
   149                           	opt callstack 0
   150  00178E                     start_initialization:
   151                           	opt callstack 0
   152  00178E                     __initialization:
   153                           	opt callstack 0
   154                           
   155                           ; Initialize objects allocated to COMRAM (2 bytes)
   156                           ; load TBLPTR registers with __pidataCOMRAM
   157  00178E  0E36               	movlw	low __pidataCOMRAM
   158  001790  6EF6               	movwf	tblptrl,c
   159  001792  0E18               	movlw	high __pidataCOMRAM
   160  001794  6EF7               	movwf	tblptrh,c
   161  001796  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   162  001798  6EF8               	movwf	tblptru,c
   163  00179A  0009               	tblrd		*+	;fetch initializer
   164  00179C  CFF5 F075          	movff	tablat,__pdataCOMRAM
   165  0017A0  0009               	tblrd		*+	;fetch initializer
   166  0017A2  CFF5 F076          	movff	tablat,__pdataCOMRAM+1
   167                           
   168                           ; Clear objects allocated to BIGRAM (1176 bytes)
   169  0017A6  EE00  F0C0         	lfsr	0,__pbssBIGRAM
   170  0017AA  EE24 F098          	lfsr	2,1176
   171  0017AE                     clear_0:
   172  0017AE  6AEE               	clrf	postinc0,c
   173  0017B0  50DD               	movf	postdec2,w,c
   174  0017B2  50D9               	movf	fsr2l,w,c
   175  0017B4  E1FC               	bnz	clear_0
   176  0017B6  50DA               	movf	fsr2h,w,c
   177  0017B8  E1FA               	bnz	clear_0
   178                           
   179                           ; Clear objects allocated to BANK0 (64 bytes)
   180  0017BA  EE00  F080         	lfsr	0,__pbssBANK0
   181  0017BE  0E40               	movlw	64
   182  0017C0                     clear_1:
   183  0017C0  6AEE               	clrf	postinc0,c
   184  0017C2  06E8               	decf	wreg,f,c
   185  0017C4  E1FD               	bnz	clear_1
   186                           
   187                           ; Clear objects allocated to COMRAM (70 bytes)
   188  0017C6  EE00  F001         	lfsr	0,__pbssCOMRAM
   189  0017CA  0E46               	movlw	70
   190  0017CC                     clear_2:
   191  0017CC  6AEE               	clrf	postinc0,c
   192  0017CE  06E8               	decf	wreg,f,c
   193  0017D0  E1FD               	bnz	clear_2
   194  0017D2                     end_of_initialization:
   195                           	opt callstack 0
   196  0017D2                     __end_of__initialization:
   197                           	opt callstack 0
   198  0017D2  0100               	movlb	0
   199  0017D4  EFA9  F00A         	goto	_main	;jump to C main() function
   200                           
   201                           	psect	bssCOMRAM
   202  000001                     __pbssCOMRAM:
   203                           	opt callstack 0
   204  000001                     _global_buffer:
   205                           	opt callstack 0
   206  000001                     	ds	6
   207  000007                     _size:
   208                           	opt callstack 0
   209  000007                     	ds	2
   210  000009                     _who:
   211                           	opt callstack 0
   212  000009                     	ds	2
   213  00000B                     _check_sem:
   214                           	opt callstack 0
   215  00000B                     	ds	16
   216  00001B                     _fill_sem:
   217                           	opt callstack 0
   218  00001B                     	ds	16
   219  00002B                     _count_sem:
   220                           	opt callstack 0
   221  00002B                     	ds	16
   222  00003B                     _p:
   223                           	opt callstack 0
   224  00003B                     	ds	12
   225                           
   226                           	psect	dataCOMRAM
   227  000075                     __pdataCOMRAM:
   228                           	opt callstack 0
   229  000075                     _quantum:
   230                           	opt callstack 0
   231  000075                     	ds	2
   232                           
   233                           	psect	bssBANK0
   234  000080                     __pbssBANK0:
   235                           	opt callstack 0
   236  000080                     _r_pipe:
   237                           	opt callstack 0
   238  000080                     	ds	16
   239  000090                     _w_pipe:
   240                           	opt callstack 0
   241  000090                     	ds	16
   242  0000A0                     _out_sem:
   243                           	opt callstack 0
   244  0000A0                     	ds	16
   245  0000B0                     _cover_sem:
   246                           	opt callstack 0
   247  0000B0                     	ds	16
   248                           
   249                           	psect	bssBIGRAM
   250  0000C0                     __pbssBIGRAM:
   251                           	opt callstack 0
   252  0000C0                     _ready_queue:
   253                           	opt callstack 0
   254  0000C0                     	ds	664
   255  000358                     __uDynamicHeap:
   256                           	opt callstack 0
   257  000358                     	ds	512
   258                           
   259                           	psect	cstackCOMRAM
   260  000067                     __pcstackCOMRAM:
   261                           	opt callstack 0
   262  000067                     ??_ISR_timer0:
   263                           
   264                           ; 1 bytes @ 0x0
   265  000067                     	ds	14
   266                           
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 16 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1  [STACK] void 
   279 ;; Registers used:
   280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   286 ;;      Params:         0       0       0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0       0       0
   288 ;;      Temps:          0       0       0       0       0       0       0
   289 ;;      Totals:         0       0       0       0       0       0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels required when called:   14
   292 ;; This function calls:
   293 ;;		_config_INT0
   294 ;;		_config_timer0
   295 ;;		_dispatcher
   296 ;;		_lunos_createTask
   297 ;;		_lunos_init
   298 ;;		_user_conf
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a reentrant model
   302 ;;
   303                           
   304                           	psect	text0
   305  001552                     __ptext0:
   306                           	opt callstack 0
   307  001552                     _main:
   308                           	opt callstack 17
   309                           
   310                           ;main.c: 18:   dispatcher(READY);
   311                           
   312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   313                           ;incstack = 0
   314  001552  ECEC  F00B         	call	_lunos_init	;wreg free
   315                           
   316                           ;main.c: 20:   while (1);
   317  001556  EC83  F009         	call	_user_conf	;wreg free
   318                           
   319                           ;main.c: 21: 
   320  00155A  EC0E  F00C         	call	_config_INT0	;wreg free
   321                           
   322                           ;main.c: 22:   return;
   323  00155E  EC05  F00C         	call	_config_timer0	;wreg free
   324  001562  0ECC               	movlw	low _count_bottles
   325  001564  6EE6               	movwf	postinc1,c
   326  001566  0E14               	movlw	high _count_bottles
   327  001568  6EE6               	movwf	postinc1,c
   328  00156A  0E05               	movlw	5
   329  00156C  6EE6               	movwf	postinc1,c
   330  00156E  0E00               	movlw	0
   331  001570  6EE6               	movwf	postinc1,c
   332  001572  ECDA  F005         	call	_lunos_createTask	;wreg free
   333  001576  0EEE               	movlw	low _fill_bottle
   334  001578  6EE6               	movwf	postinc1,c
   335  00157A  0E16               	movlw	high _fill_bottle
   336  00157C  6EE6               	movwf	postinc1,c
   337  00157E  0E04               	movlw	4
   338  001580  6EE6               	movwf	postinc1,c
   339  001582  0E00               	movlw	0
   340  001584  6EE6               	movwf	postinc1,c
   341  001586  ECDA  F005         	call	_lunos_createTask	;wreg free
   342  00158A  0E3E               	movlw	low _check_level
   343  00158C  6EE6               	movwf	postinc1,c
   344  00158E  0E17               	movlw	high _check_level
   345  001590  6EE6               	movwf	postinc1,c
   346  001592  0E05               	movlw	5
   347  001594  6EE6               	movwf	postinc1,c
   348  001596  0E00               	movlw	0
   349  001598  6EE6               	movwf	postinc1,c
   350  00159A  ECDA  F005         	call	_lunos_createTask	;wreg free
   351  00159E  0E40               	movlw	low _cover_bottle
   352  0015A0  6EE6               	movwf	postinc1,c
   353  0015A2  0E16               	movlw	high _cover_bottle
   354  0015A4  6EE6               	movwf	postinc1,c
   355  0015A6  0E05               	movlw	5
   356  0015A8  6EE6               	movwf	postinc1,c
   357  0015AA  0E00               	movlw	0
   358  0015AC  6EE6               	movwf	postinc1,c
   359  0015AE  ECDA  F005         	call	_lunos_createTask	;wreg free
   360  0015B2  0E82               	movlw	low _count_out
   361  0015B4  6EE6               	movwf	postinc1,c
   362  0015B6  0E11               	movlw	high _count_out
   363  0015B8  6EE6               	movwf	postinc1,c
   364  0015BA  0E04               	movlw	4
   365  0015BC  6EE6               	movwf	postinc1,c
   366  0015BE  0E00               	movlw	0
   367  0015C0  6EE6               	movwf	postinc1,c
   368  0015C2  ECDA  F005         	call	_lunos_createTask	;wreg free
   369  0015C6  0E00               	movlw	0
   370  0015C8  6EE6               	movwf	postinc1,c
   371  0015CA  EC6E  F002         	call	_dispatcher	;wreg free
   372  0015CE                     l186:
   373  0015CE  D7FF               	goto	l186
   374  0015D0                     __end_of_main:
   375                           	opt callstack 0
   376                           
   377 ;; *************** function _user_conf *****************
   378 ;; Defined at:
   379 ;;		line 22 in file "tasks.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1  [STACK] void 
   386 ;; Registers used:
   387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   393 ;;      Params:         0       0       0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; Hardware stack levels required when called:   12
   400 ;; This function calls:
   401 ;;		_pipe_create
   402 ;;		_sem_init
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a reentrant model
   406 ;;
   407                           
   408                           	psect	text1
   409  001306                     __ptext1:
   410                           	opt callstack 0
   411  001306                     _user_conf:
   412                           	opt callstack 18
   413                           
   414                           ;tasks.c: 24:     TRISB = 0b00000101;
   415                           
   416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   417                           ;incstack = 0
   418  001306  0E05               	movlw	5
   419  001308  6E93               	movwf	3987,c	;volatile
   420                           
   421                           ;tasks.c: 25:     TRISC = 0b01111111;
   422  00130A  0E7F               	movlw	127
   423  00130C  6E94               	movwf	3988,c	;volatile
   424                           
   425                           ;tasks.c: 26:     TRISD = 0b00001110;
   426  00130E  0E0E               	movlw	14
   427  001310  6E95               	movwf	3989,c	;volatile
   428                           
   429                           ;tasks.c: 28:     PORTBbits.RB1 = 1;
   430  001312  8281               	bsf	3969,1,c	;volatile
   431                           
   432                           ;tasks.c: 30:     PORTCbits.RC7 = 1;
   433  001314  8E82               	bsf	3970,7,c	;volatile
   434                           
   435                           ;tasks.c: 32:     PORTDbits.RD4 = 1;
   436  001316  8883               	bsf	3971,4,c	;volatile
   437                           
   438                           ;tasks.c: 33:     PORTDbits.RD5 = 1;
   439  001318  8A83               	bsf	3971,5,c	;volatile
   440                           
   441                           ;tasks.c: 34:     PORTDbits.RD6 = 1;
   442  00131A  8C83               	bsf	3971,6,c	;volatile
   443                           
   444                           ;tasks.c: 35:     PORTDbits.RD7 = 1;
   445  00131C  8E83               	bsf	3971,7,c	;volatile
   446                           
   447                           ;tasks.c: 37:     sem_init(&count_sem, 1);
   448  00131E  0E01               	movlw	1
   449  001320  6EE6               	movwf	postinc1,c
   450  001322  0E00               	movlw	0
   451  001324  6EE6               	movwf	postinc1,c
   452  001326  0E2B               	movlw	low _count_sem
   453  001328  6EE6               	movwf	postinc1,c
   454  00132A  0E00               	movlw	high _count_sem
   455  00132C  6EE6               	movwf	postinc1,c
   456  00132E  ECE8  F00A         	call	_sem_init	;wreg free
   457                           
   458                           ;tasks.c: 38:     sem_init(&fill_sem, 0);
   459  001332  0E00               	movlw	0
   460  001334  6EE6               	movwf	postinc1,c
   461  001336  0E00               	movlw	0
   462  001338  6EE6               	movwf	postinc1,c
   463  00133A  0E1B               	movlw	low _fill_sem
   464  00133C  6EE6               	movwf	postinc1,c
   465  00133E  0E00               	movlw	high _fill_sem
   466  001340  6EE6               	movwf	postinc1,c
   467  001342  ECE8  F00A         	call	_sem_init	;wreg free
   468                           
   469                           ;tasks.c: 39:     sem_init(&check_sem, 0);
   470  001346  0E00               	movlw	0
   471  001348  6EE6               	movwf	postinc1,c
   472  00134A  0E00               	movlw	0
   473  00134C  6EE6               	movwf	postinc1,c
   474  00134E  0E0B               	movlw	low _check_sem
   475  001350  6EE6               	movwf	postinc1,c
   476  001352  0E00               	movlw	high _check_sem
   477  001354  6EE6               	movwf	postinc1,c
   478  001356  ECE8  F00A         	call	_sem_init	;wreg free
   479                           
   480                           ;tasks.c: 40:     sem_init(&cover_sem, 0);
   481  00135A  0E00               	movlw	0
   482  00135C  6EE6               	movwf	postinc1,c
   483  00135E  0E00               	movlw	0
   484  001360  6EE6               	movwf	postinc1,c
   485  001362  0EB0               	movlw	low _cover_sem
   486  001364  6EE6               	movwf	postinc1,c
   487  001366  0E00               	movlw	high _cover_sem
   488  001368  6EE6               	movwf	postinc1,c
   489  00136A  ECE8  F00A         	call	_sem_init	;wreg free
   490                           
   491                           ;tasks.c: 41:     sem_init(&out_sem, 0);
   492  00136E  0E00               	movlw	0
   493  001370  6EE6               	movwf	postinc1,c
   494  001372  0E00               	movlw	0
   495  001374  6EE6               	movwf	postinc1,c
   496  001376  0EA0               	movlw	low _out_sem
   497  001378  6EE6               	movwf	postinc1,c
   498  00137A  0E00               	movlw	high _out_sem
   499  00137C  6EE6               	movwf	postinc1,c
   500  00137E  ECE8  F00A         	call	_sem_init	;wreg free
   501                           
   502                           ;tasks.c: 42:     pipe_create(&p, &w_pipe, &r_pipe);
   503  001382  0E80               	movlw	low _r_pipe
   504  001384  6EE6               	movwf	postinc1,c
   505  001386  0E00               	movlw	high _r_pipe
   506  001388  6EE6               	movwf	postinc1,c
   507  00138A  0E90               	movlw	low _w_pipe
   508  00138C  6EE6               	movwf	postinc1,c
   509  00138E  0E00               	movlw	high _w_pipe
   510  001390  6EE6               	movwf	postinc1,c
   511  001392  0E3B               	movlw	low _p
   512  001394  6EE6               	movwf	postinc1,c
   513  001396  0E00               	movlw	high _p
   514  001398  6EE6               	movwf	postinc1,c
   515  00139A  EC53  F005         	call	_pipe_create	;wreg free
   516                           
   517                           ;tasks.c: 45:     global_buffer.count = 0;
   518  00139E  6A01               	clrf	_global_buffer,c
   519  0013A0  6A02               	clrf	_global_buffer+1,c
   520                           
   521                           ;tasks.c: 46:     global_buffer.p_state = FREE_;
   522  0013A2  6A06               	clrf	_global_buffer+5,c
   523                           
   524                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   525  0013A4  0012               	return		;funcret
   526  0013A6                     __end_of_user_conf:
   527                           	opt callstack 0
   528                           
   529 ;; *************** function _pipe_create *****************
   530 ;; Defined at:
   531 ;;		line 9 in file "pipe.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;  p               2  [STACK] PTR struct pipe
   534 ;;		 -> p(12), 
   535 ;;  w               2  [STACK] PTR struct semaphore
   536 ;;		 -> w_pipe(16), 
   537 ;;  r               2  [STACK] PTR struct semaphore
   538 ;;		 -> r_pipe(16), 
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1  [STACK] void 
   543 ;; Registers used:
   544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   550 ;;      Params:         0       0       0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0       0       0
   553 ;;      Totals:         0       0       0       0       0       0       0
   554 ;;Total ram usage:        0 bytes
   555 ;; Hardware stack levels used:    1
   556 ;; Hardware stack levels required when called:   11
   557 ;; This function calls:
   558 ;;		_sem_init
   559 ;; This function is called by:
   560 ;;		_user_conf
   561 ;; This function uses a reentrant model
   562 ;;
   563                           
   564                           	psect	text2
   565  000AA6                     __ptext2:
   566                           	opt callstack 0
   567  000AA6                     _pipe_create:
   568                           	opt callstack 18
   569                           
   570                           ;pipe.c: 10:   p->index_write = 0;
   571                           ;stkvar	_p @ sp[(0)+-2]
   572                           
   573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   574                           ;incstack = 0
   575  000AA6  0EFE               	movlw	-2
   576  000AA8  CFE3 F051          	movff	plusw1,btemp+10
   577  000AAC  0EFF               	movlw	-1
   578  000AAE  CFE3 F052          	movff	plusw1,btemp+11
   579  000AB2  0E04               	movlw	4
   580  000AB4  2451               	addwf	btemp+10,w,c
   581  000AB6  6ED9               	movwf	fsr2l,c
   582  000AB8  0E00               	movlw	0
   583  000ABA  2052               	addwfc	btemp+11,w,c
   584  000ABC  6EDA               	movwf	fsr2h,c
   585  000ABE  0E00               	movlw	0
   586  000AC0  6EDE               	movwf	postinc2,c
   587  000AC2  0E00               	movlw	0
   588  000AC4  6EDD               	movwf	postdec2,c
   589                           
   590                           ;pipe.c: 11:   p->index_read = 0;
   591                           ;stkvar	_p @ sp[(0)+-2]
   592  000AC6  0EFE               	movlw	-2
   593  000AC8  CFE3 F051          	movff	plusw1,btemp+10
   594  000ACC  0EFF               	movlw	-1
   595  000ACE  CFE3 F052          	movff	plusw1,btemp+11
   596  000AD2  0E06               	movlw	6
   597  000AD4  2451               	addwf	btemp+10,w,c
   598  000AD6  6ED9               	movwf	fsr2l,c
   599  000AD8  0E00               	movlw	0
   600  000ADA  2052               	addwfc	btemp+11,w,c
   601  000ADC  6EDA               	movwf	fsr2h,c
   602  000ADE  0E00               	movlw	0
   603  000AE0  6EDE               	movwf	postinc2,c
   604  000AE2  0E00               	movlw	0
   605  000AE4  6EDD               	movwf	postdec2,c
   606                           
   607                           ;pipe.c: 12:   p->w = w;
   608                           ;stkvar	_w @ sp[(0)+-4]
   609  000AE6  50E1               	movf	fsr1l,w,c
   610  000AE8  0FFC               	addlw	-4
   611  000AEA  6ED9               	movwf	fsr2l,c
   612  000AEC  50E2               	movf	fsr1h,w,c
   613  000AEE  6EDA               	movwf	fsr2h,c
   614  000AF0  0EFF               	movlw	255
   615  000AF2  22DA               	addwfc	fsr2h,f,c
   616                           
   617                           ;stkvar	_p @ sp[(0)+-2]
   618  000AF4  0EFE               	movlw	-2
   619  000AF6  CFE3 F051          	movff	plusw1,btemp+10
   620  000AFA  0EFF               	movlw	-1
   621  000AFC  CFE3 F052          	movff	plusw1,btemp+11
   622  000B00  0E08               	movlw	8
   623  000B02  2451               	addwf	btemp+10,w,c
   624  000B04  6EE9               	movwf	fsr0l,c
   625  000B06  0E00               	movlw	0
   626  000B08  2052               	addwfc	btemp+11,w,c
   627  000B0A  6EEA               	movwf	fsr0h,c
   628  000B0C  CFDE FFEE          	movff	postinc2,postinc0
   629  000B10  CFDD FFED          	movff	postdec2,postdec0
   630                           
   631                           ;pipe.c: 13:   p->r = r;
   632                           ;stkvar	_r @ sp[(0)+-6]
   633  000B14  50E1               	movf	fsr1l,w,c
   634  000B16  0FFA               	addlw	-6
   635  000B18  6ED9               	movwf	fsr2l,c
   636  000B1A  50E2               	movf	fsr1h,w,c
   637  000B1C  6EDA               	movwf	fsr2h,c
   638  000B1E  0EFF               	movlw	255
   639  000B20  22DA               	addwfc	fsr2h,f,c
   640                           
   641                           ;stkvar	_p @ sp[(0)+-2]
   642  000B22  0EFE               	movlw	-2
   643  000B24  CFE3 F051          	movff	plusw1,btemp+10
   644  000B28  0EFF               	movlw	-1
   645  000B2A  CFE3 F052          	movff	plusw1,btemp+11
   646  000B2E  0E0A               	movlw	10
   647  000B30  2451               	addwf	btemp+10,w,c
   648  000B32  6EE9               	movwf	fsr0l,c
   649  000B34  0E00               	movlw	0
   650  000B36  2052               	addwfc	btemp+11,w,c
   651  000B38  6EEA               	movwf	fsr0h,c
   652  000B3A  CFDE FFEE          	movff	postinc2,postinc0
   653  000B3E  CFDD FFED          	movff	postdec2,postdec0
   654                           
   655                           ;pipe.c: 14:   sem_init(p->w, 2);
   656  000B42  0E02               	movlw	2
   657  000B44  6EE6               	movwf	postinc1,c
   658  000B46  0E00               	movlw	0
   659  000B48  6EE6               	movwf	postinc1,c
   660                           
   661                           ;stkvar	_p @ sp[(-2)+-2]
   662  000B4A  0EFC               	movlw	-4
   663  000B4C  CFE3 F051          	movff	plusw1,btemp+10
   664  000B50  0EFD               	movlw	-3
   665  000B52  CFE3 F052          	movff	plusw1,btemp+11
   666  000B56  0E08               	movlw	8
   667  000B58  2451               	addwf	btemp+10,w,c
   668  000B5A  6ED9               	movwf	fsr2l,c
   669  000B5C  0E00               	movlw	0
   670  000B5E  2052               	addwfc	btemp+11,w,c
   671  000B60  6EDA               	movwf	fsr2h,c
   672  000B62  CFDE F051          	movff	postinc2,btemp+10
   673  000B66  CFDD F052          	movff	postdec2,btemp+11
   674  000B6A  C051  FFE6         	movff	btemp+10,postinc1
   675  000B6E  C052  FFE6         	movff	btemp+11,postinc1
   676  000B72  ECE8  F00A         	call	_sem_init	;wreg free
   677                           
   678                           ;pipe.c: 15:   sem_init(p->r, 0);
   679  000B76  0E00               	movlw	0
   680  000B78  6EE6               	movwf	postinc1,c
   681  000B7A  0E00               	movlw	0
   682  000B7C  6EE6               	movwf	postinc1,c
   683                           
   684                           ;stkvar	_p @ sp[(-2)+-2]
   685  000B7E  0EFC               	movlw	-4
   686  000B80  CFE3 F051          	movff	plusw1,btemp+10
   687  000B84  0EFD               	movlw	-3
   688  000B86  CFE3 F052          	movff	plusw1,btemp+11
   689  000B8A  0E0A               	movlw	10
   690  000B8C  2451               	addwf	btemp+10,w,c
   691  000B8E  6ED9               	movwf	fsr2l,c
   692  000B90  0E00               	movlw	0
   693  000B92  2052               	addwfc	btemp+11,w,c
   694  000B94  6EDA               	movwf	fsr2h,c
   695  000B96  CFDE F051          	movff	postinc2,btemp+10
   696  000B9A  CFDD F052          	movff	postdec2,btemp+11
   697  000B9E  C051  FFE6         	movff	btemp+10,postinc1
   698  000BA2  C052  FFE6         	movff	btemp+11,postinc1
   699  000BA6  ECE8  F00A         	call	_sem_init	;wreg free
   700                           
   701                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
   702  000BAA  0EFA               	movlw	250
   703  000BAC  26E1               	addwf	fsr1l,f,c
   704  000BAE  0EFF               	movlw	255
   705  000BB0  22E2               	addwfc	fsr1h,f,c
   706  000BB2  0012               	return		;funcret
   707  000BB4                     __end_of_pipe_create:
   708                           	opt callstack 0
   709                           
   710 ;; *************** function _sem_init *****************
   711 ;; Defined at:
   712 ;;		line 10 in file "semaphore.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  s               2  [STACK] PTR struct semaphore
   715 ;;		 -> r_pipe(16), w_pipe(16), out_sem(16), cover_sem(16), 
   716 ;;		 -> check_sem(16), fill_sem(16), count_sem(16), 
   717 ;;  valor           2  [STACK] int 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1  [STACK] void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   729 ;;      Params:         0       0       0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0       0       0
   732 ;;      Totals:         0       0       0       0       0       0       0
   733 ;;Total ram usage:        0 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; Hardware stack levels required when called:   10
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_pipe_create
   740 ;;		_user_conf
   741 ;; This function uses a reentrant model
   742 ;;
   743                           
   744                           	psect	text3
   745  0015D0                     __ptext3:
   746                           	opt callstack 0
   747  0015D0                     _sem_init:
   748                           	opt callstack 19
   749                           
   750                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   751                           
   752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   753                           ;incstack = 0
   754  0015D0  9EF2               	bcf	4082,7,c	;volatile
   755                           
   756                           ;semaphore.c: 13:   s->contador = valor;
   757                           ;stkvar	_valor @ sp[(0)+-4]
   758  0015D2  50E1               	movf	fsr1l,w,c
   759  0015D4  0FFC               	addlw	-4
   760  0015D6  6ED9               	movwf	fsr2l,c
   761  0015D8  50E2               	movf	fsr1h,w,c
   762  0015DA  6EDA               	movwf	fsr2h,c
   763  0015DC  0EFF               	movlw	255
   764  0015DE  22DA               	addwfc	fsr2h,f,c
   765                           
   766                           ;stkvar	_s @ sp[(0)+-2]
   767  0015E0  0EFE               	movlw	-2
   768  0015E2  CFE3 FFE9          	movff	plusw1,fsr0l
   769  0015E6  0EFF               	movlw	-1
   770  0015E8  CFE3 FFEA          	movff	plusw1,fsr0h
   771  0015EC  CFDE FFEE          	movff	postinc2,postinc0
   772  0015F0  CFDD FFED          	movff	postdec2,postdec0
   773                           
   774                           ;semaphore.c: 14:   s->bloqued_size = 0;
   775                           ;stkvar	_s @ sp[(0)+-2]
   776  0015F4  0EFE               	movlw	-2
   777  0015F6  CFE3 F051          	movff	plusw1,btemp+10
   778  0015FA  0EFF               	movlw	-1
   779  0015FC  CFE3 F052          	movff	plusw1,btemp+11
   780  001600  0E0C               	movlw	12
   781  001602  2451               	addwf	btemp+10,w,c
   782  001604  6ED9               	movwf	fsr2l,c
   783  001606  0E00               	movlw	0
   784  001608  2052               	addwfc	btemp+11,w,c
   785  00160A  6EDA               	movwf	fsr2h,c
   786  00160C  0E00               	movlw	0
   787  00160E  6EDE               	movwf	postinc2,c
   788  001610  0E00               	movlw	0
   789  001612  6EDD               	movwf	postdec2,c
   790                           
   791                           ;semaphore.c: 15:   s->task_to_ready = 0;
   792                           ;stkvar	_s @ sp[(0)+-2]
   793  001614  0EFE               	movlw	-2
   794  001616  CFE3 F051          	movff	plusw1,btemp+10
   795  00161A  0EFF               	movlw	-1
   796  00161C  CFE3 F052          	movff	plusw1,btemp+11
   797  001620  0E0E               	movlw	14
   798  001622  2451               	addwf	btemp+10,w,c
   799  001624  6ED9               	movwf	fsr2l,c
   800  001626  0E00               	movlw	0
   801  001628  2052               	addwfc	btemp+11,w,c
   802  00162A  6EDA               	movwf	fsr2h,c
   803  00162C  0E00               	movlw	0
   804  00162E  6EDE               	movwf	postinc2,c
   805  001630  0E00               	movlw	0
   806  001632  6EDD               	movwf	postdec2,c
   807                           
   808                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   809  001634  8EF2               	bsf	4082,7,c	;volatile
   810                           
   811                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   812  001636  52E5               	movf	postdec1,f,c
   813  001638  52E5               	movf	postdec1,f,c
   814  00163A  52E5               	movf	postdec1,f,c
   815  00163C  52E5               	movf	postdec1,f,c
   816  00163E  0012               	return		;funcret
   817  001640                     __end_of_sem_init:
   818                           	opt callstack 0
   819                           
   820 ;; *************** function _lunos_init *****************
   821 ;; Defined at:
   822 ;;		line 51 in file "kernel.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1  [STACK] void 
   829 ;; Registers used:
   830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   836 ;;      Params:         0       0       0       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0       0       0
   839 ;;      Totals:         0       0       0       0       0       0       0
   840 ;;Total ram usage:        0 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:   11
   843 ;; This function calls:
   844 ;;		_SRAMInitHeap
   845 ;;		_lunos_createTask
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a reentrant model
   849 ;;
   850                           
   851                           	psect	text4
   852  0017D8                     __ptext4:
   853                           	opt callstack 0
   854  0017D8                     _lunos_init:
   855                           	opt callstack 19
   856                           
   857                           ;kernel.c: 52:   SRAMInitHeap();
   858                           
   859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   860                           ;incstack = 0
   861  0017D8  EC5A  F008         	call	_SRAMInitHeap	;wreg free
   862                           
   863                           ;kernel.c: 53:   ready_queue.task_running = 0;
   864  0017DC  0E00               	movlw	0
   865  0017DE  CFE8 F356          	movff	wreg,_ready_queue+662
   866  0017E2  0E00               	movlw	0
   867  0017E4  CFE8 F357          	movff	wreg,_ready_queue+663
   868                           
   869                           ;kernel.c: 54:   ready_queue.tasks_installed = 0;
   870  0017E8  0E00               	movlw	0
   871  0017EA  CFE8 F354          	movff	wreg,_ready_queue+660
   872  0017EE  0E00               	movlw	0
   873  0017F0  CFE8 F355          	movff	wreg,_ready_queue+661
   874                           
   875                           ;kernel.c: 55:   lunos_createTask(0, &task_idle);
   876  0017F4  0E32               	movlw	low _task_idle
   877  0017F6  6EE6               	movwf	postinc1,c
   878  0017F8  0E18               	movlw	high _task_idle
   879  0017FA  6EE6               	movwf	postinc1,c
   880  0017FC  0E00               	movlw	0
   881  0017FE  6EE6               	movwf	postinc1,c
   882  001800  0E00               	movlw	0
   883  001802  6EE6               	movwf	postinc1,c
   884  001804  ECDA  F005         	call	_lunos_createTask	;wreg free
   885                           
   886                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
   887  001808  0012               	return		;funcret
   888  00180A                     __end_of_lunos_init:
   889                           	opt callstack 0
   890                           
   891 ;; *************** function _lunos_createTask *****************
   892 ;; Defined at:
   893 ;;		line 14 in file "kernel.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  prior           2  [STACK] unsigned int 
   896 ;;  f               2  [STACK] PTR FTN()void 
   897 ;;		 -> count_out(1), cover_bottle(1), check_level(1), fill_bottle(1), 
   898 ;;		 -> count_bottles(1), task_idle(1), 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  new_task      110  [STACK] struct pcb
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1  [STACK] void 
   903 ;; Registers used:
   904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   910 ;;      Params:         0       0       0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0
   913 ;;      Totals:         0       0       0       0       0       0       0
   914 ;;Total ram usage:        0 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:   10
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_lunos_init
   921 ;;		_main
   922 ;; This function uses a reentrant model
   923 ;;
   924                           
   925                           	psect	text5
   926  000BB4                     __ptext5:
   927                           	opt callstack 0
   928  000BB4                     _lunos_createTask:
   929                           	opt callstack 0
   930                           
   931                           ; autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
   932  000BB4  0E6E               	movlw	110
   933  000BB6  26E1               	addwf	fsr1l,f,c
   934  000BB8  0E00               	movlw	0
   935  000BBA  22E2               	addwfc	fsr1h,f,c
   936                           
   937                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
   938                           
   939                           ;incstack = 0
   940  000BBC  EE23  F054         	lfsr	2,_ready_queue+660
   941  000BC0  CFDE F051          	movff	postinc2,btemp+10
   942  000BC4  CFDD F052          	movff	postdec2,btemp+11
   943  000BC8  0E01               	movlw	1
   944  000BCA  2651               	addwf	btemp+10,f,c
   945  000BCC  0E00               	movlw	0
   946  000BCE  2252               	addwfc	btemp+11,f,c
   947                           
   948                           ;stkvar	_new_task @ sp[(-110)+0]
   949  000BD0  0E92               	movlw	-110
   950  000BD2  C051  FFE3         	movff	btemp+10,plusw1
   951  000BD6  0E93               	movlw	-109
   952  000BD8  C052  FFE3         	movff	btemp+11,plusw1
   953                           
   954                           ;kernel.c: 19:   new_task.task_prior = prior;
   955                           ;stkvar	_prior @ sp[(-110)+-2]
   956  000BDC  50E1               	movf	fsr1l,w,c
   957  000BDE  0F90               	addlw	-112
   958  000BE0  6ED9               	movwf	fsr2l,c
   959  000BE2  50E2               	movf	fsr1h,w,c
   960  000BE4  6EDA               	movwf	fsr2h,c
   961  000BE6  0EFF               	movlw	255
   962  000BE8  22DA               	addwfc	fsr2h,f,c
   963                           
   964                           ;stkvar	_new_task @ sp[(-110)+0]
   965  000BEA  0E94               	movlw	148
   966  000BEC  24E1               	addwf	fsr1l,w,c
   967  000BEE  6EE9               	movwf	fsr0l,c
   968  000BF0  0EFF               	movlw	255
   969  000BF2  20E2               	addwfc	fsr1h,w,c
   970  000BF4  6EEA               	movwf	fsr0h,c
   971  000BF6  CFDE FFEE          	movff	postinc2,postinc0
   972  000BFA  CFDD FFED          	movff	postdec2,postdec0
   973                           
   974                           ;kernel.c: 20:   new_task.task_state = READY;
   975                           ;stkvar	_new_task @ sp[(-110)+0]
   976  000BFE  0E9A               	movlw	154
   977  000C00  24E1               	addwf	fsr1l,w,c
   978  000C02  6ED9               	movwf	fsr2l,c
   979  000C04  0EFF               	movlw	255
   980  000C06  20E2               	addwfc	fsr1h,w,c
   981  000C08  6EDA               	movwf	fsr2h,c
   982  000C0A  0E00               	movlw	0
   983  000C0C  6EDF               	movwf	indf2,c
   984                           
   985                           ;kernel.c: 21:   new_task.task_f = f;
   986                           ;stkvar	_f @ sp[(-110)+-4]
   987  000C0E  50E1               	movf	fsr1l,w,c
   988  000C10  0F8E               	addlw	-114
   989  000C12  6ED9               	movwf	fsr2l,c
   990  000C14  50E2               	movf	fsr1h,w,c
   991  000C16  6EDA               	movwf	fsr2h,c
   992  000C18  0EFF               	movlw	255
   993  000C1A  22DA               	addwfc	fsr2h,f,c
   994                           
   995                           ;stkvar	_new_task @ sp[(-110)+0]
   996  000C1C  0EFC               	movlw	252
   997  000C1E  24E1               	addwf	fsr1l,w,c
   998  000C20  6EE9               	movwf	fsr0l,c
   999  000C22  0EFF               	movlw	255
  1000  000C24  20E2               	addwfc	fsr1h,w,c
  1001  000C26  6EEA               	movwf	fsr0h,c
  1002  000C28  CFDE FFEE          	movff	postinc2,postinc0
  1003  000C2C  CFDD FFED          	movff	postdec2,postdec0
  1004                           
  1005                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
  1006                           ;stkvar	_new_task @ sp[(-110)+0]
  1007  000C30  0EF8               	movlw	248
  1008  000C32  24E1               	addwf	fsr1l,w,c
  1009  000C34  6ED9               	movwf	fsr2l,c
  1010  000C36  0EFF               	movlw	255
  1011  000C38  20E2               	addwfc	fsr1h,w,c
  1012  000C3A  6EDA               	movwf	fsr2h,c
  1013  000C3C  0E00               	movlw	0
  1014  000C3E  6EDE               	movwf	postinc2,c
  1015  000C40  0E00               	movlw	0
  1016  000C42  6EDD               	movwf	postdec2,c
  1017                           
  1018                           ;kernel.c: 23:   new_task.task_delay_time = 0;
  1019                           ;stkvar	_new_task @ sp[(-110)+0]
  1020  000C44  0EFE               	movlw	254
  1021  000C46  24E1               	addwf	fsr1l,w,c
  1022  000C48  6ED9               	movwf	fsr2l,c
  1023  000C4A  0EFF               	movlw	255
  1024  000C4C  20E2               	addwfc	fsr1h,w,c
  1025  000C4E  6EDA               	movwf	fsr2h,c
  1026  000C50  0E00               	movlw	0
  1027  000C52  6EDE               	movwf	postinc2,c
  1028  000C54  0E00               	movlw	0
  1029  000C56  6EDD               	movwf	postdec2,c
  1030                           
  1031                           ;kernel.c: 24:   new_task.task_installed = 0;
  1032                           ;stkvar	_new_task @ sp[(-110)+0]
  1033  000C58  0EFA               	movlw	250
  1034  000C5A  24E1               	addwf	fsr1l,w,c
  1035  000C5C  6ED9               	movwf	fsr2l,c
  1036  000C5E  0EFF               	movlw	255
  1037  000C60  20E2               	addwfc	fsr1h,w,c
  1038  000C62  6EDA               	movwf	fsr2h,c
  1039  000C64  0E00               	movlw	0
  1040  000C66  6EDE               	movwf	postinc2,c
  1041  000C68  0E00               	movlw	0
  1042  000C6A  6EDD               	movwf	postdec2,c
  1043                           
  1044                           ;kernel.c: 27:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
  1045                           ;stkvar	_new_task @ sp[(-110)+0]
  1046  000C6C  0E92               	movlw	146
  1047  000C6E  24E1               	addwf	fsr1l,w,c
  1048  000C70  6ED9               	movwf	fsr2l,c
  1049  000C72  0EFF               	movlw	255
  1050  000C74  20E2               	addwfc	fsr1h,w,c
  1051  000C76  6EDA               	movwf	fsr2h,c
  1052  000C78  EE03  F054         	lfsr	0,_ready_queue+660
  1053  000C7C  CFEE F051          	movff	postinc0,btemp+10
  1054  000C80  CFED F052          	movff	postdec0,btemp+11
  1055  000C84  0E6E               	movlw	110
  1056  000C86  0251               	mulwf	btemp+10,c
  1057  000C88  CFF3 F04F          	movff	prodl,btemp+8
  1058  000C8C  CFF4 F050          	movff	prodh,btemp+9
  1059  000C90  0252               	mulwf	btemp+11,c
  1060  000C92  50F3               	movf	prodl,w,c
  1061  000C94  2650               	addwf	btemp+9,f,c
  1062  000C96  0EC0               	movlw	low _ready_queue
  1063  000C98  244F               	addwf	btemp+8,w,c
  1064  000C9A  6EE9               	movwf	fsr0l,c
  1065  000C9C  0E00               	movlw	high _ready_queue
  1066  000C9E  2050               	addwfc	btemp+9,w,c
  1067  000CA0  6EEA               	movwf	fsr0h,c
  1068  000CA2  0E6D               	movlw	109
  1069  000CA4                     u391:
  1070  000CA4  CFDB FFEB          	movff	plusw2,plusw0
  1071  000CA8  06E8               	decf	wreg,f,c
  1072  000CAA  E2FC               	bc	u391
  1073                           
  1074                           ;kernel.c: 28:   ready_queue.tasks_installed++;
  1075  000CAC  EE23  F054         	lfsr	2,_ready_queue+660
  1076  000CB0  2ADE               	incf	postinc2,f,c
  1077  000CB2  0E00               	movlw	0
  1078  000CB4  22DD               	addwfc	postdec2,f,c
  1079                           
  1080                           ; _lunos_createTask: autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
  1081  000CB6  0E8E               	movlw	142
  1082  000CB8  26E1               	addwf	fsr1l,f,c
  1083  000CBA  0EFF               	movlw	255
  1084  000CBC  22E2               	addwfc	fsr1h,f,c
  1085  000CBE  0012               	return		;funcret
  1086  000CC0                     __end_of_lunos_createTask:
  1087                           	opt callstack 0
  1088                           
  1089 ;; *************** function _SRAMInitHeap *****************
  1090 ;; Defined at:
  1091 ;;		line 313 in file "sralloc.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  count           2  [STACK] unsigned int 
  1096 ;;  pHeap           2  [STACK] PTR unsigned char 
  1097 ;;		 -> _uDynamicHeap(512), 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1  [STACK] void 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1107 ;;      Params:         0       0       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:   10
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_lunos_init
  1118 ;; This function uses a reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text6
  1122  0010B4                     __ptext6:
  1123                           	opt callstack 0
  1124  0010B4                     _SRAMInitHeap:
  1125                           	opt callstack 0
  1126                           
  1127                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1128  0010B4  52E6               	movf	postinc1,f,c
  1129  0010B6  52E6               	movf	postinc1,f,c
  1130  0010B8  52E6               	movf	postinc1,f,c
  1131  0010BA  52E6               	movf	postinc1,f,c
  1132                           
  1133                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
  1134                           ;stkvar	_pHeap @ sp[(-4)+2]
  1135                           
  1136                           ;incstack = 0
  1137  0010BC  0E03               	movlw	high __uDynamicHeap
  1138  0010BE  6E47               	movwf	btemp,c
  1139  0010C0  0EFF               	movlw	-1
  1140  0010C2  C047  FFE3         	movff	btemp,plusw1
  1141  0010C6  0E58               	movlw	low __uDynamicHeap
  1142  0010C8  6E47               	movwf	btemp,c
  1143  0010CA  0EFE               	movlw	-2
  1144  0010CC  C047  FFE3         	movff	btemp,plusw1
  1145                           
  1146                           ;sralloc.c: 319:  count = 0x200 -1;
  1147  0010D0  0EFF               	movlw	255
  1148  0010D2  6E51               	movwf	btemp+10,c
  1149  0010D4  0E01               	movlw	1
  1150  0010D6  6E52               	movwf	btemp+11,c
  1151                           
  1152                           ;stkvar	_count @ sp[(-4)+0]
  1153  0010D8  0EFC               	movlw	-4
  1154  0010DA  C051  FFE3         	movff	btemp+10,plusw1
  1155  0010DE  0EFD               	movlw	-3
  1156  0010E0  C052  FFE3         	movff	btemp+11,plusw1
  1157  0010E4                     l1571:
  1158                           
  1159                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
  1160                           ;stkvar	_count @ sp[(-4)+0]
  1161  0010E4  0EFD               	movlw	-3
  1162  0010E6  50E3               	movf	plusw1,w,c
  1163  0010E8  E107               	bnz	u400
  1164  0010EA  0EFC               	movlw	-4
  1165  0010EC  CFE3 F047          	movff	plusw1,btemp
  1166  0010F0  0E80               	movlw	128
  1167  0010F2  5E47               	subwf	btemp,f,c
  1168  0010F4  A0D8               	btfss	status,0,c
  1169  0010F6  D023               	goto	l1579
  1170  0010F8                     u400:
  1171                           
  1172                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
  1173                           ;stkvar	_pHeap @ sp[(-4)+2]
  1174  0010F8  0EFE               	movlw	-2
  1175  0010FA  CFE3 FFD9          	movff	plusw1,fsr2l
  1176  0010FE  0EFF               	movlw	-1
  1177  001100  CFE3 FFDA          	movff	plusw1,fsr2h
  1178  001104  0E7F               	movlw	127
  1179  001106  6EDF               	movwf	indf2,c
  1180                           
  1181                           ;sralloc.c: 326:    pHeap += 0x7F;
  1182                           ;stkvar	_pHeap @ sp[(-4)+2]
  1183  001108  0EFE               	movlw	-2
  1184  00110A  50E3               	movf	plusw1,w,c
  1185  00110C  0F7F               	addlw	127
  1186  00110E  6E47               	movwf	btemp,c
  1187  001110  0EFE               	movlw	-2
  1188  001112  C047  FFE3         	movff	btemp,plusw1
  1189  001116  6A47               	clrf	btemp,c
  1190  001118  0EFF               	movlw	-1
  1191  00111A  50E3               	movf	plusw1,w,c
  1192  00111C  2047               	addwfc	btemp,w,c
  1193  00111E  6E47               	movwf	btemp,c
  1194  001120  0EFF               	movlw	-1
  1195  001122  C047  FFE3         	movff	btemp,plusw1
  1196                           
  1197                           ;sralloc.c: 327:    count = count - 0x7F;
  1198                           ;stkvar	_count @ sp[(-4)+0]
  1199  001126  50E1               	movf	fsr1l,w,c
  1200  001128  0FFC               	addlw	-4
  1201  00112A  6ED9               	movwf	fsr2l,c
  1202  00112C  50E2               	movf	fsr1h,w,c
  1203  00112E  6EDA               	movwf	fsr2h,c
  1204  001130  0EFF               	movlw	255
  1205  001132  22DA               	addwfc	fsr2h,f,c
  1206  001134  0E81               	movlw	129
  1207  001136  26DE               	addwf	postinc2,f,c
  1208  001138  0EFF               	movlw	255
  1209  00113A  22DD               	addwfc	postdec2,f,c
  1210                           
  1211                           ;sralloc.c: 328:   }
  1212  00113C  D7D3               	goto	l1571
  1213  00113E                     l1579:
  1214                           
  1215                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1216                           ;stkvar	_count @ sp[(-4)+0]
  1217                           ;stkvar	_pHeap @ sp[(-4)+2]
  1218  00113E  0EFE               	movlw	-2
  1219  001140  CFE3 FFD9          	movff	plusw1,fsr2l
  1220  001144  0EFF               	movlw	-1
  1221  001146  CFE3 FFDA          	movff	plusw1,fsr2h
  1222  00114A  0EFC               	movlw	-4
  1223  00114C  CFE3 FFDF          	movff	plusw1,indf2
  1224                           
  1225                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1226                           ;stkvar	_count @ sp[(-4)+0]
  1227  001150  0EFC               	movlw	-4
  1228  001152  CFE3 F051          	movff	plusw1,btemp+10
  1229  001156  0EFD               	movlw	-3
  1230  001158  CFE3 F052          	movff	plusw1,btemp+11
  1231                           
  1232                           ;stkvar	_pHeap @ sp[(-4)+2]
  1233  00115C  0EFE               	movlw	-2
  1234  00115E  CFE3 F04F          	movff	plusw1,btemp+8
  1235  001162  0EFF               	movlw	-1
  1236  001164  CFE3 F050          	movff	plusw1,btemp+9
  1237  001168  5051               	movf	btemp+10,w,c
  1238  00116A  244F               	addwf	btemp+8,w,c
  1239  00116C  6ED9               	movwf	fsr2l,c
  1240  00116E  5052               	movf	btemp+11,w,c
  1241  001170  2050               	addwfc	btemp+9,w,c
  1242  001172  6EDA               	movwf	fsr2h,c
  1243  001174  0E00               	movlw	0
  1244  001176  6EDF               	movwf	indf2,c
  1245                           
  1246                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1247  001178  52E5               	movf	postdec1,f,c
  1248  00117A  52E5               	movf	postdec1,f,c
  1249  00117C  52E5               	movf	postdec1,f,c
  1250  00117E  52E5               	movf	postdec1,f,c
  1251  001180  0012               	return		;funcret
  1252  001182                     __end_of_SRAMInitHeap:
  1253                           	opt callstack 0
  1254                           
  1255 ;; *************** function _dispatcher *****************
  1256 ;; Defined at:
  1257 ;;		line 66 in file "kernel.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  state           1  [STACK] enum E4
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1  [STACK] void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1271 ;;      Params:         0       0       0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:   13
  1278 ;; This function calls:
  1279 ;;		_scheduler
  1280 ;; This function is called by:
  1281 ;;		_lunos_delayTask
  1282 ;;		_main
  1283 ;;		_sem_wait
  1284 ;; This function uses a reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text7
  1288  0004DC                     __ptext7:
  1289                           	opt callstack 0
  1290  0004DC                     _dispatcher:
  1291                           	opt callstack 11
  1292                           
  1293                           ;kernel.c: 67:   INTCONbits.GIE = 0;
  1294                           
  1295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1296                           ;incstack = 0
  1297  0004DC  9EF2               	bcf	4082,7,c	;volatile
  1298                           
  1299                           ;kernel.c: 69:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size;};
  1300  0004DE  C356  F009         	movff	_ready_queue+662,_who
  1301  0004E2  C357  F00A         	movff	_ready_queue+663,_who+1
  1302                           
  1303                           ;stkvar	_state @ sp[(0)+-1]
  1304  0004E6  C009  F051         	movff	_who,btemp+10
  1305  0004EA  C00A  F052         	movff	_who+1,btemp+11
  1306  0004EE  0E6E               	movlw	110
  1307  0004F0  0251               	mulwf	btemp+10,c
  1308  0004F2  CFF3 F04F          	movff	prodl,btemp+8
  1309  0004F6  CFF4 F050          	movff	prodh,btemp+9
  1310  0004FA  0252               	mulwf	btemp+11,c
  1311  0004FC  50F3               	movf	prodl,w,c
  1312  0004FE  2650               	addwf	btemp+9,f,c
  1313  000500  0EC8               	movlw	low (_ready_queue+8)
  1314  000502  244F               	addwf	btemp+8,w,c
  1315  000504  6ED9               	movwf	fsr2l,c
  1316  000506  0E00               	movlw	high (_ready_queue+8)
  1317  000508  2050               	addwfc	btemp+9,w,c
  1318  00050A  6EDA               	movwf	fsr2h,c
  1319  00050C  0EFF               	movlw	-1
  1320  00050E  CFE3 FFDF          	movff	plusw1,indf2
  1321  000512  C009  F051         	movff	_who,btemp+10
  1322  000516  C00A  F052         	movff	_who+1,btemp+11
  1323  00051A  0E6E               	movlw	110
  1324  00051C  0251               	mulwf	btemp+10,c
  1325  00051E  CFF3 F04F          	movff	prodl,btemp+8
  1326  000522  CFF4 F050          	movff	prodh,btemp+9
  1327  000526  0252               	mulwf	btemp+11,c
  1328  000528  50F3               	movf	prodl,w,c
  1329  00052A  2650               	addwf	btemp+9,f,c
  1330  00052C  0EC5               	movlw	low (_ready_queue+5)
  1331  00052E  244F               	addwf	btemp+8,w,c
  1332  000530  6ED9               	movwf	fsr2l,c
  1333  000532  0E00               	movlw	high (_ready_queue+5)
  1334  000534  2050               	addwfc	btemp+9,w,c
  1335  000536  6EDA               	movwf	fsr2h,c
  1336  000538  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1337  00053C  C009  F051         	movff	_who,btemp+10
  1338  000540  C00A  F052         	movff	_who+1,btemp+11
  1339  000544  0E6E               	movlw	110
  1340  000546  0251               	mulwf	btemp+10,c
  1341  000548  CFF3 F04F          	movff	prodl,btemp+8
  1342  00054C  CFF4 F050          	movff	prodh,btemp+9
  1343  000550  0252               	mulwf	btemp+11,c
  1344  000552  50F3               	movf	prodl,w,c
  1345  000554  2650               	addwf	btemp+9,f,c
  1346  000556  0EC6               	movlw	low (_ready_queue+6)
  1347  000558  244F               	addwf	btemp+8,w,c
  1348  00055A  6ED9               	movwf	fsr2l,c
  1349  00055C  0E00               	movlw	high (_ready_queue+6)
  1350  00055E  2050               	addwfc	btemp+9,w,c
  1351  000560  6EDA               	movwf	fsr2h,c
  1352  000562  CFD8 FFDF          	movff	status,indf2	;volatile
  1353  000566  C009  F051         	movff	_who,btemp+10
  1354  00056A  C00A  F052         	movff	_who+1,btemp+11
  1355  00056E  0E6E               	movlw	110
  1356  000570  0251               	mulwf	btemp+10,c
  1357  000572  CFF3 F04F          	movff	prodl,btemp+8
  1358  000576  CFF4 F050          	movff	prodh,btemp+9
  1359  00057A  0252               	mulwf	btemp+11,c
  1360  00057C  50F3               	movf	prodl,w,c
  1361  00057E  2650               	addwf	btemp+9,f,c
  1362  000580  0EC7               	movlw	low (_ready_queue+7)
  1363  000582  244F               	addwf	btemp+8,w,c
  1364  000584  6ED9               	movwf	fsr2l,c
  1365  000586  0E00               	movlw	high (_ready_queue+7)
  1366  000588  2050               	addwfc	btemp+9,w,c
  1367  00058A  6EDA               	movwf	fsr2h,c
  1368  00058C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1369  000590  6A07               	clrf	_size,c
  1370  000592  6A08               	clrf	_size+1,c
  1371  000594  D08D               	goto	l1517
  1372  000596                     l1513:
  1373  000596  C007  F051         	movff	_size,btemp+10
  1374  00059A  C008  F052         	movff	_size+1,btemp+11
  1375  00059E  0E03               	movlw	3
  1376  0005A0  0251               	mulwf	btemp+10,c
  1377  0005A2  CFF3 F04F          	movff	prodl,btemp+8
  1378  0005A6  CFF4 F050          	movff	prodh,btemp+9
  1379  0005AA  0252               	mulwf	btemp+11,c
  1380  0005AC  50F3               	movf	prodl,w,c
  1381  0005AE  2650               	addwf	btemp+9,f,c
  1382  0005B0  C009  F051         	movff	_who,btemp+10
  1383  0005B4  C00A  F052         	movff	_who+1,btemp+11
  1384  0005B8  0E6E               	movlw	110
  1385  0005BA  0251               	mulwf	btemp+10,c
  1386  0005BC  CFF3 F04D          	movff	prodl,btemp+6
  1387  0005C0  CFF4 F04E          	movff	prodh,btemp+7
  1388  0005C4  0252               	mulwf	btemp+11,c
  1389  0005C6  50F3               	movf	prodl,w,c
  1390  0005C8  264E               	addwf	btemp+7,f,c
  1391  0005CA  0EC0               	movlw	low _ready_queue
  1392  0005CC  6E51               	movwf	btemp+10,c
  1393  0005CE  0E00               	movlw	high _ready_queue
  1394  0005D0  6E52               	movwf	btemp+11,c
  1395  0005D2  0E09               	movlw	9
  1396  0005D4  2651               	addwf	btemp+10,f,c
  1397  0005D6  0E00               	movlw	0
  1398  0005D8  2252               	addwfc	btemp+11,f,c
  1399  0005DA  504D               	movf	btemp+6,w,c
  1400  0005DC  2651               	addwf	btemp+10,f,c
  1401  0005DE  504E               	movf	btemp+7,w,c
  1402  0005E0  2252               	addwfc	btemp+11,f,c
  1403  0005E2  504F               	movf	btemp+8,w,c
  1404  0005E4  2451               	addwf	btemp+10,w,c
  1405  0005E6  6ED9               	movwf	fsr2l,c
  1406  0005E8  5050               	movf	btemp+9,w,c
  1407  0005EA  2052               	addwfc	btemp+11,w,c
  1408  0005EC  6EDA               	movwf	fsr2h,c
  1409  0005EE  CFFF FFDF          	movff	tosu,indf2	;volatile
  1410  0005F2  C007  F051         	movff	_size,btemp+10
  1411  0005F6  C008  F052         	movff	_size+1,btemp+11
  1412  0005FA  0E03               	movlw	3
  1413  0005FC  0251               	mulwf	btemp+10,c
  1414  0005FE  CFF3 F04F          	movff	prodl,btemp+8
  1415  000602  CFF4 F050          	movff	prodh,btemp+9
  1416  000606  0252               	mulwf	btemp+11,c
  1417  000608  50F3               	movf	prodl,w,c
  1418  00060A  2650               	addwf	btemp+9,f,c
  1419  00060C  C009  F051         	movff	_who,btemp+10
  1420  000610  C00A  F052         	movff	_who+1,btemp+11
  1421  000614  0E6E               	movlw	110
  1422  000616  0251               	mulwf	btemp+10,c
  1423  000618  CFF3 F04D          	movff	prodl,btemp+6
  1424  00061C  CFF4 F04E          	movff	prodh,btemp+7
  1425  000620  0252               	mulwf	btemp+11,c
  1426  000622  50F3               	movf	prodl,w,c
  1427  000624  264E               	addwf	btemp+7,f,c
  1428  000626  0EC0               	movlw	low _ready_queue
  1429  000628  6E51               	movwf	btemp+10,c
  1430  00062A  0E00               	movlw	high _ready_queue
  1431  00062C  6E52               	movwf	btemp+11,c
  1432  00062E  0E0B               	movlw	11
  1433  000630  2651               	addwf	btemp+10,f,c
  1434  000632  0E00               	movlw	0
  1435  000634  2252               	addwfc	btemp+11,f,c
  1436  000636  504D               	movf	btemp+6,w,c
  1437  000638  2651               	addwf	btemp+10,f,c
  1438  00063A  504E               	movf	btemp+7,w,c
  1439  00063C  2252               	addwfc	btemp+11,f,c
  1440  00063E  504F               	movf	btemp+8,w,c
  1441  000640  2451               	addwf	btemp+10,w,c
  1442  000642  6ED9               	movwf	fsr2l,c
  1443  000644  5050               	movf	btemp+9,w,c
  1444  000646  2052               	addwfc	btemp+11,w,c
  1445  000648  6EDA               	movwf	fsr2h,c
  1446  00064A  CFFE FFDF          	movff	tosh,indf2	;volatile
  1447  00064E  C007  F051         	movff	_size,btemp+10
  1448  000652  C008  F052         	movff	_size+1,btemp+11
  1449  000656  0E03               	movlw	3
  1450  000658  0251               	mulwf	btemp+10,c
  1451  00065A  CFF3 F04F          	movff	prodl,btemp+8
  1452  00065E  CFF4 F050          	movff	prodh,btemp+9
  1453  000662  0252               	mulwf	btemp+11,c
  1454  000664  50F3               	movf	prodl,w,c
  1455  000666  2650               	addwf	btemp+9,f,c
  1456  000668  C009  F051         	movff	_who,btemp+10
  1457  00066C  C00A  F052         	movff	_who+1,btemp+11
  1458  000670  0E6E               	movlw	110
  1459  000672  0251               	mulwf	btemp+10,c
  1460  000674  CFF3 F04D          	movff	prodl,btemp+6
  1461  000678  CFF4 F04E          	movff	prodh,btemp+7
  1462  00067C  0252               	mulwf	btemp+11,c
  1463  00067E  50F3               	movf	prodl,w,c
  1464  000680  264E               	addwf	btemp+7,f,c
  1465  000682  0EC0               	movlw	low _ready_queue
  1466  000684  6E51               	movwf	btemp+10,c
  1467  000686  0E00               	movlw	high _ready_queue
  1468  000688  6E52               	movwf	btemp+11,c
  1469  00068A  0E0A               	movlw	10
  1470  00068C  2651               	addwf	btemp+10,f,c
  1471  00068E  0E00               	movlw	0
  1472  000690  2252               	addwfc	btemp+11,f,c
  1473  000692  504D               	movf	btemp+6,w,c
  1474  000694  2651               	addwf	btemp+10,f,c
  1475  000696  504E               	movf	btemp+7,w,c
  1476  000698  2252               	addwfc	btemp+11,f,c
  1477  00069A  504F               	movf	btemp+8,w,c
  1478  00069C  2451               	addwf	btemp+10,w,c
  1479  00069E  6ED9               	movwf	fsr2l,c
  1480  0006A0  5050               	movf	btemp+9,w,c
  1481  0006A2  2052               	addwfc	btemp+11,w,c
  1482  0006A4  6EDA               	movwf	fsr2h,c
  1483  0006A6  CFFD FFDF          	movff	tosl,indf2	;volatile
  1484  0006AA  4A07               	infsnz	_size,f,c
  1485  0006AC  2A08               	incf	_size+1,f,c
  1486  0006AE  0006               	pop		;# 
  1487  0006B0                     l1517:
  1488  0006B0  50FC               	movf	stkptr,w,c	;volatile
  1489  0006B2  A4D8               	btfss	status,2,c
  1490  0006B4  D770               	goto	l1513
  1491  0006B6  C009  F051         	movff	_who,btemp+10
  1492  0006BA  C00A  F052         	movff	_who+1,btemp+11
  1493  0006BE  0E6E               	movlw	110
  1494  0006C0  0251               	mulwf	btemp+10,c
  1495  0006C2  CFF3 F04F          	movff	prodl,btemp+8
  1496  0006C6  CFF4 F050          	movff	prodh,btemp+9
  1497  0006CA  0252               	mulwf	btemp+11,c
  1498  0006CC  50F3               	movf	prodl,w,c
  1499  0006CE  2650               	addwf	btemp+9,f,c
  1500  0006D0  0E26               	movlw	low (_ready_queue+102)
  1501  0006D2  244F               	addwf	btemp+8,w,c
  1502  0006D4  6ED9               	movwf	fsr2l,c
  1503  0006D6  0E01               	movlw	high (_ready_queue+102)
  1504  0006D8  2050               	addwfc	btemp+9,w,c
  1505  0006DA  6EDA               	movwf	fsr2h,c
  1506  0006DC  C007  FFDE         	movff	_size,postinc2
  1507  0006E0  C008  FFDD         	movff	_size+1,postdec2
  1508                           
  1509                           ;kernel.c: 71:   ready_queue.task_running = scheduler();
  1510  0006E4  EC16  F00C         	call	_scheduler	;wreg free
  1511  0006E8  C047  F356         	movff	btemp,_ready_queue+662
  1512  0006EC  C048  F357         	movff	btemp+1,_ready_queue+663
  1513                           
  1514                           ;kernel.c: 73:   { STKPTR = 0; who = ready_queue.task_running; if (ready_queue.tasks[who
      +                          ].task_installed == 0) { ready_queue.tasks[who].task_installed = 1; __asm("PUSH"); TOS =
      +                           ready_queue.tasks[who].task_f; } else { ready_queue.tasks[who].task_state = RUNNING; WR
      +                          EG = ready_queue.tasks[who].W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = rea
      +                          dy_queue.tasks[who].BSR_reg; size = ready_queue.tasks[who].task_stack.stack_level; while
      +                          (size){ __asm("PUSH"); TOSL = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSL_reg
      +                          ; TOSH = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSH_reg; TOSU = ready_queue.
      +                          tasks[who].task_stack.h_stack[size-1].TOSU_reg; size--; } }};
  1515  0006F0  6AFC               	clrf	stkptr,c	;volatile
  1516  0006F2  C356  F009         	movff	_ready_queue+662,_who
  1517  0006F6  C357  F00A         	movff	_ready_queue+663,_who+1
  1518  0006FA  C009  F051         	movff	_who,btemp+10
  1519  0006FE  C00A  F052         	movff	_who+1,btemp+11
  1520  000702  0E6E               	movlw	110
  1521  000704  0251               	mulwf	btemp+10,c
  1522  000706  CFF3 F04F          	movff	prodl,btemp+8
  1523  00070A  CFF4 F050          	movff	prodh,btemp+9
  1524  00070E  0252               	mulwf	btemp+11,c
  1525  000710  50F3               	movf	prodl,w,c
  1526  000712  2650               	addwf	btemp+9,f,c
  1527  000714  0E28               	movlw	low (_ready_queue+104)
  1528  000716  244F               	addwf	btemp+8,w,c
  1529  000718  6ED9               	movwf	fsr2l,c
  1530  00071A  0E01               	movlw	high (_ready_queue+104)
  1531  00071C  2050               	addwfc	btemp+9,w,c
  1532  00071E  6EDA               	movwf	fsr2h,c
  1533  000720  50DE               	movf	postinc2,w,c
  1534  000722  10DE               	iorwf	postinc2,w,c
  1535  000724  A4D8               	btfss	status,2,c
  1536  000726  D035               	goto	l1531
  1537  000728  C009  F051         	movff	_who,btemp+10
  1538  00072C  C00A  F052         	movff	_who+1,btemp+11
  1539  000730  0E6E               	movlw	110
  1540  000732  0251               	mulwf	btemp+10,c
  1541  000734  CFF3 F04F          	movff	prodl,btemp+8
  1542  000738  CFF4 F050          	movff	prodh,btemp+9
  1543  00073C  0252               	mulwf	btemp+11,c
  1544  00073E  50F3               	movf	prodl,w,c
  1545  000740  2650               	addwf	btemp+9,f,c
  1546  000742  0E28               	movlw	low (_ready_queue+104)
  1547  000744  244F               	addwf	btemp+8,w,c
  1548  000746  6ED9               	movwf	fsr2l,c
  1549  000748  0E01               	movlw	high (_ready_queue+104)
  1550  00074A  2050               	addwfc	btemp+9,w,c
  1551  00074C  6EDA               	movwf	fsr2h,c
  1552  00074E  0E01               	movlw	1
  1553  000750  6EDE               	movwf	postinc2,c
  1554  000752  0E00               	movlw	0
  1555  000754  6EDD               	movwf	postdec2,c
  1556  000756  0005               	push		;# 
  1557  000758  C009  F051         	movff	_who,btemp+10
  1558  00075C  C00A  F052         	movff	_who+1,btemp+11
  1559  000760  0E6E               	movlw	110
  1560  000762  0251               	mulwf	btemp+10,c
  1561  000764  CFF3 F04F          	movff	prodl,btemp+8
  1562  000768  CFF4 F050          	movff	prodh,btemp+9
  1563  00076C  0252               	mulwf	btemp+11,c
  1564  00076E  50F3               	movf	prodl,w,c
  1565  000770  2650               	addwf	btemp+9,f,c
  1566  000772  0E2A               	movlw	low (_ready_queue+106)
  1567  000774  244F               	addwf	btemp+8,w,c
  1568  000776  6ED9               	movwf	fsr2l,c
  1569  000778  0E01               	movlw	high (_ready_queue+106)
  1570  00077A  2050               	addwfc	btemp+9,w,c
  1571  00077C  6EDA               	movwf	fsr2h,c
  1572  00077E  CFDE F051          	movff	postinc2,btemp+10
  1573  000782  CFDD F052          	movff	postdec2,btemp+11
  1574  000786  C051  FFFD         	movff	btemp+10,tosl	;volatile
  1575  00078A  C052  FFFE         	movff	btemp+11,tosh	;volatile
  1576  00078E  6AFF               	clrf	tosu,c	;volatile
  1577  000790  D0FF               	goto	u380
  1578  000792                     l1531:
  1579  000792  C009  F051         	movff	_who,btemp+10
  1580  000796  C00A  F052         	movff	_who+1,btemp+11
  1581  00079A  0E6E               	movlw	110
  1582  00079C  0251               	mulwf	btemp+10,c
  1583  00079E  CFF3 F04F          	movff	prodl,btemp+8
  1584  0007A2  CFF4 F050          	movff	prodh,btemp+9
  1585  0007A6  0252               	mulwf	btemp+11,c
  1586  0007A8  50F3               	movf	prodl,w,c
  1587  0007AA  2650               	addwf	btemp+9,f,c
  1588  0007AC  0EC8               	movlw	low (_ready_queue+8)
  1589  0007AE  244F               	addwf	btemp+8,w,c
  1590  0007B0  6ED9               	movwf	fsr2l,c
  1591  0007B2  0E00               	movlw	high (_ready_queue+8)
  1592  0007B4  2050               	addwfc	btemp+9,w,c
  1593  0007B6  6EDA               	movwf	fsr2h,c
  1594  0007B8  0E01               	movlw	1
  1595  0007BA  6EDF               	movwf	indf2,c
  1596  0007BC  C009  F051         	movff	_who,btemp+10
  1597  0007C0  C00A  F052         	movff	_who+1,btemp+11
  1598  0007C4  0E6E               	movlw	110
  1599  0007C6  0251               	mulwf	btemp+10,c
  1600  0007C8  CFF3 F04F          	movff	prodl,btemp+8
  1601  0007CC  CFF4 F050          	movff	prodh,btemp+9
  1602  0007D0  0252               	mulwf	btemp+11,c
  1603  0007D2  50F3               	movf	prodl,w,c
  1604  0007D4  2650               	addwf	btemp+9,f,c
  1605  0007D6  0EC5               	movlw	low (_ready_queue+5)
  1606  0007D8  244F               	addwf	btemp+8,w,c
  1607  0007DA  6ED9               	movwf	fsr2l,c
  1608  0007DC  0E00               	movlw	high (_ready_queue+5)
  1609  0007DE  2050               	addwfc	btemp+9,w,c
  1610  0007E0  6EDA               	movwf	fsr2h,c
  1611  0007E2  50DF               	movf	indf2,w,c
  1612  0007E4  6E52               	movwf	btemp+11,c
  1613  0007E6  5052               	movf	btemp+11,w,c
  1614  0007E8  C009  F051         	movff	_who,btemp+10
  1615  0007EC  C00A  F052         	movff	_who+1,btemp+11
  1616  0007F0  0E6E               	movlw	110
  1617  0007F2  0251               	mulwf	btemp+10,c
  1618  0007F4  CFF3 F04F          	movff	prodl,btemp+8
  1619  0007F8  CFF4 F050          	movff	prodh,btemp+9
  1620  0007FC  0252               	mulwf	btemp+11,c
  1621  0007FE  50F3               	movf	prodl,w,c
  1622  000800  2650               	addwf	btemp+9,f,c
  1623  000802  0EC6               	movlw	low (_ready_queue+6)
  1624  000804  244F               	addwf	btemp+8,w,c
  1625  000806  6ED9               	movwf	fsr2l,c
  1626  000808  0E00               	movlw	high (_ready_queue+6)
  1627  00080A  2050               	addwfc	btemp+9,w,c
  1628  00080C  6EDA               	movwf	fsr2h,c
  1629  00080E  50DF               	movf	indf2,w,c
  1630  000810  6ED8               	movwf	status,c	;volatile
  1631  000812  C009  F051         	movff	_who,btemp+10
  1632  000816  C00A  F052         	movff	_who+1,btemp+11
  1633  00081A  0E6E               	movlw	110
  1634  00081C  0251               	mulwf	btemp+10,c
  1635  00081E  CFF3 F04F          	movff	prodl,btemp+8
  1636  000822  CFF4 F050          	movff	prodh,btemp+9
  1637  000826  0252               	mulwf	btemp+11,c
  1638  000828  50F3               	movf	prodl,w,c
  1639  00082A  2650               	addwf	btemp+9,f,c
  1640  00082C  0EC7               	movlw	low (_ready_queue+7)
  1641  00082E  244F               	addwf	btemp+8,w,c
  1642  000830  6ED9               	movwf	fsr2l,c
  1643  000832  0E00               	movlw	high (_ready_queue+7)
  1644  000834  2050               	addwfc	btemp+9,w,c
  1645  000836  6EDA               	movwf	fsr2h,c
  1646  000838  50DF               	movf	indf2,w,c
  1647  00083A  6EE0               	movwf	bsr,c	;volatile
  1648  00083C  C009  F051         	movff	_who,btemp+10
  1649  000840  C00A  F052         	movff	_who+1,btemp+11
  1650  000844  0E6E               	movlw	110
  1651  000846  0251               	mulwf	btemp+10,c
  1652  000848  CFF3 F04F          	movff	prodl,btemp+8
  1653  00084C  CFF4 F050          	movff	prodh,btemp+9
  1654  000850  0252               	mulwf	btemp+11,c
  1655  000852  50F3               	movf	prodl,w,c
  1656  000854  2650               	addwf	btemp+9,f,c
  1657  000856  0E26               	movlw	low (_ready_queue+102)
  1658  000858  244F               	addwf	btemp+8,w,c
  1659  00085A  6ED9               	movwf	fsr2l,c
  1660  00085C  0E01               	movlw	high (_ready_queue+102)
  1661  00085E  2050               	addwfc	btemp+9,w,c
  1662  000860  6EDA               	movwf	fsr2h,c
  1663  000862  CFDE F007          	movff	postinc2,_size
  1664  000866  CFDD F008          	movff	postdec2,_size+1
  1665  00086A  D08E               	goto	l1537
  1666  00086C                     l127:
  1667  00086C  0005               	push		;# 
  1668  00086E  C007  F051         	movff	_size,btemp+10
  1669  000872  C008  F052         	movff	_size+1,btemp+11
  1670  000876  0E03               	movlw	3
  1671  000878  0251               	mulwf	btemp+10,c
  1672  00087A  CFF3 F04F          	movff	prodl,btemp+8
  1673  00087E  CFF4 F050          	movff	prodh,btemp+9
  1674  000882  0252               	mulwf	btemp+11,c
  1675  000884  50F3               	movf	prodl,w,c
  1676  000886  2650               	addwf	btemp+9,f,c
  1677  000888  C009  F051         	movff	_who,btemp+10
  1678  00088C  C00A  F052         	movff	_who+1,btemp+11
  1679  000890  0E6E               	movlw	110
  1680  000892  0251               	mulwf	btemp+10,c
  1681  000894  CFF3 F04D          	movff	prodl,btemp+6
  1682  000898  CFF4 F04E          	movff	prodh,btemp+7
  1683  00089C  0252               	mulwf	btemp+11,c
  1684  00089E  50F3               	movf	prodl,w,c
  1685  0008A0  264E               	addwf	btemp+7,f,c
  1686  0008A2  0EC0               	movlw	low _ready_queue
  1687  0008A4  6E51               	movwf	btemp+10,c
  1688  0008A6  0E00               	movlw	high _ready_queue
  1689  0008A8  6E52               	movwf	btemp+11,c
  1690  0008AA  0E07               	movlw	7
  1691  0008AC  2651               	addwf	btemp+10,f,c
  1692  0008AE  0E00               	movlw	0
  1693  0008B0  2252               	addwfc	btemp+11,f,c
  1694  0008B2  504D               	movf	btemp+6,w,c
  1695  0008B4  2651               	addwf	btemp+10,f,c
  1696  0008B6  504E               	movf	btemp+7,w,c
  1697  0008B8  2252               	addwfc	btemp+11,f,c
  1698  0008BA  504F               	movf	btemp+8,w,c
  1699  0008BC  2451               	addwf	btemp+10,w,c
  1700  0008BE  6ED9               	movwf	fsr2l,c
  1701  0008C0  5050               	movf	btemp+9,w,c
  1702  0008C2  2052               	addwfc	btemp+11,w,c
  1703  0008C4  6EDA               	movwf	fsr2h,c
  1704  0008C6  50DF               	movf	indf2,w,c
  1705  0008C8  6EFD               	movwf	tosl,c	;volatile
  1706  0008CA  C007  F051         	movff	_size,btemp+10
  1707  0008CE  C008  F052         	movff	_size+1,btemp+11
  1708  0008D2  0E03               	movlw	3
  1709  0008D4  0251               	mulwf	btemp+10,c
  1710  0008D6  CFF3 F04F          	movff	prodl,btemp+8
  1711  0008DA  CFF4 F050          	movff	prodh,btemp+9
  1712  0008DE  0252               	mulwf	btemp+11,c
  1713  0008E0  50F3               	movf	prodl,w,c
  1714  0008E2  2650               	addwf	btemp+9,f,c
  1715  0008E4  C009  F051         	movff	_who,btemp+10
  1716  0008E8  C00A  F052         	movff	_who+1,btemp+11
  1717  0008EC  0E6E               	movlw	110
  1718  0008EE  0251               	mulwf	btemp+10,c
  1719  0008F0  CFF3 F04D          	movff	prodl,btemp+6
  1720  0008F4  CFF4 F04E          	movff	prodh,btemp+7
  1721  0008F8  0252               	mulwf	btemp+11,c
  1722  0008FA  50F3               	movf	prodl,w,c
  1723  0008FC  264E               	addwf	btemp+7,f,c
  1724  0008FE  0EC0               	movlw	low _ready_queue
  1725  000900  6E51               	movwf	btemp+10,c
  1726  000902  0E00               	movlw	high _ready_queue
  1727  000904  6E52               	movwf	btemp+11,c
  1728  000906  0E08               	movlw	8
  1729  000908  2651               	addwf	btemp+10,f,c
  1730  00090A  0E00               	movlw	0
  1731  00090C  2252               	addwfc	btemp+11,f,c
  1732  00090E  504D               	movf	btemp+6,w,c
  1733  000910  2651               	addwf	btemp+10,f,c
  1734  000912  504E               	movf	btemp+7,w,c
  1735  000914  2252               	addwfc	btemp+11,f,c
  1736  000916  504F               	movf	btemp+8,w,c
  1737  000918  2451               	addwf	btemp+10,w,c
  1738  00091A  6ED9               	movwf	fsr2l,c
  1739  00091C  5050               	movf	btemp+9,w,c
  1740  00091E  2052               	addwfc	btemp+11,w,c
  1741  000920  6EDA               	movwf	fsr2h,c
  1742  000922  50DF               	movf	indf2,w,c
  1743  000924  6EFE               	movwf	tosh,c	;volatile
  1744  000926  C007  F051         	movff	_size,btemp+10
  1745  00092A  C008  F052         	movff	_size+1,btemp+11
  1746  00092E  0E03               	movlw	3
  1747  000930  0251               	mulwf	btemp+10,c
  1748  000932  CFF3 F04F          	movff	prodl,btemp+8
  1749  000936  CFF4 F050          	movff	prodh,btemp+9
  1750  00093A  0252               	mulwf	btemp+11,c
  1751  00093C  50F3               	movf	prodl,w,c
  1752  00093E  2650               	addwf	btemp+9,f,c
  1753  000940  C009  F051         	movff	_who,btemp+10
  1754  000944  C00A  F052         	movff	_who+1,btemp+11
  1755  000948  0E6E               	movlw	110
  1756  00094A  0251               	mulwf	btemp+10,c
  1757  00094C  CFF3 F04D          	movff	prodl,btemp+6
  1758  000950  CFF4 F04E          	movff	prodh,btemp+7
  1759  000954  0252               	mulwf	btemp+11,c
  1760  000956  50F3               	movf	prodl,w,c
  1761  000958  264E               	addwf	btemp+7,f,c
  1762  00095A  0EC0               	movlw	low _ready_queue
  1763  00095C  6E51               	movwf	btemp+10,c
  1764  00095E  0E00               	movlw	high _ready_queue
  1765  000960  6E52               	movwf	btemp+11,c
  1766  000962  0E06               	movlw	6
  1767  000964  2651               	addwf	btemp+10,f,c
  1768  000966  0E00               	movlw	0
  1769  000968  2252               	addwfc	btemp+11,f,c
  1770  00096A  504D               	movf	btemp+6,w,c
  1771  00096C  2651               	addwf	btemp+10,f,c
  1772  00096E  504E               	movf	btemp+7,w,c
  1773  000970  2252               	addwfc	btemp+11,f,c
  1774  000972  504F               	movf	btemp+8,w,c
  1775  000974  2451               	addwf	btemp+10,w,c
  1776  000976  6ED9               	movwf	fsr2l,c
  1777  000978  5050               	movf	btemp+9,w,c
  1778  00097A  2052               	addwfc	btemp+11,w,c
  1779  00097C  6EDA               	movwf	fsr2h,c
  1780  00097E  50DF               	movf	indf2,w,c
  1781  000980  6EFF               	movwf	tosu,c	;volatile
  1782  000982  0607               	decf	_size,f,c
  1783  000984  A0D8               	btfss	status,0,c
  1784  000986  0608               	decf	_size+1,f,c
  1785  000988                     l1537:
  1786  000988  5007               	movf	_size,w,c
  1787  00098A  1008               	iorwf	_size+1,w,c
  1788  00098C  A4D8               	btfss	status,2,c
  1789  00098E  D76E               	goto	l127
  1790  000990                     u380:
  1791                           
  1792                           ;kernel.c: 75:   INTCONbits.GIE = 1;
  1793  000990  8EF2               	bsf	4082,7,c	;volatile
  1794                           
  1795                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  1796  000992  52E5               	movf	postdec1,f,c
  1797  000994  0012               	return		;funcret
  1798  000996                     __end_of_dispatcher:
  1799                           	opt callstack 0
  1800                           
  1801 ;; *************** function _scheduler *****************
  1802 ;; Defined at:
  1803 ;;		line 58 in file "kernel.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  2  [STACK] unsigned int 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1817 ;;      Params:         0       0       0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0
  1820 ;;      Totals:         0       0       0       0       0       0       0
  1821 ;;Total ram usage:        0 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:   12
  1824 ;; This function calls:
  1825 ;;		_round_robin
  1826 ;; This function is called by:
  1827 ;;		_dispatcher
  1828 ;; This function uses a reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text8
  1832  00182C                     __ptext8:
  1833                           	opt callstack 0
  1834  00182C                     _scheduler:
  1835                           	opt callstack 11
  1836                           
  1837                           ;kernel.c: 60:   return round_robin();
  1838                           
  1839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1840                           ;incstack = 0
  1841  00182C  EC1E  F00A         	call	_round_robin	;wreg free
  1842                           
  1843                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  1844  001830  0012               	return		;funcret
  1845  001832                     __end_of_scheduler:
  1846                           	opt callstack 0
  1847                           
  1848 ;; *************** function _round_robin *****************
  1849 ;; Defined at:
  1850 ;;		line 78 in file "kernel.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  next_task_to    2  [STACK] int 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  2  [STACK] unsigned int 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1864 ;;      Params:         0       0       0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0
  1867 ;;      Totals:         0       0       0       0       0       0       0
  1868 ;;Total ram usage:        0 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:   11
  1871 ;; This function calls:
  1872 ;;		___lwmod
  1873 ;; This function is called by:
  1874 ;;		_ISR_timer0
  1875 ;;		_scheduler
  1876 ;; This function uses a reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text9
  1880  00143C                     __ptext9:
  1881                           	opt callstack 0
  1882  00143C                     _round_robin:
  1883                           	opt callstack 0
  1884                           
  1885                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1886  00143C  52E6               	movf	postinc1,f,c
  1887  00143E  52E6               	movf	postinc1,f,c
  1888                           
  1889                           ;kernel.c: 79:   int next_task_to_run = ready_queue.task_running;
  1890                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1891                           
  1892                           ;incstack = 0
  1893  001440  0EFE               	movlw	-2
  1894  001442  C356  FFE3         	movff	_ready_queue+662,plusw1
  1895  001446  0EFF               	movlw	-1
  1896  001448  C357  FFE3         	movff	_ready_queue+663,plusw1
  1897  00144C                     l1659:
  1898                           
  1899                           ;kernel.c: 82:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  1900  00144C  EE23  F054         	lfsr	2,_ready_queue+660
  1901  001450  CFDE F051          	movff	postinc2,btemp+10
  1902  001454  CFDD F052          	movff	postdec2,btemp+11
  1903  001458  C051  FFE6         	movff	btemp+10,postinc1
  1904  00145C  C052  FFE6         	movff	btemp+11,postinc1
  1905                           
  1906                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  1907  001460  0EFC               	movlw	-4
  1908  001462  50E3               	movf	plusw1,w,c
  1909  001464  0F01               	addlw	1
  1910  001466  6E51               	movwf	btemp+10,c
  1911  001468  0EFD               	movlw	-3
  1912  00146A  CFE3 F052          	movff	plusw1,btemp+11
  1913  00146E  0E00               	movlw	0
  1914  001470  2252               	addwfc	btemp+11,f,c
  1915  001472  C051  FFE6         	movff	btemp+10,postinc1
  1916  001476  C052  FFE6         	movff	btemp+11,postinc1
  1917  00147A  EC25  F009         	call	___lwmod	;wreg free
  1918                           
  1919                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1920  00147E  0EFE               	movlw	-2
  1921  001480  C047  FFE3         	movff	btemp,plusw1
  1922  001484  0EFF               	movlw	-1
  1923  001486  C048  FFE3         	movff	btemp+1,plusw1
  1924                           
  1925                           ;kernel.c: 83:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  1926                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1927  00148A  0EFE               	movlw	-2
  1928  00148C  CFE3 F051          	movff	plusw1,btemp+10
  1929  001490  0EFF               	movlw	-1
  1930  001492  CFE3 F052          	movff	plusw1,btemp+11
  1931  001496  0E6E               	movlw	110
  1932  001498  0251               	mulwf	btemp+10,c
  1933  00149A  CFF3 F04F          	movff	prodl,btemp+8
  1934  00149E  CFF4 F050          	movff	prodh,btemp+9
  1935  0014A2  0252               	mulwf	btemp+11,c
  1936  0014A4  50F3               	movf	prodl,w,c
  1937  0014A6  2650               	addwf	btemp+9,f,c
  1938  0014A8  0EC8               	movlw	low (_ready_queue+8)
  1939  0014AA  244F               	addwf	btemp+8,w,c
  1940  0014AC  6ED9               	movwf	fsr2l,c
  1941  0014AE  0E00               	movlw	high (_ready_queue+8)
  1942  0014B0  2050               	addwfc	btemp+9,w,c
  1943  0014B2  6EDA               	movwf	fsr2h,c
  1944  0014B4  50DF               	movf	indf2,w,c
  1945  0014B6  A4D8               	btfss	status,2,c
  1946  0014B8  D7C9               	goto	l1659
  1947                           
  1948                           ;kernel.c: 85:   return next_task_to_run;
  1949                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1950  0014BA  0EFE               	movlw	-2
  1951  0014BC  CFE3 F047          	movff	plusw1,btemp
  1952  0014C0  0EFF               	movlw	-1
  1953  0014C2  CFE3 F048          	movff	plusw1,btemp+1
  1954                           
  1955                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  1956  0014C6  52E5               	movf	postdec1,f,c
  1957  0014C8  52E5               	movf	postdec1,f,c
  1958  0014CA  0012               	return		;funcret
  1959  0014CC                     __end_of_round_robin:
  1960                           	opt callstack 0
  1961                           
  1962 ;; *************** function ___lwmod *****************
  1963 ;; Defined at:
  1964 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  dividend        2  [STACK] unsigned int 
  1967 ;;  divisor         2  [STACK] unsigned int 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  counter         1  [STACK] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  2  [STACK] unsigned int 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1979 ;;      Params:         0       0       0       0       0       0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0
  1982 ;;      Totals:         0       0       0       0       0       0       0
  1983 ;;Total ram usage:        0 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:   10
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_round_robin
  1990 ;;		_sem_wait
  1991 ;;		_sem_post
  1992 ;; This function uses a reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text10
  1996  00124A                     __ptext10:
  1997                           	opt callstack 0
  1998  00124A                     ___lwmod:
  1999                           	opt callstack 0
  2000                           
  2001                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2002  00124A  52E6               	movf	postinc1,f,c
  2003                           
  2004                           ;stkvar	_divisor @ sp[(-1)+-4]
  2005                           
  2006                           ;incstack = 0
  2007  00124C  0EFB               	movlw	-5
  2008  00124E  CFE3 F047          	movff	plusw1,btemp
  2009  001252  0EFC               	movlw	-4
  2010  001254  50E3               	movf	plusw1,w,c
  2011  001256  1047               	iorwf	btemp,w,c
  2012  001258  B4D8               	btfsc	status,2,c
  2013  00125A  D04A               	goto	u460
  2014                           
  2015                           ;stkvar	_counter @ sp[(-1)+0]
  2016  00125C  0EFF               	movlw	-1
  2017  00125E  6AE3               	clrf	plusw1,c
  2018  001260  D010               	goto	L1
  2019  001262                     l1625:
  2020                           
  2021                           ;stkvar	_divisor @ sp[(-1)+-4]
  2022  001262  0EFB               	movlw	-5
  2023  001264  50E3               	movf	plusw1,w,c
  2024  001266  90D8               	bcf	status,0,c
  2025  001268  34E8               	rlcf	wreg,w,c
  2026  00126A  6E47               	movwf	btemp,c
  2027  00126C  0EFB               	movlw	-5
  2028  00126E  C047  FFE3         	movff	btemp,plusw1
  2029  001272  0EFC               	movlw	-4
  2030  001274  50E3               	movf	plusw1,w,c
  2031  001276  34E8               	rlcf	wreg,w,c
  2032  001278  6E47               	movwf	btemp,c
  2033  00127A  0EFC               	movlw	-4
  2034  00127C  C047  FFE3         	movff	btemp,plusw1
  2035                           
  2036                           ;stkvar	_counter @ sp[(-1)+0]
  2037  001280  0EFF               	movlw	-1
  2038  001282                     L1:
  2039  001282  2AE3               	incf	plusw1,f,c
  2040                           
  2041                           ;stkvar	_divisor @ sp[(-1)+-4]
  2042  001284  0EFC               	movlw	-4
  2043  001286  AEE3               	btfss	plusw1,7,c
  2044  001288  D7EC               	goto	l1625
  2045  00128A                     u440:
  2046                           
  2047                           ;stkvar	_divisor @ sp[(-1)+-4]
  2048  00128A  0EFB               	movlw	-5
  2049  00128C  CFE3 F051          	movff	plusw1,btemp+10
  2050  001290  0EFC               	movlw	-4
  2051  001292  CFE3 F052          	movff	plusw1,btemp+11
  2052                           
  2053                           ;stkvar	_dividend @ sp[(-1)+-2]
  2054  001296  0EFD               	movlw	-3
  2055  001298  CFE3 F04F          	movff	plusw1,btemp+8
  2056  00129C  0EFE               	movlw	-2
  2057  00129E  CFE3 F050          	movff	plusw1,btemp+9
  2058  0012A2  5051               	movf	btemp+10,w,c
  2059  0012A4  5C4F               	subwf	btemp+8,w,c
  2060  0012A6  5052               	movf	btemp+11,w,c
  2061  0012A8  5850               	subwfb	btemp+9,w,c
  2062  0012AA  A0D8               	btfss	status,0,c
  2063  0012AC  D012               	goto	l1635
  2064                           
  2065                           ;stkvar	_divisor @ sp[(-1)+-4]
  2066                           ;stkvar	_dividend @ sp[(-1)+-2]
  2067  0012AE  0EFD               	movlw	-3
  2068  0012B0  50E3               	movf	plusw1,w,c
  2069  0012B2  6E47               	movwf	btemp,c
  2070  0012B4  0EFB               	movlw	-5
  2071  0012B6  50E3               	movf	plusw1,w,c
  2072  0012B8  5E47               	subwf	btemp,f,c
  2073  0012BA  0EFD               	movlw	-3
  2074  0012BC  C047  FFE3         	movff	btemp,plusw1
  2075  0012C0  0EFE               	movlw	-2
  2076  0012C2  50E3               	movf	plusw1,w,c
  2077  0012C4  6E47               	movwf	btemp,c
  2078  0012C6  0EFC               	movlw	-4
  2079  0012C8  50E3               	movf	plusw1,w,c
  2080  0012CA  5A47               	subwfb	btemp,f,c
  2081  0012CC  0EFE               	movlw	-2
  2082  0012CE  C047  FFE3         	movff	btemp,plusw1
  2083  0012D2                     l1635:
  2084                           
  2085                           ;stkvar	_divisor @ sp[(-1)+-4]
  2086  0012D2  90D8               	bcf	status,0,c
  2087  0012D4  0EFC               	movlw	-4
  2088  0012D6  32E3               	rrcf	plusw1,f,c
  2089  0012D8  0EFB               	movlw	-5
  2090  0012DA  32E3               	rrcf	plusw1,f,c
  2091                           
  2092                           ;stkvar	_counter @ sp[(-1)+0]
  2093  0012DC  0EFF               	movlw	-1
  2094  0012DE  50E3               	movf	plusw1,w,c
  2095  0012E0  6E47               	movwf	btemp,c
  2096  0012E2  0E01               	movlw	1
  2097  0012E4  5E47               	subwf	btemp,f,c
  2098  0012E6  0EFF               	movlw	-1
  2099  0012E8  C047  FFE3         	movff	btemp,plusw1
  2100  0012EC  A4D8               	btfss	status,2,c
  2101  0012EE  D7CD               	goto	u440
  2102  0012F0                     u460:
  2103                           
  2104                           ;stkvar	_dividend @ sp[(-1)+-2]
  2105  0012F0  0EFD               	movlw	-3
  2106  0012F2  CFE3 F047          	movff	plusw1,btemp
  2107  0012F6  0EFE               	movlw	-2
  2108  0012F8  CFE3 F048          	movff	plusw1,btemp+1
  2109                           
  2110                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2111  0012FC  0EFB               	movlw	251
  2112  0012FE  26E1               	addwf	fsr1l,f,c
  2113  001300  0EFF               	movlw	255
  2114  001302  22E2               	addwfc	fsr1h,f,c
  2115  001304  0012               	return		;funcret
  2116  001306                     __end_of___lwmod:
  2117                           	opt callstack 0
  2118                           
  2119 ;; *************** function _config_timer0 *****************
  2120 ;; Defined at:
  2121 ;;		line 23 in file "int0_test.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1  [STACK] void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2135 ;;      Params:         0       0       0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0
  2138 ;;      Totals:         0       0       0       0       0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:   10
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text11
  2150  00180A                     __ptext11:
  2151                           	opt callstack 0
  2152  00180A                     _config_timer0:
  2153                           	opt callstack 20
  2154                           
  2155                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  2156                           
  2157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2158                           ;incstack = 0
  2159  00180A  9AD5               	bcf	4053,5,c	;volatile
  2160                           
  2161                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  2162  00180C  96D5               	bcf	4053,3,c	;volatile
  2163                           
  2164                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  2165  00180E  0E07               	movlw	7
  2166  001810  12D5               	iorwf	4053,f,c	;volatile
  2167                           
  2168                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  2169  001812  8CF2               	bsf	4082,6,c	;volatile
  2170                           
  2171                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  2172  001814  8AF2               	bsf	4082,5,c	;volatile
  2173                           
  2174                           ;int0_test.c: 33:   TMR0L = 252;
  2175  001816  0EFC               	movlw	252
  2176  001818  6ED6               	movwf	4054,c	;volatile
  2177                           
  2178                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2179  00181A  0012               	return		;funcret
  2180  00181C                     __end_of_config_timer0:
  2181                           	opt callstack 0
  2182                           
  2183 ;; *************** function _config_INT0 *****************
  2184 ;; Defined at:
  2185 ;;		line 13 in file "int0_test.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1  [STACK] void 
  2192 ;; Registers used:
  2193 ;;		None
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2199 ;;      Params:         0       0       0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0
  2202 ;;      Totals:         0       0       0       0       0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:   10
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_main
  2210 ;; This function uses a reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text12
  2214  00181C                     __ptext12:
  2215                           	opt callstack 0
  2216  00181C                     _config_INT0:
  2217                           	opt callstack 20
  2218                           
  2219                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2220                           
  2221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2222                           ;incstack = 0
  2223  00181C  9095               	bcf	3989,0,c	;volatile
  2224                           
  2225                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2226  00181E  8EF2               	bsf	4082,7,c	;volatile
  2227                           
  2228                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2229  001820  88F2               	bsf	4082,4,c	;volatile
  2230                           
  2231                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2232  001822  88F2               	bsf	4082,4,c	;volatile
  2233                           
  2234                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2235  001824  92F2               	bcf	4082,1,c	;volatile
  2236                           
  2237                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2238  001826  9EF1               	bcf	4081,7,c	;volatile
  2239                           
  2240                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2241  001828  9CF1               	bcf	4081,6,c	;volatile
  2242                           
  2243                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2244  00182A  0012               	return		;funcret
  2245  00182C                     __end_of_config_INT0:
  2246                           	opt callstack 0
  2247                           
  2248 ;; *************** function _task_idle *****************
  2249 ;; Defined at:
  2250 ;;		line 117 in file "kernel.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1  [STACK] void 
  2257 ;; Registers used:
  2258 ;;		None
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2264 ;;      Params:         0       0       0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    3
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_lunos_init
  2275 ;; This function uses a reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text13
  2279  001832                     __ptext13:
  2280                           	opt callstack 0
  2281  001832                     _task_idle:
  2282                           	opt callstack 23
  2283                           
  2284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2285                           ;incstack = 0
  2286                           ;kernel.c: 119:   while (1) __nop();
  2287  001832  F000               	nop	
  2288  001834  D7FE               	goto	_task_idle
  2289  001836                     __end_of_task_idle:
  2290                           	opt callstack 0
  2291                           
  2292 ;; *************** function _count_bottles *****************
  2293 ;; Defined at:
  2294 ;;		line 61 in file "tasks.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  bottle          1  [STACK] struct .
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1  [STACK] void 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2308 ;;      Params:         0       0       0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0       0       0
  2311 ;;      Totals:         0       0       0       0       0       0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    8
  2315 ;; This function calls:
  2316 ;;		_lunos_delayTask
  2317 ;;		_sem_post
  2318 ;;		_sem_wait
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text14
  2325  0014CC                     __ptext14:
  2326                           	opt callstack 0
  2327  0014CC                     _count_bottles:
  2328                           	opt callstack 0
  2329                           
  2330                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2331  0014CC  52E6               	movf	postinc1,f,c
  2332  0014CE                     l290:
  2333                           
  2334                           ;tasks.c: 63:         sem_wait(&count_sem);
  2335  0014CE  0E2B               	movlw	low _count_sem
  2336  0014D0  6EE6               	movwf	postinc1,c
  2337  0014D2  0E00               	movlw	high _count_sem
  2338  0014D4  6EE6               	movwf	postinc1,c
  2339  0014D6  ECEA  F007         	call	_sem_wait	;wreg free
  2340                           
  2341                           ;tasks.c: 64:         PORTDbits.RD4 = 0;
  2342  0014DA  9883               	bcf	3971,4,c	;volatile
  2343                           
  2344                           ;tasks.c: 65:         if (global_buffer.p_state != BUSY_) {
  2345  0014DC  0406               	decf	_global_buffer+5,w,c
  2346  0014DE  A4D8               	btfss	status,2,c
  2347  0014E0  D026               	goto	l1831
  2348  0014E2  D02D               	goto	u59_20
  2349  0014E4                     l294:
  2350  0014E4  BC82               	btfsc	3970,6,c	;volatile
  2351  0014E6  D7FE               	goto	l294
  2352                           
  2353                           ;tasks.c: 68:                 PORTCbits.RC7 = 0;
  2354  0014E8  9E82               	bcf	3970,7,c	;volatile
  2355                           
  2356                           ;tasks.c: 69:                 lunos_delayTask(300);
  2357  0014EA  0E2C               	movlw	44
  2358  0014EC  6EE6               	movwf	postinc1,c
  2359  0014EE  0E01               	movlw	1
  2360  0014F0  6EE6               	movwf	postinc1,c
  2361  0014F2  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  2362                           
  2363                           ;tasks.c: 70:                 t_bottle bottle;;tasks.c: 71:                 global_buffe
      +                          r.bottles[global_buffer.count] = bottle;
  2364                           ;stkvar	_bottle @ sp[(-1)+0]
  2365  0014F6  C001  F051         	movff	_global_buffer,btemp+10
  2366  0014FA  C002  F052         	movff	_global_buffer+1,btemp+11
  2367  0014FE  0E03               	movlw	low (_global_buffer+2)
  2368  001500  2451               	addwf	btemp+10,w,c
  2369  001502  6ED9               	movwf	fsr2l,c
  2370  001504  0E00               	movlw	high (_global_buffer+2)
  2371  001506  2052               	addwfc	btemp+11,w,c
  2372  001508  6EDA               	movwf	fsr2h,c
  2373  00150A  0EFF               	movlw	-1
  2374  00150C  CFE3 FFDF          	movff	plusw1,indf2
  2375                           
  2376                           ;tasks.c: 72:                 global_buffer.bottles[global_buffer.count].bottle_state = 
      +                          EMPTY;
  2377  001510  C001  F051         	movff	_global_buffer,btemp+10
  2378  001514  C002  F052         	movff	_global_buffer+1,btemp+11
  2379  001518  0E03               	movlw	low (_global_buffer+2)
  2380  00151A  2451               	addwf	btemp+10,w,c
  2381  00151C  6ED9               	movwf	fsr2l,c
  2382  00151E  0E00               	movlw	high (_global_buffer+2)
  2383  001520  2052               	addwfc	btemp+11,w,c
  2384  001522  6EDA               	movwf	fsr2h,c
  2385  001524  0E00               	movlw	0
  2386  001526  6EDF               	movwf	indf2,c
  2387                           
  2388                           ;tasks.c: 73:                 global_buffer.count += 1;
  2389  001528  4A01               	infsnz	_global_buffer,f,c
  2390  00152A  2A02               	incf	_global_buffer+1,f,c
  2391                           
  2392                           ;tasks.c: 74:                 PORTCbits.RC7 = 1;
  2393  00152C  8E82               	bsf	3970,7,c	;volatile
  2394  00152E                     l1831:
  2395                           
  2396                           ;tasks.c: 66:             while(global_buffer.count < 3){
  2397  00152E  BE02               	btfsc	_global_buffer+1,7,c
  2398  001530  D7D9               	goto	l294
  2399  001532  5002               	movf	_global_buffer+1,w,c
  2400  001534  E104               	bnz	u59_20
  2401  001536  0E03               	movlw	3
  2402  001538  5C01               	subwf	_global_buffer,w,c
  2403  00153A  A0D8               	btfss	status,0,c
  2404  00153C  D7D3               	goto	l294
  2405  00153E                     u59_20:
  2406                           
  2407                           ;tasks.c: 77:         global_buffer.p_state = BUSY_;
  2408  00153E  0E01               	movlw	1
  2409  001540  6E06               	movwf	_global_buffer+5,c
  2410                           
  2411                           ;tasks.c: 78:         sem_post(&fill_sem);
  2412  001542  0E1B               	movlw	low _fill_sem
  2413  001544  6EE6               	movwf	postinc1,c
  2414  001546  0E00               	movlw	high _fill_sem
  2415  001548  6EE6               	movwf	postinc1,c
  2416  00154A  EC69  F007         	call	_sem_post	;wreg free
  2417                           
  2418                           ;tasks.c: 79:         PORTDbits.RD4 = 1;
  2419  00154E  8883               	bsf	3971,4,c	;volatile
  2420  001550  D7BE               	goto	l290
  2421  001552                     __end_of_count_bottles:
  2422                           	opt callstack 0
  2423                           
  2424 ;; *************** function _sem_wait *****************
  2425 ;; Defined at:
  2426 ;;		line 20 in file "semaphore.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  s               2  [STACK] PTR struct semaphore
  2429 ;;		 -> r_pipe(16), w_pipe(16), out_sem(16), cover_sem(16), 
  2430 ;;		 -> check_sem(16), fill_sem(16), count_sem(16), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1  [STACK] void 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2442 ;;      Params:         0       0       0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0
  2445 ;;      Totals:         0       0       0       0       0       0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    7
  2449 ;; This function calls:
  2450 ;;		___lwmod
  2451 ;;		_dispatcher
  2452 ;; This function is called by:
  2453 ;;		_pipe_write
  2454 ;;		_pipe_read
  2455 ;;		_count_bottles
  2456 ;;		_fill_bottle
  2457 ;;		_check_level
  2458 ;;		_cover_bottle
  2459 ;;		_count_out
  2460 ;; This function uses a reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text15
  2464  000FD4                     __ptext15:
  2465                           	opt callstack 0
  2466  000FD4                     _sem_wait:
  2467                           	opt callstack 18
  2468                           
  2469                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  2470                           
  2471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2472                           ;incstack = 0
  2473  000FD4  9EF2               	bcf	4082,7,c	;volatile
  2474                           
  2475                           ;semaphore.c: 23:   s->contador -= 1;
  2476                           ;stkvar	_s @ sp[(0)+-2]
  2477  000FD6  0EFE               	movlw	-2
  2478  000FD8  CFE3 FFD9          	movff	plusw1,fsr2l
  2479  000FDC  0EFF               	movlw	-1
  2480  000FDE  CFE3 FFDA          	movff	plusw1,fsr2h
  2481  000FE2  06DE               	decf	postinc2,f,c
  2482  000FE4  0E00               	movlw	0
  2483  000FE6  5ADD               	subwfb	postdec2,f,c
  2484                           
  2485                           ;semaphore.c: 24:   if (s->contador < 0) {
  2486                           ;stkvar	_s @ sp[(0)+-2]
  2487  000FE8  0EFE               	movlw	-2
  2488  000FEA  CFE3 FFD9          	movff	plusw1,fsr2l
  2489  000FEE  0EFF               	movlw	-1
  2490  000FF0  CFE3 FFDA          	movff	plusw1,fsr2h
  2491  000FF4  0E01               	movlw	1
  2492  000FF6  AEDB               	btfss	plusw2,7,c
  2493  000FF8  D059               	goto	l1607
  2494                           
  2495                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  2496  000FFA  EE23  F056         	lfsr	2,_ready_queue+662
  2497                           
  2498                           ;stkvar	_s @ sp[(0)+-2]
  2499  000FFE  0EFE               	movlw	-2
  2500  001000  CFE3 F051          	movff	plusw1,btemp+10
  2501  001004  0EFF               	movlw	-1
  2502  001006  CFE3 F052          	movff	plusw1,btemp+11
  2503  00100A  0E0C               	movlw	12
  2504  00100C  2451               	addwf	btemp+10,w,c
  2505  00100E  6EE9               	movwf	fsr0l,c
  2506  001010  0E00               	movlw	0
  2507  001012  2052               	addwfc	btemp+11,w,c
  2508  001014  6EEA               	movwf	fsr0h,c
  2509  001016  CFEE F051          	movff	postinc0,btemp+10
  2510  00101A  CFED F052          	movff	postdec0,btemp+11
  2511  00101E  90D8               	bcf	status,0,c
  2512  001020  3451               	rlcf	btemp+10,w,c
  2513  001022  6E4F               	movwf	btemp+8,c
  2514  001024  3452               	rlcf	btemp+11,w,c
  2515  001026  6E50               	movwf	btemp+9,c
  2516                           
  2517                           ;stkvar	_s @ sp[(0)+-2]
  2518  001028  0EFE               	movlw	-2
  2519  00102A  50E3               	movf	plusw1,w,c
  2520  00102C  264F               	addwf	btemp+8,f,c
  2521  00102E  0EFF               	movlw	-1
  2522  001030  50E3               	movf	plusw1,w,c
  2523  001032  2250               	addwfc	btemp+9,f,c
  2524  001034  0E02               	movlw	2
  2525  001036  244F               	addwf	btemp+8,w,c
  2526  001038  6EE9               	movwf	fsr0l,c
  2527  00103A  0E00               	movlw	0
  2528  00103C  2050               	addwfc	btemp+9,w,c
  2529  00103E  6EEA               	movwf	fsr0h,c
  2530  001040  CFDE FFEE          	movff	postinc2,postinc0
  2531  001044  CFDD FFED          	movff	postdec2,postdec0
  2532                           
  2533                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 5;
  2534  001048  0E05               	movlw	5
  2535  00104A  6EE6               	movwf	postinc1,c
  2536  00104C  0E00               	movlw	0
  2537  00104E  6EE6               	movwf	postinc1,c
  2538                           
  2539                           ;stkvar	_s @ sp[(-2)+-2]
  2540  001050  0EFC               	movlw	-4
  2541  001052  CFE3 F051          	movff	plusw1,btemp+10
  2542  001056  0EFD               	movlw	-3
  2543  001058  CFE3 F052          	movff	plusw1,btemp+11
  2544  00105C  0E0C               	movlw	12
  2545  00105E  2451               	addwf	btemp+10,w,c
  2546  001060  6ED9               	movwf	fsr2l,c
  2547  001062  0E00               	movlw	0
  2548  001064  2052               	addwfc	btemp+11,w,c
  2549  001066  6EDA               	movwf	fsr2h,c
  2550  001068  CFDE F051          	movff	postinc2,btemp+10
  2551  00106C  CFDD F052          	movff	postdec2,btemp+11
  2552  001070  0E01               	movlw	1
  2553  001072  2651               	addwf	btemp+10,f,c
  2554  001074  0E00               	movlw	0
  2555  001076  2252               	addwfc	btemp+11,f,c
  2556  001078  C051  FFE6         	movff	btemp+10,postinc1
  2557  00107C  C052  FFE6         	movff	btemp+11,postinc1
  2558  001080  EC25  F009         	call	___lwmod	;wreg free
  2559                           
  2560                           ;stkvar	_s @ sp[(0)+-2]
  2561  001084  0EFE               	movlw	-2
  2562  001086  CFE3 F051          	movff	plusw1,btemp+10
  2563  00108A  0EFF               	movlw	-1
  2564  00108C  CFE3 F052          	movff	plusw1,btemp+11
  2565  001090  0E0C               	movlw	12
  2566  001092  2451               	addwf	btemp+10,w,c
  2567  001094  6ED9               	movwf	fsr2l,c
  2568  001096  0E00               	movlw	0
  2569  001098  2052               	addwfc	btemp+11,w,c
  2570  00109A  6EDA               	movwf	fsr2h,c
  2571  00109C  C047  FFDE         	movff	btemp,postinc2
  2572  0010A0  C048  FFDD         	movff	btemp+1,postdec2
  2573                           
  2574                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  2575  0010A4  0E05               	movlw	5
  2576  0010A6  6EE6               	movwf	postinc1,c
  2577  0010A8  EC6E  F002         	call	_dispatcher	;wreg free
  2578  0010AC                     l1607:
  2579                           
  2580                           ;semaphore.c: 30:   INTCONbits.GIE = 1;
  2581  0010AC  8EF2               	bsf	4082,7,c	;volatile
  2582                           
  2583                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2584  0010AE  52E5               	movf	postdec1,f,c
  2585  0010B0  52E5               	movf	postdec1,f,c
  2586  0010B2  0012               	return		;funcret
  2587  0010B4                     __end_of_sem_wait:
  2588                           	opt callstack 0
  2589                           
  2590 ;; *************** function _sem_post *****************
  2591 ;; Defined at:
  2592 ;;		line 33 in file "semaphore.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  s               2  [STACK] PTR struct semaphore
  2595 ;;		 -> r_pipe(16), w_pipe(16), out_sem(16), cover_sem(16), 
  2596 ;;		 -> check_sem(16), fill_sem(16), count_sem(16), 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1  [STACK] void 
  2601 ;; Registers used:
  2602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2608 ;;      Params:         0       0       0       0       0       0       0
  2609 ;;      Locals:         0       0       0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0       0       0
  2611 ;;      Totals:         0       0       0       0       0       0       0
  2612 ;;Total ram usage:        0 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    4
  2615 ;; This function calls:
  2616 ;;		___lwmod
  2617 ;; This function is called by:
  2618 ;;		_pipe_write
  2619 ;;		_pipe_read
  2620 ;;		_count_bottles
  2621 ;;		_fill_bottle
  2622 ;;		_check_level
  2623 ;;		_cover_bottle
  2624 ;;		_count_out
  2625 ;; This function uses a reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text16
  2629  000ED2                     __ptext16:
  2630                           	opt callstack 0
  2631  000ED2                     _sem_post:
  2632                           	opt callstack 21
  2633                           
  2634                           ;semaphore.c: 34:   INTCONbits.GIE = 0;
  2635                           
  2636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2637                           ;incstack = 0
  2638  000ED2  9EF2               	bcf	4082,7,c	;volatile
  2639                           
  2640                           ;semaphore.c: 36:   s->contador += 1;
  2641                           ;stkvar	_s @ sp[(0)+-2]
  2642  000ED4  0EFE               	movlw	-2
  2643  000ED6  CFE3 FFD9          	movff	plusw1,fsr2l
  2644  000EDA  0EFF               	movlw	-1
  2645  000EDC  CFE3 FFDA          	movff	plusw1,fsr2h
  2646  000EE0  2ADE               	incf	postinc2,f,c
  2647  000EE2  0E00               	movlw	0
  2648  000EE4  22DD               	addwfc	postdec2,f,c
  2649                           
  2650                           ;semaphore.c: 37:   if (s->contador <= 0) {
  2651                           ;stkvar	_s @ sp[(0)+-2]
  2652  000EE6  0EFE               	movlw	-2
  2653  000EE8  CFE3 FFD9          	movff	plusw1,fsr2l
  2654  000EEC  0EFF               	movlw	-1
  2655  000EEE  CFE3 FFDA          	movff	plusw1,fsr2h
  2656  000EF2  0E01               	movlw	1
  2657  000EF4  BEDB               	btfsc	plusw2,7,c
  2658  000EF6  D006               	goto	u42_20
  2659  000EF8  0E01               	movlw	1
  2660  000EFA  50DB               	movf	plusw2,w,c
  2661  000EFC  E167               	bnz	l1619
  2662  000EFE  04DE               	decf	postinc2,w,c
  2663  000F00  B0D8               	btfsc	status,0,c
  2664  000F02  D064               	goto	l1619
  2665  000F04                     u42_20:
  2666                           
  2667                           ;semaphore.c: 38:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  2668                           ;stkvar	_s @ sp[(0)+-2]
  2669  000F04  0EFE               	movlw	-2
  2670  000F06  CFE3 F051          	movff	plusw1,btemp+10
  2671  000F0A  0EFF               	movlw	-1
  2672  000F0C  CFE3 F052          	movff	plusw1,btemp+11
  2673  000F10  0E0E               	movlw	14
  2674  000F12  2451               	addwf	btemp+10,w,c
  2675  000F14  6ED9               	movwf	fsr2l,c
  2676  000F16  0E00               	movlw	0
  2677  000F18  2052               	addwfc	btemp+11,w,c
  2678  000F1A  6EDA               	movwf	fsr2h,c
  2679  000F1C  CFDE F051          	movff	postinc2,btemp+10
  2680  000F20  CFDD F052          	movff	postdec2,btemp+11
  2681  000F24  90D8               	bcf	status,0,c
  2682  000F26  3451               	rlcf	btemp+10,w,c
  2683  000F28  6E4F               	movwf	btemp+8,c
  2684  000F2A  3452               	rlcf	btemp+11,w,c
  2685  000F2C  6E50               	movwf	btemp+9,c
  2686                           
  2687                           ;stkvar	_s @ sp[(0)+-2]
  2688  000F2E  0EFE               	movlw	-2
  2689  000F30  50E3               	movf	plusw1,w,c
  2690  000F32  264F               	addwf	btemp+8,f,c
  2691  000F34  0EFF               	movlw	-1
  2692  000F36  50E3               	movf	plusw1,w,c
  2693  000F38  2250               	addwfc	btemp+9,f,c
  2694  000F3A  0E02               	movlw	2
  2695  000F3C  244F               	addwf	btemp+8,w,c
  2696  000F3E  6ED9               	movwf	fsr2l,c
  2697  000F40  0E00               	movlw	0
  2698  000F42  2050               	addwfc	btemp+9,w,c
  2699  000F44  6EDA               	movwf	fsr2h,c
  2700  000F46  CFDE F051          	movff	postinc2,btemp+10
  2701  000F4A  CFDD F052          	movff	postdec2,btemp+11
  2702  000F4E  0E6E               	movlw	110
  2703  000F50  0251               	mulwf	btemp+10,c
  2704  000F52  CFF3 F04F          	movff	prodl,btemp+8
  2705  000F56  CFF4 F050          	movff	prodh,btemp+9
  2706  000F5A  0252               	mulwf	btemp+11,c
  2707  000F5C  50F3               	movf	prodl,w,c
  2708  000F5E  2650               	addwf	btemp+9,f,c
  2709  000F60  0EC8               	movlw	low (_ready_queue+8)
  2710  000F62  244F               	addwf	btemp+8,w,c
  2711  000F64  6ED9               	movwf	fsr2l,c
  2712  000F66  0E00               	movlw	high (_ready_queue+8)
  2713  000F68  2050               	addwfc	btemp+9,w,c
  2714  000F6A  6EDA               	movwf	fsr2h,c
  2715  000F6C  0E00               	movlw	0
  2716  000F6E  6EDF               	movwf	indf2,c
  2717                           
  2718                           ;semaphore.c: 39:     s->task_to_ready = (s->task_to_ready + 1) % 5;
  2719  000F70  0E05               	movlw	5
  2720  000F72  6EE6               	movwf	postinc1,c
  2721  000F74  0E00               	movlw	0
  2722  000F76  6EE6               	movwf	postinc1,c
  2723                           
  2724                           ;stkvar	_s @ sp[(-2)+-2]
  2725  000F78  0EFC               	movlw	-4
  2726  000F7A  CFE3 F051          	movff	plusw1,btemp+10
  2727  000F7E  0EFD               	movlw	-3
  2728  000F80  CFE3 F052          	movff	plusw1,btemp+11
  2729  000F84  0E0E               	movlw	14
  2730  000F86  2451               	addwf	btemp+10,w,c
  2731  000F88  6ED9               	movwf	fsr2l,c
  2732  000F8A  0E00               	movlw	0
  2733  000F8C  2052               	addwfc	btemp+11,w,c
  2734  000F8E  6EDA               	movwf	fsr2h,c
  2735  000F90  CFDE F051          	movff	postinc2,btemp+10
  2736  000F94  CFDD F052          	movff	postdec2,btemp+11
  2737  000F98  0E01               	movlw	1
  2738  000F9A  2651               	addwf	btemp+10,f,c
  2739  000F9C  0E00               	movlw	0
  2740  000F9E  2252               	addwfc	btemp+11,f,c
  2741  000FA0  C051  FFE6         	movff	btemp+10,postinc1
  2742  000FA4  C052  FFE6         	movff	btemp+11,postinc1
  2743  000FA8  EC25  F009         	call	___lwmod	;wreg free
  2744                           
  2745                           ;stkvar	_s @ sp[(0)+-2]
  2746  000FAC  0EFE               	movlw	-2
  2747  000FAE  CFE3 F051          	movff	plusw1,btemp+10
  2748  000FB2  0EFF               	movlw	-1
  2749  000FB4  CFE3 F052          	movff	plusw1,btemp+11
  2750  000FB8  0E0E               	movlw	14
  2751  000FBA  2451               	addwf	btemp+10,w,c
  2752  000FBC  6ED9               	movwf	fsr2l,c
  2753  000FBE  0E00               	movlw	0
  2754  000FC0  2052               	addwfc	btemp+11,w,c
  2755  000FC2  6EDA               	movwf	fsr2h,c
  2756  000FC4  C047  FFDE         	movff	btemp,postinc2
  2757  000FC8  C048  FFDD         	movff	btemp+1,postdec2
  2758  000FCC                     l1619:
  2759                           
  2760                           ;semaphore.c: 43:   INTCONbits.GIE = 1;
  2761  000FCC  8EF2               	bsf	4082,7,c	;volatile
  2762                           
  2763                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2764  000FCE  52E5               	movf	postdec1,f,c
  2765  000FD0  52E5               	movf	postdec1,f,c
  2766  000FD2  0012               	return		;funcret
  2767  000FD4                     __end_of_sem_post:
  2768                           	opt callstack 0
  2769                           
  2770 ;; *************** function _lunos_delayTask *****************
  2771 ;; Defined at:
  2772 ;;		line 31 in file "kernel.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  time            2  [STACK] unsigned int 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1  [STACK] void 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2786 ;;      Params:         0       0       0       0       0       0       0
  2787 ;;      Locals:         0       0       0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0
  2789 ;;      Totals:         0       0       0       0       0       0       0
  2790 ;;Total ram usage:        0 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    7
  2793 ;; This function calls:
  2794 ;;		_dispatcher
  2795 ;; This function is called by:
  2796 ;;		_count_bottles
  2797 ;;		_fill_bottle
  2798 ;;		_check_level
  2799 ;;		_cover_bottle
  2800 ;;		_count_out
  2801 ;; This function uses a reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text17
  2805  00169C                     __ptext17:
  2806                           	opt callstack 0
  2807  00169C                     _lunos_delayTask:
  2808                           	opt callstack 18
  2809                           
  2810                           ;kernel.c: 32:   INTCONbits.GIE = 0;
  2811                           
  2812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2813                           ;incstack = 0
  2814  00169C  9EF2               	bcf	4082,7,c	;volatile
  2815                           
  2816                           ;kernel.c: 34:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  2817                           ;stkvar	_time @ sp[(0)+-2]
  2818  00169E  50E1               	movf	fsr1l,w,c
  2819  0016A0  0FFE               	addlw	-2
  2820  0016A2  6ED9               	movwf	fsr2l,c
  2821  0016A4  50E2               	movf	fsr1h,w,c
  2822  0016A6  6EDA               	movwf	fsr2h,c
  2823  0016A8  0EFF               	movlw	255
  2824  0016AA  22DA               	addwfc	fsr2h,f,c
  2825  0016AC  EE03  F056         	lfsr	0,_ready_queue+662
  2826  0016B0  CFEE F051          	movff	postinc0,btemp+10
  2827  0016B4  CFED F052          	movff	postdec0,btemp+11
  2828  0016B8  0E6E               	movlw	110
  2829  0016BA  0251               	mulwf	btemp+10,c
  2830  0016BC  CFF3 F04F          	movff	prodl,btemp+8
  2831  0016C0  CFF4 F050          	movff	prodh,btemp+9
  2832  0016C4  0252               	mulwf	btemp+11,c
  2833  0016C6  50F3               	movf	prodl,w,c
  2834  0016C8  2650               	addwf	btemp+9,f,c
  2835  0016CA  0E2C               	movlw	low (_ready_queue+108)
  2836  0016CC  244F               	addwf	btemp+8,w,c
  2837  0016CE  6EE9               	movwf	fsr0l,c
  2838  0016D0  0E01               	movlw	high (_ready_queue+108)
  2839  0016D2  2050               	addwfc	btemp+9,w,c
  2840  0016D4  6EEA               	movwf	fsr0h,c
  2841  0016D6  CFDE FFEE          	movff	postinc2,postinc0
  2842  0016DA  CFDD FFED          	movff	postdec2,postdec0
  2843                           
  2844                           ;kernel.c: 35:   dispatcher(WAITING);
  2845  0016DE  0E02               	movlw	2
  2846  0016E0  6EE6               	movwf	postinc1,c
  2847  0016E2  EC6E  F002         	call	_dispatcher	;wreg free
  2848                           
  2849                           ;kernel.c: 37:   INTCONbits.GIE = 1;
  2850  0016E6  8EF2               	bsf	4082,7,c	;volatile
  2851                           
  2852                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2853  0016E8  52E5               	movf	postdec1,f,c
  2854  0016EA  52E5               	movf	postdec1,f,c
  2855  0016EC  0012               	return		;funcret
  2856  0016EE                     __end_of_lunos_delayTask:
  2857                           	opt callstack 0
  2858                           
  2859 ;; *************** function _fill_bottle *****************
  2860 ;; Defined at:
  2861 ;;		line 83 in file "tasks.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1  [STACK] void 
  2868 ;; Registers used:
  2869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2875 ;;      Params:         0       0       0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    8
  2882 ;; This function calls:
  2883 ;;		_lunos_delayTask
  2884 ;;		_sem_post
  2885 ;;		_sem_wait
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text18
  2892  0016EE                     __ptext18:
  2893                           	opt callstack 0
  2894  0016EE                     _fill_bottle:
  2895                           	opt callstack 18
  2896                           
  2897                           ;tasks.c: 85:         sem_wait(&fill_sem);
  2898                           
  2899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2900                           ;incstack = 0
  2901                           ;tasks.c: 84:     while(1){
  2902  0016EE  0E1B               	movlw	low _fill_sem
  2903  0016F0  6EE6               	movwf	postinc1,c
  2904  0016F2  0E00               	movlw	high _fill_sem
  2905  0016F4  6EE6               	movwf	postinc1,c
  2906  0016F6  ECEA  F007         	call	_sem_wait	;wreg free
  2907                           
  2908                           ;tasks.c: 86:         PORTDbits.RD5 = 0;
  2909  0016FA  9A83               	bcf	3971,5,c	;volatile
  2910                           
  2911                           ;tasks.c: 87:         PORTCbits.RC7 = 0;
  2912  0016FC  9E82               	bcf	3970,7,c	;volatile
  2913                           
  2914                           ;tasks.c: 88:         lunos_delayTask(300);
  2915  0016FE  0E2C               	movlw	44
  2916  001700  6EE6               	movwf	postinc1,c
  2917  001702  0E01               	movlw	1
  2918  001704  6EE6               	movwf	postinc1,c
  2919  001706  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  2920                           
  2921                           ;tasks.c: 89:         PORTCbits.RC7 = 1;
  2922  00170A  8E82               	bsf	3970,7,c	;volatile
  2923                           
  2924                           ;tasks.c: 90:         lunos_delayTask(500);
  2925  00170C  0EF4               	movlw	244
  2926  00170E  6EE6               	movwf	postinc1,c
  2927  001710  0E01               	movlw	1
  2928  001712  6EE6               	movwf	postinc1,c
  2929  001714  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  2930  001718                     l304:
  2931  001718  B082               	btfsc	3970,0,c	;volatile
  2932  00171A  A282               	btfss	3970,1,c	;volatile
  2933  00171C  D002               	goto	u62_20
  2934  00171E  B482               	btfsc	3970,2,c	;volatile
  2935  001720  D7FB               	goto	l304
  2936  001722                     u62_20:
  2937                           
  2938                           ;tasks.c: 92:         lunos_delayTask(200);
  2939  001722  0EC8               	movlw	200
  2940  001724  6EE6               	movwf	postinc1,c
  2941  001726  0E00               	movlw	0
  2942  001728  6EE6               	movwf	postinc1,c
  2943  00172A  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  2944                           
  2945                           ;tasks.c: 93:         sem_post(&check_sem);
  2946  00172E  0E0B               	movlw	low _check_sem
  2947  001730  6EE6               	movwf	postinc1,c
  2948  001732  0E00               	movlw	high _check_sem
  2949  001734  6EE6               	movwf	postinc1,c
  2950  001736  EC69  F007         	call	_sem_post	;wreg free
  2951                           
  2952                           ;tasks.c: 94:         PORTDbits.RD5 = 1;
  2953  00173A  8A83               	bsf	3971,5,c	;volatile
  2954  00173C  D7D8               	goto	_fill_bottle
  2955  00173E                     __end_of_fill_bottle:
  2956                           	opt callstack 0
  2957                           
  2958 ;; *************** function _check_level *****************
  2959 ;; Defined at:
  2960 ;;		line 98 in file "tasks.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1  [STACK] void 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2974 ;;      Params:         0       0       0       0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0
  2977 ;;      Totals:         0       0       0       0       0       0       0
  2978 ;;Total ram usage:        0 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    8
  2981 ;; This function calls:
  2982 ;;		_lunos_delayTask
  2983 ;;		_sem_post
  2984 ;;		_sem_wait
  2985 ;; This function is called by:
  2986 ;;		_main
  2987 ;; This function uses a reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text19
  2991  00173E                     __ptext19:
  2992                           	opt callstack 0
  2993  00173E                     _check_level:
  2994                           	opt callstack 18
  2995                           
  2996                           ;tasks.c: 100:         sem_wait(&check_sem);
  2997                           
  2998                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2999                           ;incstack = 0
  3000                           ;tasks.c: 99:     while(1){
  3001  00173E  0E0B               	movlw	low _check_sem
  3002  001740  6EE6               	movwf	postinc1,c
  3003  001742  0E00               	movlw	high _check_sem
  3004  001744  6EE6               	movwf	postinc1,c
  3005  001746  ECEA  F007         	call	_sem_wait	;wreg free
  3006                           
  3007                           ;tasks.c: 101:         PORTDbits.RD6 = 0;
  3008  00174A  9C83               	bcf	3971,6,c	;volatile
  3009                           
  3010                           ;tasks.c: 102:         PORTCbits.RC7 = 0;
  3011  00174C  9E82               	bcf	3970,7,c	;volatile
  3012                           
  3013                           ;tasks.c: 103:         lunos_delayTask(500);
  3014  00174E  0EF4               	movlw	244
  3015  001750  6EE6               	movwf	postinc1,c
  3016  001752  0E01               	movlw	1
  3017  001754  6EE6               	movwf	postinc1,c
  3018  001756  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  3019                           
  3020                           ;tasks.c: 104:         PORTCbits.RC7 = 1;
  3021  00175A  8E82               	bsf	3970,7,c	;volatile
  3022                           
  3023                           ;tasks.c: 105:         lunos_delayTask(500);
  3024  00175C  0EF4               	movlw	244
  3025  00175E  6EE6               	movwf	postinc1,c
  3026  001760  0E01               	movlw	1
  3027  001762  6EE6               	movwf	postinc1,c
  3028  001764  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  3029  001768                     l315:
  3030  001768  B283               	btfsc	3971,1,c	;volatile
  3031  00176A  A483               	btfss	3971,2,c	;volatile
  3032  00176C  D002               	goto	u65_20
  3033  00176E  B683               	btfsc	3971,3,c	;volatile
  3034  001770  D7FB               	goto	l315
  3035  001772                     u65_20:
  3036                           
  3037                           ;tasks.c: 107:         lunos_delayTask(200);
  3038  001772  0EC8               	movlw	200
  3039  001774  6EE6               	movwf	postinc1,c
  3040  001776  0E00               	movlw	0
  3041  001778  6EE6               	movwf	postinc1,c
  3042  00177A  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  3043                           
  3044                           ;tasks.c: 124:         sem_post(&cover_sem);
  3045  00177E  0EB0               	movlw	low _cover_sem
  3046  001780  6EE6               	movwf	postinc1,c
  3047  001782  0E00               	movlw	high _cover_sem
  3048  001784  6EE6               	movwf	postinc1,c
  3049  001786  EC69  F007         	call	_sem_post	;wreg free
  3050                           
  3051                           ;tasks.c: 125:         PORTDbits.RD6 = 1;
  3052  00178A  8C83               	bsf	3971,6,c	;volatile
  3053  00178C  D7D8               	goto	_check_level
  3054  00178E                     __end_of_check_level:
  3055                           	opt callstack 0
  3056                           
  3057 ;; *************** function _cover_bottle *****************
  3058 ;; Defined at:
  3059 ;;		line 129 in file "tasks.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  count           2    0        unsigned int 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1  [STACK] void 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3073 ;;      Params:         0       0       0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0
  3076 ;;      Totals:         0       0       0       0       0       0       0
  3077 ;;Total ram usage:        0 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    9
  3080 ;; This function calls:
  3081 ;;		_lunos_delayTask
  3082 ;;		_pipe_write
  3083 ;;		_sem_post
  3084 ;;		_sem_wait
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;; This function uses a reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text20
  3091  001640                     __ptext20:
  3092                           	opt callstack 0
  3093  001640                     _cover_bottle:
  3094                           	opt callstack 17
  3095                           
  3096                           ;tasks.c: 131:         sem_wait(&cover_sem);
  3097                           
  3098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3099                           ;incstack = 0
  3100                           ;tasks.c: 130:     while(1){
  3101  001640  0EB0               	movlw	low _cover_sem
  3102  001642  6EE6               	movwf	postinc1,c
  3103  001644  0E00               	movlw	high _cover_sem
  3104  001646  6EE6               	movwf	postinc1,c
  3105  001648  ECEA  F007         	call	_sem_wait	;wreg free
  3106                           
  3107                           ;tasks.c: 132:         PORTDbits.RD7 = 0;
  3108  00164C  9E83               	bcf	3971,7,c	;volatile
  3109                           
  3110                           ;tasks.c: 133:         PORTCbits.RC7 = 0;
  3111  00164E  9E82               	bcf	3970,7,c	;volatile
  3112                           
  3113                           ;tasks.c: 134:         lunos_delayTask(500);
  3114  001650  0EF4               	movlw	244
  3115  001652  6EE6               	movwf	postinc1,c
  3116  001654  0E01               	movlw	1
  3117  001656  6EE6               	movwf	postinc1,c
  3118  001658  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  3119  00165C                     l326:
  3120  00165C  B682               	btfsc	3970,3,c	;volatile
  3121  00165E  A882               	btfss	3970,4,c	;volatile
  3122  001660  D002               	goto	u68_20
  3123  001662  BA82               	btfsc	3970,5,c	;volatile
  3124  001664  D7FB               	goto	l326
  3125  001666                     u68_20:
  3126                           
  3127                           ;tasks.c: 136:         lunos_delayTask(200);
  3128  001666  0EC8               	movlw	200
  3129  001668  6EE6               	movwf	postinc1,c
  3130  00166A  0E00               	movlw	0
  3131  00166C  6EE6               	movwf	postinc1,c
  3132  00166E  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  3133                           
  3134                           ;tasks.c: 139:                 global_buffer.bottles[0].bottle_state = CLOSED;
  3135  001672  0E02               	movlw	2
  3136  001674  6E03               	movwf	_global_buffer+2,c
  3137                           
  3138                           ;tasks.c: 160:         pipe_write(&p, count);
  3139  001676  0E03               	movlw	3
  3140  001678  6EE6               	movwf	postinc1,c
  3141  00167A  0E00               	movlw	0
  3142  00167C  6EE6               	movwf	postinc1,c
  3143  00167E  0E3B               	movlw	low _p
  3144  001680  6EE6               	movwf	postinc1,c
  3145  001682  0E00               	movlw	high _p
  3146  001684  6EE6               	movwf	postinc1,c
  3147  001686  EC60  F006         	call	_pipe_write	;wreg free
  3148                           
  3149                           ;tasks.c: 161:         sem_post(&out_sem);
  3150  00168A  0EA0               	movlw	low _out_sem
  3151  00168C  6EE6               	movwf	postinc1,c
  3152  00168E  0E00               	movlw	high _out_sem
  3153  001690  6EE6               	movwf	postinc1,c
  3154  001692  EC69  F007         	call	_sem_post	;wreg free
  3155                           
  3156                           ;tasks.c: 162:         PORTCbits.RC7 = 1;
  3157  001696  8E82               	bsf	3970,7,c	;volatile
  3158                           
  3159                           ;tasks.c: 163:         PORTDbits.RD7 = 1;
  3160  001698  8E83               	bsf	3971,7,c	;volatile
  3161  00169A  D7D2               	goto	_cover_bottle
  3162  00169C                     __end_of_cover_bottle:
  3163                           	opt callstack 0
  3164                           
  3165 ;; *************** function _pipe_write *****************
  3166 ;; Defined at:
  3167 ;;		line 18 in file "pipe.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  p               2  [STACK] PTR struct pipe
  3170 ;;		 -> p(12), 
  3171 ;;  data            2  [STACK] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1  [STACK] void 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3183 ;;      Params:         0       0       0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0
  3186 ;;      Totals:         0       0       0       0       0       0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    8
  3190 ;; This function calls:
  3191 ;;		_sem_post
  3192 ;;		_sem_wait
  3193 ;; This function is called by:
  3194 ;;		_cover_bottle
  3195 ;; This function uses a reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text21
  3199  000CC0                     __ptext21:
  3200                           	opt callstack 0
  3201  000CC0                     _pipe_write:
  3202                           	opt callstack 17
  3203                           
  3204                           ;pipe.c: 20:   sem_wait(p->w);
  3205                           ;stkvar	_p @ sp[(0)+-2]
  3206                           
  3207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3208                           ;incstack = 0
  3209  000CC0  0EFE               	movlw	-2
  3210  000CC2  CFE3 F051          	movff	plusw1,btemp+10
  3211  000CC6  0EFF               	movlw	-1
  3212  000CC8  CFE3 F052          	movff	plusw1,btemp+11
  3213  000CCC  0E08               	movlw	8
  3214  000CCE  2451               	addwf	btemp+10,w,c
  3215  000CD0  6ED9               	movwf	fsr2l,c
  3216  000CD2  0E00               	movlw	0
  3217  000CD4  2052               	addwfc	btemp+11,w,c
  3218  000CD6  6EDA               	movwf	fsr2h,c
  3219  000CD8  CFDE F051          	movff	postinc2,btemp+10
  3220  000CDC  CFDD F052          	movff	postdec2,btemp+11
  3221  000CE0  C051  FFE6         	movff	btemp+10,postinc1
  3222  000CE4  C052  FFE6         	movff	btemp+11,postinc1
  3223  000CE8  ECEA  F007         	call	_sem_wait	;wreg free
  3224                           
  3225                           ;pipe.c: 21:   p->pipe_data[p->index_write] = data;
  3226                           ;stkvar	_data @ sp[(0)+-4]
  3227  000CEC  50E1               	movf	fsr1l,w,c
  3228  000CEE  0FFC               	addlw	-4
  3229  000CF0  6ED9               	movwf	fsr2l,c
  3230  000CF2  50E2               	movf	fsr1h,w,c
  3231  000CF4  6EDA               	movwf	fsr2h,c
  3232  000CF6  0EFF               	movlw	255
  3233  000CF8  22DA               	addwfc	fsr2h,f,c
  3234                           
  3235                           ;stkvar	_p @ sp[(0)+-2]
  3236  000CFA  0EFE               	movlw	-2
  3237  000CFC  CFE3 F051          	movff	plusw1,btemp+10
  3238  000D00  0EFF               	movlw	-1
  3239  000D02  CFE3 F052          	movff	plusw1,btemp+11
  3240  000D06  0E04               	movlw	4
  3241  000D08  2451               	addwf	btemp+10,w,c
  3242  000D0A  6EE9               	movwf	fsr0l,c
  3243  000D0C  0E00               	movlw	0
  3244  000D0E  2052               	addwfc	btemp+11,w,c
  3245  000D10  6EEA               	movwf	fsr0h,c
  3246  000D12  CFEE F051          	movff	postinc0,btemp+10
  3247  000D16  CFED F052          	movff	postdec0,btemp+11
  3248  000D1A  90D8               	bcf	status,0,c
  3249  000D1C  3451               	rlcf	btemp+10,w,c
  3250  000D1E  6E4F               	movwf	btemp+8,c
  3251  000D20  3452               	rlcf	btemp+11,w,c
  3252  000D22  6E50               	movwf	btemp+9,c
  3253                           
  3254                           ;stkvar	_p @ sp[(0)+-2]
  3255  000D24  0EFE               	movlw	-2
  3256  000D26  CFE3 F051          	movff	plusw1,btemp+10
  3257  000D2A  0EFF               	movlw	-1
  3258  000D2C  CFE3 F052          	movff	plusw1,btemp+11
  3259  000D30  504F               	movf	btemp+8,w,c
  3260  000D32  2451               	addwf	btemp+10,w,c
  3261  000D34  6EE9               	movwf	fsr0l,c
  3262  000D36  5050               	movf	btemp+9,w,c
  3263  000D38  2052               	addwfc	btemp+11,w,c
  3264  000D3A  6EEA               	movwf	fsr0h,c
  3265  000D3C  CFDE FFEE          	movff	postinc2,postinc0
  3266  000D40  CFDD FFED          	movff	postdec2,postdec0
  3267                           
  3268                           ;pipe.c: 22:   p->index_write = (p->index_write + 1) % 2;
  3269                           ;stkvar	_p @ sp[(0)+-2]
  3270  000D44  0EFE               	movlw	-2
  3271  000D46  CFE3 F051          	movff	plusw1,btemp+10
  3272  000D4A  0EFF               	movlw	-1
  3273  000D4C  CFE3 F052          	movff	plusw1,btemp+11
  3274  000D50  0E04               	movlw	4
  3275  000D52  2451               	addwf	btemp+10,w,c
  3276  000D54  6ED9               	movwf	fsr2l,c
  3277  000D56  0E00               	movlw	0
  3278  000D58  2052               	addwfc	btemp+11,w,c
  3279  000D5A  6EDA               	movwf	fsr2h,c
  3280  000D5C  CFDE F051          	movff	postinc2,btemp+10
  3281  000D60  CFDD F052          	movff	postdec2,btemp+11
  3282  000D64  0E01               	movlw	1
  3283  000D66  2651               	addwf	btemp+10,f,c
  3284  000D68  0E00               	movlw	0
  3285  000D6A  2252               	addwfc	btemp+11,f,c
  3286  000D6C  0E01               	movlw	1
  3287  000D6E  1651               	andwf	btemp+10,f,c
  3288  000D70  0E00               	movlw	0
  3289  000D72  1652               	andwf	btemp+11,f,c
  3290                           
  3291                           ;stkvar	_p @ sp[(0)+-2]
  3292  000D74  0EFE               	movlw	-2
  3293  000D76  CFE3 F04F          	movff	plusw1,btemp+8
  3294  000D7A  0EFF               	movlw	-1
  3295  000D7C  CFE3 F050          	movff	plusw1,btemp+9
  3296  000D80  0E04               	movlw	4
  3297  000D82  244F               	addwf	btemp+8,w,c
  3298  000D84  6ED9               	movwf	fsr2l,c
  3299  000D86  0E00               	movlw	0
  3300  000D88  2050               	addwfc	btemp+9,w,c
  3301  000D8A  6EDA               	movwf	fsr2h,c
  3302  000D8C  C051  FFDE         	movff	btemp+10,postinc2
  3303  000D90  C052  FFDD         	movff	btemp+11,postdec2
  3304                           
  3305                           ;pipe.c: 23:   sem_post(p->r);
  3306                           ;stkvar	_p @ sp[(0)+-2]
  3307  000D94  0EFE               	movlw	-2
  3308  000D96  CFE3 F051          	movff	plusw1,btemp+10
  3309  000D9A  0EFF               	movlw	-1
  3310  000D9C  CFE3 F052          	movff	plusw1,btemp+11
  3311  000DA0  0E0A               	movlw	10
  3312  000DA2  2451               	addwf	btemp+10,w,c
  3313  000DA4  6ED9               	movwf	fsr2l,c
  3314  000DA6  0E00               	movlw	0
  3315  000DA8  2052               	addwfc	btemp+11,w,c
  3316  000DAA  6EDA               	movwf	fsr2h,c
  3317  000DAC  CFDE F051          	movff	postinc2,btemp+10
  3318  000DB0  CFDD F052          	movff	postdec2,btemp+11
  3319  000DB4  C051  FFE6         	movff	btemp+10,postinc1
  3320  000DB8  C052  FFE6         	movff	btemp+11,postinc1
  3321  000DBC  EC69  F007         	call	_sem_post	;wreg free
  3322                           
  3323                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  3324  000DC0  52E5               	movf	postdec1,f,c
  3325  000DC2  52E5               	movf	postdec1,f,c
  3326  000DC4  52E5               	movf	postdec1,f,c
  3327  000DC6  52E5               	movf	postdec1,f,c
  3328  000DC8  0012               	return		;funcret
  3329  000DCA                     __end_of_pipe_write:
  3330                           	opt callstack 0
  3331                           
  3332 ;; *************** function _count_out *****************
  3333 ;; Defined at:
  3334 ;;		line 167 in file "tasks.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  data            2  [STACK] unsigned int 
  3339 ;;  count           2  [STACK] unsigned int 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1  [STACK] void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3349 ;;      Params:         0       0       0       0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0
  3352 ;;      Totals:         0       0       0       0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    9
  3356 ;; This function calls:
  3357 ;;		_lunos_delayTask
  3358 ;;		_pipe_read
  3359 ;;		_sem_post
  3360 ;;		_sem_wait
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text22
  3367  001182                     __ptext22:
  3368                           	opt callstack 0
  3369  001182                     _count_out:
  3370                           	opt callstack 0
  3371                           
  3372                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3373  001182  52E6               	movf	postinc1,f,c
  3374  001184  52E6               	movf	postinc1,f,c
  3375  001186  52E6               	movf	postinc1,f,c
  3376  001188  52E6               	movf	postinc1,f,c
  3377  00118A                     l336:
  3378                           
  3379                           ;tasks.c: 169:         unsigned int data;;tasks.c: 170:         unsigned int count = 0;
  3380                           ;stkvar	_count @ sp[(-4)+2]
  3381  00118A  0EFE               	movlw	-2
  3382  00118C  6AE3               	clrf	plusw1,c
  3383  00118E  0EFF               	movlw	-1
  3384  001190  6AE3               	clrf	plusw1,c
  3385                           
  3386                           ;tasks.c: 171:         sem_wait(&out_sem);
  3387  001192  0EA0               	movlw	low _out_sem
  3388  001194  6EE6               	movwf	postinc1,c
  3389  001196  0E00               	movlw	high _out_sem
  3390  001198  6EE6               	movwf	postinc1,c
  3391  00119A  ECEA  F007         	call	_sem_wait	;wreg free
  3392                           
  3393                           ;tasks.c: 172:         PORTBbits.RB1 = 0;
  3394  00119E  9281               	bcf	3969,1,c	;volatile
  3395                           
  3396                           ;tasks.c: 173:         PORTCbits.RC7 = 0;
  3397  0011A0  9E82               	bcf	3970,7,c	;volatile
  3398                           
  3399                           ;tasks.c: 175:         data_PIPE = data;
  3400                           ;stkvar	_data @ sp[(-4)+0]
  3401  0011A2  0EFC               	movlw	252
  3402  0011A4  24E1               	addwf	fsr1l,w,c
  3403  0011A6  6E47               	movwf	btemp,c
  3404  0011A8  0EFF               	movlw	255
  3405  0011AA  20E2               	addwfc	fsr1h,w,c
  3406  0011AC  6E48               	movwf	btemp+1,c
  3407  0011AE  C047  FFE6         	movff	btemp,postinc1
  3408  0011B2  C048  FFE6         	movff	btemp+1,postinc1
  3409  0011B6  0E3B               	movlw	low _p
  3410  0011B8  6EE6               	movwf	postinc1,c
  3411  0011BA  0E00               	movlw	high _p
  3412  0011BC  6EE6               	movwf	postinc1,c
  3413  0011BE  ECE5  F006         	call	_pipe_read	;wreg free
  3414                           
  3415                           ;tasks.c: 176:         while (count < data){
  3416  0011C2  D017               	goto	l1913
  3417  0011C4                     l339:
  3418  0011C4  B481               	btfsc	3969,2,c	;volatile
  3419  0011C6  D7FE               	goto	l339
  3420                           
  3421                           ;tasks.c: 178:             lunos_delayTask(200);
  3422  0011C8  0EC8               	movlw	200
  3423  0011CA  6EE6               	movwf	postinc1,c
  3424  0011CC  0E00               	movlw	0
  3425  0011CE  6EE6               	movwf	postinc1,c
  3426  0011D0  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  3427                           
  3428                           ;tasks.c: 179:             count++;
  3429                           ;stkvar	_count @ sp[(-4)+2]
  3430  0011D4  0EFE               	movlw	-2
  3431  0011D6  50E3               	movf	plusw1,w,c
  3432  0011D8  0F01               	addlw	1
  3433  0011DA  6E47               	movwf	btemp,c
  3434  0011DC  0EFE               	movlw	-2
  3435  0011DE  C047  FFE3         	movff	btemp,plusw1
  3436  0011E2  6A47               	clrf	btemp,c
  3437  0011E4  0EFF               	movlw	-1
  3438  0011E6  50E3               	movf	plusw1,w,c
  3439  0011E8  2047               	addwfc	btemp,w,c
  3440  0011EA  6E47               	movwf	btemp,c
  3441  0011EC  0EFF               	movlw	-1
  3442  0011EE  C047  FFE3         	movff	btemp,plusw1
  3443  0011F2                     l1913:
  3444                           
  3445                           ;tasks.c: 176:         while (count < data){
  3446                           ;stkvar	_data @ sp[(-4)+0]
  3447  0011F2  0EFC               	movlw	-4
  3448  0011F4  CFE3 F051          	movff	plusw1,btemp+10
  3449  0011F8  0EFD               	movlw	-3
  3450  0011FA  CFE3 F052          	movff	plusw1,btemp+11
  3451                           
  3452                           ;stkvar	_count @ sp[(-4)+2]
  3453  0011FE  0EFE               	movlw	-2
  3454  001200  CFE3 F04F          	movff	plusw1,btemp+8
  3455  001204  0EFF               	movlw	-1
  3456  001206  CFE3 F050          	movff	plusw1,btemp+9
  3457  00120A  5051               	movf	btemp+10,w,c
  3458  00120C  5C4F               	subwf	btemp+8,w,c
  3459  00120E  5052               	movf	btemp+11,w,c
  3460  001210  5850               	subwfb	btemp+9,w,c
  3461  001212  A0D8               	btfss	status,0,c
  3462  001214  D7D7               	goto	l339
  3463                           
  3464                           ;tasks.c: 181:         PORTBbits.RB1 = 1;
  3465  001216  8281               	bsf	3969,1,c	;volatile
  3466                           
  3467                           ;tasks.c: 182:         lunos_delayTask(200);
  3468  001218  0EC8               	movlw	200
  3469  00121A  6EE6               	movwf	postinc1,c
  3470  00121C  0E00               	movlw	0
  3471  00121E  6EE6               	movwf	postinc1,c
  3472  001220  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  3473                           
  3474                           ;tasks.c: 183:         PORTCbits.RC7 = 1;
  3475  001224  8E82               	bsf	3970,7,c	;volatile
  3476                           
  3477                           ;tasks.c: 184:         PORTBbits.RB1 = 0;
  3478  001226  9281               	bcf	3969,1,c	;volatile
  3479                           
  3480                           ;tasks.c: 185:         lunos_delayTask(200);
  3481  001228  0EC8               	movlw	200
  3482  00122A  6EE6               	movwf	postinc1,c
  3483  00122C  0E00               	movlw	0
  3484  00122E  6EE6               	movwf	postinc1,c
  3485  001230  EC4E  F00B         	call	_lunos_delayTask	;wreg free
  3486                           
  3487                           ;tasks.c: 187:         sem_post(&count_sem);
  3488  001234  0E2B               	movlw	low _count_sem
  3489  001236  6EE6               	movwf	postinc1,c
  3490  001238  0E00               	movlw	high _count_sem
  3491  00123A  6EE6               	movwf	postinc1,c
  3492  00123C  EC69  F007         	call	_sem_post	;wreg free
  3493                           
  3494                           ;tasks.c: 188:         global_buffer.p_state = FREE_;
  3495  001240  6A06               	clrf	_global_buffer+5,c
  3496                           
  3497                           ;tasks.c: 189:         global_buffer.count = 0;
  3498  001242  6A01               	clrf	_global_buffer,c
  3499  001244  6A02               	clrf	_global_buffer+1,c
  3500                           
  3501                           ;tasks.c: 190:         PORTBbits.RB1 = 1;
  3502  001246  8281               	bsf	3969,1,c	;volatile
  3503  001248  D7A0               	goto	l336
  3504  00124A                     __end_of_count_out:
  3505                           	opt callstack 0
  3506                           
  3507 ;; *************** function _pipe_read *****************
  3508 ;; Defined at:
  3509 ;;		line 27 in file "pipe.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  p               2  [STACK] PTR struct pipe
  3512 ;;		 -> p(12), 
  3513 ;;  data            2  [STACK] PTR unsigned int 
  3514 ;;		 -> data(2), 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1  [STACK] void 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3526 ;;      Params:         0       0       0       0       0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0
  3529 ;;      Totals:         0       0       0       0       0       0       0
  3530 ;;Total ram usage:        0 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    8
  3533 ;; This function calls:
  3534 ;;		_sem_post
  3535 ;;		_sem_wait
  3536 ;; This function is called by:
  3537 ;;		_count_out
  3538 ;; This function uses a reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text23
  3542  000DCA                     __ptext23:
  3543                           	opt callstack 0
  3544  000DCA                     _pipe_read:
  3545                           	opt callstack 17
  3546                           
  3547                           ;pipe.c: 29:   sem_wait(p->r);
  3548                           ;stkvar	_p @ sp[(0)+-2]
  3549                           
  3550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3551                           ;incstack = 0
  3552  000DCA  0EFE               	movlw	-2
  3553  000DCC  CFE3 F051          	movff	plusw1,btemp+10
  3554  000DD0  0EFF               	movlw	-1
  3555  000DD2  CFE3 F052          	movff	plusw1,btemp+11
  3556  000DD6  0E0A               	movlw	10
  3557  000DD8  2451               	addwf	btemp+10,w,c
  3558  000DDA  6ED9               	movwf	fsr2l,c
  3559  000DDC  0E00               	movlw	0
  3560  000DDE  2052               	addwfc	btemp+11,w,c
  3561  000DE0  6EDA               	movwf	fsr2h,c
  3562  000DE2  CFDE F051          	movff	postinc2,btemp+10
  3563  000DE6  CFDD F052          	movff	postdec2,btemp+11
  3564  000DEA  C051  FFE6         	movff	btemp+10,postinc1
  3565  000DEE  C052  FFE6         	movff	btemp+11,postinc1
  3566  000DF2  ECEA  F007         	call	_sem_wait	;wreg free
  3567                           
  3568                           ;pipe.c: 30:   *data = p->pipe_data[p->index_read];
  3569                           ;stkvar	_p @ sp[(0)+-2]
  3570  000DF6  0EFE               	movlw	-2
  3571  000DF8  CFE3 F051          	movff	plusw1,btemp+10
  3572  000DFC  0EFF               	movlw	-1
  3573  000DFE  CFE3 F052          	movff	plusw1,btemp+11
  3574  000E02  0E06               	movlw	6
  3575  000E04  2451               	addwf	btemp+10,w,c
  3576  000E06  6ED9               	movwf	fsr2l,c
  3577  000E08  0E00               	movlw	0
  3578  000E0A  2052               	addwfc	btemp+11,w,c
  3579  000E0C  6EDA               	movwf	fsr2h,c
  3580  000E0E  CFDE F051          	movff	postinc2,btemp+10
  3581  000E12  CFDD F052          	movff	postdec2,btemp+11
  3582  000E16  90D8               	bcf	status,0,c
  3583  000E18  3451               	rlcf	btemp+10,w,c
  3584  000E1A  6E4F               	movwf	btemp+8,c
  3585  000E1C  3452               	rlcf	btemp+11,w,c
  3586  000E1E  6E50               	movwf	btemp+9,c
  3587                           
  3588                           ;stkvar	_p @ sp[(0)+-2]
  3589  000E20  0EFE               	movlw	-2
  3590  000E22  CFE3 F051          	movff	plusw1,btemp+10
  3591  000E26  0EFF               	movlw	-1
  3592  000E28  CFE3 F052          	movff	plusw1,btemp+11
  3593  000E2C  504F               	movf	btemp+8,w,c
  3594  000E2E  2451               	addwf	btemp+10,w,c
  3595  000E30  6ED9               	movwf	fsr2l,c
  3596  000E32  5050               	movf	btemp+9,w,c
  3597  000E34  2052               	addwfc	btemp+11,w,c
  3598  000E36  6EDA               	movwf	fsr2h,c
  3599                           
  3600                           ;stkvar	_data @ sp[(0)+-4]
  3601  000E38  0EFC               	movlw	-4
  3602  000E3A  CFE3 FFE9          	movff	plusw1,fsr0l
  3603  000E3E  0EFD               	movlw	-3
  3604  000E40  CFE3 FFEA          	movff	plusw1,fsr0h
  3605  000E44  CFDE FFEE          	movff	postinc2,postinc0
  3606  000E48  CFDD FFED          	movff	postdec2,postdec0
  3607                           
  3608                           ;pipe.c: 31:   p->index_read = (p->index_read + 1) % 2;
  3609                           ;stkvar	_p @ sp[(0)+-2]
  3610  000E4C  0EFE               	movlw	-2
  3611  000E4E  CFE3 F051          	movff	plusw1,btemp+10
  3612  000E52  0EFF               	movlw	-1
  3613  000E54  CFE3 F052          	movff	plusw1,btemp+11
  3614  000E58  0E06               	movlw	6
  3615  000E5A  2451               	addwf	btemp+10,w,c
  3616  000E5C  6ED9               	movwf	fsr2l,c
  3617  000E5E  0E00               	movlw	0
  3618  000E60  2052               	addwfc	btemp+11,w,c
  3619  000E62  6EDA               	movwf	fsr2h,c
  3620  000E64  CFDE F051          	movff	postinc2,btemp+10
  3621  000E68  CFDD F052          	movff	postdec2,btemp+11
  3622  000E6C  0E01               	movlw	1
  3623  000E6E  2651               	addwf	btemp+10,f,c
  3624  000E70  0E00               	movlw	0
  3625  000E72  2252               	addwfc	btemp+11,f,c
  3626  000E74  0E01               	movlw	1
  3627  000E76  1651               	andwf	btemp+10,f,c
  3628  000E78  0E00               	movlw	0
  3629  000E7A  1652               	andwf	btemp+11,f,c
  3630                           
  3631                           ;stkvar	_p @ sp[(0)+-2]
  3632  000E7C  0EFE               	movlw	-2
  3633  000E7E  CFE3 F04F          	movff	plusw1,btemp+8
  3634  000E82  0EFF               	movlw	-1
  3635  000E84  CFE3 F050          	movff	plusw1,btemp+9
  3636  000E88  0E06               	movlw	6
  3637  000E8A  244F               	addwf	btemp+8,w,c
  3638  000E8C  6ED9               	movwf	fsr2l,c
  3639  000E8E  0E00               	movlw	0
  3640  000E90  2050               	addwfc	btemp+9,w,c
  3641  000E92  6EDA               	movwf	fsr2h,c
  3642  000E94  C051  FFDE         	movff	btemp+10,postinc2
  3643  000E98  C052  FFDD         	movff	btemp+11,postdec2
  3644                           
  3645                           ;pipe.c: 32:   sem_post(p->w);
  3646                           ;stkvar	_p @ sp[(0)+-2]
  3647  000E9C  0EFE               	movlw	-2
  3648  000E9E  CFE3 F051          	movff	plusw1,btemp+10
  3649  000EA2  0EFF               	movlw	-1
  3650  000EA4  CFE3 F052          	movff	plusw1,btemp+11
  3651  000EA8  0E08               	movlw	8
  3652  000EAA  2451               	addwf	btemp+10,w,c
  3653  000EAC  6ED9               	movwf	fsr2l,c
  3654  000EAE  0E00               	movlw	0
  3655  000EB0  2052               	addwfc	btemp+11,w,c
  3656  000EB2  6EDA               	movwf	fsr2h,c
  3657  000EB4  CFDE F051          	movff	postinc2,btemp+10
  3658  000EB8  CFDD F052          	movff	postdec2,btemp+11
  3659  000EBC  C051  FFE6         	movff	btemp+10,postinc1
  3660  000EC0  C052  FFE6         	movff	btemp+11,postinc1
  3661  000EC4  EC69  F007         	call	_sem_post	;wreg free
  3662                           
  3663                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3664  000EC8  52E5               	movf	postdec1,f,c
  3665  000ECA  52E5               	movf	postdec1,f,c
  3666  000ECC  52E5               	movf	postdec1,f,c
  3667  000ECE  52E5               	movf	postdec1,f,c
  3668  000ED0  0012               	return		;funcret
  3669  000ED2                     __end_of_pipe_read:
  3670                           	opt callstack 0
  3671                           
  3672 ;; *************** function _ISR_timer0 *****************
  3673 ;; Defined at:
  3674 ;;		line 56 in file "int0_test.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3688 ;;      Params:         0       0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0
  3690 ;;      Temps:         14       0       0       0       0       0       0
  3691 ;;      Totals:        14       0       0       0       0       0       0
  3692 ;;Total ram usage:       14 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    2
  3695 ;; This function calls:
  3696 ;;		___wmul
  3697 ;;		_delay_decrement
  3698 ;;		_round_robin
  3699 ;; This function is called by:
  3700 ;;		Interrupt level 2
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	intcode
  3705  000008                     __pintcode:
  3706                           	opt callstack 0
  3707  000008                     _ISR_timer0:
  3708                           	opt callstack 17
  3709                           
  3710                           ;incstack = 0
  3711  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  3712                           
  3713                           	psect	intcode_body
  3714  000014                     __pintcode_body:
  3715                           	opt callstack 17
  3716  000014                     int_func:
  3717                           	opt callstack 17
  3718  000014  0006               	pop		; remove dummy address from shadow register refresh
  3719  000016  CFE1 F069          	movff	fsr1l,??_ISR_timer0+2
  3720  00001A  CFE2 F06A          	movff	fsr1h,??_ISR_timer0+3
  3721  00001E  CFD9 F06B          	movff	fsr2l,??_ISR_timer0+4
  3722  000022  CFDA F06C          	movff	fsr2h,??_ISR_timer0+5
  3723  000026  CFF3 F06D          	movff	prodl,??_ISR_timer0+6
  3724  00002A  CFF4 F06E          	movff	prodh,??_ISR_timer0+7
  3725  00002E  C047  F06F         	movff	btemp,??_ISR_timer0+8
  3726  000032  C048  F070         	movff	btemp+1,??_ISR_timer0+9
  3727  000036  C04F  F071         	movff	btemp+8,??_ISR_timer0+10
  3728  00003A  C050  F072         	movff	btemp+9,??_ISR_timer0+11
  3729  00003E  C051  F073         	movff	btemp+10,??_ISR_timer0+12
  3730  000042  C052  F074         	movff	btemp+11,??_ISR_timer0+13
  3731  000046  EE15  F090         	lfsr	1,___inthi_sp
  3732                           
  3733                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  3734  00004A  9EF2               	bcf	4082,7,c	;volatile
  3735                           
  3736                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  3737  00004C  A4F2               	btfss	4082,2,c	;volatile
  3738  00004E  D22C               	goto	i2u56_40
  3739                           
  3740                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  3741  000050  94F2               	bcf	4082,2,c	;volatile
  3742                           
  3743                           ;int0_test.c: 61:     TMR0L = 252;
  3744  000052  0EFC               	movlw	252
  3745  000054  6ED6               	movwf	4054,c	;volatile
  3746                           
  3747                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  3748  000056  A083               	btfss	3971,0,c	;volatile
  3749  000058  D002               	goto	i2u52_40
  3750  00005A  0E01               	movlw	1
  3751  00005C  D001               	goto	i2u52_46
  3752  00005E                     i2u52_40:
  3753  00005E  0E00               	movlw	0
  3754  000060                     i2u52_46:
  3755  000060  0AFF               	xorlw	255
  3756  000062  6E67               	movwf	??_ISR_timer0& (0+255),c
  3757  000064  5083               	movf	3971,w,c	;volatile
  3758  000066  1867               	xorwf	??_ISR_timer0,w,c
  3759  000068  0BFE               	andlw	-2
  3760  00006A  1867               	xorwf	??_ISR_timer0,w,c
  3761  00006C  6E83               	movwf	3971,c	;volatile
  3762                           
  3763                           ;int0_test.c: 63:     delay_decrement();
  3764  00006E  ECCB  F004         	call	_delay_decrement	;wreg free
  3765                           
  3766                           ;int0_test.c: 65:     quantum--;
  3767  000072  0675               	decf	_quantum,f,c
  3768  000074  A0D8               	btfss	status,0,c
  3769  000076  0676               	decf	_quantum+1,f,c
  3770                           
  3771                           ;int0_test.c: 66:     if (quantum <= 0) {
  3772  000078  BE76               	btfsc	_quantum+1,7,c
  3773  00007A  D005               	goto	i2u53_40
  3774  00007C  5076               	movf	_quantum+1,w,c
  3775  00007E  E102               	bnz	i2u53_41
  3776  000080  0475               	decf	_quantum,w,c
  3777  000082  B0D8               	btfsc	status,0,c
  3778  000084                     i2u53_41:
  3779  000084  D211               	goto	i2u56_40
  3780  000086                     i2u53_40:
  3781                           
  3782                           ;int0_test.c: 67:       quantum = 10;
  3783  000086  0E00               	movlw	0
  3784  000088  6E76               	movwf	_quantum+1,c
  3785  00008A  0E0A               	movlw	10
  3786  00008C  6E75               	movwf	_quantum,c
  3787                           
  3788                           ;int0_test.c: 68:       { who = ready_queue.task_running; ready_queue.tasks[who].task_st
      +                          ate = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = ST
      +                          ATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks
      +                          [who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stac
      +                          k[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL
      +                          ; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size;};
  3789  00008E  C356  F009         	movff	_ready_queue+662,_who
  3790  000092  C357  F00A         	movff	_ready_queue+663,_who+1
  3791  000096  0E6E               	movlw	110
  3792  000098  6EE6               	movwf	postinc1,c
  3793  00009A  0E00               	movlw	0
  3794  00009C  6EE6               	movwf	postinc1,c
  3795  00009E  C009  FFE6         	movff	_who,postinc1
  3796  0000A2  C00A  FFE6         	movff	_who+1,postinc1
  3797  0000A6  ECD3  F009         	call	___wmul	;wreg free
  3798  0000AA  0EC8               	movlw	low (_ready_queue+8)
  3799  0000AC  2447               	addwf	btemp,w,c
  3800  0000AE  6ED9               	movwf	fsr2l,c
  3801  0000B0  0E00               	movlw	high (_ready_queue+8)
  3802  0000B2  2048               	addwfc	btemp+1,w,c
  3803  0000B4  6EDA               	movwf	fsr2h,c
  3804  0000B6  0E00               	movlw	0
  3805  0000B8  6EDF               	movwf	indf2,c
  3806  0000BA  0E6E               	movlw	110
  3807  0000BC  6EE6               	movwf	postinc1,c
  3808  0000BE  0E00               	movlw	0
  3809  0000C0  6EE6               	movwf	postinc1,c
  3810  0000C2  C009  FFE6         	movff	_who,postinc1
  3811  0000C6  C00A  FFE6         	movff	_who+1,postinc1
  3812  0000CA  ECD3  F009         	call	___wmul	;wreg free
  3813  0000CE  0EC5               	movlw	low (_ready_queue+5)
  3814  0000D0  2447               	addwf	btemp,w,c
  3815  0000D2  6ED9               	movwf	fsr2l,c
  3816  0000D4  0E00               	movlw	high (_ready_queue+5)
  3817  0000D6  2048               	addwfc	btemp+1,w,c
  3818  0000D8  6EDA               	movwf	fsr2h,c
  3819  0000DA  CFE8 FFDF          	movff	wreg,indf2	;volatile
  3820  0000DE  0E6E               	movlw	110
  3821  0000E0  6EE6               	movwf	postinc1,c
  3822  0000E2  0E00               	movlw	0
  3823  0000E4  6EE6               	movwf	postinc1,c
  3824  0000E6  C009  FFE6         	movff	_who,postinc1
  3825  0000EA  C00A  FFE6         	movff	_who+1,postinc1
  3826  0000EE  ECD3  F009         	call	___wmul	;wreg free
  3827  0000F2  0EC6               	movlw	low (_ready_queue+6)
  3828  0000F4  2447               	addwf	btemp,w,c
  3829  0000F6  6ED9               	movwf	fsr2l,c
  3830  0000F8  0E00               	movlw	high (_ready_queue+6)
  3831  0000FA  2048               	addwfc	btemp+1,w,c
  3832  0000FC  6EDA               	movwf	fsr2h,c
  3833  0000FE  CFD8 FFDF          	movff	status,indf2	;volatile
  3834  000102  0E6E               	movlw	110
  3835  000104  6EE6               	movwf	postinc1,c
  3836  000106  0E00               	movlw	0
  3837  000108  6EE6               	movwf	postinc1,c
  3838  00010A  C009  FFE6         	movff	_who,postinc1
  3839  00010E  C00A  FFE6         	movff	_who+1,postinc1
  3840  000112  ECD3  F009         	call	___wmul	;wreg free
  3841  000116  0EC7               	movlw	low (_ready_queue+7)
  3842  000118  2447               	addwf	btemp,w,c
  3843  00011A  6ED9               	movwf	fsr2l,c
  3844  00011C  0E00               	movlw	high (_ready_queue+7)
  3845  00011E  2048               	addwfc	btemp+1,w,c
  3846  000120  6EDA               	movwf	fsr2h,c
  3847  000122  CFE0 FFDF          	movff	bsr,indf2	;volatile
  3848  000126  6A07               	clrf	_size,c
  3849  000128  6A08               	clrf	_size+1,c
  3850  00012A  D07B               	goto	i2l1771
  3851  00012C                     i2l1767:
  3852  00012C  0E6E               	movlw	110
  3853  00012E  6EE6               	movwf	postinc1,c
  3854  000130  0E00               	movlw	0
  3855  000132  6EE6               	movwf	postinc1,c
  3856  000134  C009  FFE6         	movff	_who,postinc1
  3857  000138  C00A  FFE6         	movff	_who+1,postinc1
  3858  00013C  ECD3  F009         	call	___wmul	;wreg free
  3859  000140  0EC0               	movlw	low _ready_queue
  3860  000142  6E67               	movwf	??_ISR_timer0& (0+255),c
  3861  000144  0E00               	movlw	high _ready_queue
  3862  000146  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3863  000148  0E09               	movlw	9
  3864  00014A  2667               	addwf	??_ISR_timer0,f,c
  3865  00014C  0E00               	movlw	0
  3866  00014E  2268               	addwfc	??_ISR_timer0+1,f,c
  3867  000150  5047               	movf	btemp,w,c
  3868  000152  2667               	addwf	??_ISR_timer0,f,c
  3869  000154  5048               	movf	btemp+1,w,c
  3870  000156  2268               	addwfc	??_ISR_timer0+1,f,c
  3871  000158  0E03               	movlw	3
  3872  00015A  6EE6               	movwf	postinc1,c
  3873  00015C  0E00               	movlw	0
  3874  00015E  6EE6               	movwf	postinc1,c
  3875  000160  C007  FFE6         	movff	_size,postinc1
  3876  000164  C008  FFE6         	movff	_size+1,postinc1
  3877  000168  ECD3  F009         	call	___wmul	;wreg free
  3878  00016C  5047               	movf	btemp,w,c
  3879  00016E  2467               	addwf	??_ISR_timer0,w,c
  3880  000170  6ED9               	movwf	fsr2l,c
  3881  000172  5048               	movf	btemp+1,w,c
  3882  000174  2068               	addwfc	??_ISR_timer0+1,w,c
  3883  000176  6EDA               	movwf	fsr2h,c
  3884  000178  CFFF FFDF          	movff	tosu,indf2	;volatile
  3885  00017C  0E6E               	movlw	110
  3886  00017E  6EE6               	movwf	postinc1,c
  3887  000180  0E00               	movlw	0
  3888  000182  6EE6               	movwf	postinc1,c
  3889  000184  C009  FFE6         	movff	_who,postinc1
  3890  000188  C00A  FFE6         	movff	_who+1,postinc1
  3891  00018C  ECD3  F009         	call	___wmul	;wreg free
  3892  000190  0EC0               	movlw	low _ready_queue
  3893  000192  6E67               	movwf	??_ISR_timer0& (0+255),c
  3894  000194  0E00               	movlw	high _ready_queue
  3895  000196  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3896  000198  0E0B               	movlw	11
  3897  00019A  2667               	addwf	??_ISR_timer0,f,c
  3898  00019C  0E00               	movlw	0
  3899  00019E  2268               	addwfc	??_ISR_timer0+1,f,c
  3900  0001A0  5047               	movf	btemp,w,c
  3901  0001A2  2667               	addwf	??_ISR_timer0,f,c
  3902  0001A4  5048               	movf	btemp+1,w,c
  3903  0001A6  2268               	addwfc	??_ISR_timer0+1,f,c
  3904  0001A8  0E03               	movlw	3
  3905  0001AA  6EE6               	movwf	postinc1,c
  3906  0001AC  0E00               	movlw	0
  3907  0001AE  6EE6               	movwf	postinc1,c
  3908  0001B0  C007  FFE6         	movff	_size,postinc1
  3909  0001B4  C008  FFE6         	movff	_size+1,postinc1
  3910  0001B8  ECD3  F009         	call	___wmul	;wreg free
  3911  0001BC  5047               	movf	btemp,w,c
  3912  0001BE  2467               	addwf	??_ISR_timer0,w,c
  3913  0001C0  6ED9               	movwf	fsr2l,c
  3914  0001C2  5048               	movf	btemp+1,w,c
  3915  0001C4  2068               	addwfc	??_ISR_timer0+1,w,c
  3916  0001C6  6EDA               	movwf	fsr2h,c
  3917  0001C8  CFFE FFDF          	movff	tosh,indf2	;volatile
  3918  0001CC  0E6E               	movlw	110
  3919  0001CE  6EE6               	movwf	postinc1,c
  3920  0001D0  0E00               	movlw	0
  3921  0001D2  6EE6               	movwf	postinc1,c
  3922  0001D4  C009  FFE6         	movff	_who,postinc1
  3923  0001D8  C00A  FFE6         	movff	_who+1,postinc1
  3924  0001DC  ECD3  F009         	call	___wmul	;wreg free
  3925  0001E0  0EC0               	movlw	low _ready_queue
  3926  0001E2  6E67               	movwf	??_ISR_timer0& (0+255),c
  3927  0001E4  0E00               	movlw	high _ready_queue
  3928  0001E6  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3929  0001E8  0E0A               	movlw	10
  3930  0001EA  2667               	addwf	??_ISR_timer0,f,c
  3931  0001EC  0E00               	movlw	0
  3932  0001EE  2268               	addwfc	??_ISR_timer0+1,f,c
  3933  0001F0  5047               	movf	btemp,w,c
  3934  0001F2  2667               	addwf	??_ISR_timer0,f,c
  3935  0001F4  5048               	movf	btemp+1,w,c
  3936  0001F6  2268               	addwfc	??_ISR_timer0+1,f,c
  3937  0001F8  0E03               	movlw	3
  3938  0001FA  6EE6               	movwf	postinc1,c
  3939  0001FC  0E00               	movlw	0
  3940  0001FE  6EE6               	movwf	postinc1,c
  3941  000200  C007  FFE6         	movff	_size,postinc1
  3942  000204  C008  FFE6         	movff	_size+1,postinc1
  3943  000208  ECD3  F009         	call	___wmul	;wreg free
  3944  00020C  5047               	movf	btemp,w,c
  3945  00020E  2467               	addwf	??_ISR_timer0,w,c
  3946  000210  6ED9               	movwf	fsr2l,c
  3947  000212  5048               	movf	btemp+1,w,c
  3948  000214  2068               	addwfc	??_ISR_timer0+1,w,c
  3949  000216  6EDA               	movwf	fsr2h,c
  3950  000218  CFFD FFDF          	movff	tosl,indf2	;volatile
  3951  00021C  4A07               	infsnz	_size,f,c
  3952  00021E  2A08               	incf	_size+1,f,c
  3953  000220  0006               	pop		;# 
  3954  000222                     i2l1771:
  3955  000222  50FC               	movf	stkptr,w,c	;volatile
  3956  000224  A4D8               	btfss	status,2,c
  3957  000226  D782               	goto	i2l1767
  3958  000228  0E6E               	movlw	110
  3959  00022A  6EE6               	movwf	postinc1,c
  3960  00022C  0E00               	movlw	0
  3961  00022E  6EE6               	movwf	postinc1,c
  3962  000230  C009  FFE6         	movff	_who,postinc1
  3963  000234  C00A  FFE6         	movff	_who+1,postinc1
  3964  000238  ECD3  F009         	call	___wmul	;wreg free
  3965  00023C  0E26               	movlw	low (_ready_queue+102)
  3966  00023E  2447               	addwf	btemp,w,c
  3967  000240  6ED9               	movwf	fsr2l,c
  3968  000242  0E01               	movlw	high (_ready_queue+102)
  3969  000244  2048               	addwfc	btemp+1,w,c
  3970  000246  6EDA               	movwf	fsr2h,c
  3971  000248  C007  FFDE         	movff	_size,postinc2
  3972  00024C  C008  FFDD         	movff	_size+1,postdec2
  3973                           
  3974                           ;int0_test.c: 69:       ready_queue.task_running = round_robin();
  3975  000250  EC1E  F00A         	call	_round_robin	;wreg free
  3976  000254  C047  F356         	movff	btemp,_ready_queue+662
  3977  000258  C048  F357         	movff	btemp+1,_ready_queue+663
  3978                           
  3979                           ;int0_test.c: 70:       { STKPTR = 0; who = ready_queue.task_running; if (ready_queue.ta
      +                          sks[who].task_installed == 0) { ready_queue.tasks[who].task_installed = 1; __asm("PUSH")
      +                          ; TOS = ready_queue.tasks[who].task_f; } else { ready_queue.tasks[who].task_state = RUNN
      +                          ING; WREG = ready_queue.tasks[who].W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BS
      +                          R = ready_queue.tasks[who].BSR_reg; size = ready_queue.tasks[who].task_stack.stack_level
      +                          ; while(size){ __asm("PUSH"); TOSL = ready_queue.tasks[who].task_stack.h_stack[size-1].T
      +                          OSL_reg; TOSH = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSH_reg; TOSU = ready
      +                          _queue.tasks[who].task_stack.h_stack[size-1].TOSU_reg; size--; } }};
  3980  00025C  6AFC               	clrf	stkptr,c	;volatile
  3981  00025E  C356  F009         	movff	_ready_queue+662,_who
  3982  000262  C357  F00A         	movff	_ready_queue+663,_who+1
  3983  000266  0E6E               	movlw	110
  3984  000268  6EE6               	movwf	postinc1,c
  3985  00026A  0E00               	movlw	0
  3986  00026C  6EE6               	movwf	postinc1,c
  3987  00026E  C009  FFE6         	movff	_who,postinc1
  3988  000272  C00A  FFE6         	movff	_who+1,postinc1
  3989  000276  ECD3  F009         	call	___wmul	;wreg free
  3990  00027A  0E28               	movlw	low (_ready_queue+104)
  3991  00027C  2447               	addwf	btemp,w,c
  3992  00027E  6ED9               	movwf	fsr2l,c
  3993  000280  0E01               	movlw	high (_ready_queue+104)
  3994  000282  2048               	addwfc	btemp+1,w,c
  3995  000284  6EDA               	movwf	fsr2h,c
  3996  000286  50DE               	movf	postinc2,w,c
  3997  000288  10DE               	iorwf	postinc2,w,c
  3998  00028A  A4D8               	btfss	status,2,c
  3999  00028C  D02F               	goto	i2l1785
  4000  00028E  0E6E               	movlw	110
  4001  000290  6EE6               	movwf	postinc1,c
  4002  000292  0E00               	movlw	0
  4003  000294  6EE6               	movwf	postinc1,c
  4004  000296  C009  FFE6         	movff	_who,postinc1
  4005  00029A  C00A  FFE6         	movff	_who+1,postinc1
  4006  00029E  ECD3  F009         	call	___wmul	;wreg free
  4007  0002A2  0E28               	movlw	low (_ready_queue+104)
  4008  0002A4  2447               	addwf	btemp,w,c
  4009  0002A6  6ED9               	movwf	fsr2l,c
  4010  0002A8  0E01               	movlw	high (_ready_queue+104)
  4011  0002AA  2048               	addwfc	btemp+1,w,c
  4012  0002AC  6EDA               	movwf	fsr2h,c
  4013  0002AE  0E01               	movlw	1
  4014  0002B0  6EDE               	movwf	postinc2,c
  4015  0002B2  0E00               	movlw	0
  4016  0002B4  6EDD               	movwf	postdec2,c
  4017  0002B6  0005               	push		;# 
  4018  0002B8  0E6E               	movlw	110
  4019  0002BA  6EE6               	movwf	postinc1,c
  4020  0002BC  0E00               	movlw	0
  4021  0002BE  6EE6               	movwf	postinc1,c
  4022  0002C0  C009  FFE6         	movff	_who,postinc1
  4023  0002C4  C00A  FFE6         	movff	_who+1,postinc1
  4024  0002C8  ECD3  F009         	call	___wmul	;wreg free
  4025  0002CC  0E2A               	movlw	low (_ready_queue+106)
  4026  0002CE  2447               	addwf	btemp,w,c
  4027  0002D0  6ED9               	movwf	fsr2l,c
  4028  0002D2  0E01               	movlw	high (_ready_queue+106)
  4029  0002D4  2048               	addwfc	btemp+1,w,c
  4030  0002D6  6EDA               	movwf	fsr2h,c
  4031  0002D8  CFDE F067          	movff	postinc2,??_ISR_timer0
  4032  0002DC  CFDD F068          	movff	postdec2,??_ISR_timer0+1
  4033  0002E0  C067  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  4034  0002E4  C068  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  4035  0002E8  6AFF               	clrf	tosu,c	;volatile
  4036  0002EA  D0DE               	goto	i2u56_40
  4037  0002EC                     i2l1785:
  4038  0002EC  0E6E               	movlw	110
  4039  0002EE  6EE6               	movwf	postinc1,c
  4040  0002F0  0E00               	movlw	0
  4041  0002F2  6EE6               	movwf	postinc1,c
  4042  0002F4  C009  FFE6         	movff	_who,postinc1
  4043  0002F8  C00A  FFE6         	movff	_who+1,postinc1
  4044  0002FC  ECD3  F009         	call	___wmul	;wreg free
  4045  000300  0EC8               	movlw	low (_ready_queue+8)
  4046  000302  2447               	addwf	btemp,w,c
  4047  000304  6ED9               	movwf	fsr2l,c
  4048  000306  0E00               	movlw	high (_ready_queue+8)
  4049  000308  2048               	addwfc	btemp+1,w,c
  4050  00030A  6EDA               	movwf	fsr2h,c
  4051  00030C  0E01               	movlw	1
  4052  00030E  6EDF               	movwf	indf2,c
  4053  000310  0E6E               	movlw	110
  4054  000312  6EE6               	movwf	postinc1,c
  4055  000314  0E00               	movlw	0
  4056  000316  6EE6               	movwf	postinc1,c
  4057  000318  C009  FFE6         	movff	_who,postinc1
  4058  00031C  C00A  FFE6         	movff	_who+1,postinc1
  4059  000320  ECD3  F009         	call	___wmul	;wreg free
  4060  000324  0EC5               	movlw	low (_ready_queue+5)
  4061  000326  2447               	addwf	btemp,w,c
  4062  000328  6ED9               	movwf	fsr2l,c
  4063  00032A  0E00               	movlw	high (_ready_queue+5)
  4064  00032C  2048               	addwfc	btemp+1,w,c
  4065  00032E  6EDA               	movwf	fsr2h,c
  4066  000330  50DF               	movf	indf2,w,c
  4067  000332  6E67               	movwf	??_ISR_timer0& (0+255),c
  4068  000334  5067               	movf	??_ISR_timer0,w,c
  4069  000336  0E6E               	movlw	110
  4070  000338  6EE6               	movwf	postinc1,c
  4071  00033A  0E00               	movlw	0
  4072  00033C  6EE6               	movwf	postinc1,c
  4073  00033E  C009  FFE6         	movff	_who,postinc1
  4074  000342  C00A  FFE6         	movff	_who+1,postinc1
  4075  000346  ECD3  F009         	call	___wmul	;wreg free
  4076  00034A  0EC6               	movlw	low (_ready_queue+6)
  4077  00034C  2447               	addwf	btemp,w,c
  4078  00034E  6ED9               	movwf	fsr2l,c
  4079  000350  0E00               	movlw	high (_ready_queue+6)
  4080  000352  2048               	addwfc	btemp+1,w,c
  4081  000354  6EDA               	movwf	fsr2h,c
  4082  000356  50DF               	movf	indf2,w,c
  4083  000358  6ED8               	movwf	status,c	;volatile
  4084  00035A  0E6E               	movlw	110
  4085  00035C  6EE6               	movwf	postinc1,c
  4086  00035E  0E00               	movlw	0
  4087  000360  6EE6               	movwf	postinc1,c
  4088  000362  C009  FFE6         	movff	_who,postinc1
  4089  000366  C00A  FFE6         	movff	_who+1,postinc1
  4090  00036A  ECD3  F009         	call	___wmul	;wreg free
  4091  00036E  0EC7               	movlw	low (_ready_queue+7)
  4092  000370  2447               	addwf	btemp,w,c
  4093  000372  6ED9               	movwf	fsr2l,c
  4094  000374  0E00               	movlw	high (_ready_queue+7)
  4095  000376  2048               	addwfc	btemp+1,w,c
  4096  000378  6EDA               	movwf	fsr2h,c
  4097  00037A  50DF               	movf	indf2,w,c
  4098  00037C  6EE0               	movwf	bsr,c	;volatile
  4099  00037E  0E6E               	movlw	110
  4100  000380  6EE6               	movwf	postinc1,c
  4101  000382  0E00               	movlw	0
  4102  000384  6EE6               	movwf	postinc1,c
  4103  000386  C009  FFE6         	movff	_who,postinc1
  4104  00038A  C00A  FFE6         	movff	_who+1,postinc1
  4105  00038E  ECD3  F009         	call	___wmul	;wreg free
  4106  000392  0E26               	movlw	low (_ready_queue+102)
  4107  000394  2447               	addwf	btemp,w,c
  4108  000396  6ED9               	movwf	fsr2l,c
  4109  000398  0E01               	movlw	high (_ready_queue+102)
  4110  00039A  2048               	addwfc	btemp+1,w,c
  4111  00039C  6EDA               	movwf	fsr2h,c
  4112  00039E  CFDE F007          	movff	postinc2,_size
  4113  0003A2  CFDD F008          	movff	postdec2,_size+1
  4114  0003A6  D07C               	goto	i2l1791
  4115  0003A8                     i2l59:
  4116  0003A8  0005               	push		;# 
  4117  0003AA  0E6E               	movlw	110
  4118  0003AC  6EE6               	movwf	postinc1,c
  4119  0003AE  0E00               	movlw	0
  4120  0003B0  6EE6               	movwf	postinc1,c
  4121  0003B2  C009  FFE6         	movff	_who,postinc1
  4122  0003B6  C00A  FFE6         	movff	_who+1,postinc1
  4123  0003BA  ECD3  F009         	call	___wmul	;wreg free
  4124  0003BE  0EC0               	movlw	low _ready_queue
  4125  0003C0  6E67               	movwf	??_ISR_timer0& (0+255),c
  4126  0003C2  0E00               	movlw	high _ready_queue
  4127  0003C4  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  4128  0003C6  0E07               	movlw	7
  4129  0003C8  2667               	addwf	??_ISR_timer0,f,c
  4130  0003CA  0E00               	movlw	0
  4131  0003CC  2268               	addwfc	??_ISR_timer0+1,f,c
  4132  0003CE  5047               	movf	btemp,w,c
  4133  0003D0  2667               	addwf	??_ISR_timer0,f,c
  4134  0003D2  5048               	movf	btemp+1,w,c
  4135  0003D4  2268               	addwfc	??_ISR_timer0+1,f,c
  4136  0003D6  0E03               	movlw	3
  4137  0003D8  6EE6               	movwf	postinc1,c
  4138  0003DA  0E00               	movlw	0
  4139  0003DC  6EE6               	movwf	postinc1,c
  4140  0003DE  C007  FFE6         	movff	_size,postinc1
  4141  0003E2  C008  FFE6         	movff	_size+1,postinc1
  4142  0003E6  ECD3  F009         	call	___wmul	;wreg free
  4143  0003EA  5047               	movf	btemp,w,c
  4144  0003EC  2467               	addwf	??_ISR_timer0,w,c
  4145  0003EE  6ED9               	movwf	fsr2l,c
  4146  0003F0  5048               	movf	btemp+1,w,c
  4147  0003F2  2068               	addwfc	??_ISR_timer0+1,w,c
  4148  0003F4  6EDA               	movwf	fsr2h,c
  4149  0003F6  50DF               	movf	indf2,w,c
  4150  0003F8  6EFD               	movwf	tosl,c	;volatile
  4151  0003FA  0E6E               	movlw	110
  4152  0003FC  6EE6               	movwf	postinc1,c
  4153  0003FE  0E00               	movlw	0
  4154  000400  6EE6               	movwf	postinc1,c
  4155  000402  C009  FFE6         	movff	_who,postinc1
  4156  000406  C00A  FFE6         	movff	_who+1,postinc1
  4157  00040A  ECD3  F009         	call	___wmul	;wreg free
  4158  00040E  0EC0               	movlw	low _ready_queue
  4159  000410  6E67               	movwf	??_ISR_timer0& (0+255),c
  4160  000412  0E00               	movlw	high _ready_queue
  4161  000414  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  4162  000416  0E08               	movlw	8
  4163  000418  2667               	addwf	??_ISR_timer0,f,c
  4164  00041A  0E00               	movlw	0
  4165  00041C  2268               	addwfc	??_ISR_timer0+1,f,c
  4166  00041E  5047               	movf	btemp,w,c
  4167  000420  2667               	addwf	??_ISR_timer0,f,c
  4168  000422  5048               	movf	btemp+1,w,c
  4169  000424  2268               	addwfc	??_ISR_timer0+1,f,c
  4170  000426  0E03               	movlw	3
  4171  000428  6EE6               	movwf	postinc1,c
  4172  00042A  0E00               	movlw	0
  4173  00042C  6EE6               	movwf	postinc1,c
  4174  00042E  C007  FFE6         	movff	_size,postinc1
  4175  000432  C008  FFE6         	movff	_size+1,postinc1
  4176  000436  ECD3  F009         	call	___wmul	;wreg free
  4177  00043A  5047               	movf	btemp,w,c
  4178  00043C  2467               	addwf	??_ISR_timer0,w,c
  4179  00043E  6ED9               	movwf	fsr2l,c
  4180  000440  5048               	movf	btemp+1,w,c
  4181  000442  2068               	addwfc	??_ISR_timer0+1,w,c
  4182  000444  6EDA               	movwf	fsr2h,c
  4183  000446  50DF               	movf	indf2,w,c
  4184  000448  6EFE               	movwf	tosh,c	;volatile
  4185  00044A  0E6E               	movlw	110
  4186  00044C  6EE6               	movwf	postinc1,c
  4187  00044E  0E00               	movlw	0
  4188  000450  6EE6               	movwf	postinc1,c
  4189  000452  C009  FFE6         	movff	_who,postinc1
  4190  000456  C00A  FFE6         	movff	_who+1,postinc1
  4191  00045A  ECD3  F009         	call	___wmul	;wreg free
  4192  00045E  0EC0               	movlw	low _ready_queue
  4193  000460  6E67               	movwf	??_ISR_timer0& (0+255),c
  4194  000462  0E00               	movlw	high _ready_queue
  4195  000464  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  4196  000466  0E06               	movlw	6
  4197  000468  2667               	addwf	??_ISR_timer0,f,c
  4198  00046A  0E00               	movlw	0
  4199  00046C  2268               	addwfc	??_ISR_timer0+1,f,c
  4200  00046E  5047               	movf	btemp,w,c
  4201  000470  2667               	addwf	??_ISR_timer0,f,c
  4202  000472  5048               	movf	btemp+1,w,c
  4203  000474  2268               	addwfc	??_ISR_timer0+1,f,c
  4204  000476  0E03               	movlw	3
  4205  000478  6EE6               	movwf	postinc1,c
  4206  00047A  0E00               	movlw	0
  4207  00047C  6EE6               	movwf	postinc1,c
  4208  00047E  C007  FFE6         	movff	_size,postinc1
  4209  000482  C008  FFE6         	movff	_size+1,postinc1
  4210  000486  ECD3  F009         	call	___wmul	;wreg free
  4211  00048A  5047               	movf	btemp,w,c
  4212  00048C  2467               	addwf	??_ISR_timer0,w,c
  4213  00048E  6ED9               	movwf	fsr2l,c
  4214  000490  5048               	movf	btemp+1,w,c
  4215  000492  2068               	addwfc	??_ISR_timer0+1,w,c
  4216  000494  6EDA               	movwf	fsr2h,c
  4217  000496  50DF               	movf	indf2,w,c
  4218  000498  6EFF               	movwf	tosu,c	;volatile
  4219  00049A  0607               	decf	_size,f,c
  4220  00049C  A0D8               	btfss	status,0,c
  4221  00049E  0608               	decf	_size+1,f,c
  4222  0004A0                     i2l1791:
  4223  0004A0  5007               	movf	_size,w,c
  4224  0004A2  1008               	iorwf	_size+1,w,c
  4225  0004A4  A4D8               	btfss	status,2,c
  4226  0004A6  D780               	goto	i2l59
  4227  0004A8                     i2u56_40:
  4228                           
  4229                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  4230                           
  4231                           ;int0_test.c: 73:   }
  4232  0004A8  8EF2               	bsf	4082,7,c	;volatile
  4233  0004AA  C074  F052         	movff	??_ISR_timer0+13,btemp+11
  4234  0004AE  C073  F051         	movff	??_ISR_timer0+12,btemp+10
  4235  0004B2  C072  F050         	movff	??_ISR_timer0+11,btemp+9
  4236  0004B6  C071  F04F         	movff	??_ISR_timer0+10,btemp+8
  4237  0004BA  C070  F048         	movff	??_ISR_timer0+9,btemp+1
  4238  0004BE  C06F  F047         	movff	??_ISR_timer0+8,btemp
  4239  0004C2  C06E  FFF4         	movff	??_ISR_timer0+7,prodh
  4240  0004C6  C06D  FFF3         	movff	??_ISR_timer0+6,prodl
  4241  0004CA  C06C  FFDA         	movff	??_ISR_timer0+5,fsr2h
  4242  0004CE  C06B  FFD9         	movff	??_ISR_timer0+4,fsr2l
  4243  0004D2  C06A  FFE2         	movff	??_ISR_timer0+3,fsr1h
  4244  0004D6  C069  FFE1         	movff	??_ISR_timer0+2,fsr1l
  4245  0004DA  0011               	retfie		f
  4246  0004DC                     __end_of_ISR_timer0:
  4247                           	opt callstack 0
  4248                           
  4249 ;; *************** function _delay_decrement *****************
  4250 ;; Defined at:
  4251 ;;		line 101 in file "kernel.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  i               2  [STACK] int 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1  [STACK] void 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4265 ;;      Params:         0       0       0       0       0       0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0
  4268 ;;      Totals:         0       0       0       0       0       0       0
  4269 ;;Total ram usage:        0 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		_ISR_timer0
  4275 ;; This function uses a reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text25
  4279  000996                     __ptext25:
  4280                           	opt callstack 0
  4281  000996                     _delay_decrement:
  4282                           	opt callstack 0
  4283                           
  4284                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4285  000996  52E6               	movf	postinc1,f,c
  4286  000998  52E6               	movf	postinc1,f,c
  4287                           
  4288                           ;kernel.c: 102:   int i;;kernel.c: 104:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  4289                           ;stkvar	_i @ sp[(-2)+0]
  4290                           
  4291                           ;incstack = 0
  4292  00099A  0EFE               	movlw	-2
  4293  00099C  6AE3               	clrf	plusw1,c
  4294  00099E  0EFF               	movlw	-1
  4295  0009A0  6AE3               	clrf	plusw1,c
  4296  0009A2  D070               	goto	l1655
  4297  0009A4                     l1645:
  4298                           
  4299                           ;kernel.c: 105:     if (ready_queue.tasks[i].task_state == WAITING) {
  4300                           ;stkvar	_i @ sp[(-2)+0]
  4301  0009A4  0EFE               	movlw	-2
  4302  0009A6  CFE3 F051          	movff	plusw1,btemp+10
  4303  0009AA  0EFF               	movlw	-1
  4304  0009AC  CFE3 F052          	movff	plusw1,btemp+11
  4305  0009B0  0E6E               	movlw	110
  4306  0009B2  0251               	mulwf	btemp+10,c
  4307  0009B4  CFF3 F04F          	movff	prodl,btemp+8
  4308  0009B8  CFF4 F050          	movff	prodh,btemp+9
  4309  0009BC  0252               	mulwf	btemp+11,c
  4310  0009BE  50F3               	movf	prodl,w,c
  4311  0009C0  2650               	addwf	btemp+9,f,c
  4312  0009C2  0EC8               	movlw	low (_ready_queue+8)
  4313  0009C4  244F               	addwf	btemp+8,w,c
  4314  0009C6  6ED9               	movwf	fsr2l,c
  4315  0009C8  0E00               	movlw	high (_ready_queue+8)
  4316  0009CA  2050               	addwfc	btemp+9,w,c
  4317  0009CC  6EDA               	movwf	fsr2h,c
  4318  0009CE  0E02               	movlw	2
  4319  0009D0  18DE               	xorwf	postinc2,w,c
  4320  0009D2  A4D8               	btfss	status,2,c
  4321  0009D4  D048               	goto	l1653
  4322                           
  4323                           ;kernel.c: 106:       ready_queue.tasks[i].task_delay_time--;
  4324                           ;stkvar	_i @ sp[(-2)+0]
  4325  0009D6  0EFE               	movlw	-2
  4326  0009D8  CFE3 F051          	movff	plusw1,btemp+10
  4327  0009DC  0EFF               	movlw	-1
  4328  0009DE  CFE3 F052          	movff	plusw1,btemp+11
  4329  0009E2  0E6E               	movlw	110
  4330  0009E4  0251               	mulwf	btemp+10,c
  4331  0009E6  CFF3 F04F          	movff	prodl,btemp+8
  4332  0009EA  CFF4 F050          	movff	prodh,btemp+9
  4333  0009EE  0252               	mulwf	btemp+11,c
  4334  0009F0  50F3               	movf	prodl,w,c
  4335  0009F2  2650               	addwf	btemp+9,f,c
  4336  0009F4  0E2C               	movlw	low (_ready_queue+108)
  4337  0009F6  244F               	addwf	btemp+8,w,c
  4338  0009F8  6ED9               	movwf	fsr2l,c
  4339  0009FA  0E01               	movlw	high (_ready_queue+108)
  4340  0009FC  2050               	addwfc	btemp+9,w,c
  4341  0009FE  6EDA               	movwf	fsr2h,c
  4342  000A00  06DE               	decf	postinc2,f,c
  4343  000A02  0E00               	movlw	0
  4344  000A04  5ADD               	subwfb	postdec2,f,c
  4345                           
  4346                           ;kernel.c: 107:       if (ready_queue.tasks[i].task_delay_time == 0) {
  4347                           ;stkvar	_i @ sp[(-2)+0]
  4348  000A06  0EFE               	movlw	-2
  4349  000A08  CFE3 F051          	movff	plusw1,btemp+10
  4350  000A0C  0EFF               	movlw	-1
  4351  000A0E  CFE3 F052          	movff	plusw1,btemp+11
  4352  000A12  0E6E               	movlw	110
  4353  000A14  0251               	mulwf	btemp+10,c
  4354  000A16  CFF3 F04F          	movff	prodl,btemp+8
  4355  000A1A  CFF4 F050          	movff	prodh,btemp+9
  4356  000A1E  0252               	mulwf	btemp+11,c
  4357  000A20  50F3               	movf	prodl,w,c
  4358  000A22  2650               	addwf	btemp+9,f,c
  4359  000A24  0E2C               	movlw	low (_ready_queue+108)
  4360  000A26  244F               	addwf	btemp+8,w,c
  4361  000A28  6ED9               	movwf	fsr2l,c
  4362  000A2A  0E01               	movlw	high (_ready_queue+108)
  4363  000A2C  2050               	addwfc	btemp+9,w,c
  4364  000A2E  6EDA               	movwf	fsr2h,c
  4365  000A30  50DE               	movf	postinc2,w,c
  4366  000A32  10DE               	iorwf	postinc2,w,c
  4367  000A34  A4D8               	btfss	status,2,c
  4368  000A36  D017               	goto	l1653
  4369                           
  4370                           ;kernel.c: 108:         ready_queue.tasks[i].task_state = READY;
  4371                           ;stkvar	_i @ sp[(-2)+0]
  4372  000A38  0EFE               	movlw	-2
  4373  000A3A  CFE3 F051          	movff	plusw1,btemp+10
  4374  000A3E  0EFF               	movlw	-1
  4375  000A40  CFE3 F052          	movff	plusw1,btemp+11
  4376  000A44  0E6E               	movlw	110
  4377  000A46  0251               	mulwf	btemp+10,c
  4378  000A48  CFF3 F04F          	movff	prodl,btemp+8
  4379  000A4C  CFF4 F050          	movff	prodh,btemp+9
  4380  000A50  0252               	mulwf	btemp+11,c
  4381  000A52  50F3               	movf	prodl,w,c
  4382  000A54  2650               	addwf	btemp+9,f,c
  4383  000A56  0EC8               	movlw	low (_ready_queue+8)
  4384  000A58  244F               	addwf	btemp+8,w,c
  4385  000A5A  6ED9               	movwf	fsr2l,c
  4386  000A5C  0E00               	movlw	high (_ready_queue+8)
  4387  000A5E  2050               	addwfc	btemp+9,w,c
  4388  000A60  6EDA               	movwf	fsr2h,c
  4389  000A62  0E00               	movlw	0
  4390  000A64  6EDF               	movwf	indf2,c
  4391  000A66                     l1653:
  4392                           
  4393                           ;kernel.c: 114:   }
  4394                           ;stkvar	_i @ sp[(-2)+0]
  4395  000A66  0EFE               	movlw	-2
  4396  000A68  50E3               	movf	plusw1,w,c
  4397  000A6A  0F01               	addlw	1
  4398  000A6C  6E47               	movwf	btemp,c
  4399  000A6E  0EFE               	movlw	-2
  4400  000A70  C047  FFE3         	movff	btemp,plusw1
  4401  000A74  6A47               	clrf	btemp,c
  4402  000A76  0EFF               	movlw	-1
  4403  000A78  50E3               	movf	plusw1,w,c
  4404  000A7A  2047               	addwfc	btemp,w,c
  4405  000A7C  6E47               	movwf	btemp,c
  4406  000A7E  0EFF               	movlw	-1
  4407  000A80  C047  FFE3         	movff	btemp,plusw1
  4408  000A84                     l1655:
  4409  000A84  EE23  F054         	lfsr	2,_ready_queue+660
  4410                           
  4411                           ;stkvar	_i @ sp[(-2)+0]
  4412  000A88  0EFE               	movlw	-2
  4413  000A8A  CFE3 F047          	movff	plusw1,btemp
  4414  000A8E  50DE               	movf	postinc2,w,c
  4415  000A90  5C47               	subwf	btemp,w,c
  4416  000A92  0EFF               	movlw	-1
  4417  000A94  CFE3 F047          	movff	plusw1,btemp
  4418  000A98  50DE               	movf	postinc2,w,c
  4419  000A9A  5847               	subwfb	btemp,w,c
  4420  000A9C  A0D8               	btfss	status,0,c
  4421  000A9E  D782               	goto	l1645
  4422                           
  4423                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  4424  000AA0  52E5               	movf	postdec1,f,c
  4425  000AA2  52E5               	movf	postdec1,f,c
  4426  000AA4  0012               	return		;funcret
  4427  000AA6                     __end_of_delay_decrement:
  4428                           	opt callstack 0
  4429                           
  4430 ;; *************** function ___wmul *****************
  4431 ;; Defined at:
  4432 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  multiplier      2  [STACK] unsigned int 
  4435 ;;  multiplicand    2  [STACK] unsigned int 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  product         2  [STACK] unsigned int 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  2  [STACK] unsigned int 
  4440 ;; Registers used:
  4441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4447 ;;      Params:         0       0       0       0       0       0       0
  4448 ;;      Locals:         0       0       0       0       0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0
  4450 ;;      Totals:         0       0       0       0       0       0       0
  4451 ;;Total ram usage:        0 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_ISR_timer0
  4457 ;; This function uses a reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text26
  4461  0013A6                     __ptext26:
  4462                           	opt callstack 0
  4463  0013A6                     ___wmul:
  4464                           	opt callstack 0
  4465                           
  4466                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4467  0013A6  52E6               	movf	postinc1,f,c
  4468  0013A8  52E6               	movf	postinc1,f,c
  4469                           
  4470                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4471                           
  4472                           ;incstack = 0
  4473  0013AA  0EFA               	movlw	-6
  4474  0013AC  CFE3 F052          	movff	plusw1,btemp+11
  4475                           
  4476                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4477  0013B0  0EFC               	movlw	-4
  4478  0013B2  50E3               	movf	plusw1,w,c
  4479  0013B4  0252               	mulwf	btemp+11,c
  4480                           
  4481                           ;stkvar	_product @ sp[(-2)+0]
  4482  0013B6  0EFE               	movlw	-2
  4483  0013B8  CFF3 FFE3          	movff	prodl,plusw1
  4484  0013BC  0EFF               	movlw	-1
  4485  0013BE  CFF4 FFE3          	movff	prodh,plusw1
  4486                           
  4487                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4488  0013C2  0EFB               	movlw	251
  4489  0013C4  24E1               	addwf	fsr1l,w,c
  4490  0013C6  6ED9               	movwf	fsr2l,c
  4491  0013C8  0EFF               	movlw	255
  4492  0013CA  20E2               	addwfc	fsr1h,w,c
  4493  0013CC  6EDA               	movwf	fsr2h,c
  4494  0013CE  50DF               	movf	indf2,w,c
  4495  0013D0  6E52               	movwf	btemp+11,c
  4496                           
  4497                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4498  0013D2  0EFC               	movlw	-4
  4499  0013D4  50E3               	movf	plusw1,w,c
  4500  0013D6  0252               	mulwf	btemp+11,c
  4501  0013D8  CFF3 FFF4          	movff	prodl,prodh
  4502  0013DC  6AF3               	clrf	prodl,c
  4503                           
  4504                           ;stkvar	_product @ sp[(-2)+0]
  4505  0013DE  50E1               	movf	fsr1l,w,c
  4506  0013E0  0FFE               	addlw	-2
  4507  0013E2  6ED9               	movwf	fsr2l,c
  4508  0013E4  50E2               	movf	fsr1h,w,c
  4509  0013E6  6EDA               	movwf	fsr2h,c
  4510  0013E8  0EFF               	movlw	255
  4511  0013EA  22DA               	addwfc	fsr2h,f,c
  4512  0013EC  50F3               	movf	prodl,w,c
  4513  0013EE  26DE               	addwf	postinc2,f,c
  4514  0013F0  50F4               	movf	prodh,w,c
  4515  0013F2  22DD               	addwfc	postdec2,f,c
  4516                           
  4517                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4518  0013F4  0EFA               	movlw	-6
  4519  0013F6  CFE3 F052          	movff	plusw1,btemp+11
  4520                           
  4521                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4522  0013FA  0EFD               	movlw	253
  4523  0013FC  24E1               	addwf	fsr1l,w,c
  4524  0013FE  6ED9               	movwf	fsr2l,c
  4525  001400  0EFF               	movlw	255
  4526  001402  20E2               	addwfc	fsr1h,w,c
  4527  001404  6EDA               	movwf	fsr2h,c
  4528  001406  50DF               	movf	indf2,w,c
  4529  001408  0252               	mulwf	btemp+11,c
  4530  00140A  CFF3 FFF4          	movff	prodl,prodh
  4531  00140E  6AF3               	clrf	prodl,c
  4532                           
  4533                           ;stkvar	_product @ sp[(-2)+0]
  4534  001410  50E1               	movf	fsr1l,w,c
  4535  001412  0FFE               	addlw	-2
  4536  001414  6ED9               	movwf	fsr2l,c
  4537  001416  50E2               	movf	fsr1h,w,c
  4538  001418  6EDA               	movwf	fsr2h,c
  4539  00141A  0EFF               	movlw	255
  4540  00141C  22DA               	addwfc	fsr2h,f,c
  4541  00141E  50F3               	movf	prodl,w,c
  4542  001420  26DE               	addwf	postinc2,f,c
  4543  001422  50F4               	movf	prodh,w,c
  4544  001424  22DD               	addwfc	postdec2,f,c
  4545                           
  4546                           ;stkvar	_product @ sp[(-2)+0]
  4547  001426  0EFE               	movlw	-2
  4548  001428  CFE3 F047          	movff	plusw1,btemp
  4549  00142C  0EFF               	movlw	-1
  4550  00142E  CFE3 F048          	movff	plusw1,btemp+1
  4551                           
  4552                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  4553  001432  0EFA               	movlw	250
  4554  001434  26E1               	addwf	fsr1l,f,c
  4555  001436  0EFF               	movlw	255
  4556  001438  22E2               	addwfc	fsr1h,f,c
  4557  00143A  0012               	return		;funcret
  4558  00143C                     __end_of___wmul:
  4559                           	opt callstack 0
  4560  0000                     
  4561                           	psect	text27
  4562  000000                     __ptext27:
  4563                           	opt callstack 0
  4564                           
  4565                           	psect	rparam
  4566  0000                     
  4567                           	psect	temp
  4568  000047                     btemp:
  4569                           	opt callstack 0
  4570  000047                     	ds	32
  4571  0000                     wtemp0	set	btemp
  4572  0000                     wtemp1	set	btemp+2
  4573  0000                     wtemp2	set	btemp+4
  4574  0000                     wtemp3	set	btemp+6
  4575  0000                     wtemp4	set	btemp+8
  4576  0000                     wtemp5	set	btemp+10
  4577  0000                     wtemp8	set	btemp+1
  4578  0000                     ttemp0	set	btemp
  4579  0000                     ttemp1	set	btemp+3
  4580  0000                     ttemp2	set	btemp+6
  4581  0000                     ttemp3	set	btemp+9
  4582  0000                     ttemp5	set	btemp+1
  4583  0000                     ttemp6	set	btemp+4
  4584  0000                     ttemp7	set	btemp+8
  4585  0000                     ltemp0	set	btemp
  4586  0000                     ltemp1	set	btemp+4
  4587  0000                     ltemp2	set	btemp+8
  4588  0000                     lltemp0	set	btemp
  4589  0000                     lltemp1	set	btemp+8
  4590  0000                     lltemp2	set	btemp+16
  4591  0000                     lltemp3	set	btemp+24
  4592                           tosu	equ	0xFFF
  4593                           tosh	equ	0xFFE
  4594                           tosl	equ	0xFFD
  4595                           stkptr	equ	0xFFC
  4596                           pclatu	equ	0xFFB
  4597                           pclath	equ	0xFFA
  4598                           pcl	equ	0xFF9
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           prodh	equ	0xFF4
  4604                           prodl	equ	0xFF3
  4605                           indf0	equ	0xFEF
  4606                           postinc0	equ	0xFEE
  4607                           postdec0	equ	0xFED
  4608                           preinc0	equ	0xFEC
  4609                           plusw0	equ	0xFEB
  4610                           fsr0h	equ	0xFEA
  4611                           fsr0l	equ	0xFE9
  4612                           wreg	equ	0xFE8
  4613                           indf1	equ	0xFE7
  4614                           postinc1	equ	0xFE6
  4615                           postdec1	equ	0xFE5
  4616                           preinc1	equ	0xFE4
  4617                           plusw1	equ	0xFE3
  4618                           fsr1h	equ	0xFE2
  4619                           fsr1l	equ	0xFE1
  4620                           bsr	equ	0xFE0
  4621                           indf2	equ	0xFDF
  4622                           postinc2	equ	0xFDE
  4623                           postdec2	equ	0xFDD
  4624                           preinc2	equ	0xFDC
  4625                           plusw2	equ	0xFDB
  4626                           fsr2h	equ	0xFDA
  4627                           fsr2l	equ	0xFD9
  4628                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1310
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      86
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    mem	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), w_pipe(BANK0[16]), out_sem(BANK0[16]), cover_sem(BANK0[16]), 
		 -> check_sem(COMRAM[16]), fill_sem(COMRAM[16]), count_sem(COMRAM[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), w_pipe(BANK0[16]), out_sem(BANK0[16]), cover_sem(BANK0[16]), 
		 -> check_sem(COMRAM[16]), fill_sem(COMRAM[16]), count_sem(COMRAM[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), w_pipe(BANK0[16]), out_sem(BANK0[16]), cover_sem(BANK0[16]), 
		 -> check_sem(COMRAM[16]), fill_sem(COMRAM[16]), count_sem(COMRAM[16]), 

    data	PTR unsigned int  size(2) Largest target is 2
		 -> data(STACK[2]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    S545pipe$r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    S545pipe$w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    S258pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1159
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0     352
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _pipe_create                                          6     0      6     264
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     347
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   114   110      4     211
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0    1124
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         2     2      0    2110
                    _lunos_delayTask
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            4     4      0    2168
                    _lunos_delayTask
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0    1124
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         2     2      0    2110
                    _lunos_delayTask
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            4     4      0    2168
                    _lunos_delayTask
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer0                                         14    14      0     498
                                              0 COMRAM    14    14      0
                             ___wmul
                    _delay_decrement
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (13) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _user_conf
     _pipe_create
       _sem_init
     _sem_init

 _task_idle (ROOT)

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   _delay_decrement
   _round_robin
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     498      17       76.6%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      56       1       90.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96      15        0.0%
DATA                 0      0     52E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jun 06 14:10:53 2019

                        _p 003B   __end_of_lunos_createTask 0CC0                        l127 086C  
                      l304 1718                        l315 1768                        l326 165C  
                      l336 118A                        l290 14CE                        l186 15CE  
                      l339 11C4                        l294 14E4                        _BSR 000FE0  
                      u400 10F8                        u440 128A                        u460 12F0  
                      u380 0990                        u391 0CA4                        _TOS 000FFD  
                      _who 0009                _round_robin 143C                        wreg 000FE8  
             __CFG_WDT$OFF 000000                       l1513 0596                       l1531 0792  
                     l1517 06B0                       l1607 10AC                       l1625 1262  
                     l1537 0988                       l1619 0FCC                       l1635 12D2  
                     l1571 10E4                       l1653 0A66                       l1645 09A4  
                     l1655 0A84                       l1831 152E                       l1913 11F2  
                     l1659 144C                       l1579 113E                       i2l59 03A8  
                     _TOSH 000FFE                       _TOSL 000FFD                       _WREG 000FE8  
                     _TOSU 000FFF                       _main 1552              _global_buffer 0001  
   __size_of_count_bottles 0086                       _size 0007                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0047                       prodh 000FF4                       prodl 000FF3  
                     start 000C               ___param_bank 000000            __end_of___lwmod 1306  
                    _TMR0L 000FD6                      u42_20 0F04                      u62_20 1722  
                    u65_20 1772                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      u59_20 153E                      u68_20 1666  
              ?_ISR_timer0 0067       __size_of_check_level 0050                      tablat 000FF5  
                    ltemp0 0047                      ltemp1 004B                      ltemp2 004F  
                    plusw0 000FEB                      plusw1 000FE3                      plusw2 000FDB  
                    ttemp0 0047                      ttemp1 004A                      ttemp2 004D  
                    ttemp3 0050                      ttemp5 0048                      ttemp6 004B  
                    ttemp7 004F                      status 000FD8                      wtemp0 0047  
                    wtemp1 0049                      wtemp2 004B                      wtemp3 004D  
                    wtemp4 004F                      wtemp5 0051                      wtemp8 0048  
 __size_of_delay_decrement 0110            __initialization 178E               __end_of_main 15D0  
            _count_bottles 14CC              __activetblptr 000000                     i2l1771 0222  
                   i2l1791 04A0                     i2l1767 012C                     i2l1785 02EC  
                   _STATUS 000FD8                     _STKPTR 000FFC       __size_of_config_INT0 0010  
     __size_of_fill_bottle 0050        __size_of_ISR_timer0 04D4                     ___wmul 13A6  
                   clear_0 17AE                     clear_1 17C0                     clear_2 17CC  
                   _r_pipe 0080                     _w_pipe 0090           __end_of_sem_init 1640  
         __end_of_sem_wait 10B4           __end_of_sem_post 0FD4               __pdataCOMRAM 0075  
                   lltemp0 0047                     lltemp1 004F                     lltemp2 0057  
                   lltemp3 005F                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0080    __end_of__initialization 17D2  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001             __pcstackCOMRAM 0067  
               ___inthi_sp 0590       __end_of_cover_bottle 169C                 __pbssBANK0 0080  
       __size_of_count_out 00C8              __uDynamicHeap 0358         __size_of_scheduler 0006  
       __size_of_pipe_read 0108         __size_of_task_idle 0004               ??_ISR_timer0 0067  
                  i2u52_40 005E                    i2u52_46 0060                    i2u53_40 0086  
                  i2u53_41 0084                    i2u56_40 04A8                 _dispatcher 04DC  
          _lunos_delayTask 169C       __size_of_pipe_create 010E         __size_of_user_conf 00A0  
                  __Hparam 0000                    __Lparam 0000            __size_of___wmul 0096  
       __end_of_ISR_timer0 04DC                    ___lwmod 124A                    __pcinit 178E  
                  __ramtop 0600          __end_of_count_out 124A                    __ptext0 1552  
                  __ptext1 1306                    __ptext2 0AA6                    __ptext3 15D0  
                  __ptext4 17D8                    __ptext5 0BB4                    __ptext6 10B4  
                  __ptext7 04DC                    __ptext8 182C                    __ptext9 143C  
                _T0CONbits 000FD5                    _quantum 0075                    _out_sem 00A0  
        __end_of_scheduler 1832             __pintcode_body 0014       end_of_initialization 17D2  
        __end_of_pipe_read 0ED2          __end_of_task_idle 1836                    int_func 0014  
               _pipe_write 0CC0      __end_of_config_timer0 181C                    postdec0 000FED  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 _lunos_init 17D8  
        __end_of_user_conf 13A6                  _PORTBbits 000F81                  _PORTCbits 000F82  
                _PORTDbits 000F83    __end_of_lunos_delayTask 16EE      __size_of_cover_bottle 005C  
                _TRISDbits 000F95       __size_of_round_robin 0090        __end_of_check_level 178E  
          _delay_decrement 0996               _cover_bottle 1640             __end_of___wmul 143C  
            __pidataCOMRAM 1836        start_initialization 178E  __size_of_lunos_createTask 010C  
      __end_of_config_INT0 182C        __size_of_dispatcher 04BA        __end_of_fill_bottle 173E  
              __pbssBIGRAM 00C0                __pbssCOMRAM 0001                _check_level 173E  
  __end_of_delay_decrement 0AA6       __end_of_SRAMInitHeap 1182                  _check_sem 000B  
                __pintcode 0008          __size_of_sem_init 0070          __size_of_sem_wait 00E0  
        __size_of_sem_post 0102      __end_of_count_bottles 1552        __size_of_pipe_write 010A  
                _cover_sem 00B0                  _count_sem 002B                  _count_out 1182  
      __size_of_lunos_init 0032                  _scheduler 182C                _config_INT0 181C  
                _pipe_read 0DCA                _fill_bottle 16EE                  _task_idle 1832  
                _user_conf 1306           _lunos_createTask 0BB4                _INTCON2bits 000FF1  
      __end_of_pipe_create 0BB4                   __Hrparam 0000                   __Lrparam 0000  
       __end_of_dispatcher 0996           __size_of___lwmod 00BC     __size_of_config_timer0 0012  
    __size_of_SRAMInitHeap 00CE                   __ptext10 124A                   __ptext11 180A  
                 __ptext20 1640                   __ptext12 181C                   __ptext21 0CC0  
                 __ptext13 1832                   __ptext22 1182                   __ptext14 14CC  
                 __ptext23 0DCA                   __ptext15 0FD4                   __ptext16 0ED2  
                 __ptext25 0996                   __ptext17 169C                   __ptext26 13A6  
                 __ptext18 16EE                   __ptext27 0000                   __ptext19 173E  
                 _fill_sem 001B              __size_of_main 007E                _ready_queue 00C0  
                 _sem_init 15D0                   _sem_wait 0FD4                   _sem_post 0ED2  
             _SRAMInitHeap 10B4                 _INTCONbits 000FF2         __end_of_pipe_write 0DCA  
              _pipe_create 0AA6        __end_of_round_robin 14CC                   intlevel1 0000  
                 intlevel2 0000         __end_of_lunos_init 180A              _config_timer0 180A  
               _ISR_timer0 0008   __size_of_lunos_delayTask 0052  
