

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun  5 15:18:43 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 2.05
    53                           ; Generated 20/12/2018 GMT
    54                           ; 
    55                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87 ;;_p	offset=-2 (param)
    88 ;;_w	offset=-4 (param)
    89 ;;_r	offset=-6 (param)
    90 ;;_s	offset=-2 (param)
    91 ;;_valor	offset=-4 (param)
    92 ;;_pHeap	offset	0
    93 ;;_temp	offset	2
    94 ;;_segHeader	offset	4
    95 ;;_segLen	offset	5
    96 ;;_nBytes	offset=-1 (param)
    97 ;;_pSegB	offset	0
    98 ;;_uSegB	offset	2
    99 ;;_uSegA	offset	3
   100 ;;_uSum	offset	4
   101 ;;_pSegA	offset=-2 (param)
   102 ;;_new_task	offset	0
   103 ;;_prior	offset=-2 (param)
   104 ;;_f	offset=-4 (param)
   105 ;;_count	offset	0
   106 ;;_pHeap	offset	2
   107 ;;_state	offset=-1 (param)
   108 ;;_next_task_to_run	offset	0
   109 ;;_counter	offset	0
   110 ;;_dividend	offset=-2 (param)
   111 ;;_divisor	offset=-4 (param)
   112 ;;_bottle	offset	0
   113 ;;_time	offset=-2 (param)
   114 ;;_state	offset=-1 (param)
   115 ;;_next_task_to_run	offset	0
   116 ;;_counter	offset	0
   117 ;;_dividend	offset=-2 (param)
   118 ;;_divisor	offset=-4 (param)
   119 ;;_out_bottles	offset	0
   120 ;;_p	offset=-2 (param)
   121 ;;_data	offset=-4 (param)
   122 ;;_s	offset=-2 (param)
   123 ;;_s	offset=-2 (param)
   124 ;;_dado	offset	0
   125 ;;_p	offset=-2 (param)
   126 ;;_data	offset=-4 (param)
   127 ;;_i	offset	0
   128 ;;_i	offset	0
   129 ;;_next_task_to_run	offset	0
   130 ;;_counter	offset	0
   131 ;;_dividend	offset=-2 (param)
   132 ;;_divisor	offset=-4 (param)
   133 ;;_i	offset	0
   134 ;;_product	offset	0
   135 ;;_multiplier	offset=-2 (param)
   136 ;;_multiplicand	offset=-4 (param)
   137                           
   138                           	psect	idataCOMRAM
   139  001BBC                     __pidataCOMRAM:
   140                           	opt callstack 0
   141                           
   142                           ;initializer for _quantum
   143  001BBC  000A               	dw	10
   144  0000                     _TOS	set	4093
   145  0000                     _PORTBbits	set	3969
   146  0000                     _PORTCbits	set	3970
   147  0000                     _TRISD	set	3989
   148  0000                     _TRISC	set	3988
   149  0000                     _TRISB	set	3987
   150  0000                     _STKPTR	set	4092
   151  0000                     _TOSL	set	4093
   152  0000                     _TOSH	set	4094
   153  0000                     _TOSU	set	4095
   154  0000                     _BSR	set	4064
   155  0000                     _STATUS	set	4056
   156  0000                     _WREG	set	4072
   157  0000                     _PORTDbits	set	3971
   158  0000                     _TMR0L	set	4054
   159  0000                     _T0CONbits	set	4053
   160  0000                     _INTCON2bits	set	4081
   161  0000                     _INTCONbits	set	4082
   162  0000                     _TRISDbits	set	3989
   163  0000                     _FREE	set	32052
   164                           
   165                           ; #config settings
   166  0000                     
   167                           	psect	cinit
   168  001A16                     __pcinit:
   169                           	opt callstack 0
   170  001A16                     start_initialization:
   171                           	opt callstack 0
   172  001A16                     __initialization:
   173                           	opt callstack 0
   174                           
   175                           ; Initialize objects allocated to COMRAM (2 bytes)
   176                           ; load TBLPTR registers with __pidataCOMRAM
   177  001A16  0EBC               	movlw	low __pidataCOMRAM
   178  001A18  6EF6               	movwf	tblptrl,c
   179  001A1A  0E1B               	movlw	high __pidataCOMRAM
   180  001A1C  6EF7               	movwf	tblptrh,c
   181  001A1E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   182  001A20  6EF8               	movwf	tblptru,c
   183  001A22  0009               	tblrd		*+	;fetch initializer
   184  001A24  CFF5 F073          	movff	tablat,__pdataCOMRAM
   185  001A28  0009               	tblrd		*+	;fetch initializer
   186  001A2A  CFF5 F074          	movff	tablat,__pdataCOMRAM+1
   187                           
   188                           ; Clear objects allocated to BIGRAM (1056 bytes)
   189  001A2E  EE00  F08E         	lfsr	0,__pbssBIGRAM
   190  001A32  EE24 F020          	lfsr	2,1056
   191  001A36                     clear_0:
   192  001A36  6AEE               	clrf	postinc0,c
   193  001A38  50DD               	movf	postdec2,w,c
   194  001A3A  50D9               	movf	fsr2l,w,c
   195  001A3C  E1FC               	bnz	clear_0
   196  001A3E  50DA               	movf	fsr2h,w,c
   197  001A40  E1FA               	bnz	clear_0
   198                           
   199                           ; Clear objects allocated to BANK0 (14 bytes)
   200  001A42  EE00  F080         	lfsr	0,__pbssBANK0
   201  001A46  0E0E               	movlw	14
   202  001A48                     clear_1:
   203  001A48  6AEE               	clrf	postinc0,c
   204  001A4A  06E8               	decf	wreg,f,c
   205  001A4C  E1FD               	bnz	clear_1
   206                           
   207                           ; Clear objects allocated to COMRAM (66 bytes)
   208  001A4E  EE00  F001         	lfsr	0,__pbssCOMRAM
   209  001A52  0E42               	movlw	66
   210  001A54                     clear_2:
   211  001A54  6AEE               	clrf	postinc0,c
   212  001A56  06E8               	decf	wreg,f,c
   213  001A58  E1FD               	bnz	clear_2
   214  001A5A                     end_of_initialization:
   215                           	opt callstack 0
   216  001A5A                     __end_of__initialization:
   217                           	opt callstack 0
   218  001A5A  0100               	movlb	0
   219  001A5C  EF6A  F00B         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222  000001                     __pbssCOMRAM:
   223                           	opt callstack 0
   224  000001                     _global_buffer:
   225                           	opt callstack 0
   226  000001                     	ds	6
   227  000007                     _mem:
   228                           	opt callstack 0
   229  000007                     	ds	2
   230  000009                     _size:
   231                           	opt callstack 0
   232  000009                     	ds	2
   233  00000B                     _who:
   234                           	opt callstack 0
   235  00000B                     	ds	2
   236  00000D                     _w_pipe:
   237                           	opt callstack 0
   238  00000D                     	ds	14
   239  00001B                     _teste_2:
   240                           	opt callstack 0
   241  00001B                     	ds	14
   242  000029                     _teste_1:
   243                           	opt callstack 0
   244  000029                     	ds	14
   245  000037                     _p:
   246                           	opt callstack 0
   247  000037                     	ds	12
   248                           
   249                           	psect	dataCOMRAM
   250  000073                     __pdataCOMRAM:
   251                           	opt callstack 0
   252  000073                     _quantum:
   253                           	opt callstack 0
   254  000073                     	ds	2
   255                           
   256                           	psect	bssBANK0
   257  000080                     __pbssBANK0:
   258                           	opt callstack 0
   259  000080                     _r_pipe:
   260                           	opt callstack 0
   261  000080                     	ds	14
   262                           
   263                           	psect	bssBIGRAM
   264  00008E                     __pbssBIGRAM:
   265                           	opt callstack 0
   266  00008E                     _ready_queue:
   267                           	opt callstack 0
   268  00008E                     	ds	544
   269  0002AE                     __uDynamicHeap:
   270                           	opt callstack 0
   271  0002AE                     	ds	512
   272                           
   273                           	psect	cstackCOMRAM
   274  000063                     __pcstackCOMRAM:
   275                           	opt callstack 0
   276  000063                     ??_ISR_timer0:
   277                           
   278                           ; 1 bytes @ 0x0
   279  000063                     	ds	16
   280                           
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 16 in file "main.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1  [STACK] void 
   293 ;; Registers used:
   294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   300 ;;      Params:         0       0       0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0       0       0
   302 ;;      Temps:          0       0       0       0       0       0       0
   303 ;;      Totals:         0       0       0       0       0       0       0
   304 ;;Total ram usage:        0 bytes
   305 ;; Hardware stack levels required when called:   14
   306 ;; This function calls:
   307 ;;		_config_INT0
   308 ;;		_config_timer0
   309 ;;		_dispatcher
   310 ;;		_lunos_createTask
   311 ;;		_lunos_init
   312 ;;		_user_conf
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a reentrant model
   316 ;;
   317                           
   318                           	psect	text0
   319  0016D4                     __ptext0:
   320                           	opt callstack 0
   321  0016D4                     _main:
   322                           	opt callstack 17
   323                           
   324                           ;main.c: 18:   lunos_createTask(5, &check_level);
   325                           
   326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   327                           ;incstack = 0
   328  0016D4  EC73  F00D         	call	_lunos_init	;wreg free
   329                           
   330                           ;main.c: 20:   lunos_createTask(7, &count_out);
   331  0016D8  EC56  F00C         	call	_user_conf	;wreg free
   332                           
   333                           ;main.c: 21: 
   334  0016DC  ECD1  F00D         	call	_config_INT0	;wreg free
   335                           
   336                           ;main.c: 22: 
   337  0016E0  ECC8  F00D         	call	_config_timer0	;wreg free
   338                           
   339                           ;main.c: 30: }
   340  0016E4  0E16               	movlw	low _count_bottles
   341  0016E6  6EE6               	movwf	postinc1,c
   342  0016E8  0E19               	movlw	high _count_bottles
   343  0016EA  6EE6               	movwf	postinc1,c
   344  0016EC  0E03               	movlw	3
   345  0016EE  6EE6               	movwf	postinc1,c
   346  0016F0  0E00               	movlw	0
   347  0016F2  6EE6               	movwf	postinc1,c
   348  0016F4  EC48  F008         	call	_lunos_createTask	;wreg free
   349  0016F8  0E74               	movlw	low _fill_bottle
   350  0016FA  6EE6               	movwf	postinc1,c
   351  0016FC  0E1B               	movlw	high _fill_bottle
   352  0016FE  6EE6               	movwf	postinc1,c
   353  001700  0E04               	movlw	4
   354  001702  6EE6               	movwf	postinc1,c
   355  001704  0E00               	movlw	0
   356  001706  6EE6               	movwf	postinc1,c
   357  001708  EC48  F008         	call	_lunos_createTask	;wreg free
   358  00170C  0E18               	movlw	low _check_level
   359  00170E  6EE6               	movwf	postinc1,c
   360  001710  0E1B               	movlw	high _check_level
   361  001712  6EE6               	movwf	postinc1,c
   362  001714  0E05               	movlw	5
   363  001716  6EE6               	movwf	postinc1,c
   364  001718  0E00               	movlw	0
   365  00171A  6EE6               	movwf	postinc1,c
   366  00171C  EC48  F008         	call	_lunos_createTask	;wreg free
   367  001720  0E60               	movlw	low _cover_bottle
   368  001722  6EE6               	movwf	postinc1,c
   369  001724  0E1A               	movlw	high _cover_bottle
   370  001726  6EE6               	movwf	postinc1,c
   371  001728  0E06               	movlw	6
   372  00172A  6EE6               	movwf	postinc1,c
   373  00172C  0E00               	movlw	0
   374  00172E  6EE6               	movwf	postinc1,c
   375  001730  EC48  F008         	call	_lunos_createTask	;wreg free
   376  001734  0E40               	movlw	low _count_out
   377  001736  6EE6               	movwf	postinc1,c
   378  001738  0E18               	movlw	high _count_out
   379  00173A  6EE6               	movwf	postinc1,c
   380  00173C  0E07               	movlw	7
   381  00173E  6EE6               	movwf	postinc1,c
   382  001740  0E00               	movlw	0
   383  001742  6EE6               	movwf	postinc1,c
   384  001744  EC48  F008         	call	_lunos_createTask	;wreg free
   385  001748  0E00               	movlw	0
   386  00174A  6EE6               	movwf	postinc1,c
   387  00174C  EC66  F002         	call	_dispatcher	;wreg free
   388  001750                     l186:
   389  001750  D7FF               	goto	l186
   390  001752                     __end_of_main:
   391                           	opt callstack 0
   392                           
   393 ;; *************** function _user_conf *****************
   394 ;; Defined at:
   395 ;;		line 20 in file "tasks.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1  [STACK] void 
   402 ;; Registers used:
   403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   409 ;;      Params:         0       0       0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0       0       0
   412 ;;      Totals:         0       0       0       0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; Hardware stack levels required when called:   12
   416 ;; This function calls:
   417 ;;		_SRAMalloc
   418 ;;		_pipe_create
   419 ;;		_sem_init
   420 ;; This function is called by:
   421 ;;		_main
   422 ;; This function uses a reentrant model
   423 ;;
   424                           
   425                           	psect	text1
   426  0018AC                     __ptext1:
   427                           	opt callstack 0
   428  0018AC                     _user_conf:
   429                           	opt callstack 18
   430                           
   431                           ;tasks.c: 21:   TRISB = 0b00000001;
   432                           
   433                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   434                           ;incstack = 0
   435  0018AC  0E01               	movlw	1
   436  0018AE  6E93               	movwf	3987,c	;volatile
   437                           
   438                           ;tasks.c: 22:   TRISC = 0b01111111;
   439  0018B0  0E7F               	movlw	127
   440  0018B2  6E94               	movwf	3988,c	;volatile
   441                           
   442                           ;tasks.c: 23:   TRISD = 0b01111110;
   443  0018B4  0E7E               	movlw	126
   444  0018B6  6E95               	movwf	3989,c	;volatile
   445                           
   446                           ;tasks.c: 24:   PORTCbits.RC7 = 1;
   447  0018B8  8E82               	bsf	3970,7,c	;volatile
   448                           
   449                           ;tasks.c: 26:   sem_init(&teste_1, 1);
   450  0018BA  0E01               	movlw	1
   451  0018BC  6EE6               	movwf	postinc1,c
   452  0018BE  0E00               	movlw	0
   453  0018C0  6EE6               	movwf	postinc1,c
   454  0018C2  0E29               	movlw	low _teste_1
   455  0018C4  6EE6               	movwf	postinc1,c
   456  0018C6  0E00               	movlw	high _teste_1
   457  0018C8  6EE6               	movwf	postinc1,c
   458  0018CA  ECE8  F00B         	call	_sem_init	;wreg free
   459                           
   460                           ;tasks.c: 27:   sem_init(&teste_2, 0);
   461  0018CE  0E00               	movlw	0
   462  0018D0  6EE6               	movwf	postinc1,c
   463  0018D2  0E00               	movlw	0
   464  0018D4  6EE6               	movwf	postinc1,c
   465  0018D6  0E1B               	movlw	low _teste_2
   466  0018D8  6EE6               	movwf	postinc1,c
   467  0018DA  0E00               	movlw	high _teste_2
   468  0018DC  6EE6               	movwf	postinc1,c
   469  0018DE  ECE8  F00B         	call	_sem_init	;wreg free
   470                           
   471                           ;tasks.c: 28:   pipe_create(&p, &w_pipe, &r_pipe);
   472  0018E2  0E80               	movlw	low _r_pipe
   473  0018E4  6EE6               	movwf	postinc1,c
   474  0018E6  0E00               	movlw	high _r_pipe
   475  0018E8  6EE6               	movwf	postinc1,c
   476  0018EA  0E0D               	movlw	low _w_pipe
   477  0018EC  6EE6               	movwf	postinc1,c
   478  0018EE  0E00               	movlw	high _w_pipe
   479  0018F0  6EE6               	movwf	postinc1,c
   480  0018F2  0E37               	movlw	low _p
   481  0018F4  6EE6               	movwf	postinc1,c
   482  0018F6  0E00               	movlw	high _p
   483  0018F8  6EE6               	movwf	postinc1,c
   484  0018FA  ECB8  F006         	call	_pipe_create	;wreg free
   485                           
   486                           ;tasks.c: 29:   mem = SRAMalloc(5);
   487  0018FE  0E05               	movlw	5
   488  001900  6EE6               	movwf	postinc1,c
   489  001902  ECB8  F004         	call	_SRAMalloc	;wreg free
   490  001906  C043  F007         	movff	btemp,_mem
   491  00190A  C044  F008         	movff	btemp+1,_mem+1
   492                           
   493                           ;tasks.c: 31:   global_buffer.count = 0;
   494  00190E  6A01               	clrf	_global_buffer,c
   495  001910  6A02               	clrf	_global_buffer+1,c
   496                           
   497                           ;tasks.c: 32:   global_buffer.p_state = FREE_;
   498  001912  6A06               	clrf	_global_buffer+5,c
   499                           
   500                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   501  001914  0012               	return		;funcret
   502  001916                     __end_of_user_conf:
   503                           	opt callstack 0
   504                           
   505 ;; *************** function _pipe_create *****************
   506 ;; Defined at:
   507 ;;		line 9 in file "pipe.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;  p               2  [STACK] PTR struct pipe
   510 ;;		 -> p(12), 
   511 ;;  w               2  [STACK] PTR struct semaphore
   512 ;;		 -> w_pipe(14), 
   513 ;;  r               2  [STACK] PTR struct semaphore
   514 ;;		 -> r_pipe(14), 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1  [STACK] void 
   519 ;; Registers used:
   520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   526 ;;      Params:         0       0       0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0
   529 ;;      Totals:         0       0       0       0       0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; Hardware stack levels required when called:   11
   533 ;; This function calls:
   534 ;;		_sem_init
   535 ;; This function is called by:
   536 ;;		_user_conf
   537 ;; This function uses a reentrant model
   538 ;;
   539                           
   540                           	psect	text2
   541  000D70                     __ptext2:
   542                           	opt callstack 0
   543  000D70                     _pipe_create:
   544                           	opt callstack 18
   545                           
   546                           ;pipe.c: 10:   p->index_write = 0;
   547                           ;stkvar	_p @ sp[(0)+-2]
   548                           
   549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   550                           ;incstack = 0
   551  000D70  0EFE               	movlw	-2
   552  000D72  CFE3 F04D          	movff	plusw1,btemp+10
   553  000D76  0EFF               	movlw	-1
   554  000D78  CFE3 F04E          	movff	plusw1,btemp+11
   555  000D7C  0E04               	movlw	4
   556  000D7E  244D               	addwf	btemp+10,w,c
   557  000D80  6ED9               	movwf	fsr2l,c
   558  000D82  0E00               	movlw	0
   559  000D84  204E               	addwfc	btemp+11,w,c
   560  000D86  6EDA               	movwf	fsr2h,c
   561  000D88  0E00               	movlw	0
   562  000D8A  6EDE               	movwf	postinc2,c
   563  000D8C  0E00               	movlw	0
   564  000D8E  6EDD               	movwf	postdec2,c
   565                           
   566                           ;pipe.c: 11:   p->index_read = 0;
   567                           ;stkvar	_p @ sp[(0)+-2]
   568  000D90  0EFE               	movlw	-2
   569  000D92  CFE3 F04D          	movff	plusw1,btemp+10
   570  000D96  0EFF               	movlw	-1
   571  000D98  CFE3 F04E          	movff	plusw1,btemp+11
   572  000D9C  0E06               	movlw	6
   573  000D9E  244D               	addwf	btemp+10,w,c
   574  000DA0  6ED9               	movwf	fsr2l,c
   575  000DA2  0E00               	movlw	0
   576  000DA4  204E               	addwfc	btemp+11,w,c
   577  000DA6  6EDA               	movwf	fsr2h,c
   578  000DA8  0E00               	movlw	0
   579  000DAA  6EDE               	movwf	postinc2,c
   580  000DAC  0E00               	movlw	0
   581  000DAE  6EDD               	movwf	postdec2,c
   582                           
   583                           ;pipe.c: 12:   p->w = w;
   584                           ;stkvar	_w @ sp[(0)+-4]
   585  000DB0  50E1               	movf	fsr1l,w,c
   586  000DB2  0FFC               	addlw	-4
   587  000DB4  6ED9               	movwf	fsr2l,c
   588  000DB6  50E2               	movf	fsr1h,w,c
   589  000DB8  6EDA               	movwf	fsr2h,c
   590  000DBA  0EFF               	movlw	255
   591  000DBC  22DA               	addwfc	fsr2h,f,c
   592                           
   593                           ;stkvar	_p @ sp[(0)+-2]
   594  000DBE  0EFE               	movlw	-2
   595  000DC0  CFE3 F04D          	movff	plusw1,btemp+10
   596  000DC4  0EFF               	movlw	-1
   597  000DC6  CFE3 F04E          	movff	plusw1,btemp+11
   598  000DCA  0E08               	movlw	8
   599  000DCC  244D               	addwf	btemp+10,w,c
   600  000DCE  6EE9               	movwf	fsr0l,c
   601  000DD0  0E00               	movlw	0
   602  000DD2  204E               	addwfc	btemp+11,w,c
   603  000DD4  6EEA               	movwf	fsr0h,c
   604  000DD6  CFDE FFEE          	movff	postinc2,postinc0
   605  000DDA  CFDD FFED          	movff	postdec2,postdec0
   606                           
   607                           ;pipe.c: 13:   p->r = r;
   608                           ;stkvar	_r @ sp[(0)+-6]
   609  000DDE  50E1               	movf	fsr1l,w,c
   610  000DE0  0FFA               	addlw	-6
   611  000DE2  6ED9               	movwf	fsr2l,c
   612  000DE4  50E2               	movf	fsr1h,w,c
   613  000DE6  6EDA               	movwf	fsr2h,c
   614  000DE8  0EFF               	movlw	255
   615  000DEA  22DA               	addwfc	fsr2h,f,c
   616                           
   617                           ;stkvar	_p @ sp[(0)+-2]
   618  000DEC  0EFE               	movlw	-2
   619  000DEE  CFE3 F04D          	movff	plusw1,btemp+10
   620  000DF2  0EFF               	movlw	-1
   621  000DF4  CFE3 F04E          	movff	plusw1,btemp+11
   622  000DF8  0E0A               	movlw	10
   623  000DFA  244D               	addwf	btemp+10,w,c
   624  000DFC  6EE9               	movwf	fsr0l,c
   625  000DFE  0E00               	movlw	0
   626  000E00  204E               	addwfc	btemp+11,w,c
   627  000E02  6EEA               	movwf	fsr0h,c
   628  000E04  CFDE FFEE          	movff	postinc2,postinc0
   629  000E08  CFDD FFED          	movff	postdec2,postdec0
   630                           
   631                           ;pipe.c: 14:   sem_init(p->w, 2);
   632  000E0C  0E02               	movlw	2
   633  000E0E  6EE6               	movwf	postinc1,c
   634  000E10  0E00               	movlw	0
   635  000E12  6EE6               	movwf	postinc1,c
   636                           
   637                           ;stkvar	_p @ sp[(-2)+-2]
   638  000E14  0EFC               	movlw	-4
   639  000E16  CFE3 F04D          	movff	plusw1,btemp+10
   640  000E1A  0EFD               	movlw	-3
   641  000E1C  CFE3 F04E          	movff	plusw1,btemp+11
   642  000E20  0E08               	movlw	8
   643  000E22  244D               	addwf	btemp+10,w,c
   644  000E24  6ED9               	movwf	fsr2l,c
   645  000E26  0E00               	movlw	0
   646  000E28  204E               	addwfc	btemp+11,w,c
   647  000E2A  6EDA               	movwf	fsr2h,c
   648  000E2C  CFDE F04D          	movff	postinc2,btemp+10
   649  000E30  CFDD F04E          	movff	postdec2,btemp+11
   650  000E34  C04D  FFE6         	movff	btemp+10,postinc1
   651  000E38  C04E  FFE6         	movff	btemp+11,postinc1
   652  000E3C  ECE8  F00B         	call	_sem_init	;wreg free
   653                           
   654                           ;pipe.c: 15:   sem_init(p->r, 0);
   655  000E40  0E00               	movlw	0
   656  000E42  6EE6               	movwf	postinc1,c
   657  000E44  0E00               	movlw	0
   658  000E46  6EE6               	movwf	postinc1,c
   659                           
   660                           ;stkvar	_p @ sp[(-2)+-2]
   661  000E48  0EFC               	movlw	-4
   662  000E4A  CFE3 F04D          	movff	plusw1,btemp+10
   663  000E4E  0EFD               	movlw	-3
   664  000E50  CFE3 F04E          	movff	plusw1,btemp+11
   665  000E54  0E0A               	movlw	10
   666  000E56  244D               	addwf	btemp+10,w,c
   667  000E58  6ED9               	movwf	fsr2l,c
   668  000E5A  0E00               	movlw	0
   669  000E5C  204E               	addwfc	btemp+11,w,c
   670  000E5E  6EDA               	movwf	fsr2h,c
   671  000E60  CFDE F04D          	movff	postinc2,btemp+10
   672  000E64  CFDD F04E          	movff	postdec2,btemp+11
   673  000E68  C04D  FFE6         	movff	btemp+10,postinc1
   674  000E6C  C04E  FFE6         	movff	btemp+11,postinc1
   675  000E70  ECE8  F00B         	call	_sem_init	;wreg free
   676                           
   677                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
   678  000E74  0EFA               	movlw	250
   679  000E76  26E1               	addwf	fsr1l,f,c
   680  000E78  0EFF               	movlw	255
   681  000E7A  22E2               	addwfc	fsr1h,f,c
   682  000E7C  0012               	return		;funcret
   683  000E7E                     __end_of_pipe_create:
   684                           	opt callstack 0
   685                           
   686 ;; *************** function _sem_init *****************
   687 ;; Defined at:
   688 ;;		line 10 in file "semaphore.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  s               2  [STACK] PTR struct semaphore
   691 ;;		 -> r_pipe(14), w_pipe(14), teste_2(14), teste_1(14), 
   692 ;;  valor           2  [STACK] int 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1  [STACK] void 
   697 ;; Registers used:
   698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   704 ;;      Params:         0       0       0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0
   707 ;;      Totals:         0       0       0       0       0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:   10
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_pipe_create
   715 ;;		_user_conf
   716 ;; This function uses a reentrant model
   717 ;;
   718                           
   719                           	psect	text3
   720  0017D0                     __ptext3:
   721                           	opt callstack 0
   722  0017D0                     _sem_init:
   723                           	opt callstack 19
   724                           
   725                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   726                           
   727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   728                           ;incstack = 0
   729  0017D0  9EF2               	bcf	4082,7,c	;volatile
   730                           
   731                           ;semaphore.c: 13:   s->contador = valor;
   732                           ;stkvar	_valor @ sp[(0)+-4]
   733  0017D2  50E1               	movf	fsr1l,w,c
   734  0017D4  0FFC               	addlw	-4
   735  0017D6  6ED9               	movwf	fsr2l,c
   736  0017D8  50E2               	movf	fsr1h,w,c
   737  0017DA  6EDA               	movwf	fsr2h,c
   738  0017DC  0EFF               	movlw	255
   739  0017DE  22DA               	addwfc	fsr2h,f,c
   740                           
   741                           ;stkvar	_s @ sp[(0)+-2]
   742  0017E0  0EFE               	movlw	-2
   743  0017E2  CFE3 FFE9          	movff	plusw1,fsr0l
   744  0017E6  0EFF               	movlw	-1
   745  0017E8  CFE3 FFEA          	movff	plusw1,fsr0h
   746  0017EC  CFDE FFEE          	movff	postinc2,postinc0
   747  0017F0  CFDD FFED          	movff	postdec2,postdec0
   748                           
   749                           ;semaphore.c: 14:   s->bloqued_size = 0;
   750                           ;stkvar	_s @ sp[(0)+-2]
   751  0017F4  0EFE               	movlw	-2
   752  0017F6  CFE3 F04D          	movff	plusw1,btemp+10
   753  0017FA  0EFF               	movlw	-1
   754  0017FC  CFE3 F04E          	movff	plusw1,btemp+11
   755  001800  0E0A               	movlw	10
   756  001802  244D               	addwf	btemp+10,w,c
   757  001804  6ED9               	movwf	fsr2l,c
   758  001806  0E00               	movlw	0
   759  001808  204E               	addwfc	btemp+11,w,c
   760  00180A  6EDA               	movwf	fsr2h,c
   761  00180C  0E00               	movlw	0
   762  00180E  6EDE               	movwf	postinc2,c
   763  001810  0E00               	movlw	0
   764  001812  6EDD               	movwf	postdec2,c
   765                           
   766                           ;semaphore.c: 15:   s->task_to_ready = 0;
   767                           ;stkvar	_s @ sp[(0)+-2]
   768  001814  0EFE               	movlw	-2
   769  001816  CFE3 F04D          	movff	plusw1,btemp+10
   770  00181A  0EFF               	movlw	-1
   771  00181C  CFE3 F04E          	movff	plusw1,btemp+11
   772  001820  0E0C               	movlw	12
   773  001822  244D               	addwf	btemp+10,w,c
   774  001824  6ED9               	movwf	fsr2l,c
   775  001826  0E00               	movlw	0
   776  001828  204E               	addwfc	btemp+11,w,c
   777  00182A  6EDA               	movwf	fsr2h,c
   778  00182C  0E00               	movlw	0
   779  00182E  6EDE               	movwf	postinc2,c
   780  001830  0E00               	movlw	0
   781  001832  6EDD               	movwf	postdec2,c
   782                           
   783                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   784  001834  8EF2               	bsf	4082,7,c	;volatile
   785                           
   786                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   787  001836  52E5               	movf	postdec1,f,c
   788  001838  52E5               	movf	postdec1,f,c
   789  00183A  52E5               	movf	postdec1,f,c
   790  00183C  52E5               	movf	postdec1,f,c
   791  00183E  0012               	return		;funcret
   792  001840                     __end_of_sem_init:
   793                           	opt callstack 0
   794                           
   795 ;; *************** function _SRAMalloc *****************
   796 ;; Defined at:
   797 ;;		line 191 in file "sralloc.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  nBytes          1  [STACK] unsigned char 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  pHeap           2  [STACK] PTR struct _SALLOC
   802 ;;		 -> _uDynamicHeap(512), 
   803 ;;  temp            2  [STACK] PTR struct _SALLOC
   804 ;;		 -> _uDynamicHeap(512), 
   805 ;;  segHeader       1  [STACK] struct _SALLOC
   806 ;;  segLen          1  [STACK] unsigned char 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  2  [STACK] PTR unsigned char 
   809 ;; Registers used:
   810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   816 ;;      Params:         0       0       0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:   11
   823 ;; This function calls:
   824 ;;		__SRAMmerge
   825 ;; This function is called by:
   826 ;;		_user_conf
   827 ;; This function uses a reentrant model
   828 ;;
   829                           
   830                           	psect	text4
   831  000970                     __ptext4:
   832                           	opt callstack 0
   833  000970                     _SRAMalloc:
   834                           	opt callstack 0
   835                           
   836                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   837  000970  0E06               	movlw	6
   838  000972  26E1               	addwf	fsr1l,f,c
   839  000974  0E00               	movlw	0
   840  000976  22E2               	addwfc	fsr1h,f,c
   841                           
   842                           ;sralloc.c: 191: unsigned char * SRAMalloc( unsigned char nBytes);sralloc.c: 192: {;sral
      +                          loc.c: 193:  SALLOC * pHeap;;sralloc.c: 194:  SALLOC * temp;;sralloc.c: 195:       SALLO
      +                          C segHeader;;sralloc.c: 196:       unsigned char segLen;;sralloc.c: 199:  if (nBytes > (
      +                          0x7F - 1)) return (0);
   843                           ;stkvar	_nBytes @ sp[(-6)+-1]
   844                           
   845                           ;incstack = 0
   846  000978  0EF9               	movlw	-7
   847  00097A  CFE3 F043          	movff	plusw1,btemp
   848  00097E  0E7E               	movlw	126
   849  000980  6443               	cpfsgt	btemp,c
   850  000982  D005               	goto	l1784
   851  000984                     u730:
   852  000984  0E00               	movlw	0
   853  000986  6E43               	movwf	btemp,c
   854  000988  0E00               	movlw	0
   855  00098A  6E44               	movwf	btemp+1,c
   856  00098C  D0BB               	goto	l380
   857  00098E                     l1784:
   858                           
   859                           ;sralloc.c: 202:  pHeap = (SALLOC *)_uDynamicHeap;
   860                           ;stkvar	_pHeap @ sp[(-6)+0]
   861  00098E  0E02               	movlw	high __uDynamicHeap
   862  000990  6E43               	movwf	btemp,c
   863  000992  0EFB               	movlw	-5
   864  000994  C043  FFE3         	movff	btemp,plusw1
   865  000998  0EAE               	movlw	low __uDynamicHeap
   866  00099A  6E43               	movwf	btemp,c
   867  00099C  0EFA               	movlw	-6
   868  00099E  C043  FFE3         	movff	btemp,plusw1
   869  0009A2                     l1786:
   870                           
   871                           ;sralloc.c: 205:  {;sralloc.c: 207:   segHeader = *pHeap;
   872                           ;stkvar	_pHeap @ sp[(-6)+0]
   873  0009A2  0EFA               	movlw	-6
   874  0009A4  CFE3 FFD9          	movff	plusw1,fsr2l
   875  0009A8  0EFB               	movlw	-5
   876  0009AA  CFE3 FFDA          	movff	plusw1,fsr2h
   877  0009AE  50DF               	movf	indf2,w,c
   878  0009B0  6E4E               	movwf	btemp+11,c
   879                           
   880                           ;stkvar	_segHeader @ sp[(-6)+4]
   881  0009B2  0EFE               	movlw	-2
   882  0009B4  C04E  FFE3         	movff	btemp+11,plusw1
   883                           
   884                           ;sralloc.c: 210:   segLen = segHeader.bits.count - 1;
   885                           ;stkvar	_segHeader @ sp[(-6)+4]
   886  0009B8  50E1               	movf	fsr1l,w,c
   887  0009BA  0FFE               	addlw	-2
   888  0009BC  6ED9               	movwf	fsr2l,c
   889  0009BE  50E2               	movf	fsr1h,w,c
   890  0009C0  6EDA               	movwf	fsr2h,c
   891  0009C2  0EFF               	movlw	255
   892  0009C4  22DA               	addwfc	fsr2h,f,c
   893  0009C6  50DF               	movf	223,w,c
   894  0009C8  0B7F               	andlw	127
   895  0009CA  6E4E               	movwf	btemp+11,c
   896  0009CC  0EFF               	movlw	255
   897  0009CE  264E               	addwf	btemp+11,f,c
   898                           
   899                           ;stkvar	_segLen @ sp[(-6)+5]
   900  0009D0  0EFF               	movlw	-1
   901  0009D2  C04E  FFE3         	movff	btemp+11,plusw1
   902                           
   903                           ;sralloc.c: 213:   if (segHeader.byte == 0) return (0);
   904                           ;stkvar	_segHeader @ sp[(-6)+4]
   905  0009D6  0EFE               	movlw	-2
   906  0009D8  50E3               	movf	plusw1,w,c
   907  0009DA  B4D8               	btfsc	status,2,c
   908  0009DC  D7D3               	goto	u730
   909                           
   910                           ;sralloc.c: 216:   if (!(segHeader.bits.alloc))
   911                           ;stkvar	_segHeader @ sp[(-6)+4]
   912  0009DE  50E1               	movf	fsr1l,w,c
   913  0009E0  0FFE               	addlw	-2
   914  0009E2  6ED9               	movwf	fsr2l,c
   915  0009E4  50E2               	movf	fsr1h,w,c
   916  0009E6  6EDA               	movwf	fsr2h,c
   917  0009E8  0EFF               	movlw	255
   918  0009EA  22DA               	addwfc	fsr2h,f,c
   919  0009EC  BEDF               	btfsc	indf2,7,c
   920  0009EE  D016               	goto	u770
   921                           
   922                           ;sralloc.c: 217:   {;sralloc.c: 219:    if (nBytes > segLen)
   923                           ;stkvar	_nBytes @ sp[(-6)+-1]
   924                           ;stkvar	_segLen @ sp[(-6)+5]
   925  0009F0  50E1               	movf	fsr1l,w,c
   926  0009F2  0FFF               	addlw	-1
   927  0009F4  6ED9               	movwf	fsr2l,c
   928  0009F6  50E2               	movf	fsr1h,w,c
   929  0009F8  6EDA               	movwf	fsr2h,c
   930  0009FA  0EFF               	movlw	255
   931  0009FC  22DA               	addwfc	fsr2h,f,c
   932  0009FE  0EF9               	movlw	-7
   933  000A00  50E3               	movf	plusw1,w,c
   934  000A02  5CDE               	subwf	postinc2,w,c
   935  000A04  B0D8               	btfsc	status,0,c
   936  000A06  D020               	goto	l1804
   937                           
   938                           ;sralloc.c: 220:    {;sralloc.c: 222:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.b
      +                          its.count;
   939                           ;stkvar	_pHeap @ sp[(-6)+0]
   940  000A08  0EFA               	movlw	-6
   941  000A0A  CFE3 FFE6          	movff	plusw1,postinc1
   942  000A0E  CFE3 FFE6          	movff	plusw1,postinc1
   943  000A12  EC87  F005         	call	__SRAMmerge	;wreg free
   944  000A16  5043               	movf	btemp,w,c
   945  000A18  A4D8               	btfss	status,2,c
   946  000A1A  D7C3               	goto	l1786
   947  000A1C                     u770:
   948                           
   949                           ;stkvar	_segHeader @ sp[(-6)+4]
   950  000A1C  50E1               	movf	fsr1l,w,c
   951  000A1E  0FFE               	addlw	-2
   952  000A20  6ED9               	movwf	fsr2l,c
   953  000A22  50E2               	movf	fsr1h,w,c
   954  000A24  6EDA               	movwf	fsr2h,c
   955  000A26  0EFF               	movlw	255
   956  000A28  22DA               	addwfc	fsr2h,f,c
   957  000A2A  50DF               	movf	223,w,c
   958  000A2C  0B7F               	andlw	127
   959  000A2E  0D01               	mullw	1
   960                           
   961                           ;stkvar	_pHeap @ sp[(-6)+0]
   962  000A30  50E1               	movf	fsr1l,w,c
   963  000A32  0FFA               	addlw	-6
   964  000A34  6ED9               	movwf	fsr2l,c
   965  000A36  50E2               	movf	fsr1h,w,c
   966  000A38  6EDA               	movwf	fsr2h,c
   967  000A3A  0EFF               	movlw	255
   968  000A3C  22DA               	addwfc	fsr2h,f,c
   969  000A3E  50F3               	movf	prodl,w,c
   970  000A40  26DE               	addwf	postinc2,f,c
   971  000A42  50F4               	movf	prodh,w,c
   972  000A44  22DD               	addwfc	postdec2,f,c
   973  000A46  D7AD               	goto	l1786
   974  000A48                     l1804:
   975                           
   976                           ;sralloc.c: 228:    if (nBytes == segLen)
   977                           ;stkvar	_segLen @ sp[(-6)+5]
   978                           ;stkvar	_nBytes @ sp[(-6)+-1]
   979  000A48  50E1               	movf	fsr1l,w,c
   980  000A4A  0FF9               	addlw	-7
   981  000A4C  6ED9               	movwf	fsr2l,c
   982  000A4E  50E2               	movf	fsr1h,w,c
   983  000A50  6EDA               	movwf	fsr2h,c
   984  000A52  0EFF               	movlw	255
   985  000A54  22DA               	addwfc	fsr2h,f,c
   986  000A56  0EFF               	movlw	-1
   987  000A58  50E3               	movf	plusw1,w,c
   988  000A5A  18DE               	xorwf	postinc2,w,c
   989  000A5C  A4D8               	btfss	status,2,c
   990  000A5E  D011               	goto	l1814
   991                           
   992                           ;sralloc.c: 229:    {;sralloc.c: 231:     (*pHeap).bits.alloc = 1;
   993                           ;stkvar	_pHeap @ sp[(-6)+0]
   994  000A60  0EFA               	movlw	-6
   995  000A62  CFE3 FFD9          	movff	plusw1,fsr2l
   996  000A66  0EFB               	movlw	-5
   997  000A68  CFE3 FFDA          	movff	plusw1,fsr2h
   998  000A6C  8EDF               	bsf	indf2,7,c
   999                           
  1000                           ;sralloc.c: 234:     return ((unsigned char *)(pHeap + 1));
  1001                           ;stkvar	_pHeap @ sp[(-6)+0]
  1002  000A6E  0EFA               	movlw	-6
  1003  000A70  50E3               	movf	plusw1,w,c
  1004  000A72  0F01               	addlw	1
  1005  000A74  6E43               	movwf	btemp,c
  1006  000A76  0EFB               	movlw	-5
  1007  000A78  CFE3 F044          	movff	plusw1,btemp+1
  1008  000A7C  0E00               	movlw	0
  1009  000A7E  2244               	addwfc	btemp+1,f,c
  1010  000A80  D041               	goto	l380
  1011  000A82                     l1814:
  1012                           
  1013                           ;sralloc.c: 239:    {;sralloc.c: 241:     (*pHeap).byte = nBytes + 0x81;
  1014                           ;stkvar	_pHeap @ sp[(-6)+0]
  1015  000A82  0EFA               	movlw	-6
  1016  000A84  CFE3 FFD9          	movff	plusw1,fsr2l
  1017  000A88  0EFB               	movlw	-5
  1018  000A8A  CFE3 FFDA          	movff	plusw1,fsr2h
  1019                           
  1020                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1021  000A8E  0EF9               	movlw	-7
  1022  000A90  50E3               	movf	plusw1,w,c
  1023  000A92  0F81               	addlw	129
  1024  000A94  6EDF               	movwf	indf2,c
  1025                           
  1026                           ;sralloc.c: 244:     temp = pHeap + 1;
  1027                           ;stkvar	_pHeap @ sp[(-6)+0]
  1028  000A96  0EFA               	movlw	-6
  1029  000A98  50E3               	movf	plusw1,w,c
  1030  000A9A  0F01               	addlw	1
  1031  000A9C  6E4D               	movwf	btemp+10,c
  1032  000A9E  0EFB               	movlw	-5
  1033  000AA0  CFE3 F04E          	movff	plusw1,btemp+11
  1034  000AA4  0E00               	movlw	0
  1035  000AA6  224E               	addwfc	btemp+11,f,c
  1036                           
  1037                           ;stkvar	_temp @ sp[(-6)+2]
  1038  000AA8  0EFD               	movlw	-3
  1039  000AAA  C04E  FFE3         	movff	btemp+11,plusw1
  1040  000AAE  0EFC               	movlw	-4
  1041  000AB0  C04D  FFE3         	movff	btemp+10,plusw1
  1042                           
  1043                           ;sralloc.c: 247:     pHeap += (nBytes + 1);
  1044                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1045  000AB4  0EF9               	movlw	-7
  1046  000AB6  50E3               	movf	plusw1,w,c
  1047  000AB8  6E4D               	movwf	btemp+10,c
  1048  000ABA  6A4E               	clrf	btemp+11,c
  1049  000ABC  0E01               	movlw	1
  1050  000ABE  264D               	addwf	btemp+10,f,c
  1051  000AC0  0E00               	movlw	0
  1052  000AC2  224E               	addwfc	btemp+11,f,c
  1053                           
  1054                           ;stkvar	_pHeap @ sp[(-6)+0]
  1055  000AC4  50E1               	movf	fsr1l,w,c
  1056  000AC6  0FFA               	addlw	-6
  1057  000AC8  6ED9               	movwf	fsr2l,c
  1058  000ACA  50E2               	movf	fsr1h,w,c
  1059  000ACC  6EDA               	movwf	fsr2h,c
  1060  000ACE  0EFF               	movlw	255
  1061  000AD0  22DA               	addwfc	fsr2h,f,c
  1062  000AD2  504D               	movf	btemp+10,w,c
  1063  000AD4  26DE               	addwf	postinc2,f,c
  1064  000AD6  504E               	movf	btemp+11,w,c
  1065  000AD8  22DD               	addwfc	postdec2,f,c
  1066                           
  1067                           ;sralloc.c: 250:     (*pHeap).byte = segLen - nBytes;
  1068                           ;stkvar	_pHeap @ sp[(-6)+0]
  1069  000ADA  0EFA               	movlw	-6
  1070  000ADC  CFE3 FFD9          	movff	plusw1,fsr2l
  1071  000AE0  0EFB               	movlw	-5
  1072  000AE2  CFE3 FFDA          	movff	plusw1,fsr2h
  1073                           
  1074                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1075  000AE6  0EF9               	movlw	-7
  1076  000AE8  CFE3 F04E          	movff	plusw1,btemp+11
  1077                           
  1078                           ;stkvar	_segLen @ sp[(-6)+5]
  1079  000AEC  0EFF               	movlw	-1
  1080  000AEE  CFE3 F04D          	movff	plusw1,btemp+10
  1081  000AF2  504E               	movf	btemp+11,w,c
  1082  000AF4  5C4D               	subwf	btemp+10,w,c
  1083  000AF6  6EDF               	movwf	indf2,c
  1084                           
  1085                           ;sralloc.c: 253:     return ((unsigned char *) temp);
  1086                           ;stkvar	_temp @ sp[(-6)+2]
  1087  000AF8  0EFC               	movlw	-4
  1088  000AFA  CFE3 F043          	movff	plusw1,btemp
  1089  000AFE  0EFD               	movlw	-3
  1090  000B00  CFE3 F044          	movff	plusw1,btemp+1
  1091  000B04                     l380:
  1092                           
  1093                           ; _SRAMalloc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  1094  000B04  0EF9               	movlw	249
  1095  000B06  26E1               	addwf	fsr1l,f,c
  1096  000B08  0EFF               	movlw	255
  1097  000B0A  22E2               	addwfc	fsr1h,f,c
  1098  000B0C  0012               	return		;funcret
  1099  000B0E                     __end_of_SRAMalloc:
  1100                           	opt callstack 0
  1101                           
  1102 ;; *************** function __SRAMmerge *****************
  1103 ;; Defined at:
  1104 ;;		line 359 in file "sralloc.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  pSegA           2  [STACK] PTR struct _SALLOC
  1107 ;;		 -> _uDynamicHeap(512), 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  pSegB           2  [STACK] PTR struct _SALLOC
  1110 ;;		 -> _uDynamicHeap(512), 
  1111 ;;  uSegB           1  [STACK] struct _SALLOC
  1112 ;;  uSegA           1  [STACK] struct _SALLOC
  1113 ;;  uSum            1  [STACK] struct _SALLOC
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1  [STACK] unsigned char 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1123 ;;      Params:         0       0       0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:   10
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_SRAMalloc
  1134 ;; This function uses a reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text5
  1138  000B0E                     __ptext5:
  1139                           	opt callstack 0
  1140  000B0E                     __SRAMmerge:
  1141                           	opt callstack 0
  1142                           
  1143                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1144  000B0E  0E05               	movlw	5
  1145  000B10  26E1               	addwf	fsr1l,f,c
  1146  000B12  0E00               	movlw	0
  1147  000B14  22E2               	addwfc	fsr1h,f,c
  1148                           
  1149                           ;sralloc.c: 359:      unsigned char _SRAMmerge(SALLOC * pSegA);sralloc.c: 360: {;sralloc
      +                          .c: 361:  SALLOC * pSegB;;sralloc.c: 362:       SALLOC uSegA, uSegB, uSum;;sralloc.c: 36
      +                          6:  pSegB = pSegA + (*pSegA).byte;
  1150                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1151                           
  1152                           ;incstack = 0
  1153  000B16  0EF9               	movlw	-7
  1154  000B18  CFE3 FFD9          	movff	plusw1,fsr2l
  1155  000B1C  0EFA               	movlw	-6
  1156  000B1E  CFE3 FFDA          	movff	plusw1,fsr2h
  1157  000B22  50DF               	movf	indf2,w,c
  1158  000B24  6E4D               	movwf	btemp+10,c
  1159  000B26  6A4E               	clrf	btemp+11,c
  1160                           
  1161                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1162  000B28  0EF9               	movlw	-7
  1163  000B2A  50E3               	movf	plusw1,w,c
  1164  000B2C  264D               	addwf	btemp+10,f,c
  1165  000B2E  0EFA               	movlw	-6
  1166  000B30  50E3               	movf	plusw1,w,c
  1167  000B32  224E               	addwfc	btemp+11,f,c
  1168                           
  1169                           ;stkvar	_pSegB @ sp[(-5)+0]
  1170  000B34  0EFC               	movlw	-4
  1171  000B36  C04E  FFE3         	movff	btemp+11,plusw1
  1172  000B3A  0EFB               	movlw	-5
  1173  000B3C  C04D  FFE3         	movff	btemp+10,plusw1
  1174                           
  1175                           ;sralloc.c: 369:  uSegA = *pSegA;
  1176                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1177  000B40  0EF9               	movlw	-7
  1178  000B42  CFE3 FFD9          	movff	plusw1,fsr2l
  1179  000B46  0EFA               	movlw	-6
  1180  000B48  CFE3 FFDA          	movff	plusw1,fsr2h
  1181  000B4C  50DF               	movf	indf2,w,c
  1182  000B4E  6E4E               	movwf	btemp+11,c
  1183                           
  1184                           ;stkvar	_uSegA @ sp[(-5)+3]
  1185  000B50  0EFE               	movlw	-2
  1186  000B52  C04E  FFE3         	movff	btemp+11,plusw1
  1187                           
  1188                           ;sralloc.c: 370:  uSegB = *pSegB;
  1189                           ;stkvar	_pSegB @ sp[(-5)+0]
  1190  000B56  0EFB               	movlw	-5
  1191  000B58  CFE3 FFD9          	movff	plusw1,fsr2l
  1192  000B5C  0EFC               	movlw	-4
  1193  000B5E  CFE3 FFDA          	movff	plusw1,fsr2h
  1194  000B62  50DF               	movf	indf2,w,c
  1195  000B64  6E4E               	movwf	btemp+11,c
  1196                           
  1197                           ;stkvar	_uSegB @ sp[(-5)+2]
  1198  000B66  0EFD               	movlw	-3
  1199  000B68  C04E  FFE3         	movff	btemp+11,plusw1
  1200                           
  1201                           ;sralloc.c: 373:  if (uSegB.byte == 0) return (0);
  1202                           ;stkvar	_uSegB @ sp[(-5)+2]
  1203  000B6C  0EFD               	movlw	-3
  1204  000B6E  50E3               	movf	plusw1,w,c
  1205  000B70  A4D8               	btfss	status,2,c
  1206  000B72  D002               	goto	l1658
  1207  000B74                     u630:
  1208  000B74  0E00               	movlw	0
  1209  000B76  D06E               	goto	L1
  1210  000B78                     l1658:
  1211                           
  1212                           ;sralloc.c: 376:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1213                           ;stkvar	_uSegA @ sp[(-5)+3]
  1214  000B78  50E1               	movf	fsr1l,w,c
  1215  000B7A  0FFE               	addlw	-2
  1216  000B7C  6ED9               	movwf	fsr2l,c
  1217  000B7E  50E2               	movf	fsr1h,w,c
  1218  000B80  6EDA               	movwf	fsr2h,c
  1219  000B82  0EFF               	movlw	255
  1220  000B84  22DA               	addwfc	fsr2h,f,c
  1221  000B86  BEDF               	btfsc	indf2,7,c
  1222  000B88  D7F5               	goto	u630
  1223                           
  1224                           ;stkvar	_uSegB @ sp[(-5)+2]
  1225  000B8A  50E1               	movf	fsr1l,w,c
  1226  000B8C  0FFD               	addlw	-3
  1227  000B8E  6ED9               	movwf	fsr2l,c
  1228  000B90  50E2               	movf	fsr1h,w,c
  1229  000B92  6EDA               	movwf	fsr2h,c
  1230  000B94  0EFF               	movlw	255
  1231  000B96  22DA               	addwfc	fsr2h,f,c
  1232  000B98  BEDF               	btfsc	indf2,7,c
  1233  000B9A  D7EC               	goto	u630
  1234                           
  1235                           ;sralloc.c: 379:  if (uSegA.bits.count == 0x7F) return (0);
  1236                           ;stkvar	_uSegA @ sp[(-5)+3]
  1237  000B9C  50E1               	movf	fsr1l,w,c
  1238  000B9E  0FFE               	addlw	-2
  1239  000BA0  6ED9               	movwf	fsr2l,c
  1240  000BA2  50E2               	movf	fsr1h,w,c
  1241  000BA4  6EDA               	movwf	fsr2h,c
  1242  000BA6  0EFF               	movlw	255
  1243  000BA8  22DA               	addwfc	fsr2h,f,c
  1244  000BAA  50DF               	movf	223,w,c
  1245  000BAC  0B7F               	andlw	127
  1246  000BAE  0A7F               	xorlw	127
  1247  000BB0  B4D8               	btfsc	status,2,c
  1248  000BB2  D7E0               	goto	u630
  1249                           
  1250                           ;sralloc.c: 382:  uSum.byte = uSegA.byte + uSegB.byte;
  1251                           ;stkvar	_uSegB @ sp[(-5)+2]
  1252  000BB4  0EFD               	movlw	-3
  1253  000BB6  CFE3 F04E          	movff	plusw1,btemp+11
  1254                           
  1255                           ;stkvar	_uSegA @ sp[(-5)+3]
  1256  000BBA  0EFE               	movlw	-2
  1257  000BBC  50E3               	movf	plusw1,w,c
  1258  000BBE  244E               	addwf	btemp+11,w,c
  1259  000BC0  6E4D               	movwf	btemp+10,c
  1260                           
  1261                           ;stkvar	_uSum @ sp[(-5)+4]
  1262  000BC2  0EFF               	movlw	-1
  1263  000BC4  C04D  FFE3         	movff	btemp+10,plusw1
  1264                           
  1265                           ;sralloc.c: 388:  if ((uSum.byte) > 0x7F)
  1266                           ;stkvar	_uSum @ sp[(-5)+4]
  1267  000BC8  0EFF               	movlw	-1
  1268  000BCA  CFE3 F043          	movff	plusw1,btemp
  1269  000BCE  0E7F               	movlw	127
  1270  000BD0  6443               	cpfsgt	btemp,c
  1271  000BD2  D036               	goto	l1690
  1272                           
  1273                           ;sralloc.c: 389:  {;sralloc.c: 390:   (*pSegA).byte = 0x7F;
  1274                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1275  000BD4  0EF9               	movlw	-7
  1276  000BD6  CFE3 FFD9          	movff	plusw1,fsr2l
  1277  000BDA  0EFA               	movlw	-6
  1278  000BDC  CFE3 FFDA          	movff	plusw1,fsr2h
  1279  000BE0  0E7F               	movlw	127
  1280  000BE2  6EDF               	movwf	indf2,c
  1281                           
  1282                           ;sralloc.c: 391:   pSegA += 0x7F;
  1283                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1284  000BE4  0EF9               	movlw	-7
  1285  000BE6  50E3               	movf	plusw1,w,c
  1286  000BE8  0F7F               	addlw	127
  1287  000BEA  6E43               	movwf	btemp,c
  1288  000BEC  0EF9               	movlw	-7
  1289  000BEE  C043  FFE3         	movff	btemp,plusw1
  1290  000BF2  6A43               	clrf	btemp,c
  1291  000BF4  0EFA               	movlw	-6
  1292  000BF6  50E3               	movf	plusw1,w,c
  1293  000BF8  2043               	addwfc	btemp,w,c
  1294  000BFA  6E43               	movwf	btemp,c
  1295  000BFC  0EFA               	movlw	-6
  1296  000BFE  C043  FFE3         	movff	btemp,plusw1
  1297                           
  1298                           ;sralloc.c: 392:   pSegB += uSegB.byte;
  1299                           ;stkvar	_uSegB @ sp[(-5)+2]
  1300  000C02  0EFD               	movlw	-3
  1301  000C04  50E3               	movf	plusw1,w,c
  1302  000C06  0D01               	mullw	1
  1303                           
  1304                           ;stkvar	_pSegB @ sp[(-5)+0]
  1305  000C08  50E1               	movf	fsr1l,w,c
  1306  000C0A  0FFB               	addlw	-5
  1307  000C0C  6ED9               	movwf	fsr2l,c
  1308  000C0E  50E2               	movf	fsr1h,w,c
  1309  000C10  6EDA               	movwf	fsr2h,c
  1310  000C12  0EFF               	movlw	255
  1311  000C14  22DA               	addwfc	fsr2h,f,c
  1312  000C16  50F3               	movf	prodl,w,c
  1313  000C18  26DE               	addwf	postinc2,f,c
  1314  000C1A  50F4               	movf	prodh,w,c
  1315  000C1C  22DD               	addwfc	postdec2,f,c
  1316                           
  1317                           ;sralloc.c: 393:   (*pSegA).byte = pSegB - pSegA;
  1318                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1319  000C1E  0EF9               	movlw	-7
  1320  000C20  CFE3 FFD9          	movff	plusw1,fsr2l
  1321  000C24  0EFA               	movlw	-6
  1322  000C26  CFE3 FFDA          	movff	plusw1,fsr2h
  1323                           
  1324                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1325  000C2A  0EF9               	movlw	-7
  1326  000C2C  CFE3 F04E          	movff	plusw1,btemp+11
  1327                           
  1328                           ;stkvar	_pSegB @ sp[(-5)+0]
  1329  000C30  0EFB               	movlw	-5
  1330  000C32  CFE3 F04D          	movff	plusw1,btemp+10
  1331  000C36  504E               	movf	btemp+11,w,c
  1332  000C38  5C4D               	subwf	btemp+10,w,c
  1333  000C3A  6EDF               	movwf	indf2,c
  1334                           
  1335                           ;sralloc.c: 395:   return (0x7F);
  1336  000C3C  0E7F               	movlw	127
  1337  000C3E  D00A               	goto	L1
  1338  000C40                     l1690:
  1339                           
  1340                           ;sralloc.c: 400:  {;sralloc.c: 401:   return ((*pSegA).byte = uSum.byte);
  1341                           ;stkvar	_uSum @ sp[(-5)+4]
  1342                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1343  000C40  0EF9               	movlw	-7
  1344  000C42  CFE3 FFD9          	movff	plusw1,fsr2l
  1345  000C46  0EFA               	movlw	-6
  1346  000C48  CFE3 FFDA          	movff	plusw1,fsr2h
  1347  000C4C  0EFF               	movlw	-1
  1348  000C4E  CFE3 FFDF          	movff	plusw1,indf2
  1349  000C52  50DF               	movf	indf2,w,c
  1350  000C54                     L1:
  1351  000C54  6E43               	movwf	btemp,c
  1352                           
  1353                           ; __SRAMmerge: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  1354  000C56  0EF9               	movlw	249
  1355  000C58  26E1               	addwf	fsr1l,f,c
  1356  000C5A  0EFF               	movlw	255
  1357  000C5C  22E2               	addwfc	fsr1h,f,c
  1358  000C5E  0012               	return		;funcret
  1359  000C60                     __end_of__SRAMmerge:
  1360                           	opt callstack 0
  1361                           
  1362 ;; *************** function _lunos_init *****************
  1363 ;; Defined at:
  1364 ;;		line 49 in file "kernel.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1  [STACK] void 
  1371 ;; Registers used:
  1372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1378 ;;      Params:         0       0       0       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0
  1381 ;;      Totals:         0       0       0       0       0       0       0
  1382 ;;Total ram usage:        0 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:   11
  1385 ;; This function calls:
  1386 ;;		_SRAMInitHeap
  1387 ;;		_lunos_createTask
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;; This function uses a reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text6
  1394  001AE6                     __ptext6:
  1395                           	opt callstack 0
  1396  001AE6                     _lunos_init:
  1397                           	opt callstack 19
  1398                           
  1399                           ;kernel.c: 50:   SRAMInitHeap();
  1400                           
  1401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1402                           ;incstack = 0
  1403  001AE6  ECB3  F009         	call	_SRAMInitHeap	;wreg free
  1404                           
  1405                           ;kernel.c: 51:   ready_queue.task_running = 0;
  1406  001AEA  0E00               	movlw	0
  1407  001AEC  CFE8 F2AC          	movff	wreg,_ready_queue+542
  1408  001AF0  0E00               	movlw	0
  1409  001AF2  CFE8 F2AD          	movff	wreg,_ready_queue+543
  1410                           
  1411                           ;kernel.c: 52:   ready_queue.tasks_installed = 0;
  1412  001AF6  0E00               	movlw	0
  1413  001AF8  CFE8 F2AA          	movff	wreg,_ready_queue+540
  1414  001AFC  0E00               	movlw	0
  1415  001AFE  CFE8 F2AB          	movff	wreg,_ready_queue+541
  1416                           
  1417                           ;kernel.c: 53:   lunos_createTask(0, &task_idle);
  1418  001B02  0EB8               	movlw	low _task_idle
  1419  001B04  6EE6               	movwf	postinc1,c
  1420  001B06  0E1B               	movlw	high _task_idle
  1421  001B08  6EE6               	movwf	postinc1,c
  1422  001B0A  0E00               	movlw	0
  1423  001B0C  6EE6               	movwf	postinc1,c
  1424  001B0E  0E00               	movlw	0
  1425  001B10  6EE6               	movwf	postinc1,c
  1426  001B12  EC48  F008         	call	_lunos_createTask	;wreg free
  1427                           
  1428                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  1429  001B16  0012               	return		;funcret
  1430  001B18                     __end_of_lunos_init:
  1431                           	opt callstack 0
  1432                           
  1433 ;; *************** function _lunos_createTask *****************
  1434 ;; Defined at:
  1435 ;;		line 14 in file "kernel.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  prior           2  [STACK] unsigned int 
  1438 ;;  f               2  [STACK] PTR FTN()void 
  1439 ;;		 -> count_out(1), cover_bottle(1), check_level(1), fill_bottle(1), 
  1440 ;;		 -> count_bottles(1), task_idle(1), 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  new_task      108  [STACK] struct pcb
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1  [STACK] void 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1452 ;;      Params:         0       0       0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:   10
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_lunos_init
  1463 ;;		_main
  1464 ;; This function uses a reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text7
  1468  001090                     __ptext7:
  1469                           	opt callstack 0
  1470  001090                     _lunos_createTask:
  1471                           	opt callstack 0
  1472                           
  1473                           ; autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  1474  001090  0E6C               	movlw	108
  1475  001092  26E1               	addwf	fsr1l,f,c
  1476  001094  0E00               	movlw	0
  1477  001096  22E2               	addwfc	fsr1h,f,c
  1478                           
  1479                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
  1480                           
  1481                           ;incstack = 0
  1482  001098  EE22  F0AA         	lfsr	2,_ready_queue+540
  1483  00109C  CFDE F04D          	movff	postinc2,btemp+10
  1484  0010A0  CFDD F04E          	movff	postdec2,btemp+11
  1485  0010A4  0E01               	movlw	1
  1486  0010A6  264D               	addwf	btemp+10,f,c
  1487  0010A8  0E00               	movlw	0
  1488  0010AA  224E               	addwfc	btemp+11,f,c
  1489                           
  1490                           ;stkvar	_new_task @ sp[(-108)+0]
  1491  0010AC  0E94               	movlw	-108
  1492  0010AE  C04D  FFE3         	movff	btemp+10,plusw1
  1493  0010B2  0E95               	movlw	-107
  1494  0010B4  C04E  FFE3         	movff	btemp+11,plusw1
  1495                           
  1496                           ;kernel.c: 19:   new_task.task_prior = prior;
  1497                           ;stkvar	_prior @ sp[(-108)+-2]
  1498  0010B8  50E1               	movf	fsr1l,w,c
  1499  0010BA  0F92               	addlw	-110
  1500  0010BC  6ED9               	movwf	fsr2l,c
  1501  0010BE  50E2               	movf	fsr1h,w,c
  1502  0010C0  6EDA               	movwf	fsr2h,c
  1503  0010C2  0EFF               	movlw	255
  1504  0010C4  22DA               	addwfc	fsr2h,f,c
  1505                           
  1506                           ;stkvar	_new_task @ sp[(-108)+0]
  1507  0010C6  0E96               	movlw	150
  1508  0010C8  24E1               	addwf	fsr1l,w,c
  1509  0010CA  6EE9               	movwf	fsr0l,c
  1510  0010CC  0EFF               	movlw	255
  1511  0010CE  20E2               	addwfc	fsr1h,w,c
  1512  0010D0  6EEA               	movwf	fsr0h,c
  1513  0010D2  CFDE FFEE          	movff	postinc2,postinc0
  1514  0010D6  CFDD FFED          	movff	postdec2,postdec0
  1515                           
  1516                           ;kernel.c: 20:   new_task.task_state = READY;
  1517                           ;stkvar	_new_task @ sp[(-108)+0]
  1518  0010DA  0E9C               	movlw	156
  1519  0010DC  24E1               	addwf	fsr1l,w,c
  1520  0010DE  6ED9               	movwf	fsr2l,c
  1521  0010E0  0EFF               	movlw	255
  1522  0010E2  20E2               	addwfc	fsr1h,w,c
  1523  0010E4  6EDA               	movwf	fsr2h,c
  1524  0010E6  0E00               	movlw	0
  1525  0010E8  6EDF               	movwf	indf2,c
  1526                           
  1527                           ;kernel.c: 21:   new_task.task_f = f;
  1528                           ;stkvar	_f @ sp[(-108)+-4]
  1529  0010EA  50E1               	movf	fsr1l,w,c
  1530  0010EC  0F90               	addlw	-112
  1531  0010EE  6ED9               	movwf	fsr2l,c
  1532  0010F0  50E2               	movf	fsr1h,w,c
  1533  0010F2  6EDA               	movwf	fsr2h,c
  1534  0010F4  0EFF               	movlw	255
  1535  0010F6  22DA               	addwfc	fsr2h,f,c
  1536                           
  1537                           ;stkvar	_new_task @ sp[(-108)+0]
  1538  0010F8  0EFC               	movlw	252
  1539  0010FA  24E1               	addwf	fsr1l,w,c
  1540  0010FC  6EE9               	movwf	fsr0l,c
  1541  0010FE  0EFF               	movlw	255
  1542  001100  20E2               	addwfc	fsr1h,w,c
  1543  001102  6EEA               	movwf	fsr0h,c
  1544  001104  CFDE FFEE          	movff	postinc2,postinc0
  1545  001108  CFDD FFED          	movff	postdec2,postdec0
  1546                           
  1547                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
  1548                           ;stkvar	_new_task @ sp[(-108)+0]
  1549  00110C  0EFA               	movlw	250
  1550  00110E  24E1               	addwf	fsr1l,w,c
  1551  001110  6ED9               	movwf	fsr2l,c
  1552  001112  0EFF               	movlw	255
  1553  001114  20E2               	addwfc	fsr1h,w,c
  1554  001116  6EDA               	movwf	fsr2h,c
  1555  001118  0E00               	movlw	0
  1556  00111A  6EDE               	movwf	postinc2,c
  1557  00111C  0E00               	movlw	0
  1558  00111E  6EDD               	movwf	postdec2,c
  1559                           
  1560                           ;kernel.c: 23:   new_task.task_delay_time = 0;
  1561                           ;stkvar	_new_task @ sp[(-108)+0]
  1562  001120  0EFE               	movlw	254
  1563  001122  24E1               	addwf	fsr1l,w,c
  1564  001124  6ED9               	movwf	fsr2l,c
  1565  001126  0EFF               	movlw	255
  1566  001128  20E2               	addwfc	fsr1h,w,c
  1567  00112A  6EDA               	movwf	fsr2h,c
  1568  00112C  0E00               	movlw	0
  1569  00112E  6EDE               	movwf	postinc2,c
  1570  001130  0E00               	movlw	0
  1571  001132  6EDD               	movwf	postdec2,c
  1572                           
  1573                           ;kernel.c: 25:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
  1574                           ;stkvar	_new_task @ sp[(-108)+0]
  1575  001134  0E94               	movlw	148
  1576  001136  24E1               	addwf	fsr1l,w,c
  1577  001138  6ED9               	movwf	fsr2l,c
  1578  00113A  0EFF               	movlw	255
  1579  00113C  20E2               	addwfc	fsr1h,w,c
  1580  00113E  6EDA               	movwf	fsr2h,c
  1581  001140  EE02  F0AA         	lfsr	0,_ready_queue+540
  1582  001144  CFEE F04D          	movff	postinc0,btemp+10
  1583  001148  CFED F04E          	movff	postdec0,btemp+11
  1584  00114C  0E6C               	movlw	108
  1585  00114E  024D               	mulwf	btemp+10,c
  1586  001150  CFF3 F04B          	movff	prodl,btemp+8
  1587  001154  CFF4 F04C          	movff	prodh,btemp+9
  1588  001158  024E               	mulwf	btemp+11,c
  1589  00115A  50F3               	movf	prodl,w,c
  1590  00115C  264C               	addwf	btemp+9,f,c
  1591  00115E  0E8E               	movlw	low _ready_queue
  1592  001160  244B               	addwf	btemp+8,w,c
  1593  001162  6EE9               	movwf	fsr0l,c
  1594  001164  0E00               	movlw	high _ready_queue
  1595  001166  204C               	addwfc	btemp+9,w,c
  1596  001168  6EEA               	movwf	fsr0h,c
  1597  00116A  0E6B               	movlw	107
  1598  00116C                     u681:
  1599  00116C  CFDB FFEB          	movff	plusw2,plusw0
  1600  001170  06E8               	decf	wreg,f,c
  1601  001172  E2FC               	bc	u681
  1602                           
  1603                           ;kernel.c: 26:   ready_queue.tasks_installed++;
  1604  001174  EE22  F0AA         	lfsr	2,_ready_queue+540
  1605  001178  2ADE               	incf	postinc2,f,c
  1606  00117A  0E00               	movlw	0
  1607  00117C  22DD               	addwfc	postdec2,f,c
  1608                           
  1609                           ; _lunos_createTask: autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
  1610  00117E  0E90               	movlw	144
  1611  001180  26E1               	addwf	fsr1l,f,c
  1612  001182  0EFF               	movlw	255
  1613  001184  22E2               	addwfc	fsr1h,f,c
  1614  001186  0012               	return		;funcret
  1615  001188                     __end_of_lunos_createTask:
  1616                           	opt callstack 0
  1617                           
  1618 ;; *************** function _SRAMInitHeap *****************
  1619 ;; Defined at:
  1620 ;;		line 313 in file "sralloc.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  count           2  [STACK] unsigned int 
  1625 ;;  pHeap           2  [STACK] PTR unsigned char 
  1626 ;;		 -> _uDynamicHeap(512), 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1  [STACK] void 
  1629 ;; Registers used:
  1630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1636 ;;      Params:         0       0       0       0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0
  1639 ;;      Totals:         0       0       0       0       0       0       0
  1640 ;;Total ram usage:        0 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:   10
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_lunos_init
  1647 ;; This function uses a reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text8
  1651  001366                     __ptext8:
  1652                           	opt callstack 0
  1653  001366                     _SRAMInitHeap:
  1654                           	opt callstack 0
  1655                           
  1656                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1657  001366  52E6               	movf	postinc1,f,c
  1658  001368  52E6               	movf	postinc1,f,c
  1659  00136A  52E6               	movf	postinc1,f,c
  1660  00136C  52E6               	movf	postinc1,f,c
  1661                           
  1662                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
  1663                           ;stkvar	_pHeap @ sp[(-4)+2]
  1664                           
  1665                           ;incstack = 0
  1666  00136E  0E02               	movlw	high __uDynamicHeap
  1667  001370  6E43               	movwf	btemp,c
  1668  001372  0EFF               	movlw	-1
  1669  001374  C043  FFE3         	movff	btemp,plusw1
  1670  001378  0EAE               	movlw	low __uDynamicHeap
  1671  00137A  6E43               	movwf	btemp,c
  1672  00137C  0EFE               	movlw	-2
  1673  00137E  C043  FFE3         	movff	btemp,plusw1
  1674                           
  1675                           ;sralloc.c: 319:  count = 0x200 -1;
  1676  001382  0EFF               	movlw	255
  1677  001384  6E4D               	movwf	btemp+10,c
  1678  001386  0E01               	movlw	1
  1679  001388  6E4E               	movwf	btemp+11,c
  1680                           
  1681                           ;stkvar	_count @ sp[(-4)+0]
  1682  00138A  0EFC               	movlw	-4
  1683  00138C  C04D  FFE3         	movff	btemp+10,plusw1
  1684  001390  0EFD               	movlw	-3
  1685  001392  C04E  FFE3         	movff	btemp+11,plusw1
  1686  001396                     l1754:
  1687                           
  1688                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
  1689                           ;stkvar	_count @ sp[(-4)+0]
  1690  001396  0EFD               	movlw	-3
  1691  001398  50E3               	movf	plusw1,w,c
  1692  00139A  E107               	bnz	u720
  1693  00139C  0EFC               	movlw	-4
  1694  00139E  CFE3 F043          	movff	plusw1,btemp
  1695  0013A2  0E80               	movlw	128
  1696  0013A4  5E43               	subwf	btemp,f,c
  1697  0013A6  A0D8               	btfss	status,0,c
  1698  0013A8  D023               	goto	l1762
  1699  0013AA                     u720:
  1700                           
  1701                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
  1702                           ;stkvar	_pHeap @ sp[(-4)+2]
  1703  0013AA  0EFE               	movlw	-2
  1704  0013AC  CFE3 FFD9          	movff	plusw1,fsr2l
  1705  0013B0  0EFF               	movlw	-1
  1706  0013B2  CFE3 FFDA          	movff	plusw1,fsr2h
  1707  0013B6  0E7F               	movlw	127
  1708  0013B8  6EDF               	movwf	indf2,c
  1709                           
  1710                           ;sralloc.c: 326:    pHeap += 0x7F;
  1711                           ;stkvar	_pHeap @ sp[(-4)+2]
  1712  0013BA  0EFE               	movlw	-2
  1713  0013BC  50E3               	movf	plusw1,w,c
  1714  0013BE  0F7F               	addlw	127
  1715  0013C0  6E43               	movwf	btemp,c
  1716  0013C2  0EFE               	movlw	-2
  1717  0013C4  C043  FFE3         	movff	btemp,plusw1
  1718  0013C8  6A43               	clrf	btemp,c
  1719  0013CA  0EFF               	movlw	-1
  1720  0013CC  50E3               	movf	plusw1,w,c
  1721  0013CE  2043               	addwfc	btemp,w,c
  1722  0013D0  6E43               	movwf	btemp,c
  1723  0013D2  0EFF               	movlw	-1
  1724  0013D4  C043  FFE3         	movff	btemp,plusw1
  1725                           
  1726                           ;sralloc.c: 327:    count = count - 0x7F;
  1727                           ;stkvar	_count @ sp[(-4)+0]
  1728  0013D8  50E1               	movf	fsr1l,w,c
  1729  0013DA  0FFC               	addlw	-4
  1730  0013DC  6ED9               	movwf	fsr2l,c
  1731  0013DE  50E2               	movf	fsr1h,w,c
  1732  0013E0  6EDA               	movwf	fsr2h,c
  1733  0013E2  0EFF               	movlw	255
  1734  0013E4  22DA               	addwfc	fsr2h,f,c
  1735  0013E6  0E81               	movlw	129
  1736  0013E8  26DE               	addwf	postinc2,f,c
  1737  0013EA  0EFF               	movlw	255
  1738  0013EC  22DD               	addwfc	postdec2,f,c
  1739                           
  1740                           ;sralloc.c: 328:   }
  1741  0013EE  D7D3               	goto	l1754
  1742  0013F0                     l1762:
  1743                           
  1744                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1745                           ;stkvar	_count @ sp[(-4)+0]
  1746                           ;stkvar	_pHeap @ sp[(-4)+2]
  1747  0013F0  0EFE               	movlw	-2
  1748  0013F2  CFE3 FFD9          	movff	plusw1,fsr2l
  1749  0013F6  0EFF               	movlw	-1
  1750  0013F8  CFE3 FFDA          	movff	plusw1,fsr2h
  1751  0013FC  0EFC               	movlw	-4
  1752  0013FE  CFE3 FFDF          	movff	plusw1,indf2
  1753                           
  1754                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1755                           ;stkvar	_count @ sp[(-4)+0]
  1756  001402  0EFC               	movlw	-4
  1757  001404  CFE3 F04D          	movff	plusw1,btemp+10
  1758  001408  0EFD               	movlw	-3
  1759  00140A  CFE3 F04E          	movff	plusw1,btemp+11
  1760                           
  1761                           ;stkvar	_pHeap @ sp[(-4)+2]
  1762  00140E  0EFE               	movlw	-2
  1763  001410  CFE3 F04B          	movff	plusw1,btemp+8
  1764  001414  0EFF               	movlw	-1
  1765  001416  CFE3 F04C          	movff	plusw1,btemp+9
  1766  00141A  504D               	movf	btemp+10,w,c
  1767  00141C  244B               	addwf	btemp+8,w,c
  1768  00141E  6ED9               	movwf	fsr2l,c
  1769  001420  504E               	movf	btemp+11,w,c
  1770  001422  204C               	addwfc	btemp+9,w,c
  1771  001424  6EDA               	movwf	fsr2h,c
  1772  001426  0E00               	movlw	0
  1773  001428  6EDF               	movwf	indf2,c
  1774                           
  1775                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1776  00142A  52E5               	movf	postdec1,f,c
  1777  00142C  52E5               	movf	postdec1,f,c
  1778  00142E  52E5               	movf	postdec1,f,c
  1779  001430  52E5               	movf	postdec1,f,c
  1780  001432  0012               	return		;funcret
  1781  001434                     __end_of_SRAMInitHeap:
  1782                           	opt callstack 0
  1783                           
  1784 ;; *************** function _dispatcher *****************
  1785 ;; Defined at:
  1786 ;;		line 64 in file "kernel.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  state           1  [STACK] enum E4
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1  [STACK] void 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1800 ;;      Params:         0       0       0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0
  1803 ;;      Totals:         0       0       0       0       0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:   13
  1807 ;; This function calls:
  1808 ;;		_scheduler
  1809 ;; This function is called by:
  1810 ;;		_lunos_delayTask
  1811 ;;		_main
  1812 ;;		_sem_wait
  1813 ;; This function uses a reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text9
  1817  0004CC                     __ptext9:
  1818                           	opt callstack 0
  1819  0004CC                     _dispatcher:
  1820                           	opt callstack 11
  1821                           
  1822                           ;kernel.c: 65:   INTCONbits.GIE = 0;
  1823                           
  1824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1825                           ;incstack = 0
  1826  0004CC  9EF2               	bcf	4082,7,c	;volatile
  1827                           
  1828                           ;kernel.c: 67:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  1829  0004CE  C2AC  F00B         	movff	_ready_queue+542,_who
  1830  0004D2  C2AD  F00C         	movff	_ready_queue+543,_who+1
  1831                           
  1832                           ;stkvar	_state @ sp[(0)+-1]
  1833  0004D6  C00B  F04D         	movff	_who,btemp+10
  1834  0004DA  C00C  F04E         	movff	_who+1,btemp+11
  1835  0004DE  0E6C               	movlw	108
  1836  0004E0  024D               	mulwf	btemp+10,c
  1837  0004E2  CFF3 F04B          	movff	prodl,btemp+8
  1838  0004E6  CFF4 F04C          	movff	prodh,btemp+9
  1839  0004EA  024E               	mulwf	btemp+11,c
  1840  0004EC  50F3               	movf	prodl,w,c
  1841  0004EE  264C               	addwf	btemp+9,f,c
  1842  0004F0  0E96               	movlw	low (_ready_queue+8)
  1843  0004F2  244B               	addwf	btemp+8,w,c
  1844  0004F4  6ED9               	movwf	fsr2l,c
  1845  0004F6  0E00               	movlw	high (_ready_queue+8)
  1846  0004F8  204C               	addwfc	btemp+9,w,c
  1847  0004FA  6EDA               	movwf	fsr2h,c
  1848  0004FC  0EFF               	movlw	-1
  1849  0004FE  CFE3 FFDF          	movff	plusw1,indf2
  1850  000502  C00B  F04D         	movff	_who,btemp+10
  1851  000506  C00C  F04E         	movff	_who+1,btemp+11
  1852  00050A  0E6C               	movlw	108
  1853  00050C  024D               	mulwf	btemp+10,c
  1854  00050E  CFF3 F04B          	movff	prodl,btemp+8
  1855  000512  CFF4 F04C          	movff	prodh,btemp+9
  1856  000516  024E               	mulwf	btemp+11,c
  1857  000518  50F3               	movf	prodl,w,c
  1858  00051A  264C               	addwf	btemp+9,f,c
  1859  00051C  0E93               	movlw	low (_ready_queue+5)
  1860  00051E  244B               	addwf	btemp+8,w,c
  1861  000520  6ED9               	movwf	fsr2l,c
  1862  000522  0E00               	movlw	high (_ready_queue+5)
  1863  000524  204C               	addwfc	btemp+9,w,c
  1864  000526  6EDA               	movwf	fsr2h,c
  1865  000528  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1866  00052C  C00B  F04D         	movff	_who,btemp+10
  1867  000530  C00C  F04E         	movff	_who+1,btemp+11
  1868  000534  0E6C               	movlw	108
  1869  000536  024D               	mulwf	btemp+10,c
  1870  000538  CFF3 F04B          	movff	prodl,btemp+8
  1871  00053C  CFF4 F04C          	movff	prodh,btemp+9
  1872  000540  024E               	mulwf	btemp+11,c
  1873  000542  50F3               	movf	prodl,w,c
  1874  000544  264C               	addwf	btemp+9,f,c
  1875  000546  0E94               	movlw	low (_ready_queue+6)
  1876  000548  244B               	addwf	btemp+8,w,c
  1877  00054A  6ED9               	movwf	fsr2l,c
  1878  00054C  0E00               	movlw	high (_ready_queue+6)
  1879  00054E  204C               	addwfc	btemp+9,w,c
  1880  000550  6EDA               	movwf	fsr2h,c
  1881  000552  CFD8 FFDF          	movff	status,indf2	;volatile
  1882  000556  C00B  F04D         	movff	_who,btemp+10
  1883  00055A  C00C  F04E         	movff	_who+1,btemp+11
  1884  00055E  0E6C               	movlw	108
  1885  000560  024D               	mulwf	btemp+10,c
  1886  000562  CFF3 F04B          	movff	prodl,btemp+8
  1887  000566  CFF4 F04C          	movff	prodh,btemp+9
  1888  00056A  024E               	mulwf	btemp+11,c
  1889  00056C  50F3               	movf	prodl,w,c
  1890  00056E  264C               	addwf	btemp+9,f,c
  1891  000570  0E95               	movlw	low (_ready_queue+7)
  1892  000572  244B               	addwf	btemp+8,w,c
  1893  000574  6ED9               	movwf	fsr2l,c
  1894  000576  0E00               	movlw	high (_ready_queue+7)
  1895  000578  204C               	addwfc	btemp+9,w,c
  1896  00057A  6EDA               	movwf	fsr2h,c
  1897  00057C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1898  000580  6A09               	clrf	_size,c
  1899  000582  6A0A               	clrf	_size+1,c
  1900  000584  D08D               	goto	l1726
  1901  000586                     l1722:
  1902  000586  C009  F04D         	movff	_size,btemp+10
  1903  00058A  C00A  F04E         	movff	_size+1,btemp+11
  1904  00058E  0E03               	movlw	3
  1905  000590  024D               	mulwf	btemp+10,c
  1906  000592  CFF3 F04B          	movff	prodl,btemp+8
  1907  000596  CFF4 F04C          	movff	prodh,btemp+9
  1908  00059A  024E               	mulwf	btemp+11,c
  1909  00059C  50F3               	movf	prodl,w,c
  1910  00059E  264C               	addwf	btemp+9,f,c
  1911  0005A0  C00B  F04D         	movff	_who,btemp+10
  1912  0005A4  C00C  F04E         	movff	_who+1,btemp+11
  1913  0005A8  0E6C               	movlw	108
  1914  0005AA  024D               	mulwf	btemp+10,c
  1915  0005AC  CFF3 F049          	movff	prodl,btemp+6
  1916  0005B0  CFF4 F04A          	movff	prodh,btemp+7
  1917  0005B4  024E               	mulwf	btemp+11,c
  1918  0005B6  50F3               	movf	prodl,w,c
  1919  0005B8  264A               	addwf	btemp+7,f,c
  1920  0005BA  0E8E               	movlw	low _ready_queue
  1921  0005BC  6E4D               	movwf	btemp+10,c
  1922  0005BE  0E00               	movlw	high _ready_queue
  1923  0005C0  6E4E               	movwf	btemp+11,c
  1924  0005C2  0E09               	movlw	9
  1925  0005C4  264D               	addwf	btemp+10,f,c
  1926  0005C6  0E00               	movlw	0
  1927  0005C8  224E               	addwfc	btemp+11,f,c
  1928  0005CA  5049               	movf	btemp+6,w,c
  1929  0005CC  264D               	addwf	btemp+10,f,c
  1930  0005CE  504A               	movf	btemp+7,w,c
  1931  0005D0  224E               	addwfc	btemp+11,f,c
  1932  0005D2  504B               	movf	btemp+8,w,c
  1933  0005D4  244D               	addwf	btemp+10,w,c
  1934  0005D6  6ED9               	movwf	fsr2l,c
  1935  0005D8  504C               	movf	btemp+9,w,c
  1936  0005DA  204E               	addwfc	btemp+11,w,c
  1937  0005DC  6EDA               	movwf	fsr2h,c
  1938  0005DE  CFFF FFDF          	movff	tosu,indf2	;volatile
  1939  0005E2  C009  F04D         	movff	_size,btemp+10
  1940  0005E6  C00A  F04E         	movff	_size+1,btemp+11
  1941  0005EA  0E03               	movlw	3
  1942  0005EC  024D               	mulwf	btemp+10,c
  1943  0005EE  CFF3 F04B          	movff	prodl,btemp+8
  1944  0005F2  CFF4 F04C          	movff	prodh,btemp+9
  1945  0005F6  024E               	mulwf	btemp+11,c
  1946  0005F8  50F3               	movf	prodl,w,c
  1947  0005FA  264C               	addwf	btemp+9,f,c
  1948  0005FC  C00B  F04D         	movff	_who,btemp+10
  1949  000600  C00C  F04E         	movff	_who+1,btemp+11
  1950  000604  0E6C               	movlw	108
  1951  000606  024D               	mulwf	btemp+10,c
  1952  000608  CFF3 F049          	movff	prodl,btemp+6
  1953  00060C  CFF4 F04A          	movff	prodh,btemp+7
  1954  000610  024E               	mulwf	btemp+11,c
  1955  000612  50F3               	movf	prodl,w,c
  1956  000614  264A               	addwf	btemp+7,f,c
  1957  000616  0E8E               	movlw	low _ready_queue
  1958  000618  6E4D               	movwf	btemp+10,c
  1959  00061A  0E00               	movlw	high _ready_queue
  1960  00061C  6E4E               	movwf	btemp+11,c
  1961  00061E  0E0B               	movlw	11
  1962  000620  264D               	addwf	btemp+10,f,c
  1963  000622  0E00               	movlw	0
  1964  000624  224E               	addwfc	btemp+11,f,c
  1965  000626  5049               	movf	btemp+6,w,c
  1966  000628  264D               	addwf	btemp+10,f,c
  1967  00062A  504A               	movf	btemp+7,w,c
  1968  00062C  224E               	addwfc	btemp+11,f,c
  1969  00062E  504B               	movf	btemp+8,w,c
  1970  000630  244D               	addwf	btemp+10,w,c
  1971  000632  6ED9               	movwf	fsr2l,c
  1972  000634  504C               	movf	btemp+9,w,c
  1973  000636  204E               	addwfc	btemp+11,w,c
  1974  000638  6EDA               	movwf	fsr2h,c
  1975  00063A  CFFE FFDF          	movff	tosh,indf2	;volatile
  1976  00063E  C009  F04D         	movff	_size,btemp+10
  1977  000642  C00A  F04E         	movff	_size+1,btemp+11
  1978  000646  0E03               	movlw	3
  1979  000648  024D               	mulwf	btemp+10,c
  1980  00064A  CFF3 F04B          	movff	prodl,btemp+8
  1981  00064E  CFF4 F04C          	movff	prodh,btemp+9
  1982  000652  024E               	mulwf	btemp+11,c
  1983  000654  50F3               	movf	prodl,w,c
  1984  000656  264C               	addwf	btemp+9,f,c
  1985  000658  C00B  F04D         	movff	_who,btemp+10
  1986  00065C  C00C  F04E         	movff	_who+1,btemp+11
  1987  000660  0E6C               	movlw	108
  1988  000662  024D               	mulwf	btemp+10,c
  1989  000664  CFF3 F049          	movff	prodl,btemp+6
  1990  000668  CFF4 F04A          	movff	prodh,btemp+7
  1991  00066C  024E               	mulwf	btemp+11,c
  1992  00066E  50F3               	movf	prodl,w,c
  1993  000670  264A               	addwf	btemp+7,f,c
  1994  000672  0E8E               	movlw	low _ready_queue
  1995  000674  6E4D               	movwf	btemp+10,c
  1996  000676  0E00               	movlw	high _ready_queue
  1997  000678  6E4E               	movwf	btemp+11,c
  1998  00067A  0E0A               	movlw	10
  1999  00067C  264D               	addwf	btemp+10,f,c
  2000  00067E  0E00               	movlw	0
  2001  000680  224E               	addwfc	btemp+11,f,c
  2002  000682  5049               	movf	btemp+6,w,c
  2003  000684  264D               	addwf	btemp+10,f,c
  2004  000686  504A               	movf	btemp+7,w,c
  2005  000688  224E               	addwfc	btemp+11,f,c
  2006  00068A  504B               	movf	btemp+8,w,c
  2007  00068C  244D               	addwf	btemp+10,w,c
  2008  00068E  6ED9               	movwf	fsr2l,c
  2009  000690  504C               	movf	btemp+9,w,c
  2010  000692  204E               	addwfc	btemp+11,w,c
  2011  000694  6EDA               	movwf	fsr2h,c
  2012  000696  CFFD FFDF          	movff	tosl,indf2	;volatile
  2013  00069A  4A09               	infsnz	_size,f,c
  2014  00069C  2A0A               	incf	_size+1,f,c
  2015  00069E  0006               	pop		;# 
  2016  0006A0                     l1726:
  2017  0006A0  50FC               	movf	stkptr,w,c	;volatile
  2018  0006A2  A4D8               	btfss	status,2,c
  2019  0006A4  D770               	goto	l1722
  2020  0006A6  0EFF               	movlw	255
  2021  0006A8  6E4D               	movwf	btemp+10,c
  2022  0006AA  0EFF               	movlw	255
  2023  0006AC  6E4E               	movwf	btemp+11,c
  2024  0006AE  C009  F04B         	movff	_size,btemp+8
  2025  0006B2  C00A  F04C         	movff	_size+1,btemp+9
  2026  0006B6  504D               	movf	btemp+10,w,c
  2027  0006B8  264B               	addwf	btemp+8,f,c
  2028  0006BA  504E               	movf	btemp+11,w,c
  2029  0006BC  224C               	addwfc	btemp+9,f,c
  2030  0006BE  C00B  F04D         	movff	_who,btemp+10
  2031  0006C2  C00C  F04E         	movff	_who+1,btemp+11
  2032  0006C6  0E6C               	movlw	108
  2033  0006C8  024D               	mulwf	btemp+10,c
  2034  0006CA  CFF3 F049          	movff	prodl,btemp+6
  2035  0006CE  CFF4 F04A          	movff	prodh,btemp+7
  2036  0006D2  024E               	mulwf	btemp+11,c
  2037  0006D4  50F3               	movf	prodl,w,c
  2038  0006D6  264A               	addwf	btemp+7,f,c
  2039  0006D8  0EF4               	movlw	low (_ready_queue+102)
  2040  0006DA  2449               	addwf	btemp+6,w,c
  2041  0006DC  6ED9               	movwf	fsr2l,c
  2042  0006DE  0E00               	movlw	high (_ready_queue+102)
  2043  0006E0  204A               	addwfc	btemp+7,w,c
  2044  0006E2  6EDA               	movwf	fsr2h,c
  2045  0006E4  C04B  FFDE         	movff	btemp+8,postinc2
  2046  0006E8  C04C  FFDD         	movff	btemp+9,postdec2
  2047                           
  2048                           ;kernel.c: 69:   ready_queue.task_running = scheduler();
  2049  0006EC  ECD9  F00D         	call	_scheduler	;wreg free
  2050  0006F0  C043  F2AC         	movff	btemp,_ready_queue+542
  2051  0006F4  C044  F2AD         	movff	btemp+1,_ready_queue+543
  2052                           
  2053                           ;kernel.c: 71:   { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.tasks[who
      +                          ].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task_f; } e
      +                          lse { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].W_reg; 
      +                          STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg; size =
      +                           ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL = read
      +                          y_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[who].task
      +                          _stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[size].TO
      +                          SU_reg; size--; } }};
  2054  0006F8  C2AC  F00B         	movff	_ready_queue+542,_who
  2055  0006FC  C2AD  F00C         	movff	_ready_queue+543,_who+1
  2056  000700  6AFC               	clrf	stkptr,c	;volatile
  2057  000702  C00B  F04D         	movff	_who,btemp+10
  2058  000706  C00C  F04E         	movff	_who+1,btemp+11
  2059  00070A  0E6C               	movlw	108
  2060  00070C  024D               	mulwf	btemp+10,c
  2061  00070E  CFF3 F04B          	movff	prodl,btemp+8
  2062  000712  CFF4 F04C          	movff	prodh,btemp+9
  2063  000716  024E               	mulwf	btemp+11,c
  2064  000718  50F3               	movf	prodl,w,c
  2065  00071A  264C               	addwf	btemp+9,f,c
  2066  00071C  0EF4               	movlw	low (_ready_queue+102)
  2067  00071E  244B               	addwf	btemp+8,w,c
  2068  000720  6ED9               	movwf	fsr2l,c
  2069  000722  0E00               	movlw	high (_ready_queue+102)
  2070  000724  204C               	addwfc	btemp+9,w,c
  2071  000726  6EDA               	movwf	fsr2h,c
  2072  000728  50DE               	movf	postinc2,w,c
  2073  00072A  10DE               	iorwf	postinc2,w,c
  2074  00072C  A4D8               	btfss	status,2,c
  2075  00072E  D01E               	goto	l1742
  2076  000730  0005               	push		;# 
  2077  000732  C00B  F04D         	movff	_who,btemp+10
  2078  000736  C00C  F04E         	movff	_who+1,btemp+11
  2079  00073A  0E6C               	movlw	108
  2080  00073C  024D               	mulwf	btemp+10,c
  2081  00073E  CFF3 F04B          	movff	prodl,btemp+8
  2082  000742  CFF4 F04C          	movff	prodh,btemp+9
  2083  000746  024E               	mulwf	btemp+11,c
  2084  000748  50F3               	movf	prodl,w,c
  2085  00074A  264C               	addwf	btemp+9,f,c
  2086  00074C  0EF6               	movlw	low (_ready_queue+104)
  2087  00074E  244B               	addwf	btemp+8,w,c
  2088  000750  6ED9               	movwf	fsr2l,c
  2089  000752  0E00               	movlw	high (_ready_queue+104)
  2090  000754  204C               	addwfc	btemp+9,w,c
  2091  000756  6EDA               	movwf	fsr2h,c
  2092  000758  CFDE F04D          	movff	postinc2,btemp+10
  2093  00075C  CFDD F04E          	movff	postdec2,btemp+11
  2094  000760  C04D  FFFD         	movff	btemp+10,tosl	;volatile
  2095  000764  C04E  FFFE         	movff	btemp+11,tosh	;volatile
  2096  000768  6AFF               	clrf	tosu,c	;volatile
  2097  00076A  D0FF               	goto	u710
  2098  00076C                     l1742:
  2099  00076C  C00B  F04D         	movff	_who,btemp+10
  2100  000770  C00C  F04E         	movff	_who+1,btemp+11
  2101  000774  0E6C               	movlw	108
  2102  000776  024D               	mulwf	btemp+10,c
  2103  000778  CFF3 F04B          	movff	prodl,btemp+8
  2104  00077C  CFF4 F04C          	movff	prodh,btemp+9
  2105  000780  024E               	mulwf	btemp+11,c
  2106  000782  50F3               	movf	prodl,w,c
  2107  000784  264C               	addwf	btemp+9,f,c
  2108  000786  0E96               	movlw	low (_ready_queue+8)
  2109  000788  244B               	addwf	btemp+8,w,c
  2110  00078A  6ED9               	movwf	fsr2l,c
  2111  00078C  0E00               	movlw	high (_ready_queue+8)
  2112  00078E  204C               	addwfc	btemp+9,w,c
  2113  000790  6EDA               	movwf	fsr2h,c
  2114  000792  0E01               	movlw	1
  2115  000794  6EDF               	movwf	indf2,c
  2116  000796  C00B  F04D         	movff	_who,btemp+10
  2117  00079A  C00C  F04E         	movff	_who+1,btemp+11
  2118  00079E  0E6C               	movlw	108
  2119  0007A0  024D               	mulwf	btemp+10,c
  2120  0007A2  CFF3 F04B          	movff	prodl,btemp+8
  2121  0007A6  CFF4 F04C          	movff	prodh,btemp+9
  2122  0007AA  024E               	mulwf	btemp+11,c
  2123  0007AC  50F3               	movf	prodl,w,c
  2124  0007AE  264C               	addwf	btemp+9,f,c
  2125  0007B0  0E93               	movlw	low (_ready_queue+5)
  2126  0007B2  244B               	addwf	btemp+8,w,c
  2127  0007B4  6ED9               	movwf	fsr2l,c
  2128  0007B6  0E00               	movlw	high (_ready_queue+5)
  2129  0007B8  204C               	addwfc	btemp+9,w,c
  2130  0007BA  6EDA               	movwf	fsr2h,c
  2131  0007BC  50DF               	movf	indf2,w,c
  2132  0007BE  6E4E               	movwf	btemp+11,c
  2133  0007C0  504E               	movf	btemp+11,w,c
  2134  0007C2  C00B  F04D         	movff	_who,btemp+10
  2135  0007C6  C00C  F04E         	movff	_who+1,btemp+11
  2136  0007CA  0E6C               	movlw	108
  2137  0007CC  024D               	mulwf	btemp+10,c
  2138  0007CE  CFF3 F04B          	movff	prodl,btemp+8
  2139  0007D2  CFF4 F04C          	movff	prodh,btemp+9
  2140  0007D6  024E               	mulwf	btemp+11,c
  2141  0007D8  50F3               	movf	prodl,w,c
  2142  0007DA  264C               	addwf	btemp+9,f,c
  2143  0007DC  0E94               	movlw	low (_ready_queue+6)
  2144  0007DE  244B               	addwf	btemp+8,w,c
  2145  0007E0  6ED9               	movwf	fsr2l,c
  2146  0007E2  0E00               	movlw	high (_ready_queue+6)
  2147  0007E4  204C               	addwfc	btemp+9,w,c
  2148  0007E6  6EDA               	movwf	fsr2h,c
  2149  0007E8  50DF               	movf	indf2,w,c
  2150  0007EA  6ED8               	movwf	status,c	;volatile
  2151  0007EC  C00B  F04D         	movff	_who,btemp+10
  2152  0007F0  C00C  F04E         	movff	_who+1,btemp+11
  2153  0007F4  0E6C               	movlw	108
  2154  0007F6  024D               	mulwf	btemp+10,c
  2155  0007F8  CFF3 F04B          	movff	prodl,btemp+8
  2156  0007FC  CFF4 F04C          	movff	prodh,btemp+9
  2157  000800  024E               	mulwf	btemp+11,c
  2158  000802  50F3               	movf	prodl,w,c
  2159  000804  264C               	addwf	btemp+9,f,c
  2160  000806  0E95               	movlw	low (_ready_queue+7)
  2161  000808  244B               	addwf	btemp+8,w,c
  2162  00080A  6ED9               	movwf	fsr2l,c
  2163  00080C  0E00               	movlw	high (_ready_queue+7)
  2164  00080E  204C               	addwfc	btemp+9,w,c
  2165  000810  6EDA               	movwf	fsr2h,c
  2166  000812  50DF               	movf	indf2,w,c
  2167  000814  6EE0               	movwf	bsr,c	;volatile
  2168  000816  C00B  F04D         	movff	_who,btemp+10
  2169  00081A  C00C  F04E         	movff	_who+1,btemp+11
  2170  00081E  0E6C               	movlw	108
  2171  000820  024D               	mulwf	btemp+10,c
  2172  000822  CFF3 F04B          	movff	prodl,btemp+8
  2173  000826  CFF4 F04C          	movff	prodh,btemp+9
  2174  00082A  024E               	mulwf	btemp+11,c
  2175  00082C  50F3               	movf	prodl,w,c
  2176  00082E  264C               	addwf	btemp+9,f,c
  2177  000830  0EF4               	movlw	low (_ready_queue+102)
  2178  000832  244B               	addwf	btemp+8,w,c
  2179  000834  6ED9               	movwf	fsr2l,c
  2180  000836  0E00               	movlw	high (_ready_queue+102)
  2181  000838  204C               	addwfc	btemp+9,w,c
  2182  00083A  6EDA               	movwf	fsr2h,c
  2183  00083C  CFDE F009          	movff	postinc2,_size
  2184  000840  CFDD F00A          	movff	postdec2,_size+1
  2185  000844  D08E               	goto	l1748
  2186  000846                     l127:
  2187  000846  0005               	push		;# 
  2188  000848  C009  F04D         	movff	_size,btemp+10
  2189  00084C  C00A  F04E         	movff	_size+1,btemp+11
  2190  000850  0E03               	movlw	3
  2191  000852  024D               	mulwf	btemp+10,c
  2192  000854  CFF3 F04B          	movff	prodl,btemp+8
  2193  000858  CFF4 F04C          	movff	prodh,btemp+9
  2194  00085C  024E               	mulwf	btemp+11,c
  2195  00085E  50F3               	movf	prodl,w,c
  2196  000860  264C               	addwf	btemp+9,f,c
  2197  000862  C00B  F04D         	movff	_who,btemp+10
  2198  000866  C00C  F04E         	movff	_who+1,btemp+11
  2199  00086A  0E6C               	movlw	108
  2200  00086C  024D               	mulwf	btemp+10,c
  2201  00086E  CFF3 F049          	movff	prodl,btemp+6
  2202  000872  CFF4 F04A          	movff	prodh,btemp+7
  2203  000876  024E               	mulwf	btemp+11,c
  2204  000878  50F3               	movf	prodl,w,c
  2205  00087A  264A               	addwf	btemp+7,f,c
  2206  00087C  0E8E               	movlw	low _ready_queue
  2207  00087E  6E4D               	movwf	btemp+10,c
  2208  000880  0E00               	movlw	high _ready_queue
  2209  000882  6E4E               	movwf	btemp+11,c
  2210  000884  0E0A               	movlw	10
  2211  000886  264D               	addwf	btemp+10,f,c
  2212  000888  0E00               	movlw	0
  2213  00088A  224E               	addwfc	btemp+11,f,c
  2214  00088C  5049               	movf	btemp+6,w,c
  2215  00088E  264D               	addwf	btemp+10,f,c
  2216  000890  504A               	movf	btemp+7,w,c
  2217  000892  224E               	addwfc	btemp+11,f,c
  2218  000894  504B               	movf	btemp+8,w,c
  2219  000896  244D               	addwf	btemp+10,w,c
  2220  000898  6ED9               	movwf	fsr2l,c
  2221  00089A  504C               	movf	btemp+9,w,c
  2222  00089C  204E               	addwfc	btemp+11,w,c
  2223  00089E  6EDA               	movwf	fsr2h,c
  2224  0008A0  50DF               	movf	indf2,w,c
  2225  0008A2  6EFD               	movwf	tosl,c	;volatile
  2226  0008A4  C009  F04D         	movff	_size,btemp+10
  2227  0008A8  C00A  F04E         	movff	_size+1,btemp+11
  2228  0008AC  0E03               	movlw	3
  2229  0008AE  024D               	mulwf	btemp+10,c
  2230  0008B0  CFF3 F04B          	movff	prodl,btemp+8
  2231  0008B4  CFF4 F04C          	movff	prodh,btemp+9
  2232  0008B8  024E               	mulwf	btemp+11,c
  2233  0008BA  50F3               	movf	prodl,w,c
  2234  0008BC  264C               	addwf	btemp+9,f,c
  2235  0008BE  C00B  F04D         	movff	_who,btemp+10
  2236  0008C2  C00C  F04E         	movff	_who+1,btemp+11
  2237  0008C6  0E6C               	movlw	108
  2238  0008C8  024D               	mulwf	btemp+10,c
  2239  0008CA  CFF3 F049          	movff	prodl,btemp+6
  2240  0008CE  CFF4 F04A          	movff	prodh,btemp+7
  2241  0008D2  024E               	mulwf	btemp+11,c
  2242  0008D4  50F3               	movf	prodl,w,c
  2243  0008D6  264A               	addwf	btemp+7,f,c
  2244  0008D8  0E8E               	movlw	low _ready_queue
  2245  0008DA  6E4D               	movwf	btemp+10,c
  2246  0008DC  0E00               	movlw	high _ready_queue
  2247  0008DE  6E4E               	movwf	btemp+11,c
  2248  0008E0  0E0B               	movlw	11
  2249  0008E2  264D               	addwf	btemp+10,f,c
  2250  0008E4  0E00               	movlw	0
  2251  0008E6  224E               	addwfc	btemp+11,f,c
  2252  0008E8  5049               	movf	btemp+6,w,c
  2253  0008EA  264D               	addwf	btemp+10,f,c
  2254  0008EC  504A               	movf	btemp+7,w,c
  2255  0008EE  224E               	addwfc	btemp+11,f,c
  2256  0008F0  504B               	movf	btemp+8,w,c
  2257  0008F2  244D               	addwf	btemp+10,w,c
  2258  0008F4  6ED9               	movwf	fsr2l,c
  2259  0008F6  504C               	movf	btemp+9,w,c
  2260  0008F8  204E               	addwfc	btemp+11,w,c
  2261  0008FA  6EDA               	movwf	fsr2h,c
  2262  0008FC  50DF               	movf	indf2,w,c
  2263  0008FE  6EFE               	movwf	tosh,c	;volatile
  2264  000900  C009  F04D         	movff	_size,btemp+10
  2265  000904  C00A  F04E         	movff	_size+1,btemp+11
  2266  000908  0E03               	movlw	3
  2267  00090A  024D               	mulwf	btemp+10,c
  2268  00090C  CFF3 F04B          	movff	prodl,btemp+8
  2269  000910  CFF4 F04C          	movff	prodh,btemp+9
  2270  000914  024E               	mulwf	btemp+11,c
  2271  000916  50F3               	movf	prodl,w,c
  2272  000918  264C               	addwf	btemp+9,f,c
  2273  00091A  C00B  F04D         	movff	_who,btemp+10
  2274  00091E  C00C  F04E         	movff	_who+1,btemp+11
  2275  000922  0E6C               	movlw	108
  2276  000924  024D               	mulwf	btemp+10,c
  2277  000926  CFF3 F049          	movff	prodl,btemp+6
  2278  00092A  CFF4 F04A          	movff	prodh,btemp+7
  2279  00092E  024E               	mulwf	btemp+11,c
  2280  000930  50F3               	movf	prodl,w,c
  2281  000932  264A               	addwf	btemp+7,f,c
  2282  000934  0E8E               	movlw	low _ready_queue
  2283  000936  6E4D               	movwf	btemp+10,c
  2284  000938  0E00               	movlw	high _ready_queue
  2285  00093A  6E4E               	movwf	btemp+11,c
  2286  00093C  0E09               	movlw	9
  2287  00093E  264D               	addwf	btemp+10,f,c
  2288  000940  0E00               	movlw	0
  2289  000942  224E               	addwfc	btemp+11,f,c
  2290  000944  5049               	movf	btemp+6,w,c
  2291  000946  264D               	addwf	btemp+10,f,c
  2292  000948  504A               	movf	btemp+7,w,c
  2293  00094A  224E               	addwfc	btemp+11,f,c
  2294  00094C  504B               	movf	btemp+8,w,c
  2295  00094E  244D               	addwf	btemp+10,w,c
  2296  000950  6ED9               	movwf	fsr2l,c
  2297  000952  504C               	movf	btemp+9,w,c
  2298  000954  204E               	addwfc	btemp+11,w,c
  2299  000956  6EDA               	movwf	fsr2h,c
  2300  000958  50DF               	movf	indf2,w,c
  2301  00095A  6EFF               	movwf	tosu,c	;volatile
  2302  00095C  0609               	decf	_size,f,c
  2303  00095E  A0D8               	btfss	status,0,c
  2304  000960  060A               	decf	_size+1,f,c
  2305  000962                     l1748:
  2306  000962  5009               	movf	_size,w,c
  2307  000964  100A               	iorwf	_size+1,w,c
  2308  000966  A4D8               	btfss	status,2,c
  2309  000968  D76E               	goto	l127
  2310  00096A                     u710:
  2311                           
  2312                           ;kernel.c: 73:   INTCONbits.GIE = 1;
  2313  00096A  8EF2               	bsf	4082,7,c	;volatile
  2314                           
  2315                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2316  00096C  52E5               	movf	postdec1,f,c
  2317  00096E  0012               	return		;funcret
  2318  000970                     __end_of_dispatcher:
  2319                           	opt callstack 0
  2320                           
  2321 ;; *************** function _scheduler *****************
  2322 ;; Defined at:
  2323 ;;		line 56 in file "kernel.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2  [STACK] unsigned int 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2337 ;;      Params:         0       0       0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0
  2340 ;;      Totals:         0       0       0       0       0       0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:   12
  2344 ;; This function calls:
  2345 ;;		_round_robin
  2346 ;; This function is called by:
  2347 ;;		_dispatcher
  2348 ;; This function uses a reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text10
  2352  001BB2                     __ptext10:
  2353                           	opt callstack 0
  2354  001BB2                     _scheduler:
  2355                           	opt callstack 11
  2356                           
  2357                           ;kernel.c: 58:   return round_robin();
  2358                           
  2359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2360                           ;incstack = 0
  2361  001BB2  EC22  F00B         	call	_round_robin	;wreg free
  2362                           
  2363                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2364  001BB6  0012               	return		;funcret
  2365  001BB8                     __end_of_scheduler:
  2366                           	opt callstack 0
  2367                           
  2368 ;; *************** function _round_robin *****************
  2369 ;; Defined at:
  2370 ;;		line 76 in file "kernel.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  next_task_to    2  [STACK] int 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  2  [STACK] unsigned int 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2384 ;;      Params:         0       0       0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0
  2387 ;;      Totals:         0       0       0       0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:   11
  2391 ;; This function calls:
  2392 ;;		___lwmod
  2393 ;; This function is called by:
  2394 ;;		_ISR_timer0
  2395 ;;		_scheduler
  2396 ;; This function uses a reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text11
  2400  001644                     __ptext11:
  2401                           	opt callstack 0
  2402  001644                     _round_robin:
  2403                           	opt callstack 0
  2404                           
  2405                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2406  001644  52E6               	movf	postinc1,f,c
  2407  001646  52E6               	movf	postinc1,f,c
  2408                           
  2409                           ;kernel.c: 77:   int next_task_to_run = ready_queue.task_running;
  2410                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2411                           
  2412                           ;incstack = 0
  2413  001648  0EFE               	movlw	-2
  2414  00164A  C2AC  FFE3         	movff	_ready_queue+542,plusw1
  2415  00164E  0EFF               	movlw	-1
  2416  001650  C2AD  FFE3         	movff	_ready_queue+543,plusw1
  2417  001654                     l1866:
  2418                           
  2419                           ;kernel.c: 80:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  2420  001654  EE22  F0AA         	lfsr	2,_ready_queue+540
  2421  001658  CFDE F04D          	movff	postinc2,btemp+10
  2422  00165C  CFDD F04E          	movff	postdec2,btemp+11
  2423  001660  C04D  FFE6         	movff	btemp+10,postinc1
  2424  001664  C04E  FFE6         	movff	btemp+11,postinc1
  2425                           
  2426                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  2427  001668  0EFC               	movlw	-4
  2428  00166A  50E3               	movf	plusw1,w,c
  2429  00166C  0F01               	addlw	1
  2430  00166E  6E4D               	movwf	btemp+10,c
  2431  001670  0EFD               	movlw	-3
  2432  001672  CFE3 F04E          	movff	plusw1,btemp+11
  2433  001676  0E00               	movlw	0
  2434  001678  224E               	addwfc	btemp+11,f,c
  2435  00167A  C04D  FFE6         	movff	btemp+10,postinc1
  2436  00167E  C04E  FFE6         	movff	btemp+11,postinc1
  2437  001682  EC79  F00A         	call	___lwmod	;wreg free
  2438                           
  2439                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2440  001686  0EFE               	movlw	-2
  2441  001688  C043  FFE3         	movff	btemp,plusw1
  2442  00168C  0EFF               	movlw	-1
  2443  00168E  C044  FFE3         	movff	btemp+1,plusw1
  2444                           
  2445                           ;kernel.c: 81:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  2446                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2447  001692  0EFE               	movlw	-2
  2448  001694  CFE3 F04D          	movff	plusw1,btemp+10
  2449  001698  0EFF               	movlw	-1
  2450  00169A  CFE3 F04E          	movff	plusw1,btemp+11
  2451  00169E  0E6C               	movlw	108
  2452  0016A0  024D               	mulwf	btemp+10,c
  2453  0016A2  CFF3 F04B          	movff	prodl,btemp+8
  2454  0016A6  CFF4 F04C          	movff	prodh,btemp+9
  2455  0016AA  024E               	mulwf	btemp+11,c
  2456  0016AC  50F3               	movf	prodl,w,c
  2457  0016AE  264C               	addwf	btemp+9,f,c
  2458  0016B0  0E96               	movlw	low (_ready_queue+8)
  2459  0016B2  244B               	addwf	btemp+8,w,c
  2460  0016B4  6ED9               	movwf	fsr2l,c
  2461  0016B6  0E00               	movlw	high (_ready_queue+8)
  2462  0016B8  204C               	addwfc	btemp+9,w,c
  2463  0016BA  6EDA               	movwf	fsr2h,c
  2464  0016BC  50DF               	movf	indf2,w,c
  2465  0016BE  A4D8               	btfss	status,2,c
  2466  0016C0  D7C9               	goto	l1866
  2467                           
  2468                           ;kernel.c: 83:   return next_task_to_run;
  2469                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2470  0016C2  0EFE               	movlw	-2
  2471  0016C4  CFE3 F043          	movff	plusw1,btemp
  2472  0016C8  0EFF               	movlw	-1
  2473  0016CA  CFE3 F044          	movff	plusw1,btemp+1
  2474                           
  2475                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2476  0016CE  52E5               	movf	postdec1,f,c
  2477  0016D0  52E5               	movf	postdec1,f,c
  2478  0016D2  0012               	return		;funcret
  2479  0016D4                     __end_of_round_robin:
  2480                           	opt callstack 0
  2481                           
  2482 ;; *************** function ___lwmod *****************
  2483 ;; Defined at:
  2484 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  dividend        2  [STACK] unsigned int 
  2487 ;;  divisor         2  [STACK] unsigned int 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  counter         1  [STACK] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  2  [STACK] unsigned int 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2499 ;;      Params:         0       0       0       0       0       0       0
  2500 ;;      Locals:         0       0       0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0
  2502 ;;      Totals:         0       0       0       0       0       0       0
  2503 ;;Total ram usage:        0 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:   10
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_round_robin
  2510 ;; This function uses a reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text12
  2514  0014F2                     __ptext12:
  2515                           	opt callstack 0
  2516  0014F2                     ___lwmod:
  2517                           	opt callstack 0
  2518                           
  2519                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2520  0014F2  52E6               	movf	postinc1,f,c
  2521                           
  2522                           ;stkvar	_divisor @ sp[(-1)+-4]
  2523                           
  2524                           ;incstack = 0
  2525  0014F4  0EFB               	movlw	-5
  2526  0014F6  CFE3 F043          	movff	plusw1,btemp
  2527  0014FA  0EFC               	movlw	-4
  2528  0014FC  50E3               	movf	plusw1,w,c
  2529  0014FE  1043               	iorwf	btemp,w,c
  2530  001500  B4D8               	btfsc	status,2,c
  2531  001502  D04A               	goto	u820
  2532                           
  2533                           ;stkvar	_counter @ sp[(-1)+0]
  2534  001504  0EFF               	movlw	-1
  2535  001506  6AE3               	clrf	plusw1,c
  2536  001508  D010               	goto	L2
  2537  00150A                     l1832:
  2538                           
  2539                           ;stkvar	_divisor @ sp[(-1)+-4]
  2540  00150A  0EFB               	movlw	-5
  2541  00150C  50E3               	movf	plusw1,w,c
  2542  00150E  90D8               	bcf	status,0,c
  2543  001510  34E8               	rlcf	wreg,w,c
  2544  001512  6E43               	movwf	btemp,c
  2545  001514  0EFB               	movlw	-5
  2546  001516  C043  FFE3         	movff	btemp,plusw1
  2547  00151A  0EFC               	movlw	-4
  2548  00151C  50E3               	movf	plusw1,w,c
  2549  00151E  34E8               	rlcf	wreg,w,c
  2550  001520  6E43               	movwf	btemp,c
  2551  001522  0EFC               	movlw	-4
  2552  001524  C043  FFE3         	movff	btemp,plusw1
  2553                           
  2554                           ;stkvar	_counter @ sp[(-1)+0]
  2555  001528  0EFF               	movlw	-1
  2556  00152A                     L2:
  2557  00152A  2AE3               	incf	plusw1,f,c
  2558                           
  2559                           ;stkvar	_divisor @ sp[(-1)+-4]
  2560  00152C  0EFC               	movlw	-4
  2561  00152E  AEE3               	btfss	plusw1,7,c
  2562  001530  D7EC               	goto	l1832
  2563  001532                     u800:
  2564                           
  2565                           ;stkvar	_divisor @ sp[(-1)+-4]
  2566  001532  0EFB               	movlw	-5
  2567  001534  CFE3 F04D          	movff	plusw1,btemp+10
  2568  001538  0EFC               	movlw	-4
  2569  00153A  CFE3 F04E          	movff	plusw1,btemp+11
  2570                           
  2571                           ;stkvar	_dividend @ sp[(-1)+-2]
  2572  00153E  0EFD               	movlw	-3
  2573  001540  CFE3 F04B          	movff	plusw1,btemp+8
  2574  001544  0EFE               	movlw	-2
  2575  001546  CFE3 F04C          	movff	plusw1,btemp+9
  2576  00154A  504D               	movf	btemp+10,w,c
  2577  00154C  5C4B               	subwf	btemp+8,w,c
  2578  00154E  504E               	movf	btemp+11,w,c
  2579  001550  584C               	subwfb	btemp+9,w,c
  2580  001552  A0D8               	btfss	status,0,c
  2581  001554  D012               	goto	l1842
  2582                           
  2583                           ;stkvar	_divisor @ sp[(-1)+-4]
  2584                           ;stkvar	_dividend @ sp[(-1)+-2]
  2585  001556  0EFD               	movlw	-3
  2586  001558  50E3               	movf	plusw1,w,c
  2587  00155A  6E43               	movwf	btemp,c
  2588  00155C  0EFB               	movlw	-5
  2589  00155E  50E3               	movf	plusw1,w,c
  2590  001560  5E43               	subwf	btemp,f,c
  2591  001562  0EFD               	movlw	-3
  2592  001564  C043  FFE3         	movff	btemp,plusw1
  2593  001568  0EFE               	movlw	-2
  2594  00156A  50E3               	movf	plusw1,w,c
  2595  00156C  6E43               	movwf	btemp,c
  2596  00156E  0EFC               	movlw	-4
  2597  001570  50E3               	movf	plusw1,w,c
  2598  001572  5A43               	subwfb	btemp,f,c
  2599  001574  0EFE               	movlw	-2
  2600  001576  C043  FFE3         	movff	btemp,plusw1
  2601  00157A                     l1842:
  2602                           
  2603                           ;stkvar	_divisor @ sp[(-1)+-4]
  2604  00157A  90D8               	bcf	status,0,c
  2605  00157C  0EFC               	movlw	-4
  2606  00157E  32E3               	rrcf	plusw1,f,c
  2607  001580  0EFB               	movlw	-5
  2608  001582  32E3               	rrcf	plusw1,f,c
  2609                           
  2610                           ;stkvar	_counter @ sp[(-1)+0]
  2611  001584  0EFF               	movlw	-1
  2612  001586  50E3               	movf	plusw1,w,c
  2613  001588  6E43               	movwf	btemp,c
  2614  00158A  0E01               	movlw	1
  2615  00158C  5E43               	subwf	btemp,f,c
  2616  00158E  0EFF               	movlw	-1
  2617  001590  C043  FFE3         	movff	btemp,plusw1
  2618  001594  A4D8               	btfss	status,2,c
  2619  001596  D7CD               	goto	u800
  2620  001598                     u820:
  2621                           
  2622                           ;stkvar	_dividend @ sp[(-1)+-2]
  2623  001598  0EFD               	movlw	-3
  2624  00159A  CFE3 F043          	movff	plusw1,btemp
  2625  00159E  0EFE               	movlw	-2
  2626  0015A0  CFE3 F044          	movff	plusw1,btemp+1
  2627                           
  2628                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2629  0015A4  0EFB               	movlw	251
  2630  0015A6  26E1               	addwf	fsr1l,f,c
  2631  0015A8  0EFF               	movlw	255
  2632  0015AA  22E2               	addwfc	fsr1h,f,c
  2633  0015AC  0012               	return		;funcret
  2634  0015AE                     __end_of___lwmod:
  2635                           	opt callstack 0
  2636                           
  2637 ;; *************** function _config_timer0 *****************
  2638 ;; Defined at:
  2639 ;;		line 23 in file "int0_test.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1  [STACK] void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2653 ;;      Params:         0       0       0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0
  2656 ;;      Totals:         0       0       0       0       0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:   10
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text13
  2668  001B90                     __ptext13:
  2669                           	opt callstack 0
  2670  001B90                     _config_timer0:
  2671                           	opt callstack 20
  2672                           
  2673                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  2674                           
  2675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2676                           ;incstack = 0
  2677  001B90  9AD5               	bcf	4053,5,c	;volatile
  2678                           
  2679                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  2680  001B92  96D5               	bcf	4053,3,c	;volatile
  2681                           
  2682                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  2683  001B94  0E07               	movlw	7
  2684  001B96  12D5               	iorwf	4053,f,c	;volatile
  2685                           
  2686                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  2687  001B98  8CF2               	bsf	4082,6,c	;volatile
  2688                           
  2689                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  2690  001B9A  8AF2               	bsf	4082,5,c	;volatile
  2691                           
  2692                           ;int0_test.c: 33:   TMR0L = 252;
  2693  001B9C  0EFC               	movlw	252
  2694  001B9E  6ED6               	movwf	4054,c	;volatile
  2695                           
  2696                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2697  001BA0  0012               	return		;funcret
  2698  001BA2                     __end_of_config_timer0:
  2699                           	opt callstack 0
  2700                           
  2701 ;; *************** function _config_INT0 *****************
  2702 ;; Defined at:
  2703 ;;		line 13 in file "int0_test.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;		None
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1  [STACK] void 
  2710 ;; Registers used:
  2711 ;;		None
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2717 ;;      Params:         0       0       0       0       0       0       0
  2718 ;;      Locals:         0       0       0       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0
  2720 ;;      Totals:         0       0       0       0       0       0       0
  2721 ;;Total ram usage:        0 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:   10
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_main
  2728 ;; This function uses a reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text14
  2732  001BA2                     __ptext14:
  2733                           	opt callstack 0
  2734  001BA2                     _config_INT0:
  2735                           	opt callstack 20
  2736                           
  2737                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2738                           
  2739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2740                           ;incstack = 0
  2741  001BA2  9095               	bcf	3989,0,c	;volatile
  2742                           
  2743                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2744  001BA4  8EF2               	bsf	4082,7,c	;volatile
  2745                           
  2746                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2747  001BA6  88F2               	bsf	4082,4,c	;volatile
  2748                           
  2749                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2750  001BA8  88F2               	bsf	4082,4,c	;volatile
  2751                           
  2752                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2753  001BAA  92F2               	bcf	4082,1,c	;volatile
  2754                           
  2755                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2756  001BAC  9EF1               	bcf	4081,7,c	;volatile
  2757                           
  2758                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2759  001BAE  9CF1               	bcf	4081,6,c	;volatile
  2760                           
  2761                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2762  001BB0  0012               	return		;funcret
  2763  001BB2                     __end_of_config_INT0:
  2764                           	opt callstack 0
  2765                           
  2766 ;; *************** function _task_idle *****************
  2767 ;; Defined at:
  2768 ;;		line 116 in file "kernel.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1  [STACK] void 
  2775 ;; Registers used:
  2776 ;;		None
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2782 ;;      Params:         0       0       0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0
  2785 ;;      Totals:         0       0       0       0       0       0       0
  2786 ;;Total ram usage:        0 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    3
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_lunos_init
  2793 ;; This function uses a reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text15
  2797  001BB8                     __ptext15:
  2798                           	opt callstack 0
  2799  001BB8                     _task_idle:
  2800                           	opt callstack 23
  2801                           
  2802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2803                           ;incstack = 0
  2804                           ;kernel.c: 118:   while (1) __nop();
  2805  001BB8  F000               	nop	
  2806  001BBA  D7FE               	goto	_task_idle
  2807  001BBC                     __end_of_task_idle:
  2808                           	opt callstack 0
  2809                           
  2810 ;; *************** function _count_bottles *****************
  2811 ;; Defined at:
  2812 ;;		line 36 in file "tasks.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  bottle          1  [STACK] struct .
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1  [STACK] void 
  2819 ;; Registers used:
  2820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2826 ;;      Params:         0       0       0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    8
  2833 ;; This function calls:
  2834 ;;		_lunos_delayTask
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text16
  2841  001916                     __ptext16:
  2842                           	opt callstack 0
  2843  001916                     _count_bottles:
  2844                           	opt callstack 0
  2845                           
  2846                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2847  001916  52E6               	movf	postinc1,f,c
  2848                           
  2849                           ;tasks.c: 37:     while(global_buffer.count < 3){
  2850                           
  2851                           ;incstack = 0
  2852  001918  D023               	goto	l2046
  2853  00191A                     l287:
  2854                           
  2855                           ;tasks.c: 38:         if(!PORTBbits.RB6){
  2856  00191A  BC81               	btfsc	3969,6,c	;volatile
  2857  00191C  D021               	goto	l2046
  2858                           
  2859                           ;tasks.c: 39:             lunos_delayTask(500);
  2860  00191E  0EF4               	movlw	244
  2861  001920  6EE6               	movwf	postinc1,c
  2862  001922  0E01               	movlw	1
  2863  001924  6EE6               	movwf	postinc1,c
  2864  001926  ECBC  F00C         	call	_lunos_delayTask	;wreg free
  2865                           
  2866                           ;tasks.c: 40:             t_bottle bottle;;tasks.c: 41:             global_buffer.bottle
      +                          s[global_buffer.count] = bottle;
  2867                           ;stkvar	_bottle @ sp[(-1)+0]
  2868  00192A  C001  F04D         	movff	_global_buffer,btemp+10
  2869  00192E  C002  F04E         	movff	_global_buffer+1,btemp+11
  2870  001932  0E03               	movlw	low (_global_buffer+2)
  2871  001934  244D               	addwf	btemp+10,w,c
  2872  001936  6ED9               	movwf	fsr2l,c
  2873  001938  0E00               	movlw	high (_global_buffer+2)
  2874  00193A  204E               	addwfc	btemp+11,w,c
  2875  00193C  6EDA               	movwf	fsr2h,c
  2876  00193E  0EFF               	movlw	-1
  2877  001940  CFE3 FFDF          	movff	plusw1,indf2
  2878                           
  2879                           ;tasks.c: 42:             global_buffer.bottles[global_buffer.count].bottle_state = EMPT
      +                          Y;
  2880  001944  C001  F04D         	movff	_global_buffer,btemp+10
  2881  001948  C002  F04E         	movff	_global_buffer+1,btemp+11
  2882  00194C  0E03               	movlw	low (_global_buffer+2)
  2883  00194E  244D               	addwf	btemp+10,w,c
  2884  001950  6ED9               	movwf	fsr2l,c
  2885  001952  0E00               	movlw	high (_global_buffer+2)
  2886  001954  204E               	addwfc	btemp+11,w,c
  2887  001956  6EDA               	movwf	fsr2h,c
  2888  001958  0E00               	movlw	0
  2889  00195A  6EDF               	movwf	indf2,c
  2890                           
  2891                           ;tasks.c: 43:             global_buffer.count += 1;
  2892  00195C  4A01               	infsnz	_global_buffer,f,c
  2893  00195E  2A02               	incf	_global_buffer+1,f,c
  2894  001960                     l2046:
  2895                           
  2896                           ;tasks.c: 37:     while(global_buffer.count < 3){
  2897  001960  BE02               	btfsc	_global_buffer+1,7,c
  2898  001962  D7DB               	goto	l287
  2899  001964  5002               	movf	_global_buffer+1,w,c
  2900  001966  E104               	bnz	u96_20
  2901  001968  0E03               	movlw	3
  2902  00196A  5C01               	subwf	_global_buffer,w,c
  2903  00196C  A0D8               	btfss	status,0,c
  2904  00196E  D7D5               	goto	l287
  2905  001970                     u96_20:
  2906                           
  2907                           ;tasks.c: 46:     global_buffer.p_state = BUSY_;
  2908  001970  0E01               	movlw	1
  2909  001972  6E06               	movwf	_global_buffer+5,c
  2910                           
  2911                           ; _count_bottles: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2912  001974  52E5               	movf	postdec1,f,c
  2913  001976  0012               	return		;funcret
  2914  001978                     __end_of_count_bottles:
  2915                           	opt callstack 0
  2916                           
  2917 ;; *************** function _lunos_delayTask *****************
  2918 ;; Defined at:
  2919 ;;		line 29 in file "kernel.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  time            2  [STACK] unsigned int 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1  [STACK] void 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2933 ;;      Params:         0       0       0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    7
  2940 ;; This function calls:
  2941 ;;		_dispatcher
  2942 ;; This function is called by:
  2943 ;;		_count_bottles
  2944 ;;		_fill_bottle
  2945 ;;		_count_out
  2946 ;;		_task_0
  2947 ;;		_task_1
  2948 ;;		_task_2
  2949 ;;		_task_xuxa
  2950 ;; This function uses a reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text17
  2954  001978                     __ptext17:
  2955                           	opt callstack 0
  2956  001978                     _lunos_delayTask:
  2957                           	opt callstack 18
  2958                           
  2959                           ;kernel.c: 30:   INTCONbits.GIE = 0;
  2960                           
  2961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2962                           ;incstack = 0
  2963  001978  9EF2               	bcf	4082,7,c	;volatile
  2964                           
  2965                           ;kernel.c: 32:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  2966                           ;stkvar	_time @ sp[(0)+-2]
  2967  00197A  50E1               	movf	fsr1l,w,c
  2968  00197C  0FFE               	addlw	-2
  2969  00197E  6ED9               	movwf	fsr2l,c
  2970  001980  50E2               	movf	fsr1h,w,c
  2971  001982  6EDA               	movwf	fsr2h,c
  2972  001984  0EFF               	movlw	255
  2973  001986  22DA               	addwfc	fsr2h,f,c
  2974  001988  EE02  F0AC         	lfsr	0,_ready_queue+542
  2975  00198C  CFEE F04D          	movff	postinc0,btemp+10
  2976  001990  CFED F04E          	movff	postdec0,btemp+11
  2977  001994  0E6C               	movlw	108
  2978  001996  024D               	mulwf	btemp+10,c
  2979  001998  CFF3 F04B          	movff	prodl,btemp+8
  2980  00199C  CFF4 F04C          	movff	prodh,btemp+9
  2981  0019A0  024E               	mulwf	btemp+11,c
  2982  0019A2  50F3               	movf	prodl,w,c
  2983  0019A4  264C               	addwf	btemp+9,f,c
  2984  0019A6  0EF8               	movlw	low (_ready_queue+106)
  2985  0019A8  244B               	addwf	btemp+8,w,c
  2986  0019AA  6EE9               	movwf	fsr0l,c
  2987  0019AC  0E00               	movlw	high (_ready_queue+106)
  2988  0019AE  204C               	addwfc	btemp+9,w,c
  2989  0019B0  6EEA               	movwf	fsr0h,c
  2990  0019B2  CFDE FFEE          	movff	postinc2,postinc0
  2991  0019B6  CFDD FFED          	movff	postdec2,postdec0
  2992                           
  2993                           ;kernel.c: 33:   dispatcher(WAITING);
  2994  0019BA  0E02               	movlw	2
  2995  0019BC  6EE6               	movwf	postinc1,c
  2996  0019BE  EC66  F002         	call	_dispatcher	;wreg free
  2997                           
  2998                           ;kernel.c: 35:   INTCONbits.GIE = 1;
  2999  0019C2  8EF2               	bsf	4082,7,c	;volatile
  3000                           
  3001                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3002  0019C4  52E5               	movf	postdec1,f,c
  3003  0019C6  52E5               	movf	postdec1,f,c
  3004  0019C8  0012               	return		;funcret
  3005  0019CA                     __end_of_lunos_delayTask:
  3006                           	opt callstack 0
  3007                           
  3008 ;; *************** function _fill_bottle *****************
  3009 ;; Defined at:
  3010 ;;		line 49 in file "tasks.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1  [STACK] void 
  3017 ;; Registers used:
  3018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3024 ;;      Params:         0       0       0       0       0       0       0
  3025 ;;      Locals:         0       0       0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0
  3027 ;;      Totals:         0       0       0       0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    8
  3031 ;; This function calls:
  3032 ;;		_lunos_delayTask
  3033 ;; This function is called by:
  3034 ;;		_main
  3035 ;; This function uses a reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text18
  3039  001B74                     __ptext18:
  3040                           	opt callstack 0
  3041  001B74                     _fill_bottle:
  3042                           	opt callstack 18
  3043                           
  3044                           ;tasks.c: 50:     while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  3045                           
  3046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3047                           ;incstack = 0
  3048  001B74  D006               	goto	l2054
  3049  001B76                     l2052:
  3050                           
  3051                           ;tasks.c: 51:         lunos_delayTask(100);
  3052  001B76  0E64               	movlw	100
  3053  001B78  6EE6               	movwf	postinc1,c
  3054  001B7A  0E00               	movlw	0
  3055  001B7C  6EE6               	movwf	postinc1,c
  3056  001B7E  ECBC  F00C         	call	_lunos_delayTask	;wreg free
  3057  001B82                     l2054:
  3058                           
  3059                           ;tasks.c: 50:     while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  3060  001B82  B082               	btfsc	3970,0,c	;volatile
  3061  001B84  0012               	return	
  3062  001B86  B282               	btfsc	3970,1,c	;volatile
  3063  001B88  0012               	return	
  3064  001B8A  B482               	btfsc	3970,2,c	;volatile
  3065  001B8C  0012               	return	
  3066  001B8E  D7F3               	goto	l2052
  3067  001B90                     __end_of_fill_bottle:
  3068                           	opt callstack 0
  3069                           
  3070 ;; *************** function _check_level *****************
  3071 ;; Defined at:
  3072 ;;		line 55 in file "tasks.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1  [STACK] void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3086 ;;      Params:         0       0       0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0
  3089 ;;      Totals:         0       0       0       0       0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    3
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text19
  3101  001B18                     __ptext19:
  3102                           	opt callstack 0
  3103  001B18                     _check_level:
  3104                           	opt callstack 23
  3105                           
  3106                           ;tasks.c: 56:     if (!PORTDbits.RD1)
  3107                           
  3108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3109                           ;incstack = 0
  3110  001B18  B283               	btfsc	3971,1,c	;volatile
  3111  001B1A  D002               	goto	l301
  3112                           
  3113                           ;tasks.c: 57:         global_buffer.bottles[0].bottle_state = EMPTY;
  3114  001B1C  6A03               	clrf	_global_buffer+2,c
  3115  001B1E  D004               	goto	l302
  3116  001B20                     l301:
  3117  001B20  A283               	btfss	3971,1,c	;volatile
  3118  001B22  D002               	goto	l302
  3119                           
  3120                           ;tasks.c: 59:         global_buffer.bottles[0].bottle_state = FULL;
  3121  001B24  0E01               	movlw	1
  3122  001B26  6E03               	movwf	_global_buffer+2,c
  3123  001B28                     l302:
  3124                           
  3125                           ;tasks.c: 62:     if (!PORTDbits.RD2)
  3126  001B28  B483               	btfsc	3971,2,c	;volatile
  3127  001B2A  D002               	goto	l305
  3128                           
  3129                           ;tasks.c: 63:         global_buffer.bottles[1].bottle_state = EMPTY;
  3130  001B2C  6A04               	clrf	_global_buffer+3,c
  3131  001B2E  D004               	goto	l306
  3132  001B30                     l305:
  3133  001B30  A483               	btfss	3971,2,c	;volatile
  3134  001B32  D002               	goto	l306
  3135                           
  3136                           ;tasks.c: 65:         global_buffer.bottles[1].bottle_state = FULL;
  3137  001B34  0E01               	movlw	1
  3138  001B36  6E04               	movwf	_global_buffer+3,c
  3139  001B38                     l306:
  3140                           
  3141                           ;tasks.c: 68:     if (!PORTDbits.RD3)
  3142  001B38  B683               	btfsc	3971,3,c	;volatile
  3143  001B3A  D002               	goto	l309
  3144                           
  3145                           ;tasks.c: 69:         global_buffer.bottles[2].bottle_state = EMPTY;
  3146  001B3C  6A05               	clrf	_global_buffer+4,c
  3147  001B3E  0012               	return	
  3148  001B40                     l309:
  3149  001B40  A683               	btfss	3971,3,c	;volatile
  3150  001B42  0012               	return	
  3151                           
  3152                           ;tasks.c: 71:         global_buffer.bottles[2].bottle_state = FULL;
  3153  001B44  0E01               	movlw	1
  3154  001B46  6E05               	movwf	_global_buffer+4,c
  3155                           
  3156                           ; _check_level: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  3157  001B48  0012               	return		;funcret
  3158  001B4A                     __end_of_check_level:
  3159                           	opt callstack 0
  3160                           
  3161 ;; *************** function _cover_bottle *****************
  3162 ;; Defined at:
  3163 ;;		line 75 in file "tasks.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1  [STACK] void 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3177 ;;      Params:         0       0       0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0
  3180 ;;      Totals:         0       0       0       0       0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    3
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text20
  3192  001A60                     __ptext20:
  3193                           	opt callstack 0
  3194  001A60                     _cover_bottle:
  3195                           	opt callstack 23
  3196                           
  3197                           ;tasks.c: 76:     if (PORTCbits.RC3){
  3198                           
  3199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3200                           ;incstack = 0
  3201  001A60  A682               	btfss	3970,3,c	;volatile
  3202  001A62  D009               	goto	l316
  3203                           
  3204                           ;tasks.c: 77:         if(global_buffer.bottles[0].bottle_state == FULL)
  3205  001A64  0403               	decf	_global_buffer+2,w,c
  3206  001A66  A4D8               	btfss	status,2,c
  3207  001A68  D002               	goto	l317
  3208                           
  3209                           ;tasks.c: 78:             global_buffer.bottles[0].bottle_state = CLOSED;
  3210  001A6A  0E02               	movlw	2
  3211  001A6C  D003               	goto	L3
  3212  001A6E                     l317:
  3213  001A6E  A682               	btfss	3970,3,c	;volatile
  3214  001A70  D002               	goto	l316
  3215                           
  3216                           ;tasks.c: 80:             global_buffer.bottles[0].bottle_state = FAIL;
  3217  001A72  0E03               	movlw	3
  3218  001A74                     L3:
  3219  001A74  6E03               	movwf	_global_buffer+2,c
  3220  001A76                     l316:
  3221                           
  3222                           ;tasks.c: 83:     if (PORTCbits.RC4){
  3223  001A76  A882               	btfss	3970,4,c	;volatile
  3224  001A78  D009               	goto	l321
  3225                           
  3226                           ;tasks.c: 84:         if(global_buffer.bottles[1].bottle_state == FULL)
  3227  001A7A  0404               	decf	_global_buffer+3,w,c
  3228  001A7C  A4D8               	btfss	status,2,c
  3229  001A7E  D002               	goto	l322
  3230                           
  3231                           ;tasks.c: 85:             global_buffer.bottles[1].bottle_state = CLOSED;
  3232  001A80  0E02               	movlw	2
  3233  001A82  D003               	goto	L4
  3234  001A84                     l322:
  3235  001A84  A882               	btfss	3970,4,c	;volatile
  3236  001A86  D002               	goto	l321
  3237                           
  3238                           ;tasks.c: 87:             global_buffer.bottles[1].bottle_state = FAIL;
  3239  001A88  0E03               	movlw	3
  3240  001A8A                     L4:
  3241  001A8A  6E04               	movwf	_global_buffer+3,c
  3242  001A8C                     l321:
  3243                           
  3244                           ;tasks.c: 90:     if (PORTCbits.RC5){
  3245  001A8C  AA82               	btfss	3970,5,c	;volatile
  3246  001A8E  0012               	return	
  3247                           
  3248                           ;tasks.c: 91:         if(global_buffer.bottles[2].bottle_state == FULL)
  3249  001A90  0405               	decf	_global_buffer+4,w,c
  3250  001A92  A4D8               	btfss	status,2,c
  3251  001A94  D003               	goto	l327
  3252                           
  3253                           ;tasks.c: 92:             global_buffer.bottles[2].bottle_state = CLOSED;
  3254  001A96  0E02               	movlw	2
  3255  001A98  6E05               	movwf	_global_buffer+4,c
  3256  001A9A  0012               	return	
  3257  001A9C                     l327:
  3258  001A9C  AA82               	btfss	3970,5,c	;volatile
  3259  001A9E  0012               	return	
  3260                           
  3261                           ;tasks.c: 94:             global_buffer.bottles[2].bottle_state = FAIL;
  3262  001AA0  0E03               	movlw	3
  3263  001AA2  6E05               	movwf	_global_buffer+4,c
  3264  001AA4  0012               	return	
  3265  001AA6                     __end_of_cover_bottle:
  3266                           	opt callstack 0
  3267                           
  3268 ;; *************** function _count_out *****************
  3269 ;; Defined at:
  3270 ;;		line 99 in file "tasks.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  out_bottles     2  [STACK] int 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1  [STACK] void 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3284 ;;      Params:         0       0       0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0
  3287 ;;      Totals:         0       0       0       0       0       0       0
  3288 ;;Total ram usage:        0 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    8
  3291 ;; This function calls:
  3292 ;;		_lunos_delayTask
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;; This function uses a reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text21
  3299  001840                     __ptext21:
  3300                           	opt callstack 0
  3301  001840                     _count_out:
  3302                           	opt callstack 0
  3303                           
  3304                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3305  001840  52E6               	movf	postinc1,f,c
  3306  001842  52E6               	movf	postinc1,f,c
  3307                           
  3308                           ;tasks.c: 100:     int out_bottles = 0;
  3309                           ;stkvar	_out_bottles @ sp[(-2)+0]
  3310                           
  3311                           ;incstack = 0
  3312  001844  0EFE               	movlw	-2
  3313  001846  6AE3               	clrf	plusw1,c
  3314  001848  0EFF               	movlw	-1
  3315  00184A  6AE3               	clrf	plusw1,c
  3316                           
  3317                           ;tasks.c: 101:     if(PORTDbits.RD4){
  3318  00184C  A883               	btfss	3971,4,c	;volatile
  3319  00184E  D015               	goto	l2068
  3320                           
  3321                           ;tasks.c: 102:         out_bottles++;
  3322                           ;stkvar	_out_bottles @ sp[(-2)+0]
  3323  001850  0EFE               	movlw	-2
  3324  001852  50E3               	movf	plusw1,w,c
  3325  001854  0F01               	addlw	1
  3326  001856  6E43               	movwf	btemp,c
  3327  001858  0EFE               	movlw	-2
  3328  00185A  C043  FFE3         	movff	btemp,plusw1
  3329  00185E  6A43               	clrf	btemp,c
  3330  001860  0EFF               	movlw	-1
  3331  001862  50E3               	movf	plusw1,w,c
  3332  001864  2043               	addwfc	btemp,w,c
  3333  001866  6E43               	movwf	btemp,c
  3334  001868  0EFF               	movlw	-1
  3335  00186A  C043  FFE3         	movff	btemp,plusw1
  3336                           
  3337                           ;tasks.c: 103:         lunos_delayTask(100);
  3338  00186E  0E64               	movlw	100
  3339  001870  6EE6               	movwf	postinc1,c
  3340  001872  0E00               	movlw	0
  3341  001874  6EE6               	movwf	postinc1,c
  3342  001876  ECBC  F00C         	call	_lunos_delayTask	;wreg free
  3343  00187A                     l2068:
  3344                           
  3345                           ;tasks.c: 105:     if (out_bottles == 5){
  3346                           ;stkvar	_out_bottles @ sp[(-2)+0]
  3347  00187A  0EFE               	movlw	-2
  3348  00187C  CFE3 F043          	movff	plusw1,btemp
  3349  001880  0E05               	movlw	5
  3350  001882  1843               	xorwf	btemp,w,c
  3351  001884  E10C               	bnz	l2076
  3352  001886  0EFF               	movlw	-1
  3353  001888  50E3               	movf	plusw1,w,c
  3354  00188A  A4D8               	btfss	status,2,c
  3355  00188C  D008               	goto	l2076
  3356                           
  3357                           ;tasks.c: 106:         PORTBbits.RB1 = 0;
  3358  00188E  9281               	bcf	3969,1,c	;volatile
  3359                           
  3360                           ;tasks.c: 107:         lunos_delayTask(10000);
  3361  001890  0E10               	movlw	16
  3362  001892  6EE6               	movwf	postinc1,c
  3363  001894  0E27               	movlw	39
  3364  001896  6EE6               	movwf	postinc1,c
  3365  001898  ECBC  F00C         	call	_lunos_delayTask	;wreg free
  3366                           
  3367                           ;tasks.c: 108:         PORTBbits.RB1 = 1;
  3368  00189C  8281               	bsf	3969,1,c	;volatile
  3369  00189E                     l2076:
  3370                           
  3371                           ;tasks.c: 110:      global_buffer.p_state = FREE;
  3372  00189E  0E00               	movlw	0
  3373  0018A0  B8A6               	btfsc	4006,4,c	;volsfr
  3374  0018A2  0E01               	movlw	1
  3375  0018A4  6E06               	movwf	_global_buffer+5,c
  3376                           
  3377                           ; _count_out: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  3378  0018A6  52E5               	movf	postdec1,f,c
  3379  0018A8  52E5               	movf	postdec1,f,c
  3380  0018AA  0012               	return		;funcret
  3381  0018AC                     __end_of_count_out:
  3382                           	opt callstack 0
  3383                           
  3384 ;; *************** function _task_0 *****************
  3385 ;; Defined at:
  3386 ;;		line 113 in file "tasks.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1  [STACK] void 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3400 ;;      Params:         0       0       0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0
  3403 ;;      Totals:         0       0       0       0       0       0       0
  3404 ;;Total ram usage:        0 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    9
  3407 ;; This function calls:
  3408 ;;		_lunos_delayTask
  3409 ;;		_pipe_write
  3410 ;; This function is called by:
  3411 ;;		Interrupt level 1
  3412 ;; This function uses a reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text22
  3416  001AA6                     __ptext22:
  3417                           	opt callstack 0
  3418  001AA6                     _task_0:
  3419                           	opt callstack 17
  3420                           
  3421                           ;tasks.c: 115:     pipe_write(&p, 1);
  3422                           
  3423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3424                           ;incstack = 0
  3425                           ;tasks.c: 114:   while(1){
  3426  001AA6  0E01               	movlw	1
  3427  001AA8  6EE6               	movwf	postinc1,c
  3428  001AAA  0E00               	movlw	0
  3429  001AAC  6EE6               	movwf	postinc1,c
  3430  001AAE  0E37               	movlw	low _p
  3431  001AB0  6EE6               	movwf	postinc1,c
  3432  001AB2  0E00               	movlw	high _p
  3433  001AB4  6EE6               	movwf	postinc1,c
  3434  001AB6  EC3F  F007         	call	_pipe_write	;wreg free
  3435                           
  3436                           ;tasks.c: 116:     PORTBbits.RB3 = ~PORTBbits.RB3;
  3437  001ABA  A681               	btfss	3969,3,c	;volatile
  3438  001ABC  D002               	goto	u102_20
  3439  001ABE  0E01               	movlw	1
  3440  001AC0  D001               	goto	u102_26
  3441  001AC2                     u102_20:
  3442  001AC2  0E00               	movlw	0
  3443  001AC4                     u102_26:
  3444  001AC4  0AFF               	xorlw	255
  3445  001AC6  6E4E               	movwf	btemp+11,c
  3446  001AC8  464E               	rlncf	btemp+11,f,c
  3447  001ACA  464E               	rlncf	btemp+11,f,c
  3448  001ACC  464E               	rlncf	btemp+11,f,c
  3449  001ACE  5081               	movf	3969,w,c	;volatile
  3450  001AD0  184E               	xorwf	btemp+11,w,c
  3451  001AD2  0BF7               	andlw	-9
  3452  001AD4  184E               	xorwf	btemp+11,w,c
  3453  001AD6  6E81               	movwf	3969,c	;volatile
  3454                           
  3455                           ;tasks.c: 117:     lunos_delayTask(1000);
  3456  001AD8  0EE8               	movlw	232
  3457  001ADA  6EE6               	movwf	postinc1,c
  3458  001ADC  0E03               	movlw	3
  3459  001ADE  6EE6               	movwf	postinc1,c
  3460  001AE0  ECBC  F00C         	call	_lunos_delayTask	;wreg free
  3461  001AE4  D7E0               	goto	_task_0
  3462  001AE6                     __end_of_task_0:
  3463                           	opt callstack 0
  3464                           
  3465 ;; *************** function _pipe_write *****************
  3466 ;; Defined at:
  3467 ;;		line 18 in file "pipe.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  p               2  [STACK] PTR struct pipe
  3470 ;;		 -> p(12), 
  3471 ;;  data            2  [STACK] unsigned int 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1  [STACK] void 
  3476 ;; Registers used:
  3477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3483 ;;      Params:         0       0       0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    8
  3490 ;; This function calls:
  3491 ;;		_sem_post
  3492 ;;		_sem_wait
  3493 ;; This function is called by:
  3494 ;;		_task_0
  3495 ;; This function uses a reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text23
  3499  000E7E                     __ptext23:
  3500                           	opt callstack 0
  3501  000E7E                     _pipe_write:
  3502                           	opt callstack 17
  3503                           
  3504                           ;pipe.c: 20:   sem_wait(p->w);
  3505                           ;stkvar	_p @ sp[(0)+-2]
  3506                           
  3507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3508                           ;incstack = 0
  3509  000E7E  0EFE               	movlw	-2
  3510  000E80  CFE3 F04D          	movff	plusw1,btemp+10
  3511  000E84  0EFF               	movlw	-1
  3512  000E86  CFE3 F04E          	movff	plusw1,btemp+11
  3513  000E8A  0E08               	movlw	8
  3514  000E8C  244D               	addwf	btemp+10,w,c
  3515  000E8E  6ED9               	movwf	fsr2l,c
  3516  000E90  0E00               	movlw	0
  3517  000E92  204E               	addwfc	btemp+11,w,c
  3518  000E94  6EDA               	movwf	fsr2h,c
  3519  000E96  CFDE F04D          	movff	postinc2,btemp+10
  3520  000E9A  CFDD F04E          	movff	postdec2,btemp+11
  3521  000E9E  C04D  FFE6         	movff	btemp+10,postinc1
  3522  000EA2  C04E  FFE6         	movff	btemp+11,postinc1
  3523  000EA6  EC3F  F009         	call	_sem_wait	;wreg free
  3524                           
  3525                           ;pipe.c: 21:   p->pipe_data[p->index_write] = data;
  3526                           ;stkvar	_data @ sp[(0)+-4]
  3527  000EAA  50E1               	movf	fsr1l,w,c
  3528  000EAC  0FFC               	addlw	-4
  3529  000EAE  6ED9               	movwf	fsr2l,c
  3530  000EB0  50E2               	movf	fsr1h,w,c
  3531  000EB2  6EDA               	movwf	fsr2h,c
  3532  000EB4  0EFF               	movlw	255
  3533  000EB6  22DA               	addwfc	fsr2h,f,c
  3534                           
  3535                           ;stkvar	_p @ sp[(0)+-2]
  3536  000EB8  0EFE               	movlw	-2
  3537  000EBA  CFE3 F04D          	movff	plusw1,btemp+10
  3538  000EBE  0EFF               	movlw	-1
  3539  000EC0  CFE3 F04E          	movff	plusw1,btemp+11
  3540  000EC4  0E04               	movlw	4
  3541  000EC6  244D               	addwf	btemp+10,w,c
  3542  000EC8  6EE9               	movwf	fsr0l,c
  3543  000ECA  0E00               	movlw	0
  3544  000ECC  204E               	addwfc	btemp+11,w,c
  3545  000ECE  6EEA               	movwf	fsr0h,c
  3546  000ED0  CFEE F04D          	movff	postinc0,btemp+10
  3547  000ED4  CFED F04E          	movff	postdec0,btemp+11
  3548  000ED8  90D8               	bcf	status,0,c
  3549  000EDA  344D               	rlcf	btemp+10,w,c
  3550  000EDC  6E4B               	movwf	btemp+8,c
  3551  000EDE  344E               	rlcf	btemp+11,w,c
  3552  000EE0  6E4C               	movwf	btemp+9,c
  3553                           
  3554                           ;stkvar	_p @ sp[(0)+-2]
  3555  000EE2  0EFE               	movlw	-2
  3556  000EE4  CFE3 F04D          	movff	plusw1,btemp+10
  3557  000EE8  0EFF               	movlw	-1
  3558  000EEA  CFE3 F04E          	movff	plusw1,btemp+11
  3559  000EEE  504B               	movf	btemp+8,w,c
  3560  000EF0  244D               	addwf	btemp+10,w,c
  3561  000EF2  6EE9               	movwf	fsr0l,c
  3562  000EF4  504C               	movf	btemp+9,w,c
  3563  000EF6  204E               	addwfc	btemp+11,w,c
  3564  000EF8  6EEA               	movwf	fsr0h,c
  3565  000EFA  CFDE FFEE          	movff	postinc2,postinc0
  3566  000EFE  CFDD FFED          	movff	postdec2,postdec0
  3567                           
  3568                           ;pipe.c: 22:   p->index_write = (p->index_write + 1) % 2;
  3569                           ;stkvar	_p @ sp[(0)+-2]
  3570  000F02  0EFE               	movlw	-2
  3571  000F04  CFE3 F04D          	movff	plusw1,btemp+10
  3572  000F08  0EFF               	movlw	-1
  3573  000F0A  CFE3 F04E          	movff	plusw1,btemp+11
  3574  000F0E  0E04               	movlw	4
  3575  000F10  244D               	addwf	btemp+10,w,c
  3576  000F12  6ED9               	movwf	fsr2l,c
  3577  000F14  0E00               	movlw	0
  3578  000F16  204E               	addwfc	btemp+11,w,c
  3579  000F18  6EDA               	movwf	fsr2h,c
  3580  000F1A  CFDE F04D          	movff	postinc2,btemp+10
  3581  000F1E  CFDD F04E          	movff	postdec2,btemp+11
  3582  000F22  0E01               	movlw	1
  3583  000F24  264D               	addwf	btemp+10,f,c
  3584  000F26  0E00               	movlw	0
  3585  000F28  224E               	addwfc	btemp+11,f,c
  3586  000F2A  0E01               	movlw	1
  3587  000F2C  164D               	andwf	btemp+10,f,c
  3588  000F2E  0E00               	movlw	0
  3589  000F30  164E               	andwf	btemp+11,f,c
  3590                           
  3591                           ;stkvar	_p @ sp[(0)+-2]
  3592  000F32  0EFE               	movlw	-2
  3593  000F34  CFE3 F04B          	movff	plusw1,btemp+8
  3594  000F38  0EFF               	movlw	-1
  3595  000F3A  CFE3 F04C          	movff	plusw1,btemp+9
  3596  000F3E  0E04               	movlw	4
  3597  000F40  244B               	addwf	btemp+8,w,c
  3598  000F42  6ED9               	movwf	fsr2l,c
  3599  000F44  0E00               	movlw	0
  3600  000F46  204C               	addwfc	btemp+9,w,c
  3601  000F48  6EDA               	movwf	fsr2h,c
  3602  000F4A  C04D  FFDE         	movff	btemp+10,postinc2
  3603  000F4E  C04E  FFDD         	movff	btemp+11,postdec2
  3604                           
  3605                           ;pipe.c: 23:   sem_post(p->r);
  3606                           ;stkvar	_p @ sp[(0)+-2]
  3607  000F52  0EFE               	movlw	-2
  3608  000F54  CFE3 F04D          	movff	plusw1,btemp+10
  3609  000F58  0EFF               	movlw	-1
  3610  000F5A  CFE3 F04E          	movff	plusw1,btemp+11
  3611  000F5E  0E0A               	movlw	10
  3612  000F60  244D               	addwf	btemp+10,w,c
  3613  000F62  6ED9               	movwf	fsr2l,c
  3614  000F64  0E00               	movlw	0
  3615  000F66  204E               	addwfc	btemp+11,w,c
  3616  000F68  6EDA               	movwf	fsr2h,c
  3617  000F6A  CFDE F04D          	movff	postinc2,btemp+10
  3618  000F6E  CFDD F04E          	movff	postdec2,btemp+11
  3619  000F72  C04D  FFE6         	movff	btemp+10,postinc1
  3620  000F76  C04E  FFE6         	movff	btemp+11,postinc1
  3621  000F7A  ECC4  F008         	call	_sem_post	;wreg free
  3622                           
  3623                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  3624  000F7E  52E5               	movf	postdec1,f,c
  3625  000F80  52E5               	movf	postdec1,f,c
  3626  000F82  52E5               	movf	postdec1,f,c
  3627  000F84  52E5               	movf	postdec1,f,c
  3628  000F86  0012               	return		;funcret
  3629  000F88                     __end_of_pipe_write:
  3630                           	opt callstack 0
  3631                           
  3632 ;; *************** function _sem_wait *****************
  3633 ;; Defined at:
  3634 ;;		line 20 in file "semaphore.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  s               2  [STACK] PTR struct semaphore
  3637 ;;		 -> r_pipe(14), w_pipe(14), teste_2(14), teste_1(14), 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1  [STACK] void 
  3642 ;; Registers used:
  3643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3649 ;;      Params:         0       0       0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0
  3652 ;;      Totals:         0       0       0       0       0       0       0
  3653 ;;Total ram usage:        0 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    7
  3656 ;; This function calls:
  3657 ;;		_dispatcher
  3658 ;; This function is called by:
  3659 ;;		_pipe_write
  3660 ;;		_pipe_read
  3661 ;;		_task_bozo
  3662 ;;		_task_xuxa
  3663 ;; This function uses a reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text24
  3667  00127E                     __ptext24:
  3668                           	opt callstack 0
  3669  00127E                     _sem_wait:
  3670                           	opt callstack 18
  3671                           
  3672                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  3673                           
  3674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3675                           ;incstack = 0
  3676  00127E  9EF2               	bcf	4082,7,c	;volatile
  3677                           
  3678                           ;semaphore.c: 22:   s->contador -= 1;
  3679                           ;stkvar	_s @ sp[(0)+-2]
  3680  001280  0EFE               	movlw	-2
  3681  001282  CFE3 FFD9          	movff	plusw1,fsr2l
  3682  001286  0EFF               	movlw	-1
  3683  001288  CFE3 FFDA          	movff	plusw1,fsr2h
  3684  00128C  06DE               	decf	postinc2,f,c
  3685  00128E  0E00               	movlw	0
  3686  001290  5ADD               	subwfb	postdec2,f,c
  3687                           
  3688                           ;semaphore.c: 23:   if (s->contador < 0) {
  3689                           ;stkvar	_s @ sp[(0)+-2]
  3690  001292  0EFE               	movlw	-2
  3691  001294  CFE3 FFD9          	movff	plusw1,fsr2l
  3692  001298  0EFF               	movlw	-1
  3693  00129A  CFE3 FFDA          	movff	plusw1,fsr2h
  3694  00129E  0E01               	movlw	1
  3695  0012A0  AEDB               	btfss	plusw2,7,c
  3696  0012A2  D05D               	goto	l1928
  3697                           
  3698                           ;semaphore.c: 24:     s->contador = 0;
  3699                           ;stkvar	_s @ sp[(0)+-2]
  3700  0012A4  0EFE               	movlw	-2
  3701  0012A6  CFE3 FFD9          	movff	plusw1,fsr2l
  3702  0012AA  0EFF               	movlw	-1
  3703  0012AC  CFE3 FFDA          	movff	plusw1,fsr2h
  3704  0012B0  0E00               	movlw	0
  3705  0012B2  6EDE               	movwf	postinc2,c
  3706  0012B4  0E00               	movlw	0
  3707  0012B6  6EDD               	movwf	postdec2,c
  3708                           
  3709                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  3710  0012B8  EE22  F0AC         	lfsr	2,_ready_queue+542
  3711                           
  3712                           ;stkvar	_s @ sp[(0)+-2]
  3713  0012BC  0EFE               	movlw	-2
  3714  0012BE  CFE3 F04D          	movff	plusw1,btemp+10
  3715  0012C2  0EFF               	movlw	-1
  3716  0012C4  CFE3 F04E          	movff	plusw1,btemp+11
  3717  0012C8  0E0A               	movlw	10
  3718  0012CA  244D               	addwf	btemp+10,w,c
  3719  0012CC  6EE9               	movwf	fsr0l,c
  3720  0012CE  0E00               	movlw	0
  3721  0012D0  204E               	addwfc	btemp+11,w,c
  3722  0012D2  6EEA               	movwf	fsr0h,c
  3723  0012D4  CFEE F04D          	movff	postinc0,btemp+10
  3724  0012D8  CFED F04E          	movff	postdec0,btemp+11
  3725  0012DC  90D8               	bcf	status,0,c
  3726  0012DE  344D               	rlcf	btemp+10,w,c
  3727  0012E0  6E4B               	movwf	btemp+8,c
  3728  0012E2  344E               	rlcf	btemp+11,w,c
  3729  0012E4  6E4C               	movwf	btemp+9,c
  3730                           
  3731                           ;stkvar	_s @ sp[(0)+-2]
  3732  0012E6  0EFE               	movlw	-2
  3733  0012E8  50E3               	movf	plusw1,w,c
  3734  0012EA  264B               	addwf	btemp+8,f,c
  3735  0012EC  0EFF               	movlw	-1
  3736  0012EE  50E3               	movf	plusw1,w,c
  3737  0012F0  224C               	addwfc	btemp+9,f,c
  3738  0012F2  0E02               	movlw	2
  3739  0012F4  244B               	addwf	btemp+8,w,c
  3740  0012F6  6EE9               	movwf	fsr0l,c
  3741  0012F8  0E00               	movlw	0
  3742  0012FA  204C               	addwfc	btemp+9,w,c
  3743  0012FC  6EEA               	movwf	fsr0h,c
  3744  0012FE  CFDE FFEE          	movff	postinc2,postinc0
  3745  001302  CFDD FFED          	movff	postdec2,postdec0
  3746                           
  3747                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 4;
  3748                           ;stkvar	_s @ sp[(0)+-2]
  3749  001306  0EFE               	movlw	-2
  3750  001308  CFE3 F04D          	movff	plusw1,btemp+10
  3751  00130C  0EFF               	movlw	-1
  3752  00130E  CFE3 F04E          	movff	plusw1,btemp+11
  3753  001312  0E0A               	movlw	10
  3754  001314  244D               	addwf	btemp+10,w,c
  3755  001316  6ED9               	movwf	fsr2l,c
  3756  001318  0E00               	movlw	0
  3757  00131A  204E               	addwfc	btemp+11,w,c
  3758  00131C  6EDA               	movwf	fsr2h,c
  3759  00131E  CFDE F04D          	movff	postinc2,btemp+10
  3760  001322  CFDD F04E          	movff	postdec2,btemp+11
  3761  001326  0E01               	movlw	1
  3762  001328  264D               	addwf	btemp+10,f,c
  3763  00132A  0E00               	movlw	0
  3764  00132C  224E               	addwfc	btemp+11,f,c
  3765  00132E  0E03               	movlw	3
  3766  001330  164D               	andwf	btemp+10,f,c
  3767  001332  0E00               	movlw	0
  3768  001334  164E               	andwf	btemp+11,f,c
  3769                           
  3770                           ;stkvar	_s @ sp[(0)+-2]
  3771  001336  0EFE               	movlw	-2
  3772  001338  CFE3 F04B          	movff	plusw1,btemp+8
  3773  00133C  0EFF               	movlw	-1
  3774  00133E  CFE3 F04C          	movff	plusw1,btemp+9
  3775  001342  0E0A               	movlw	10
  3776  001344  244B               	addwf	btemp+8,w,c
  3777  001346  6ED9               	movwf	fsr2l,c
  3778  001348  0E00               	movlw	0
  3779  00134A  204C               	addwfc	btemp+9,w,c
  3780  00134C  6EDA               	movwf	fsr2h,c
  3781  00134E  C04D  FFDE         	movff	btemp+10,postinc2
  3782  001352  C04E  FFDD         	movff	btemp+11,postdec2
  3783                           
  3784                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  3785  001356  0E05               	movlw	5
  3786  001358  6EE6               	movwf	postinc1,c
  3787  00135A  EC66  F002         	call	_dispatcher	;wreg free
  3788  00135E                     l1928:
  3789                           
  3790                           ;semaphore.c: 29:   INTCONbits.GIE = 1;
  3791  00135E  8EF2               	bsf	4082,7,c	;volatile
  3792                           
  3793                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3794  001360  52E5               	movf	postdec1,f,c
  3795  001362  52E5               	movf	postdec1,f,c
  3796  001364  0012               	return		;funcret
  3797  001366                     __end_of_sem_wait:
  3798                           	opt callstack 0
  3799                           
  3800 ;; *************** function _sem_post *****************
  3801 ;; Defined at:
  3802 ;;		line 32 in file "semaphore.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  s               2  [STACK] PTR struct semaphore
  3805 ;;		 -> r_pipe(14), w_pipe(14), teste_2(14), teste_1(14), 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1  [STACK] void 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3817 ;;      Params:         0       0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    3
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_pipe_write
  3828 ;;		_pipe_read
  3829 ;;		_task_bozo
  3830 ;;		_task_xuxa
  3831 ;; This function uses a reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text25
  3835  001188                     __ptext25:
  3836                           	opt callstack 0
  3837  001188                     _sem_post:
  3838                           	opt callstack 22
  3839                           
  3840                           ;semaphore.c: 33:   INTCONbits.GIE = 0;
  3841                           
  3842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3843                           ;incstack = 0
  3844  001188  9EF2               	bcf	4082,7,c	;volatile
  3845                           
  3846                           ;semaphore.c: 34:   s->contador += 1;
  3847                           ;stkvar	_s @ sp[(0)+-2]
  3848  00118A  0EFE               	movlw	-2
  3849  00118C  CFE3 FFD9          	movff	plusw1,fsr2l
  3850  001190  0EFF               	movlw	-1
  3851  001192  CFE3 FFDA          	movff	plusw1,fsr2h
  3852  001196  2ADE               	incf	postinc2,f,c
  3853  001198  0E00               	movlw	0
  3854  00119A  22DD               	addwfc	postdec2,f,c
  3855                           
  3856                           ;semaphore.c: 35:   if (s->contador > 0) {
  3857                           ;stkvar	_s @ sp[(0)+-2]
  3858  00119C  0EFE               	movlw	-2
  3859  00119E  CFE3 FFD9          	movff	plusw1,fsr2l
  3860  0011A2  0EFF               	movlw	-1
  3861  0011A4  CFE3 FFDA          	movff	plusw1,fsr2h
  3862  0011A8  0E01               	movlw	1
  3863  0011AA  BEDB               	btfsc	plusw2,7,c
  3864  0011AC  D064               	goto	l1940
  3865  0011AE  0E01               	movlw	1
  3866  0011B0  50DB               	movf	plusw2,w,c
  3867  0011B2  E103               	bnz	u88_20
  3868  0011B4  04DE               	decf	postinc2,w,c
  3869  0011B6  A0D8               	btfss	status,0,c
  3870  0011B8  D05E               	goto	l1940
  3871  0011BA                     u88_20:
  3872                           
  3873                           ;semaphore.c: 36:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  3874                           ;stkvar	_s @ sp[(0)+-2]
  3875  0011BA  0EFE               	movlw	-2
  3876  0011BC  CFE3 F04D          	movff	plusw1,btemp+10
  3877  0011C0  0EFF               	movlw	-1
  3878  0011C2  CFE3 F04E          	movff	plusw1,btemp+11
  3879  0011C6  0E0C               	movlw	12
  3880  0011C8  244D               	addwf	btemp+10,w,c
  3881  0011CA  6ED9               	movwf	fsr2l,c
  3882  0011CC  0E00               	movlw	0
  3883  0011CE  204E               	addwfc	btemp+11,w,c
  3884  0011D0  6EDA               	movwf	fsr2h,c
  3885  0011D2  CFDE F04D          	movff	postinc2,btemp+10
  3886  0011D6  CFDD F04E          	movff	postdec2,btemp+11
  3887  0011DA  90D8               	bcf	status,0,c
  3888  0011DC  344D               	rlcf	btemp+10,w,c
  3889  0011DE  6E4B               	movwf	btemp+8,c
  3890  0011E0  344E               	rlcf	btemp+11,w,c
  3891  0011E2  6E4C               	movwf	btemp+9,c
  3892                           
  3893                           ;stkvar	_s @ sp[(0)+-2]
  3894  0011E4  0EFE               	movlw	-2
  3895  0011E6  50E3               	movf	plusw1,w,c
  3896  0011E8  264B               	addwf	btemp+8,f,c
  3897  0011EA  0EFF               	movlw	-1
  3898  0011EC  50E3               	movf	plusw1,w,c
  3899  0011EE  224C               	addwfc	btemp+9,f,c
  3900  0011F0  0E02               	movlw	2
  3901  0011F2  244B               	addwf	btemp+8,w,c
  3902  0011F4  6ED9               	movwf	fsr2l,c
  3903  0011F6  0E00               	movlw	0
  3904  0011F8  204C               	addwfc	btemp+9,w,c
  3905  0011FA  6EDA               	movwf	fsr2h,c
  3906  0011FC  CFDE F04D          	movff	postinc2,btemp+10
  3907  001200  CFDD F04E          	movff	postdec2,btemp+11
  3908  001204  0E6C               	movlw	108
  3909  001206  024D               	mulwf	btemp+10,c
  3910  001208  CFF3 F04B          	movff	prodl,btemp+8
  3911  00120C  CFF4 F04C          	movff	prodh,btemp+9
  3912  001210  024E               	mulwf	btemp+11,c
  3913  001212  50F3               	movf	prodl,w,c
  3914  001214  264C               	addwf	btemp+9,f,c
  3915  001216  0E96               	movlw	low (_ready_queue+8)
  3916  001218  244B               	addwf	btemp+8,w,c
  3917  00121A  6ED9               	movwf	fsr2l,c
  3918  00121C  0E00               	movlw	high (_ready_queue+8)
  3919  00121E  204C               	addwfc	btemp+9,w,c
  3920  001220  6EDA               	movwf	fsr2h,c
  3921  001222  0E00               	movlw	0
  3922  001224  6EDF               	movwf	indf2,c
  3923                           
  3924                           ;semaphore.c: 37:     s->task_to_ready = (s->task_to_ready + 1) % 4;
  3925                           ;stkvar	_s @ sp[(0)+-2]
  3926  001226  0EFE               	movlw	-2
  3927  001228  CFE3 F04D          	movff	plusw1,btemp+10
  3928  00122C  0EFF               	movlw	-1
  3929  00122E  CFE3 F04E          	movff	plusw1,btemp+11
  3930  001232  0E0C               	movlw	12
  3931  001234  244D               	addwf	btemp+10,w,c
  3932  001236  6ED9               	movwf	fsr2l,c
  3933  001238  0E00               	movlw	0
  3934  00123A  204E               	addwfc	btemp+11,w,c
  3935  00123C  6EDA               	movwf	fsr2h,c
  3936  00123E  CFDE F04D          	movff	postinc2,btemp+10
  3937  001242  CFDD F04E          	movff	postdec2,btemp+11
  3938  001246  0E01               	movlw	1
  3939  001248  264D               	addwf	btemp+10,f,c
  3940  00124A  0E00               	movlw	0
  3941  00124C  224E               	addwfc	btemp+11,f,c
  3942  00124E  0E03               	movlw	3
  3943  001250  164D               	andwf	btemp+10,f,c
  3944  001252  0E00               	movlw	0
  3945  001254  164E               	andwf	btemp+11,f,c
  3946                           
  3947                           ;stkvar	_s @ sp[(0)+-2]
  3948  001256  0EFE               	movlw	-2
  3949  001258  CFE3 F04B          	movff	plusw1,btemp+8
  3950  00125C  0EFF               	movlw	-1
  3951  00125E  CFE3 F04C          	movff	plusw1,btemp+9
  3952  001262  0E0C               	movlw	12
  3953  001264  244B               	addwf	btemp+8,w,c
  3954  001266  6ED9               	movwf	fsr2l,c
  3955  001268  0E00               	movlw	0
  3956  00126A  204C               	addwfc	btemp+9,w,c
  3957  00126C  6EDA               	movwf	fsr2h,c
  3958  00126E  C04D  FFDE         	movff	btemp+10,postinc2
  3959  001272  C04E  FFDD         	movff	btemp+11,postdec2
  3960  001276                     l1940:
  3961                           
  3962                           ;semaphore.c: 40:   INTCONbits.GIE = 1;
  3963  001276  8EF2               	bsf	4082,7,c	;volatile
  3964                           
  3965                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3966  001278  52E5               	movf	postdec1,f,c
  3967  00127A  52E5               	movf	postdec1,f,c
  3968  00127C  0012               	return		;funcret
  3969  00127E                     __end_of_sem_post:
  3970                           	opt callstack 0
  3971                           
  3972 ;; *************** function _task_1 *****************
  3973 ;; Defined at:
  3974 ;;		line 122 in file "tasks.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  dado            2  [STACK] unsigned int 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1  [STACK] void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3988 ;;      Params:         0       0       0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0
  3991 ;;      Totals:         0       0       0       0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    9
  3995 ;; This function calls:
  3996 ;;		_lunos_delayTask
  3997 ;;		_pipe_read
  3998 ;; This function is called by:
  3999 ;;		Interrupt level 1
  4000 ;; This function uses a reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text26
  4004  0019CA                     __ptext26:
  4005                           	opt callstack 0
  4006  0019CA                     _task_1:
  4007                           	opt callstack 0
  4008                           
  4009                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4010  0019CA  52E6               	movf	postinc1,f,c
  4011  0019CC  52E6               	movf	postinc1,f,c
  4012  0019CE                     l345:
  4013                           
  4014                           ;tasks.c: 125:     pipe_read(&p, &dado);
  4015                           ;stkvar	_dado @ sp[(-2)+0]
  4016  0019CE  0EFE               	movlw	254
  4017  0019D0  24E1               	addwf	fsr1l,w,c
  4018  0019D2  6E43               	movwf	btemp,c
  4019  0019D4  0EFF               	movlw	255
  4020  0019D6  20E2               	addwfc	fsr1h,w,c
  4021  0019D8  6E44               	movwf	btemp+1,c
  4022  0019DA  C043  FFE6         	movff	btemp,postinc1
  4023  0019DE  C044  FFE6         	movff	btemp+1,postinc1
  4024  0019E2  0E37               	movlw	low _p
  4025  0019E4  6EE6               	movwf	postinc1,c
  4026  0019E6  0E00               	movlw	high _p
  4027  0019E8  6EE6               	movwf	postinc1,c
  4028  0019EA  ECC4  F007         	call	_pipe_read	;wreg free
  4029                           
  4030                           ;tasks.c: 126:     PORTBbits.RB4 = ~PORTBbits.RB4;
  4031  0019EE  A881               	btfss	3969,4,c	;volatile
  4032  0019F0  D002               	goto	u103_20
  4033  0019F2  0E01               	movlw	1
  4034  0019F4  D001               	goto	u103_26
  4035  0019F6                     u103_20:
  4036  0019F6  0E00               	movlw	0
  4037  0019F8                     u103_26:
  4038  0019F8  0AFF               	xorlw	255
  4039  0019FA  6E4E               	movwf	btemp+11,c
  4040  0019FC  3A4E               	swapf	btemp+11,f,c
  4041  0019FE  5081               	movf	3969,w,c	;volatile
  4042  001A00  184E               	xorwf	btemp+11,w,c
  4043  001A02  0BEF               	andlw	-17
  4044  001A04  184E               	xorwf	btemp+11,w,c
  4045  001A06  6E81               	movwf	3969,c	;volatile
  4046                           
  4047                           ;tasks.c: 127:     lunos_delayTask(2000);
  4048  001A08  0ED0               	movlw	208
  4049  001A0A  6EE6               	movwf	postinc1,c
  4050  001A0C  0E07               	movlw	7
  4051  001A0E  6EE6               	movwf	postinc1,c
  4052  001A10  ECBC  F00C         	call	_lunos_delayTask	;wreg free
  4053  001A14  D7DC               	goto	l345
  4054  001A16                     __end_of_task_1:
  4055                           	opt callstack 0
  4056                           
  4057 ;; *************** function _pipe_read *****************
  4058 ;; Defined at:
  4059 ;;		line 27 in file "pipe.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  p               2  [STACK] PTR struct pipe
  4062 ;;		 -> p(12), 
  4063 ;;  data            2  [STACK] PTR unsigned int 
  4064 ;;		 -> dado(2), 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1  [STACK] void 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4076 ;;      Params:         0       0       0       0       0       0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0
  4079 ;;      Totals:         0       0       0       0       0       0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    8
  4083 ;; This function calls:
  4084 ;;		_sem_post
  4085 ;;		_sem_wait
  4086 ;; This function is called by:
  4087 ;;		_task_1
  4088 ;; This function uses a reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text27
  4092  000F88                     __ptext27:
  4093                           	opt callstack 0
  4094  000F88                     _pipe_read:
  4095                           	opt callstack 17
  4096                           
  4097                           ;pipe.c: 29:   sem_wait(p->r);
  4098                           ;stkvar	_p @ sp[(0)+-2]
  4099                           
  4100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4101                           ;incstack = 0
  4102  000F88  0EFE               	movlw	-2
  4103  000F8A  CFE3 F04D          	movff	plusw1,btemp+10
  4104  000F8E  0EFF               	movlw	-1
  4105  000F90  CFE3 F04E          	movff	plusw1,btemp+11
  4106  000F94  0E0A               	movlw	10
  4107  000F96  244D               	addwf	btemp+10,w,c
  4108  000F98  6ED9               	movwf	fsr2l,c
  4109  000F9A  0E00               	movlw	0
  4110  000F9C  204E               	addwfc	btemp+11,w,c
  4111  000F9E  6EDA               	movwf	fsr2h,c
  4112  000FA0  CFDE F04D          	movff	postinc2,btemp+10
  4113  000FA4  CFDD F04E          	movff	postdec2,btemp+11
  4114  000FA8  C04D  FFE6         	movff	btemp+10,postinc1
  4115  000FAC  C04E  FFE6         	movff	btemp+11,postinc1
  4116  000FB0  EC3F  F009         	call	_sem_wait	;wreg free
  4117                           
  4118                           ;pipe.c: 30:   *data = p->pipe_data[p->index_read];
  4119                           ;stkvar	_p @ sp[(0)+-2]
  4120  000FB4  0EFE               	movlw	-2
  4121  000FB6  CFE3 F04D          	movff	plusw1,btemp+10
  4122  000FBA  0EFF               	movlw	-1
  4123  000FBC  CFE3 F04E          	movff	plusw1,btemp+11
  4124  000FC0  0E06               	movlw	6
  4125  000FC2  244D               	addwf	btemp+10,w,c
  4126  000FC4  6ED9               	movwf	fsr2l,c
  4127  000FC6  0E00               	movlw	0
  4128  000FC8  204E               	addwfc	btemp+11,w,c
  4129  000FCA  6EDA               	movwf	fsr2h,c
  4130  000FCC  CFDE F04D          	movff	postinc2,btemp+10
  4131  000FD0  CFDD F04E          	movff	postdec2,btemp+11
  4132  000FD4  90D8               	bcf	status,0,c
  4133  000FD6  344D               	rlcf	btemp+10,w,c
  4134  000FD8  6E4B               	movwf	btemp+8,c
  4135  000FDA  344E               	rlcf	btemp+11,w,c
  4136  000FDC  6E4C               	movwf	btemp+9,c
  4137                           
  4138                           ;stkvar	_p @ sp[(0)+-2]
  4139  000FDE  0EFE               	movlw	-2
  4140  000FE0  CFE3 F04D          	movff	plusw1,btemp+10
  4141  000FE4  0EFF               	movlw	-1
  4142  000FE6  CFE3 F04E          	movff	plusw1,btemp+11
  4143  000FEA  504B               	movf	btemp+8,w,c
  4144  000FEC  244D               	addwf	btemp+10,w,c
  4145  000FEE  6ED9               	movwf	fsr2l,c
  4146  000FF0  504C               	movf	btemp+9,w,c
  4147  000FF2  204E               	addwfc	btemp+11,w,c
  4148  000FF4  6EDA               	movwf	fsr2h,c
  4149                           
  4150                           ;stkvar	_data @ sp[(0)+-4]
  4151  000FF6  0EFC               	movlw	-4
  4152  000FF8  CFE3 FFE9          	movff	plusw1,fsr0l
  4153  000FFC  0EFD               	movlw	-3
  4154  000FFE  CFE3 FFEA          	movff	plusw1,fsr0h
  4155  001002  CFDE FFEE          	movff	postinc2,postinc0
  4156  001006  CFDD FFED          	movff	postdec2,postdec0
  4157                           
  4158                           ;pipe.c: 31:   p->index_read = (p->index_read + 1) % 2;
  4159                           ;stkvar	_p @ sp[(0)+-2]
  4160  00100A  0EFE               	movlw	-2
  4161  00100C  CFE3 F04D          	movff	plusw1,btemp+10
  4162  001010  0EFF               	movlw	-1
  4163  001012  CFE3 F04E          	movff	plusw1,btemp+11
  4164  001016  0E06               	movlw	6
  4165  001018  244D               	addwf	btemp+10,w,c
  4166  00101A  6ED9               	movwf	fsr2l,c
  4167  00101C  0E00               	movlw	0
  4168  00101E  204E               	addwfc	btemp+11,w,c
  4169  001020  6EDA               	movwf	fsr2h,c
  4170  001022  CFDE F04D          	movff	postinc2,btemp+10
  4171  001026  CFDD F04E          	movff	postdec2,btemp+11
  4172  00102A  0E01               	movlw	1
  4173  00102C  264D               	addwf	btemp+10,f,c
  4174  00102E  0E00               	movlw	0
  4175  001030  224E               	addwfc	btemp+11,f,c
  4176  001032  0E01               	movlw	1
  4177  001034  164D               	andwf	btemp+10,f,c
  4178  001036  0E00               	movlw	0
  4179  001038  164E               	andwf	btemp+11,f,c
  4180                           
  4181                           ;stkvar	_p @ sp[(0)+-2]
  4182  00103A  0EFE               	movlw	-2
  4183  00103C  CFE3 F04B          	movff	plusw1,btemp+8
  4184  001040  0EFF               	movlw	-1
  4185  001042  CFE3 F04C          	movff	plusw1,btemp+9
  4186  001046  0E06               	movlw	6
  4187  001048  244B               	addwf	btemp+8,w,c
  4188  00104A  6ED9               	movwf	fsr2l,c
  4189  00104C  0E00               	movlw	0
  4190  00104E  204C               	addwfc	btemp+9,w,c
  4191  001050  6EDA               	movwf	fsr2h,c
  4192  001052  C04D  FFDE         	movff	btemp+10,postinc2
  4193  001056  C04E  FFDD         	movff	btemp+11,postdec2
  4194                           
  4195                           ;pipe.c: 32:   sem_post(p->w);
  4196                           ;stkvar	_p @ sp[(0)+-2]
  4197  00105A  0EFE               	movlw	-2
  4198  00105C  CFE3 F04D          	movff	plusw1,btemp+10
  4199  001060  0EFF               	movlw	-1
  4200  001062  CFE3 F04E          	movff	plusw1,btemp+11
  4201  001066  0E08               	movlw	8
  4202  001068  244D               	addwf	btemp+10,w,c
  4203  00106A  6ED9               	movwf	fsr2l,c
  4204  00106C  0E00               	movlw	0
  4205  00106E  204E               	addwfc	btemp+11,w,c
  4206  001070  6EDA               	movwf	fsr2h,c
  4207  001072  CFDE F04D          	movff	postinc2,btemp+10
  4208  001076  CFDD F04E          	movff	postdec2,btemp+11
  4209  00107A  C04D  FFE6         	movff	btemp+10,postinc1
  4210  00107E  C04E  FFE6         	movff	btemp+11,postinc1
  4211  001082  ECC4  F008         	call	_sem_post	;wreg free
  4212                           
  4213                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  4214  001086  52E5               	movf	postdec1,f,c
  4215  001088  52E5               	movf	postdec1,f,c
  4216  00108A  52E5               	movf	postdec1,f,c
  4217  00108C  52E5               	movf	postdec1,f,c
  4218  00108E  0012               	return		;funcret
  4219  001090                     __end_of_pipe_read:
  4220                           	opt callstack 0
  4221                           
  4222 ;; *************** function _task_2 *****************
  4223 ;; Defined at:
  4224 ;;		line 131 in file "tasks.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;		None
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;		None
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1  [STACK] void 
  4231 ;; Registers used:
  4232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4238 ;;      Params:         0       0       0       0       0       0       0
  4239 ;;      Locals:         0       0       0       0       0       0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0
  4241 ;;      Totals:         0       0       0       0       0       0       0
  4242 ;;Total ram usage:        0 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    8
  4245 ;; This function calls:
  4246 ;;		_lunos_delayTask
  4247 ;; This function is called by:
  4248 ;;		Interrupt level 1
  4249 ;; This function uses a reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text28
  4253  001B4A                     __ptext28:
  4254                           	opt callstack 0
  4255  001B4A                     _task_2:
  4256                           	opt callstack 18
  4257                           
  4258                           ;tasks.c: 133:     PORTBbits.RB5 = ~PORTBbits.RB5;
  4259                           
  4260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4261                           ;incstack = 0
  4262                           ;tasks.c: 132:   while(1){
  4263  001B4A  AA81               	btfss	3969,5,c	;volatile
  4264  001B4C  D002               	goto	u104_20
  4265  001B4E  0E01               	movlw	1
  4266  001B50  D001               	goto	u104_26
  4267  001B52                     u104_20:
  4268  001B52  0E00               	movlw	0
  4269  001B54                     u104_26:
  4270  001B54  0AFF               	xorlw	255
  4271  001B56  6E4E               	movwf	btemp+11,c
  4272  001B58  3A4E               	swapf	btemp+11,f,c
  4273  001B5A  464E               	rlncf	btemp+11,f,c
  4274  001B5C  5081               	movf	3969,w,c	;volatile
  4275  001B5E  184E               	xorwf	btemp+11,w,c
  4276  001B60  0BDF               	andlw	-33
  4277  001B62  184E               	xorwf	btemp+11,w,c
  4278  001B64  6E81               	movwf	3969,c	;volatile
  4279                           
  4280                           ;tasks.c: 134:     lunos_delayTask(1000);
  4281  001B66  0EE8               	movlw	232
  4282  001B68  6EE6               	movwf	postinc1,c
  4283  001B6A  0E03               	movlw	3
  4284  001B6C  6EE6               	movwf	postinc1,c
  4285  001B6E  ECBC  F00C         	call	_lunos_delayTask	;wreg free
  4286  001B72  D7EB               	goto	_task_2
  4287  001B74                     __end_of_task_2:
  4288                           	opt callstack 0
  4289                           
  4290 ;; *************** function _task_bozo *****************
  4291 ;; Defined at:
  4292 ;;		line 139 in file "tasks.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  i               2  [STACK] int 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1  [STACK] void 
  4299 ;; Registers used:
  4300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4306 ;;      Params:         0       0       0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0
  4309 ;;      Totals:         0       0       0       0       0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    8
  4313 ;; This function calls:
  4314 ;;		_sem_post
  4315 ;;		_sem_wait
  4316 ;; This function is called by:
  4317 ;;		Interrupt level 1
  4318 ;; This function uses a reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text29
  4322  001752                     __ptext29:
  4323                           	opt callstack 0
  4324  001752                     _task_bozo:
  4325                           	opt callstack 0
  4326                           
  4327                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4328  001752  52E6               	movf	postinc1,f,c
  4329  001754  52E6               	movf	postinc1,f,c
  4330  001756                     l357:
  4331                           
  4332                           ;tasks.c: 141:     int i;;tasks.c: 142:     sem_wait(&teste_1);
  4333  001756  0E29               	movlw	low _teste_1
  4334  001758  6EE6               	movwf	postinc1,c
  4335  00175A  0E00               	movlw	high _teste_1
  4336  00175C  6EE6               	movwf	postinc1,c
  4337  00175E  EC3F  F009         	call	_sem_wait	;wreg free
  4338                           
  4339                           ;tasks.c: 143:     for (i = 0; i < 4; i++) {
  4340                           ;stkvar	_i @ sp[(-2)+0]
  4341  001762  0EFE               	movlw	-2
  4342  001764  6AE3               	clrf	plusw1,c
  4343  001766  0EFF               	movlw	-1
  4344  001768  6AE3               	clrf	plusw1,c
  4345  00176A                     l2102:
  4346                           
  4347                           ;tasks.c: 144:       mem[i] = i+1;
  4348                           ;stkvar	_i @ sp[(-2)+0]
  4349  00176A  0EFE               	movlw	-2
  4350  00176C  CFE3 F04D          	movff	plusw1,btemp+10
  4351  001770  0EFF               	movlw	-1
  4352  001772  CFE3 F04E          	movff	plusw1,btemp+11
  4353  001776  504D               	movf	btemp+10,w,c
  4354  001778  2407               	addwf	_mem,w,c
  4355  00177A  6ED9               	movwf	fsr2l,c
  4356  00177C  504E               	movf	btemp+11,w,c
  4357  00177E  2008               	addwfc	_mem+1,w,c
  4358  001780  6EDA               	movwf	fsr2h,c
  4359                           
  4360                           ;stkvar	_i @ sp[(-2)+0]
  4361  001782  0EFE               	movlw	-2
  4362  001784  50E3               	movf	plusw1,w,c
  4363  001786  0F01               	addlw	1
  4364  001788  6EDF               	movwf	indf2,c
  4365                           
  4366                           ;tasks.c: 145:     }
  4367                           ;stkvar	_i @ sp[(-2)+0]
  4368  00178A  0EFE               	movlw	-2
  4369  00178C  50E3               	movf	plusw1,w,c
  4370  00178E  0F01               	addlw	1
  4371  001790  6E43               	movwf	btemp,c
  4372  001792  0EFE               	movlw	-2
  4373  001794  C043  FFE3         	movff	btemp,plusw1
  4374  001798  6A43               	clrf	btemp,c
  4375  00179A  0EFF               	movlw	-1
  4376  00179C  50E3               	movf	plusw1,w,c
  4377  00179E  2043               	addwfc	btemp,w,c
  4378  0017A0  6E43               	movwf	btemp,c
  4379  0017A2  0EFF               	movlw	-1
  4380  0017A4  C043  FFE3         	movff	btemp,plusw1
  4381                           
  4382                           ;stkvar	_i @ sp[(-2)+0]
  4383  0017A8  0EFF               	movlw	-1
  4384  0017AA  BEE3               	btfsc	plusw1,7,c
  4385  0017AC  D7DE               	goto	l2102
  4386  0017AE  0EFF               	movlw	-1
  4387  0017B0  50E3               	movf	plusw1,w,c
  4388  0017B2  E107               	bnz	u105_20
  4389  0017B4  0EFE               	movlw	-2
  4390  0017B6  CFE3 F043          	movff	plusw1,btemp
  4391  0017BA  0E04               	movlw	4
  4392  0017BC  5E43               	subwf	btemp,f,c
  4393  0017BE  A0D8               	btfss	status,0,c
  4394  0017C0  D7D4               	goto	l2102
  4395  0017C2                     u105_20:
  4396                           
  4397                           ;tasks.c: 146:     sem_post(&teste_2);
  4398  0017C2  0E1B               	movlw	low _teste_2
  4399  0017C4  6EE6               	movwf	postinc1,c
  4400  0017C6  0E00               	movlw	high _teste_2
  4401  0017C8  6EE6               	movwf	postinc1,c
  4402  0017CA  ECC4  F008         	call	_sem_post	;wreg free
  4403  0017CE  D7C3               	goto	l357
  4404  0017D0                     __end_of_task_bozo:
  4405                           	opt callstack 0
  4406                           
  4407 ;; *************** function _task_xuxa *****************
  4408 ;; Defined at:
  4409 ;;		line 150 in file "tasks.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  i               2  [STACK] int 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1  [STACK] void 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4423 ;;      Params:         0       0       0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    8
  4430 ;; This function calls:
  4431 ;;		_lunos_delayTask
  4432 ;;		_sem_post
  4433 ;;		_sem_wait
  4434 ;; This function is called by:
  4435 ;;		Interrupt level 1
  4436 ;; This function uses a reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text30
  4440  001434                     __ptext30:
  4441                           	opt callstack 0
  4442  001434                     _task_xuxa:
  4443                           	opt callstack 0
  4444                           
  4445                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4446  001434  52E6               	movf	postinc1,f,c
  4447  001436  52E6               	movf	postinc1,f,c
  4448  001438                     l365:
  4449                           
  4450                           ;tasks.c: 153:     sem_wait(&teste_2);
  4451  001438  0E1B               	movlw	low _teste_2
  4452  00143A  6EE6               	movwf	postinc1,c
  4453  00143C  0E00               	movlw	high _teste_2
  4454  00143E  6EE6               	movwf	postinc1,c
  4455  001440  EC3F  F009         	call	_sem_wait	;wreg free
  4456                           
  4457                           ;tasks.c: 154:     for (i = 0; i < 4; i++) {
  4458                           ;stkvar	_i @ sp[(-2)+0]
  4459  001444  0EFE               	movlw	-2
  4460  001446  6AE3               	clrf	plusw1,c
  4461  001448  0EFF               	movlw	-1
  4462  00144A  6AE3               	clrf	plusw1,c
  4463  00144C                     l2118:
  4464                           
  4465                           ;tasks.c: 155:       if (mem[i] % 2 == 0)
  4466                           ;stkvar	_i @ sp[(-2)+0]
  4467  00144C  0EFE               	movlw	-2
  4468  00144E  CFE3 F04D          	movff	plusw1,btemp+10
  4469  001452  0EFF               	movlw	-1
  4470  001454  CFE3 F04E          	movff	plusw1,btemp+11
  4471  001458  504D               	movf	btemp+10,w,c
  4472  00145A  2407               	addwf	_mem,w,c
  4473  00145C  6ED9               	movwf	fsr2l,c
  4474  00145E  504E               	movf	btemp+11,w,c
  4475  001460  2008               	addwfc	_mem+1,w,c
  4476  001462  6EDA               	movwf	fsr2h,c
  4477  001464  B0DF               	btfsc	indf2,0,c
  4478  001466  D00E               	goto	l2122
  4479                           
  4480                           ;tasks.c: 156:         PORTBbits.RB3 = ~PORTBbits.RB3;
  4481  001468  A681               	btfss	3969,3,c	;volatile
  4482  00146A  D002               	goto	u107_20
  4483  00146C  0E01               	movlw	1
  4484  00146E  D001               	goto	u107_26
  4485  001470                     u107_20:
  4486  001470  0E00               	movlw	0
  4487  001472                     u107_26:
  4488  001472  0AFF               	xorlw	255
  4489  001474  6E4E               	movwf	btemp+11,c
  4490  001476  464E               	rlncf	btemp+11,f,c
  4491  001478  464E               	rlncf	btemp+11,f,c
  4492  00147A  464E               	rlncf	btemp+11,f,c
  4493  00147C  5081               	movf	3969,w,c	;volatile
  4494  00147E  184E               	xorwf	btemp+11,w,c
  4495  001480  0BF7               	andlw	-9
  4496  001482  D00C               	goto	L5
  4497  001484                     l2122:
  4498                           
  4499                           ;tasks.c: 158:         PORTBbits.RB5 = ~PORTBbits.RB5;
  4500  001484  AA81               	btfss	3969,5,c	;volatile
  4501  001486  D002               	goto	u108_20
  4502  001488  0E01               	movlw	1
  4503  00148A  D001               	goto	u108_26
  4504  00148C                     u108_20:
  4505  00148C  0E00               	movlw	0
  4506  00148E                     u108_26:
  4507  00148E  0AFF               	xorlw	255
  4508  001490  6E4E               	movwf	btemp+11,c
  4509  001492  3A4E               	swapf	btemp+11,f,c
  4510  001494  464E               	rlncf	btemp+11,f,c
  4511  001496  5081               	movf	3969,w,c	;volatile
  4512  001498  184E               	xorwf	btemp+11,w,c
  4513  00149A  0BDF               	andlw	-33
  4514  00149C                     L5:
  4515  00149C  184E               	xorwf	btemp+11,w,c
  4516  00149E  6E81               	movwf	3969,c	;volatile
  4517                           
  4518                           ;tasks.c: 159:       lunos_delayTask(1000);
  4519  0014A0  0EE8               	movlw	232
  4520  0014A2  6EE6               	movwf	postinc1,c
  4521  0014A4  0E03               	movlw	3
  4522  0014A6  6EE6               	movwf	postinc1,c
  4523  0014A8  ECBC  F00C         	call	_lunos_delayTask	;wreg free
  4524                           
  4525                           ;tasks.c: 160:     }
  4526                           ;stkvar	_i @ sp[(-2)+0]
  4527  0014AC  0EFE               	movlw	-2
  4528  0014AE  50E3               	movf	plusw1,w,c
  4529  0014B0  0F01               	addlw	1
  4530  0014B2  6E43               	movwf	btemp,c
  4531  0014B4  0EFE               	movlw	-2
  4532  0014B6  C043  FFE3         	movff	btemp,plusw1
  4533  0014BA  6A43               	clrf	btemp,c
  4534  0014BC  0EFF               	movlw	-1
  4535  0014BE  50E3               	movf	plusw1,w,c
  4536  0014C0  2043               	addwfc	btemp,w,c
  4537  0014C2  6E43               	movwf	btemp,c
  4538  0014C4  0EFF               	movlw	-1
  4539  0014C6  C043  FFE3         	movff	btemp,plusw1
  4540                           
  4541                           ;stkvar	_i @ sp[(-2)+0]
  4542  0014CA  0EFF               	movlw	-1
  4543  0014CC  BEE3               	btfsc	plusw1,7,c
  4544  0014CE  D7BE               	goto	l2118
  4545  0014D0  0EFF               	movlw	-1
  4546  0014D2  50E3               	movf	plusw1,w,c
  4547  0014D4  E107               	bnz	u109_20
  4548  0014D6  0EFE               	movlw	-2
  4549  0014D8  CFE3 F043          	movff	plusw1,btemp
  4550  0014DC  0E04               	movlw	4
  4551  0014DE  5E43               	subwf	btemp,f,c
  4552  0014E0  A0D8               	btfss	status,0,c
  4553  0014E2  D7B4               	goto	l2118
  4554  0014E4                     u109_20:
  4555                           
  4556                           ;tasks.c: 161:     sem_post(&teste_1);
  4557  0014E4  0E29               	movlw	low _teste_1
  4558  0014E6  6EE6               	movwf	postinc1,c
  4559  0014E8  0E00               	movlw	high _teste_1
  4560  0014EA  6EE6               	movwf	postinc1,c
  4561  0014EC  ECC4  F008         	call	_sem_post	;wreg free
  4562  0014F0  D7A3               	goto	l365
  4563  0014F2                     __end_of_task_xuxa:
  4564                           	opt callstack 0
  4565                           
  4566 ;; *************** function _ISR_timer0 *****************
  4567 ;; Defined at:
  4568 ;;		line 56 in file "int0_test.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4582 ;;      Params:         0       0       0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0
  4584 ;;      Temps:         16       0       0       0       0       0       0
  4585 ;;      Totals:        16       0       0       0       0       0       0
  4586 ;;Total ram usage:       16 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    2
  4589 ;; This function calls:
  4590 ;;		___wmul
  4591 ;;		_delay_decrement
  4592 ;;		_round_robin
  4593 ;; This function is called by:
  4594 ;;		Interrupt level 2
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	intcode
  4599  000008                     __pintcode:
  4600                           	opt callstack 0
  4601  000008                     _ISR_timer0:
  4602                           	opt callstack 17
  4603                           
  4604                           ;incstack = 0
  4605  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  4606                           
  4607                           	psect	intcode_body
  4608  000014                     __pintcode_body:
  4609                           	opt callstack 17
  4610  000014                     int_func:
  4611                           	opt callstack 17
  4612  000014  0006               	pop		; remove dummy address from shadow register refresh
  4613  000016  CFE1 F067          	movff	fsr1l,??_ISR_timer0+4
  4614  00001A  CFE2 F068          	movff	fsr1h,??_ISR_timer0+5
  4615  00001E  CFD9 F069          	movff	fsr2l,??_ISR_timer0+6
  4616  000022  CFDA F06A          	movff	fsr2h,??_ISR_timer0+7
  4617  000026  CFF3 F06B          	movff	prodl,??_ISR_timer0+8
  4618  00002A  CFF4 F06C          	movff	prodh,??_ISR_timer0+9
  4619  00002E  C043  F06D         	movff	btemp,??_ISR_timer0+10
  4620  000032  C044  F06E         	movff	btemp+1,??_ISR_timer0+11
  4621  000036  C04B  F06F         	movff	btemp+8,??_ISR_timer0+12
  4622  00003A  C04C  F070         	movff	btemp+9,??_ISR_timer0+13
  4623  00003E  C04D  F071         	movff	btemp+10,??_ISR_timer0+14
  4624  000042  C04E  F072         	movff	btemp+11,??_ISR_timer0+15
  4625  000046  EE15  F020         	lfsr	1,___inthi_sp
  4626                           
  4627                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  4628  00004A  9EF2               	bcf	4082,7,c	;volatile
  4629                           
  4630                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  4631  00004C  A4F2               	btfss	4082,2,c	;volatile
  4632  00004E  D224               	goto	i2u94_40
  4633                           
  4634                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  4635  000050  94F2               	bcf	4082,2,c	;volatile
  4636                           
  4637                           ;int0_test.c: 61:     TMR0L = 252;
  4638  000052  0EFC               	movlw	252
  4639  000054  6ED6               	movwf	4054,c	;volatile
  4640                           
  4641                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  4642  000056  A083               	btfss	3971,0,c	;volatile
  4643  000058  D002               	goto	i2u90_40
  4644  00005A  0E01               	movlw	1
  4645  00005C  D001               	goto	i2u90_46
  4646  00005E                     i2u90_40:
  4647  00005E  0E00               	movlw	0
  4648  000060                     i2u90_46:
  4649  000060  0AFF               	xorlw	255
  4650  000062  6E63               	movwf	??_ISR_timer0& (0+255),c
  4651  000064  5083               	movf	3971,w,c	;volatile
  4652  000066  1863               	xorwf	??_ISR_timer0,w,c
  4653  000068  0BFE               	andlw	-2
  4654  00006A  1863               	xorwf	??_ISR_timer0,w,c
  4655  00006C  6E83               	movwf	3971,c	;volatile
  4656                           
  4657                           ;int0_test.c: 63:     delay_decrement();
  4658  00006E  EC30  F006         	call	_delay_decrement	;wreg free
  4659                           
  4660                           ;int0_test.c: 65:     quantum--;
  4661  000072  0673               	decf	_quantum,f,c
  4662  000074  A0D8               	btfss	status,0,c
  4663  000076  0674               	decf	_quantum+1,f,c
  4664                           
  4665                           ;int0_test.c: 66:     if (quantum <= 0) {
  4666  000078  BE74               	btfsc	_quantum+1,7,c
  4667  00007A  D005               	goto	i2u91_40
  4668  00007C  5074               	movf	_quantum+1,w,c
  4669  00007E  E102               	bnz	i2u91_41
  4670  000080  0473               	decf	_quantum,w,c
  4671  000082  B0D8               	btfsc	status,0,c
  4672  000084                     i2u91_41:
  4673  000084  D209               	goto	i2u94_40
  4674  000086                     i2u91_40:
  4675                           
  4676                           ;int0_test.c: 67:       quantum = 10;
  4677  000086  0E00               	movlw	0
  4678  000088  6E74               	movwf	_quantum+1,c
  4679  00008A  0E0A               	movlw	10
  4680  00008C  6E73               	movwf	_quantum,c
  4681                           
  4682                           ;int0_test.c: 68:       { who = ready_queue.task_running; ready_queue.tasks[who].task_st
      +                          ate = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = ST
      +                          ATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks
      +                          [who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stac
      +                          k[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL
      +                          ; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  4683  00008E  C2AC  F00B         	movff	_ready_queue+542,_who
  4684  000092  C2AD  F00C         	movff	_ready_queue+543,_who+1
  4685  000096  0E6C               	movlw	108
  4686  000098  6EE6               	movwf	postinc1,c
  4687  00009A  0E00               	movlw	0
  4688  00009C  6EE6               	movwf	postinc1,c
  4689  00009E  C00B  FFE6         	movff	_who,postinc1
  4690  0000A2  C00C  FFE6         	movff	_who+1,postinc1
  4691  0000A6  ECD7  F00A         	call	___wmul	;wreg free
  4692  0000AA  0E96               	movlw	low (_ready_queue+8)
  4693  0000AC  2443               	addwf	btemp,w,c
  4694  0000AE  6ED9               	movwf	fsr2l,c
  4695  0000B0  0E00               	movlw	high (_ready_queue+8)
  4696  0000B2  2044               	addwfc	btemp+1,w,c
  4697  0000B4  6EDA               	movwf	fsr2h,c
  4698  0000B6  0E00               	movlw	0
  4699  0000B8  6EDF               	movwf	indf2,c
  4700  0000BA  0E6C               	movlw	108
  4701  0000BC  6EE6               	movwf	postinc1,c
  4702  0000BE  0E00               	movlw	0
  4703  0000C0  6EE6               	movwf	postinc1,c
  4704  0000C2  C00B  FFE6         	movff	_who,postinc1
  4705  0000C6  C00C  FFE6         	movff	_who+1,postinc1
  4706  0000CA  ECD7  F00A         	call	___wmul	;wreg free
  4707  0000CE  0E93               	movlw	low (_ready_queue+5)
  4708  0000D0  2443               	addwf	btemp,w,c
  4709  0000D2  6ED9               	movwf	fsr2l,c
  4710  0000D4  0E00               	movlw	high (_ready_queue+5)
  4711  0000D6  2044               	addwfc	btemp+1,w,c
  4712  0000D8  6EDA               	movwf	fsr2h,c
  4713  0000DA  CFE8 FFDF          	movff	wreg,indf2	;volatile
  4714  0000DE  0E6C               	movlw	108
  4715  0000E0  6EE6               	movwf	postinc1,c
  4716  0000E2  0E00               	movlw	0
  4717  0000E4  6EE6               	movwf	postinc1,c
  4718  0000E6  C00B  FFE6         	movff	_who,postinc1
  4719  0000EA  C00C  FFE6         	movff	_who+1,postinc1
  4720  0000EE  ECD7  F00A         	call	___wmul	;wreg free
  4721  0000F2  0E94               	movlw	low (_ready_queue+6)
  4722  0000F4  2443               	addwf	btemp,w,c
  4723  0000F6  6ED9               	movwf	fsr2l,c
  4724  0000F8  0E00               	movlw	high (_ready_queue+6)
  4725  0000FA  2044               	addwfc	btemp+1,w,c
  4726  0000FC  6EDA               	movwf	fsr2h,c
  4727  0000FE  CFD8 FFDF          	movff	status,indf2	;volatile
  4728  000102  0E6C               	movlw	108
  4729  000104  6EE6               	movwf	postinc1,c
  4730  000106  0E00               	movlw	0
  4731  000108  6EE6               	movwf	postinc1,c
  4732  00010A  C00B  FFE6         	movff	_who,postinc1
  4733  00010E  C00C  FFE6         	movff	_who+1,postinc1
  4734  000112  ECD7  F00A         	call	___wmul	;wreg free
  4735  000116  0E95               	movlw	low (_ready_queue+7)
  4736  000118  2443               	addwf	btemp,w,c
  4737  00011A  6ED9               	movwf	fsr2l,c
  4738  00011C  0E00               	movlw	high (_ready_queue+7)
  4739  00011E  2044               	addwfc	btemp+1,w,c
  4740  000120  6EDA               	movwf	fsr2h,c
  4741  000122  CFE0 FFDF          	movff	bsr,indf2	;volatile
  4742  000126  6A09               	clrf	_size,c
  4743  000128  6A0A               	clrf	_size+1,c
  4744  00012A  D07B               	goto	i2l1992
  4745  00012C                     i2l1988:
  4746  00012C  0E6C               	movlw	108
  4747  00012E  6EE6               	movwf	postinc1,c
  4748  000130  0E00               	movlw	0
  4749  000132  6EE6               	movwf	postinc1,c
  4750  000134  C00B  FFE6         	movff	_who,postinc1
  4751  000138  C00C  FFE6         	movff	_who+1,postinc1
  4752  00013C  ECD7  F00A         	call	___wmul	;wreg free
  4753  000140  0E8E               	movlw	low _ready_queue
  4754  000142  6E63               	movwf	??_ISR_timer0& (0+255),c
  4755  000144  0E00               	movlw	high _ready_queue
  4756  000146  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4757  000148  0E09               	movlw	9
  4758  00014A  2663               	addwf	??_ISR_timer0,f,c
  4759  00014C  0E00               	movlw	0
  4760  00014E  2264               	addwfc	??_ISR_timer0+1,f,c
  4761  000150  5043               	movf	btemp,w,c
  4762  000152  2663               	addwf	??_ISR_timer0,f,c
  4763  000154  5044               	movf	btemp+1,w,c
  4764  000156  2264               	addwfc	??_ISR_timer0+1,f,c
  4765  000158  0E03               	movlw	3
  4766  00015A  6EE6               	movwf	postinc1,c
  4767  00015C  0E00               	movlw	0
  4768  00015E  6EE6               	movwf	postinc1,c
  4769  000160  C009  FFE6         	movff	_size,postinc1
  4770  000164  C00A  FFE6         	movff	_size+1,postinc1
  4771  000168  ECD7  F00A         	call	___wmul	;wreg free
  4772  00016C  5043               	movf	btemp,w,c
  4773  00016E  2463               	addwf	??_ISR_timer0,w,c
  4774  000170  6ED9               	movwf	fsr2l,c
  4775  000172  5044               	movf	btemp+1,w,c
  4776  000174  2064               	addwfc	??_ISR_timer0+1,w,c
  4777  000176  6EDA               	movwf	fsr2h,c
  4778  000178  CFFF FFDF          	movff	tosu,indf2	;volatile
  4779  00017C  0E6C               	movlw	108
  4780  00017E  6EE6               	movwf	postinc1,c
  4781  000180  0E00               	movlw	0
  4782  000182  6EE6               	movwf	postinc1,c
  4783  000184  C00B  FFE6         	movff	_who,postinc1
  4784  000188  C00C  FFE6         	movff	_who+1,postinc1
  4785  00018C  ECD7  F00A         	call	___wmul	;wreg free
  4786  000190  0E8E               	movlw	low _ready_queue
  4787  000192  6E63               	movwf	??_ISR_timer0& (0+255),c
  4788  000194  0E00               	movlw	high _ready_queue
  4789  000196  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4790  000198  0E0B               	movlw	11
  4791  00019A  2663               	addwf	??_ISR_timer0,f,c
  4792  00019C  0E00               	movlw	0
  4793  00019E  2264               	addwfc	??_ISR_timer0+1,f,c
  4794  0001A0  5043               	movf	btemp,w,c
  4795  0001A2  2663               	addwf	??_ISR_timer0,f,c
  4796  0001A4  5044               	movf	btemp+1,w,c
  4797  0001A6  2264               	addwfc	??_ISR_timer0+1,f,c
  4798  0001A8  0E03               	movlw	3
  4799  0001AA  6EE6               	movwf	postinc1,c
  4800  0001AC  0E00               	movlw	0
  4801  0001AE  6EE6               	movwf	postinc1,c
  4802  0001B0  C009  FFE6         	movff	_size,postinc1
  4803  0001B4  C00A  FFE6         	movff	_size+1,postinc1
  4804  0001B8  ECD7  F00A         	call	___wmul	;wreg free
  4805  0001BC  5043               	movf	btemp,w,c
  4806  0001BE  2463               	addwf	??_ISR_timer0,w,c
  4807  0001C0  6ED9               	movwf	fsr2l,c
  4808  0001C2  5044               	movf	btemp+1,w,c
  4809  0001C4  2064               	addwfc	??_ISR_timer0+1,w,c
  4810  0001C6  6EDA               	movwf	fsr2h,c
  4811  0001C8  CFFE FFDF          	movff	tosh,indf2	;volatile
  4812  0001CC  0E6C               	movlw	108
  4813  0001CE  6EE6               	movwf	postinc1,c
  4814  0001D0  0E00               	movlw	0
  4815  0001D2  6EE6               	movwf	postinc1,c
  4816  0001D4  C00B  FFE6         	movff	_who,postinc1
  4817  0001D8  C00C  FFE6         	movff	_who+1,postinc1
  4818  0001DC  ECD7  F00A         	call	___wmul	;wreg free
  4819  0001E0  0E8E               	movlw	low _ready_queue
  4820  0001E2  6E63               	movwf	??_ISR_timer0& (0+255),c
  4821  0001E4  0E00               	movlw	high _ready_queue
  4822  0001E6  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4823  0001E8  0E0A               	movlw	10
  4824  0001EA  2663               	addwf	??_ISR_timer0,f,c
  4825  0001EC  0E00               	movlw	0
  4826  0001EE  2264               	addwfc	??_ISR_timer0+1,f,c
  4827  0001F0  5043               	movf	btemp,w,c
  4828  0001F2  2663               	addwf	??_ISR_timer0,f,c
  4829  0001F4  5044               	movf	btemp+1,w,c
  4830  0001F6  2264               	addwfc	??_ISR_timer0+1,f,c
  4831  0001F8  0E03               	movlw	3
  4832  0001FA  6EE6               	movwf	postinc1,c
  4833  0001FC  0E00               	movlw	0
  4834  0001FE  6EE6               	movwf	postinc1,c
  4835  000200  C009  FFE6         	movff	_size,postinc1
  4836  000204  C00A  FFE6         	movff	_size+1,postinc1
  4837  000208  ECD7  F00A         	call	___wmul	;wreg free
  4838  00020C  5043               	movf	btemp,w,c
  4839  00020E  2463               	addwf	??_ISR_timer0,w,c
  4840  000210  6ED9               	movwf	fsr2l,c
  4841  000212  5044               	movf	btemp+1,w,c
  4842  000214  2064               	addwfc	??_ISR_timer0+1,w,c
  4843  000216  6EDA               	movwf	fsr2h,c
  4844  000218  CFFD FFDF          	movff	tosl,indf2	;volatile
  4845  00021C  4A09               	infsnz	_size,f,c
  4846  00021E  2A0A               	incf	_size+1,f,c
  4847  000220  0006               	pop		;# 
  4848  000222                     i2l1992:
  4849  000222  50FC               	movf	stkptr,w,c	;volatile
  4850  000224  A4D8               	btfss	status,2,c
  4851  000226  D782               	goto	i2l1988
  4852  000228  0EFF               	movlw	255
  4853  00022A  6E63               	movwf	??_ISR_timer0& (0+255),c
  4854  00022C  0EFF               	movlw	255
  4855  00022E  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4856  000230  C009  F065         	movff	_size,??_ISR_timer0+2
  4857  000234  C00A  F066         	movff	_size+1,??_ISR_timer0+3
  4858  000238  5063               	movf	??_ISR_timer0,w,c
  4859  00023A  2665               	addwf	??_ISR_timer0+2,f,c
  4860  00023C  5064               	movf	??_ISR_timer0+1,w,c
  4861  00023E  2266               	addwfc	??_ISR_timer0+3,f,c
  4862  000240  0E6C               	movlw	108
  4863  000242  6EE6               	movwf	postinc1,c
  4864  000244  0E00               	movlw	0
  4865  000246  6EE6               	movwf	postinc1,c
  4866  000248  C00B  FFE6         	movff	_who,postinc1
  4867  00024C  C00C  FFE6         	movff	_who+1,postinc1
  4868  000250  ECD7  F00A         	call	___wmul	;wreg free
  4869  000254  0EF4               	movlw	low (_ready_queue+102)
  4870  000256  2443               	addwf	btemp,w,c
  4871  000258  6ED9               	movwf	fsr2l,c
  4872  00025A  0E00               	movlw	high (_ready_queue+102)
  4873  00025C  2044               	addwfc	btemp+1,w,c
  4874  00025E  6EDA               	movwf	fsr2h,c
  4875  000260  C065  FFDE         	movff	??_ISR_timer0+2,postinc2
  4876  000264  C066  FFDD         	movff	??_ISR_timer0+3,postdec2
  4877                           
  4878                           ;int0_test.c: 69:       ready_queue.task_running = round_robin();
  4879  000268  EC22  F00B         	call	_round_robin	;wreg free
  4880  00026C  C043  F2AC         	movff	btemp,_ready_queue+542
  4881  000270  C044  F2AD         	movff	btemp+1,_ready_queue+543
  4882                           
  4883                           ;int0_test.c: 70:       { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.ta
      +                          sks[who].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task
      +                          _f; } else { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].
      +                          W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg;
      +                           size = ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL
      +                           = ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[wh
      +                          o].task_stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[s
      +                          ize].TOSU_reg; size--; } }};
  4884  000274  C2AC  F00B         	movff	_ready_queue+542,_who
  4885  000278  C2AD  F00C         	movff	_ready_queue+543,_who+1
  4886  00027C  6AFC               	clrf	stkptr,c	;volatile
  4887  00027E  0E6C               	movlw	108
  4888  000280  6EE6               	movwf	postinc1,c
  4889  000282  0E00               	movlw	0
  4890  000284  6EE6               	movwf	postinc1,c
  4891  000286  C00B  FFE6         	movff	_who,postinc1
  4892  00028A  C00C  FFE6         	movff	_who+1,postinc1
  4893  00028E  ECD7  F00A         	call	___wmul	;wreg free
  4894  000292  0EF4               	movlw	low (_ready_queue+102)
  4895  000294  2443               	addwf	btemp,w,c
  4896  000296  6ED9               	movwf	fsr2l,c
  4897  000298  0E00               	movlw	high (_ready_queue+102)
  4898  00029A  2044               	addwfc	btemp+1,w,c
  4899  00029C  6EDA               	movwf	fsr2h,c
  4900  00029E  50DE               	movf	postinc2,w,c
  4901  0002A0  10DE               	iorwf	postinc2,w,c
  4902  0002A2  A4D8               	btfss	status,2,c
  4903  0002A4  D01B               	goto	i2l2008
  4904  0002A6  0005               	push		;# 
  4905  0002A8  0E6C               	movlw	108
  4906  0002AA  6EE6               	movwf	postinc1,c
  4907  0002AC  0E00               	movlw	0
  4908  0002AE  6EE6               	movwf	postinc1,c
  4909  0002B0  C00B  FFE6         	movff	_who,postinc1
  4910  0002B4  C00C  FFE6         	movff	_who+1,postinc1
  4911  0002B8  ECD7  F00A         	call	___wmul	;wreg free
  4912  0002BC  0EF6               	movlw	low (_ready_queue+104)
  4913  0002BE  2443               	addwf	btemp,w,c
  4914  0002C0  6ED9               	movwf	fsr2l,c
  4915  0002C2  0E00               	movlw	high (_ready_queue+104)
  4916  0002C4  2044               	addwfc	btemp+1,w,c
  4917  0002C6  6EDA               	movwf	fsr2h,c
  4918  0002C8  CFDE F063          	movff	postinc2,??_ISR_timer0
  4919  0002CC  CFDD F064          	movff	postdec2,??_ISR_timer0+1
  4920  0002D0  C063  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  4921  0002D4  C064  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  4922  0002D8  6AFF               	clrf	tosu,c	;volatile
  4923  0002DA  D0DE               	goto	i2u94_40
  4924  0002DC                     i2l2008:
  4925  0002DC  0E6C               	movlw	108
  4926  0002DE  6EE6               	movwf	postinc1,c
  4927  0002E0  0E00               	movlw	0
  4928  0002E2  6EE6               	movwf	postinc1,c
  4929  0002E4  C00B  FFE6         	movff	_who,postinc1
  4930  0002E8  C00C  FFE6         	movff	_who+1,postinc1
  4931  0002EC  ECD7  F00A         	call	___wmul	;wreg free
  4932  0002F0  0E96               	movlw	low (_ready_queue+8)
  4933  0002F2  2443               	addwf	btemp,w,c
  4934  0002F4  6ED9               	movwf	fsr2l,c
  4935  0002F6  0E00               	movlw	high (_ready_queue+8)
  4936  0002F8  2044               	addwfc	btemp+1,w,c
  4937  0002FA  6EDA               	movwf	fsr2h,c
  4938  0002FC  0E01               	movlw	1
  4939  0002FE  6EDF               	movwf	indf2,c
  4940  000300  0E6C               	movlw	108
  4941  000302  6EE6               	movwf	postinc1,c
  4942  000304  0E00               	movlw	0
  4943  000306  6EE6               	movwf	postinc1,c
  4944  000308  C00B  FFE6         	movff	_who,postinc1
  4945  00030C  C00C  FFE6         	movff	_who+1,postinc1
  4946  000310  ECD7  F00A         	call	___wmul	;wreg free
  4947  000314  0E93               	movlw	low (_ready_queue+5)
  4948  000316  2443               	addwf	btemp,w,c
  4949  000318  6ED9               	movwf	fsr2l,c
  4950  00031A  0E00               	movlw	high (_ready_queue+5)
  4951  00031C  2044               	addwfc	btemp+1,w,c
  4952  00031E  6EDA               	movwf	fsr2h,c
  4953  000320  50DF               	movf	indf2,w,c
  4954  000322  6E63               	movwf	??_ISR_timer0& (0+255),c
  4955  000324  5063               	movf	??_ISR_timer0,w,c
  4956  000326  0E6C               	movlw	108
  4957  000328  6EE6               	movwf	postinc1,c
  4958  00032A  0E00               	movlw	0
  4959  00032C  6EE6               	movwf	postinc1,c
  4960  00032E  C00B  FFE6         	movff	_who,postinc1
  4961  000332  C00C  FFE6         	movff	_who+1,postinc1
  4962  000336  ECD7  F00A         	call	___wmul	;wreg free
  4963  00033A  0E94               	movlw	low (_ready_queue+6)
  4964  00033C  2443               	addwf	btemp,w,c
  4965  00033E  6ED9               	movwf	fsr2l,c
  4966  000340  0E00               	movlw	high (_ready_queue+6)
  4967  000342  2044               	addwfc	btemp+1,w,c
  4968  000344  6EDA               	movwf	fsr2h,c
  4969  000346  50DF               	movf	indf2,w,c
  4970  000348  6ED8               	movwf	status,c	;volatile
  4971  00034A  0E6C               	movlw	108
  4972  00034C  6EE6               	movwf	postinc1,c
  4973  00034E  0E00               	movlw	0
  4974  000350  6EE6               	movwf	postinc1,c
  4975  000352  C00B  FFE6         	movff	_who,postinc1
  4976  000356  C00C  FFE6         	movff	_who+1,postinc1
  4977  00035A  ECD7  F00A         	call	___wmul	;wreg free
  4978  00035E  0E95               	movlw	low (_ready_queue+7)
  4979  000360  2443               	addwf	btemp,w,c
  4980  000362  6ED9               	movwf	fsr2l,c
  4981  000364  0E00               	movlw	high (_ready_queue+7)
  4982  000366  2044               	addwfc	btemp+1,w,c
  4983  000368  6EDA               	movwf	fsr2h,c
  4984  00036A  50DF               	movf	indf2,w,c
  4985  00036C  6EE0               	movwf	bsr,c	;volatile
  4986  00036E  0E6C               	movlw	108
  4987  000370  6EE6               	movwf	postinc1,c
  4988  000372  0E00               	movlw	0
  4989  000374  6EE6               	movwf	postinc1,c
  4990  000376  C00B  FFE6         	movff	_who,postinc1
  4991  00037A  C00C  FFE6         	movff	_who+1,postinc1
  4992  00037E  ECD7  F00A         	call	___wmul	;wreg free
  4993  000382  0EF4               	movlw	low (_ready_queue+102)
  4994  000384  2443               	addwf	btemp,w,c
  4995  000386  6ED9               	movwf	fsr2l,c
  4996  000388  0E00               	movlw	high (_ready_queue+102)
  4997  00038A  2044               	addwfc	btemp+1,w,c
  4998  00038C  6EDA               	movwf	fsr2h,c
  4999  00038E  CFDE F009          	movff	postinc2,_size
  5000  000392  CFDD F00A          	movff	postdec2,_size+1
  5001  000396  D07C               	goto	i2l2014
  5002  000398                     i2l59:
  5003  000398  0005               	push		;# 
  5004  00039A  0E6C               	movlw	108
  5005  00039C  6EE6               	movwf	postinc1,c
  5006  00039E  0E00               	movlw	0
  5007  0003A0  6EE6               	movwf	postinc1,c
  5008  0003A2  C00B  FFE6         	movff	_who,postinc1
  5009  0003A6  C00C  FFE6         	movff	_who+1,postinc1
  5010  0003AA  ECD7  F00A         	call	___wmul	;wreg free
  5011  0003AE  0E8E               	movlw	low _ready_queue
  5012  0003B0  6E63               	movwf	??_ISR_timer0& (0+255),c
  5013  0003B2  0E00               	movlw	high _ready_queue
  5014  0003B4  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5015  0003B6  0E0A               	movlw	10
  5016  0003B8  2663               	addwf	??_ISR_timer0,f,c
  5017  0003BA  0E00               	movlw	0
  5018  0003BC  2264               	addwfc	??_ISR_timer0+1,f,c
  5019  0003BE  5043               	movf	btemp,w,c
  5020  0003C0  2663               	addwf	??_ISR_timer0,f,c
  5021  0003C2  5044               	movf	btemp+1,w,c
  5022  0003C4  2264               	addwfc	??_ISR_timer0+1,f,c
  5023  0003C6  0E03               	movlw	3
  5024  0003C8  6EE6               	movwf	postinc1,c
  5025  0003CA  0E00               	movlw	0
  5026  0003CC  6EE6               	movwf	postinc1,c
  5027  0003CE  C009  FFE6         	movff	_size,postinc1
  5028  0003D2  C00A  FFE6         	movff	_size+1,postinc1
  5029  0003D6  ECD7  F00A         	call	___wmul	;wreg free
  5030  0003DA  5043               	movf	btemp,w,c
  5031  0003DC  2463               	addwf	??_ISR_timer0,w,c
  5032  0003DE  6ED9               	movwf	fsr2l,c
  5033  0003E0  5044               	movf	btemp+1,w,c
  5034  0003E2  2064               	addwfc	??_ISR_timer0+1,w,c
  5035  0003E4  6EDA               	movwf	fsr2h,c
  5036  0003E6  50DF               	movf	indf2,w,c
  5037  0003E8  6EFD               	movwf	tosl,c	;volatile
  5038  0003EA  0E6C               	movlw	108
  5039  0003EC  6EE6               	movwf	postinc1,c
  5040  0003EE  0E00               	movlw	0
  5041  0003F0  6EE6               	movwf	postinc1,c
  5042  0003F2  C00B  FFE6         	movff	_who,postinc1
  5043  0003F6  C00C  FFE6         	movff	_who+1,postinc1
  5044  0003FA  ECD7  F00A         	call	___wmul	;wreg free
  5045  0003FE  0E8E               	movlw	low _ready_queue
  5046  000400  6E63               	movwf	??_ISR_timer0& (0+255),c
  5047  000402  0E00               	movlw	high _ready_queue
  5048  000404  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5049  000406  0E0B               	movlw	11
  5050  000408  2663               	addwf	??_ISR_timer0,f,c
  5051  00040A  0E00               	movlw	0
  5052  00040C  2264               	addwfc	??_ISR_timer0+1,f,c
  5053  00040E  5043               	movf	btemp,w,c
  5054  000410  2663               	addwf	??_ISR_timer0,f,c
  5055  000412  5044               	movf	btemp+1,w,c
  5056  000414  2264               	addwfc	??_ISR_timer0+1,f,c
  5057  000416  0E03               	movlw	3
  5058  000418  6EE6               	movwf	postinc1,c
  5059  00041A  0E00               	movlw	0
  5060  00041C  6EE6               	movwf	postinc1,c
  5061  00041E  C009  FFE6         	movff	_size,postinc1
  5062  000422  C00A  FFE6         	movff	_size+1,postinc1
  5063  000426  ECD7  F00A         	call	___wmul	;wreg free
  5064  00042A  5043               	movf	btemp,w,c
  5065  00042C  2463               	addwf	??_ISR_timer0,w,c
  5066  00042E  6ED9               	movwf	fsr2l,c
  5067  000430  5044               	movf	btemp+1,w,c
  5068  000432  2064               	addwfc	??_ISR_timer0+1,w,c
  5069  000434  6EDA               	movwf	fsr2h,c
  5070  000436  50DF               	movf	indf2,w,c
  5071  000438  6EFE               	movwf	tosh,c	;volatile
  5072  00043A  0E6C               	movlw	108
  5073  00043C  6EE6               	movwf	postinc1,c
  5074  00043E  0E00               	movlw	0
  5075  000440  6EE6               	movwf	postinc1,c
  5076  000442  C00B  FFE6         	movff	_who,postinc1
  5077  000446  C00C  FFE6         	movff	_who+1,postinc1
  5078  00044A  ECD7  F00A         	call	___wmul	;wreg free
  5079  00044E  0E8E               	movlw	low _ready_queue
  5080  000450  6E63               	movwf	??_ISR_timer0& (0+255),c
  5081  000452  0E00               	movlw	high _ready_queue
  5082  000454  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5083  000456  0E09               	movlw	9
  5084  000458  2663               	addwf	??_ISR_timer0,f,c
  5085  00045A  0E00               	movlw	0
  5086  00045C  2264               	addwfc	??_ISR_timer0+1,f,c
  5087  00045E  5043               	movf	btemp,w,c
  5088  000460  2663               	addwf	??_ISR_timer0,f,c
  5089  000462  5044               	movf	btemp+1,w,c
  5090  000464  2264               	addwfc	??_ISR_timer0+1,f,c
  5091  000466  0E03               	movlw	3
  5092  000468  6EE6               	movwf	postinc1,c
  5093  00046A  0E00               	movlw	0
  5094  00046C  6EE6               	movwf	postinc1,c
  5095  00046E  C009  FFE6         	movff	_size,postinc1
  5096  000472  C00A  FFE6         	movff	_size+1,postinc1
  5097  000476  ECD7  F00A         	call	___wmul	;wreg free
  5098  00047A  5043               	movf	btemp,w,c
  5099  00047C  2463               	addwf	??_ISR_timer0,w,c
  5100  00047E  6ED9               	movwf	fsr2l,c
  5101  000480  5044               	movf	btemp+1,w,c
  5102  000482  2064               	addwfc	??_ISR_timer0+1,w,c
  5103  000484  6EDA               	movwf	fsr2h,c
  5104  000486  50DF               	movf	indf2,w,c
  5105  000488  6EFF               	movwf	tosu,c	;volatile
  5106  00048A  0609               	decf	_size,f,c
  5107  00048C  A0D8               	btfss	status,0,c
  5108  00048E  060A               	decf	_size+1,f,c
  5109  000490                     i2l2014:
  5110  000490  5009               	movf	_size,w,c
  5111  000492  100A               	iorwf	_size+1,w,c
  5112  000494  A4D8               	btfss	status,2,c
  5113  000496  D780               	goto	i2l59
  5114  000498                     i2u94_40:
  5115                           
  5116                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  5117                           
  5118                           ;int0_test.c: 73:   }
  5119  000498  8EF2               	bsf	4082,7,c	;volatile
  5120  00049A  C072  F04E         	movff	??_ISR_timer0+15,btemp+11
  5121  00049E  C071  F04D         	movff	??_ISR_timer0+14,btemp+10
  5122  0004A2  C070  F04C         	movff	??_ISR_timer0+13,btemp+9
  5123  0004A6  C06F  F04B         	movff	??_ISR_timer0+12,btemp+8
  5124  0004AA  C06E  F044         	movff	??_ISR_timer0+11,btemp+1
  5125  0004AE  C06D  F043         	movff	??_ISR_timer0+10,btemp
  5126  0004B2  C06C  FFF4         	movff	??_ISR_timer0+9,prodh
  5127  0004B6  C06B  FFF3         	movff	??_ISR_timer0+8,prodl
  5128  0004BA  C06A  FFDA         	movff	??_ISR_timer0+7,fsr2h
  5129  0004BE  C069  FFD9         	movff	??_ISR_timer0+6,fsr2l
  5130  0004C2  C068  FFE2         	movff	??_ISR_timer0+5,fsr1h
  5131  0004C6  C067  FFE1         	movff	??_ISR_timer0+4,fsr1l
  5132  0004CA  0011               	retfie		f
  5133  0004CC                     __end_of_ISR_timer0:
  5134                           	opt callstack 0
  5135                           
  5136 ;; *************** function _delay_decrement *****************
  5137 ;; Defined at:
  5138 ;;		line 99 in file "kernel.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  i               2  [STACK] int 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1  [STACK] void 
  5145 ;; Registers used:
  5146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5152 ;;      Params:         0       0       0       0       0       0       0
  5153 ;;      Locals:         0       0       0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0
  5155 ;;      Totals:         0       0       0       0       0       0       0
  5156 ;;Total ram usage:        0 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_ISR_timer0
  5162 ;; This function uses a reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text32
  5166  000C60                     __ptext32:
  5167                           	opt callstack 0
  5168  000C60                     _delay_decrement:
  5169                           	opt callstack 0
  5170                           
  5171                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5172  000C60  52E6               	movf	postinc1,f,c
  5173  000C62  52E6               	movf	postinc1,f,c
  5174                           
  5175                           ;kernel.c: 100:   int i;;kernel.c: 102:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  5176                           ;stkvar	_i @ sp[(-2)+0]
  5177                           
  5178                           ;incstack = 0
  5179  000C64  0EFE               	movlw	-2
  5180  000C66  6AE3               	clrf	plusw1,c
  5181  000C68  0EFF               	movlw	-1
  5182  000C6A  6AE3               	clrf	plusw1,c
  5183  000C6C  D070               	goto	l1862
  5184  000C6E                     l1852:
  5185                           
  5186                           ;kernel.c: 103:     if (ready_queue.tasks[i].task_state == WAITING) {
  5187                           ;stkvar	_i @ sp[(-2)+0]
  5188  000C6E  0EFE               	movlw	-2
  5189  000C70  CFE3 F04D          	movff	plusw1,btemp+10
  5190  000C74  0EFF               	movlw	-1
  5191  000C76  CFE3 F04E          	movff	plusw1,btemp+11
  5192  000C7A  0E6C               	movlw	108
  5193  000C7C  024D               	mulwf	btemp+10,c
  5194  000C7E  CFF3 F04B          	movff	prodl,btemp+8
  5195  000C82  CFF4 F04C          	movff	prodh,btemp+9
  5196  000C86  024E               	mulwf	btemp+11,c
  5197  000C88  50F3               	movf	prodl,w,c
  5198  000C8A  264C               	addwf	btemp+9,f,c
  5199  000C8C  0E96               	movlw	low (_ready_queue+8)
  5200  000C8E  244B               	addwf	btemp+8,w,c
  5201  000C90  6ED9               	movwf	fsr2l,c
  5202  000C92  0E00               	movlw	high (_ready_queue+8)
  5203  000C94  204C               	addwfc	btemp+9,w,c
  5204  000C96  6EDA               	movwf	fsr2h,c
  5205  000C98  0E02               	movlw	2
  5206  000C9A  18DE               	xorwf	postinc2,w,c
  5207  000C9C  A4D8               	btfss	status,2,c
  5208  000C9E  D048               	goto	l1860
  5209                           
  5210                           ;kernel.c: 104:       ready_queue.tasks[i].task_delay_time--;
  5211                           ;stkvar	_i @ sp[(-2)+0]
  5212  000CA0  0EFE               	movlw	-2
  5213  000CA2  CFE3 F04D          	movff	plusw1,btemp+10
  5214  000CA6  0EFF               	movlw	-1
  5215  000CA8  CFE3 F04E          	movff	plusw1,btemp+11
  5216  000CAC  0E6C               	movlw	108
  5217  000CAE  024D               	mulwf	btemp+10,c
  5218  000CB0  CFF3 F04B          	movff	prodl,btemp+8
  5219  000CB4  CFF4 F04C          	movff	prodh,btemp+9
  5220  000CB8  024E               	mulwf	btemp+11,c
  5221  000CBA  50F3               	movf	prodl,w,c
  5222  000CBC  264C               	addwf	btemp+9,f,c
  5223  000CBE  0EF8               	movlw	low (_ready_queue+106)
  5224  000CC0  244B               	addwf	btemp+8,w,c
  5225  000CC2  6ED9               	movwf	fsr2l,c
  5226  000CC4  0E00               	movlw	high (_ready_queue+106)
  5227  000CC6  204C               	addwfc	btemp+9,w,c
  5228  000CC8  6EDA               	movwf	fsr2h,c
  5229  000CCA  06DE               	decf	postinc2,f,c
  5230  000CCC  0E00               	movlw	0
  5231  000CCE  5ADD               	subwfb	postdec2,f,c
  5232                           
  5233                           ;kernel.c: 105:       if (ready_queue.tasks[i].task_delay_time == 0) {
  5234                           ;stkvar	_i @ sp[(-2)+0]
  5235  000CD0  0EFE               	movlw	-2
  5236  000CD2  CFE3 F04D          	movff	plusw1,btemp+10
  5237  000CD6  0EFF               	movlw	-1
  5238  000CD8  CFE3 F04E          	movff	plusw1,btemp+11
  5239  000CDC  0E6C               	movlw	108
  5240  000CDE  024D               	mulwf	btemp+10,c
  5241  000CE0  CFF3 F04B          	movff	prodl,btemp+8
  5242  000CE4  CFF4 F04C          	movff	prodh,btemp+9
  5243  000CE8  024E               	mulwf	btemp+11,c
  5244  000CEA  50F3               	movf	prodl,w,c
  5245  000CEC  264C               	addwf	btemp+9,f,c
  5246  000CEE  0EF8               	movlw	low (_ready_queue+106)
  5247  000CF0  244B               	addwf	btemp+8,w,c
  5248  000CF2  6ED9               	movwf	fsr2l,c
  5249  000CF4  0E00               	movlw	high (_ready_queue+106)
  5250  000CF6  204C               	addwfc	btemp+9,w,c
  5251  000CF8  6EDA               	movwf	fsr2h,c
  5252  000CFA  50DE               	movf	postinc2,w,c
  5253  000CFC  10DE               	iorwf	postinc2,w,c
  5254  000CFE  A4D8               	btfss	status,2,c
  5255  000D00  D017               	goto	l1860
  5256                           
  5257                           ;kernel.c: 106:         ready_queue.tasks[i].task_state = READY;
  5258                           ;stkvar	_i @ sp[(-2)+0]
  5259  000D02  0EFE               	movlw	-2
  5260  000D04  CFE3 F04D          	movff	plusw1,btemp+10
  5261  000D08  0EFF               	movlw	-1
  5262  000D0A  CFE3 F04E          	movff	plusw1,btemp+11
  5263  000D0E  0E6C               	movlw	108
  5264  000D10  024D               	mulwf	btemp+10,c
  5265  000D12  CFF3 F04B          	movff	prodl,btemp+8
  5266  000D16  CFF4 F04C          	movff	prodh,btemp+9
  5267  000D1A  024E               	mulwf	btemp+11,c
  5268  000D1C  50F3               	movf	prodl,w,c
  5269  000D1E  264C               	addwf	btemp+9,f,c
  5270  000D20  0E96               	movlw	low (_ready_queue+8)
  5271  000D22  244B               	addwf	btemp+8,w,c
  5272  000D24  6ED9               	movwf	fsr2l,c
  5273  000D26  0E00               	movlw	high (_ready_queue+8)
  5274  000D28  204C               	addwfc	btemp+9,w,c
  5275  000D2A  6EDA               	movwf	fsr2h,c
  5276  000D2C  0E00               	movlw	0
  5277  000D2E  6EDF               	movwf	indf2,c
  5278  000D30                     l1860:
  5279                           
  5280                           ;kernel.c: 113:   }
  5281                           ;stkvar	_i @ sp[(-2)+0]
  5282  000D30  0EFE               	movlw	-2
  5283  000D32  50E3               	movf	plusw1,w,c
  5284  000D34  0F01               	addlw	1
  5285  000D36  6E43               	movwf	btemp,c
  5286  000D38  0EFE               	movlw	-2
  5287  000D3A  C043  FFE3         	movff	btemp,plusw1
  5288  000D3E  6A43               	clrf	btemp,c
  5289  000D40  0EFF               	movlw	-1
  5290  000D42  50E3               	movf	plusw1,w,c
  5291  000D44  2043               	addwfc	btemp,w,c
  5292  000D46  6E43               	movwf	btemp,c
  5293  000D48  0EFF               	movlw	-1
  5294  000D4A  C043  FFE3         	movff	btemp,plusw1
  5295  000D4E                     l1862:
  5296  000D4E  EE22  F0AA         	lfsr	2,_ready_queue+540
  5297                           
  5298                           ;stkvar	_i @ sp[(-2)+0]
  5299  000D52  0EFE               	movlw	-2
  5300  000D54  CFE3 F043          	movff	plusw1,btemp
  5301  000D58  50DE               	movf	postinc2,w,c
  5302  000D5A  5C43               	subwf	btemp,w,c
  5303  000D5C  0EFF               	movlw	-1
  5304  000D5E  CFE3 F043          	movff	plusw1,btemp
  5305  000D62  50DE               	movf	postinc2,w,c
  5306  000D64  5843               	subwfb	btemp,w,c
  5307  000D66  A0D8               	btfss	status,0,c
  5308  000D68  D782               	goto	l1852
  5309                           
  5310                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  5311  000D6A  52E5               	movf	postdec1,f,c
  5312  000D6C  52E5               	movf	postdec1,f,c
  5313  000D6E  0012               	return		;funcret
  5314  000D70                     __end_of_delay_decrement:
  5315                           	opt callstack 0
  5316                           
  5317 ;; *************** function ___wmul *****************
  5318 ;; Defined at:
  5319 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  multiplier      2  [STACK] unsigned int 
  5322 ;;  multiplicand    2  [STACK] unsigned int 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  product         2  [STACK] unsigned int 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  2  [STACK] unsigned int 
  5327 ;; Registers used:
  5328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5334 ;;      Params:         0       0       0       0       0       0       0
  5335 ;;      Locals:         0       0       0       0       0       0       0
  5336 ;;      Temps:          0       0       0       0       0       0       0
  5337 ;;      Totals:         0       0       0       0       0       0       0
  5338 ;;Total ram usage:        0 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_ISR_timer0
  5344 ;; This function uses a reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text33
  5348  0015AE                     __ptext33:
  5349                           	opt callstack 0
  5350  0015AE                     ___wmul:
  5351                           	opt callstack 0
  5352                           
  5353                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5354  0015AE  52E6               	movf	postinc1,f,c
  5355  0015B0  52E6               	movf	postinc1,f,c
  5356                           
  5357                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5358                           
  5359                           ;incstack = 0
  5360  0015B2  0EFA               	movlw	-6
  5361  0015B4  CFE3 F04E          	movff	plusw1,btemp+11
  5362                           
  5363                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5364  0015B8  0EFC               	movlw	-4
  5365  0015BA  50E3               	movf	plusw1,w,c
  5366  0015BC  024E               	mulwf	btemp+11,c
  5367                           
  5368                           ;stkvar	_product @ sp[(-2)+0]
  5369  0015BE  0EFE               	movlw	-2
  5370  0015C0  CFF3 FFE3          	movff	prodl,plusw1
  5371  0015C4  0EFF               	movlw	-1
  5372  0015C6  CFF4 FFE3          	movff	prodh,plusw1
  5373                           
  5374                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5375  0015CA  0EFB               	movlw	251
  5376  0015CC  24E1               	addwf	fsr1l,w,c
  5377  0015CE  6ED9               	movwf	fsr2l,c
  5378  0015D0  0EFF               	movlw	255
  5379  0015D2  20E2               	addwfc	fsr1h,w,c
  5380  0015D4  6EDA               	movwf	fsr2h,c
  5381  0015D6  50DF               	movf	indf2,w,c
  5382  0015D8  6E4E               	movwf	btemp+11,c
  5383                           
  5384                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5385  0015DA  0EFC               	movlw	-4
  5386  0015DC  50E3               	movf	plusw1,w,c
  5387  0015DE  024E               	mulwf	btemp+11,c
  5388  0015E0  CFF3 FFF4          	movff	prodl,prodh
  5389  0015E4  6AF3               	clrf	prodl,c
  5390                           
  5391                           ;stkvar	_product @ sp[(-2)+0]
  5392  0015E6  50E1               	movf	fsr1l,w,c
  5393  0015E8  0FFE               	addlw	-2
  5394  0015EA  6ED9               	movwf	fsr2l,c
  5395  0015EC  50E2               	movf	fsr1h,w,c
  5396  0015EE  6EDA               	movwf	fsr2h,c
  5397  0015F0  0EFF               	movlw	255
  5398  0015F2  22DA               	addwfc	fsr2h,f,c
  5399  0015F4  50F3               	movf	prodl,w,c
  5400  0015F6  26DE               	addwf	postinc2,f,c
  5401  0015F8  50F4               	movf	prodh,w,c
  5402  0015FA  22DD               	addwfc	postdec2,f,c
  5403                           
  5404                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5405  0015FC  0EFA               	movlw	-6
  5406  0015FE  CFE3 F04E          	movff	plusw1,btemp+11
  5407                           
  5408                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5409  001602  0EFD               	movlw	253
  5410  001604  24E1               	addwf	fsr1l,w,c
  5411  001606  6ED9               	movwf	fsr2l,c
  5412  001608  0EFF               	movlw	255
  5413  00160A  20E2               	addwfc	fsr1h,w,c
  5414  00160C  6EDA               	movwf	fsr2h,c
  5415  00160E  50DF               	movf	indf2,w,c
  5416  001610  024E               	mulwf	btemp+11,c
  5417  001612  CFF3 FFF4          	movff	prodl,prodh
  5418  001616  6AF3               	clrf	prodl,c
  5419                           
  5420                           ;stkvar	_product @ sp[(-2)+0]
  5421  001618  50E1               	movf	fsr1l,w,c
  5422  00161A  0FFE               	addlw	-2
  5423  00161C  6ED9               	movwf	fsr2l,c
  5424  00161E  50E2               	movf	fsr1h,w,c
  5425  001620  6EDA               	movwf	fsr2h,c
  5426  001622  0EFF               	movlw	255
  5427  001624  22DA               	addwfc	fsr2h,f,c
  5428  001626  50F3               	movf	prodl,w,c
  5429  001628  26DE               	addwf	postinc2,f,c
  5430  00162A  50F4               	movf	prodh,w,c
  5431  00162C  22DD               	addwfc	postdec2,f,c
  5432                           
  5433                           ;stkvar	_product @ sp[(-2)+0]
  5434  00162E  0EFE               	movlw	-2
  5435  001630  CFE3 F043          	movff	plusw1,btemp
  5436  001634  0EFF               	movlw	-1
  5437  001636  CFE3 F044          	movff	plusw1,btemp+1
  5438                           
  5439                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  5440  00163A  0EFA               	movlw	250
  5441  00163C  26E1               	addwf	fsr1l,f,c
  5442  00163E  0EFF               	movlw	255
  5443  001640  22E2               	addwfc	fsr1h,f,c
  5444  001642  0012               	return		;funcret
  5445  001644                     __end_of___wmul:
  5446                           	opt callstack 0
  5447  0000                     
  5448                           	psect	text34
  5449  000000                     __ptext34:
  5450                           	opt callstack 0
  5451                           
  5452                           	psect	rparam
  5453  0000                     
  5454                           	psect	temp
  5455  000043                     btemp:
  5456                           	opt callstack 0
  5457  000043                     	ds	32
  5458  0000                     wtemp0	set	btemp
  5459  0000                     wtemp1	set	btemp+2
  5460  0000                     wtemp2	set	btemp+4
  5461  0000                     wtemp3	set	btemp+6
  5462  0000                     wtemp4	set	btemp+8
  5463  0000                     wtemp5	set	btemp+10
  5464  0000                     wtemp8	set	btemp+1
  5465  0000                     ttemp0	set	btemp
  5466  0000                     ttemp1	set	btemp+3
  5467  0000                     ttemp2	set	btemp+6
  5468  0000                     ttemp3	set	btemp+9
  5469  0000                     ttemp5	set	btemp+1
  5470  0000                     ttemp6	set	btemp+4
  5471  0000                     ttemp7	set	btemp+8
  5472  0000                     ltemp0	set	btemp
  5473  0000                     ltemp1	set	btemp+4
  5474  0000                     ltemp2	set	btemp+8
  5475  0000                     lltemp0	set	btemp
  5476  0000                     lltemp1	set	btemp+8
  5477  0000                     lltemp2	set	btemp+16
  5478  0000                     lltemp3	set	btemp+24
  5479                           tosu	equ	0xFFF
  5480                           tosh	equ	0xFFE
  5481                           tosl	equ	0xFFD
  5482                           stkptr	equ	0xFFC
  5483                           pclatu	equ	0xFFB
  5484                           pclath	equ	0xFFA
  5485                           pcl	equ	0xFF9
  5486                           tblptru	equ	0xFF8
  5487                           tblptrh	equ	0xFF7
  5488                           tblptrl	equ	0xFF6
  5489                           tablat	equ	0xFF5
  5490                           prodh	equ	0xFF4
  5491                           prodl	equ	0xFF3
  5492                           indf0	equ	0xFEF
  5493                           postinc0	equ	0xFEE
  5494                           postdec0	equ	0xFED
  5495                           preinc0	equ	0xFEC
  5496                           plusw0	equ	0xFEB
  5497                           fsr0h	equ	0xFEA
  5498                           fsr0l	equ	0xFE9
  5499                           wreg	equ	0xFE8
  5500                           indf1	equ	0xFE7
  5501                           postinc1	equ	0xFE6
  5502                           postdec1	equ	0xFE5
  5503                           preinc1	equ	0xFE4
  5504                           plusw1	equ	0xFE3
  5505                           fsr1h	equ	0xFE2
  5506                           fsr1l	equ	0xFE1
  5507                           bsr	equ	0xFE0
  5508                           indf2	equ	0xFDF
  5509                           postinc2	equ	0xFDE
  5510                           postdec2	equ	0xFDD
  5511                           preinc2	equ	0xFDC
  5512                           plusw2	equ	0xFDB
  5513                           fsr2h	equ	0xFDA
  5514                           fsr2l	equ	0xFD9
  5515                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      84
    BANK0           128      0      14
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    mem	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), w_pipe(COMRAM[14]), teste_2(COMRAM[14]), teste_1(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), w_pipe(COMRAM[14]), teste_2(COMRAM[14]), teste_1(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), w_pipe(COMRAM[14]), teste_2(COMRAM[14]), teste_1(COMRAM[14]), 

    data	PTR unsigned int  size(2) Largest target is 2
		 -> dado(STACK[2]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    S541pipe$r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    S541pipe$w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    S258pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _task_0 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_bozo in COMRAM

    None.

Critical Paths under _task_xuxa in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _task_0 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_bozo in BANK0

    None.

Critical Paths under _task_xuxa in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _task_0 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_bozo in BANK1

    None.

Critical Paths under _task_xuxa in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _task_0 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_bozo in BANK2

    None.

Critical Paths under _task_xuxa in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _task_0 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_bozo in BANK3

    None.

Critical Paths under _task_xuxa in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _task_0 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_bozo in BANK4

    None.

Critical Paths under _task_xuxa in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _task_0 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_bozo in BANK5

    None.

Critical Paths under _task_xuxa in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2004
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0    1245
                          _SRAMalloc
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _pipe_create                                          6     0      6     264
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (2) _SRAMalloc                                            7     6      1     893
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (3) __SRAMmerge                                           7     5      2     402
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     323
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   112   108      4     187
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     293
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            2     2      0     295
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     293
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            2     2      0     295
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_0                                               0     0      0     960
                    _lunos_delayTask
                         _pipe_write
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_1                                               2     2      0     984
                    _lunos_delayTask
                          _pipe_read
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_2                                               0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_bozo                                            2     2      0     625
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_xuxa                                            2     2      0     874
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer0                                         16    16      0     498
                                              0 COMRAM    16    16      0
                             ___wmul
                    _delay_decrement
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (13) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _user_conf
     _SRAMalloc
       __SRAMmerge
     _pipe_create
       _sem_init
     _sem_init

 _task_idle (ROOT)

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)

 _cover_bottle (ROOT)

 _count_out (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)

 _cover_bottle (ROOT)

 _count_out (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_0 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_1 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_2 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_bozo (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_xuxa (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   _delay_decrement
   _round_robin
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     420      17       68.8%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       E       5       10.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      54       1       88.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62      15        0.0%
DATA                 0      0     482       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun  5 15:18:43 2019

                        _p 0037   __end_of_lunos_createTask 1188                        l301 1B20  
                      l302 1B28                        l127 0846                        l321 1A8C  
                      l305 1B30                        l322 1A84                        l306 1B38  
                      l316 1A76                        l317 1A6E                        l309 1B40  
                      l327 1A9C                        l345 19CE                        l186 1750  
                      l380 0B04                        l365 1438                        l357 1756  
                      l287 191A                        _BSR 000FE0                        u710 096A  
                      u630 0B74                        u800 1532                        u720 13AA  
                      u730 0984                        u820 1598                        u681 116C  
                      u770 0A1C                        _TOS 000FFD                        _mem 0007  
                      _who 000B                _round_robin 1644                        wreg 000FE8  
             __CFG_WDT$OFF 000000                       l2102 176A                       l2122 1484  
                     l2052 1B76                       l2118 144C                       l2054 1B82  
                     l2046 1960                       l2076 189E                       l2068 187A  
                     l1722 0586                       l1804 0A48                       l1742 076C  
                     l1726 06A0                       l1814 0A82                       l1832 150A  
                     l1842 157A                       l1762 13F0                       l1754 1396  
                     l1690 0C40                       l1658 0B78                       l1860 0D30  
                     l1852 0C6E                       l1940 1276                       l1748 0962  
                     l1862 0D4E                       l1928 135E                       l1784 098E  
                     l1866 1654                       l1786 09A2                       _FREE 007D34  
                     i2l59 0398                       _TOSH 000FFE                       _TOSL 000FFD  
                     _WREG 000FE8                       _TOSU 000FFF                       _main 16D4  
            _global_buffer 0001     __size_of_count_bottles 0062                       _size 0009  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr2h 000FDA  
                     fsr0l 000FE9                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 0043                       prodh 000FF4  
                     prodl 000FF3                       start 000C               ___param_bank 000000  
          __end_of___lwmod 15AE                      _TMR0L 000FD6                      _TRISB 000F93  
                    _TRISC 000F94                      _TRISD 000F95                      u88_20 11BA  
                    u96_20 1970                ?_ISR_timer0 0063                 __SRAMmerge 0B0E  
     __size_of_check_level 0032         __size_of_SRAMalloc 019E                      tablat 000FF5  
                    ltemp0 0043                      ltemp1 0047                      ltemp2 004B  
                    plusw0 000FEB                      plusw1 000FE3                      plusw2 000FDB  
                    ttemp0 0043                      ttemp1 0046                      ttemp2 0049  
                    ttemp3 004C                      ttemp5 0044                      ttemp6 0047  
                    ttemp7 004B                      status 000FD8                      wtemp0 0043  
                    wtemp1 0045                      wtemp2 0047                      wtemp3 0049  
                    wtemp4 004B                      wtemp5 004D                      wtemp8 0044  
 __size_of_delay_decrement 0110            __initialization 1A16               __end_of_main 1752  
            _count_bottles 1916              __activetblptr 000000                     u102_20 1AC2  
                   u102_26 1AC4                     u103_20 19F6                     u103_26 19F8  
                   u104_20 1B52                     u104_26 1B54                     u105_20 17C2  
                   i2l2014 0490                     i2l2008 02DC                     u107_20 1470  
                   u107_26 1472                     u108_20 148C                     u108_26 148E  
                   u109_20 14E4                     i2l1992 0222                     i2l1988 012C  
                   _STATUS 000FD8                     _STKPTR 000FFC       __size_of_config_INT0 0010  
     __size_of_fill_bottle 001C        __size_of_ISR_timer0 04C4                     ___wmul 15AE  
        __end_of_SRAMalloc 0B0E                     clear_0 1A36                     clear_1 1A48  
                   clear_2 1A54                     _r_pipe 0080                     _task_0 1AA6  
                   _task_1 19CA                     _task_2 1B4A                     _w_pipe 000D  
         __end_of_sem_init 1840           __end_of_sem_wait 1366           __end_of_sem_post 127E  
             __pdataCOMRAM 0073                     lltemp0 0043                     lltemp1 004B  
                   lltemp2 0053                     lltemp3 005B                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 __accesstop 0080  
  __end_of__initialization 1A5A            __CFG_PBADEN$OFF 000000              ___rparam_used 000001  
           __pcstackCOMRAM 0063                 ___inthi_sp 0520       __end_of_cover_bottle 1AA6  
               __pbssBANK0 0080         __size_of_count_out 006C              __uDynamicHeap 02AE  
       __size_of_scheduler 0006        __size_of__SRAMmerge 0152         __size_of_pipe_read 0108  
       __size_of_task_idle 0004         __size_of_task_bozo 007E         __size_of_task_xuxa 00BE  
             ??_ISR_timer0 0063                    i2u90_40 005E                    i2u90_46 0060  
                  i2u91_40 0086                    i2u91_41 0084                    i2u94_40 0498  
               _dispatcher 04CC            _lunos_delayTask 1978       __size_of_pipe_create 010E  
       __size_of_user_conf 006A                    __Hparam 0000                    __Lparam 0000  
          __size_of___wmul 0096         __end_of_ISR_timer0 04CC                    ___lwmod 14F2  
                  __pcinit 1A16                    __ramtop 0600            __size_of_task_0 0040  
          __size_of_task_1 004C            __size_of_task_2 002A          __end_of_count_out 18AC  
                  __ptext0 16D4                    __ptext1 18AC                    __ptext2 0D70  
                  __ptext3 17D0                    __ptext4 0970                    __ptext5 0B0E  
                  __ptext6 1AE6                    __ptext7 1090                    __ptext8 1366  
                  __ptext9 04CC                  _T0CONbits 000FD5                    _teste_1 0029  
                  _teste_2 001B                    _quantum 0073          __end_of_scheduler 1BB8  
           __pintcode_body 0014       end_of_initialization 1A5A          __end_of_pipe_read 1090  
        __end_of_task_idle 1BBC          __end_of_task_bozo 17D0                    int_func 0014  
        __end_of_task_xuxa 14F2                 _pipe_write 0E7E      __end_of_config_timer0 1BA2  
                  postdec0 000FED                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               _lunos_init 1AE6          __end_of_user_conf 1916                  _PORTBbits 000F81  
                _PORTCbits 000F82                  _PORTDbits 000F83    __end_of_lunos_delayTask 19CA  
                _SRAMalloc 0970      __size_of_cover_bottle 0046                  _TRISDbits 000F95  
     __size_of_round_robin 0090        __end_of_check_level 1B4A            _delay_decrement 0C60  
             _cover_bottle 1A60         __end_of__SRAMmerge 0C60             __end_of___wmul 1644  
            __pidataCOMRAM 1BBC             __end_of_task_0 1AE6             __end_of_task_1 1A16  
           __end_of_task_2 1B74        start_initialization 1A16  __size_of_lunos_createTask 00F8  
      __end_of_config_INT0 1BB2        __size_of_dispatcher 04A4        __end_of_fill_bottle 1B90  
              __pbssBIGRAM 008E                __pbssCOMRAM 0001                _check_level 1B18  
  __end_of_delay_decrement 0D70       __end_of_SRAMInitHeap 1434                  __pintcode 0008  
        __size_of_sem_init 0070          __size_of_sem_wait 00E8          __size_of_sem_post 00F6  
    __end_of_count_bottles 1978        __size_of_pipe_write 010A                  _count_out 1840  
      __size_of_lunos_init 0032                  _scheduler 1BB2                _config_INT0 1BA2  
                _pipe_read 0F88                _fill_bottle 1B74                  _task_idle 1BB8  
                _task_bozo 1752                  _task_xuxa 1434                  _user_conf 18AC  
         _lunos_createTask 1090                _INTCON2bits 000FF1        __end_of_pipe_create 0E7E  
                 __Hrparam 0000                   __Lrparam 0000         __end_of_dispatcher 0970  
         __size_of___lwmod 00BC     __size_of_config_timer0 0012      __size_of_SRAMInitHeap 00CE  
                 __ptext10 1BB2                   __ptext11 1644                   __ptext20 1A60  
                 __ptext12 14F2                   __ptext21 1840                   __ptext13 1B90  
                 __ptext30 1434                   __ptext22 1AA6                   __ptext14 1BA2  
                 __ptext23 0E7E                   __ptext15 1BB8                   __ptext32 0C60  
                 __ptext24 127E                   __ptext16 1916                   __ptext33 15AE  
                 __ptext25 1188                   __ptext17 1978                   __ptext34 0000  
                 __ptext26 19CA                   __ptext18 1B74                   __ptext27 0F88  
                 __ptext19 1B18                   __ptext28 1B4A                   __ptext29 1752  
            __size_of_main 007E                _ready_queue 008E                   _sem_init 17D0  
                 _sem_wait 127E                   _sem_post 1188               _SRAMInitHeap 1366  
               _INTCONbits 000FF2         __end_of_pipe_write 0F88                _pipe_create 0D70  
      __end_of_round_robin 16D4                   intlevel1 0000                   intlevel2 0000  
       __end_of_lunos_init 1B18              _config_timer0 1B90                 _ISR_timer0 0008  
 __size_of_lunos_delayTask 0052  
