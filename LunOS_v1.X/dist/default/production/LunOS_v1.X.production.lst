

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun  5 15:42:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 2.05
    53                           ; Generated 20/12/2018 GMT
    54                           ; 
    55                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87 ;;_p	offset=-2 (param)
    88 ;;_w	offset=-4 (param)
    89 ;;_r	offset=-6 (param)
    90 ;;_s	offset=-2 (param)
    91 ;;_valor	offset=-4 (param)
    92 ;;_pHeap	offset	0
    93 ;;_temp	offset	2
    94 ;;_segHeader	offset	4
    95 ;;_segLen	offset	5
    96 ;;_nBytes	offset=-1 (param)
    97 ;;_pSegB	offset	0
    98 ;;_uSegB	offset	2
    99 ;;_uSegA	offset	3
   100 ;;_uSum	offset	4
   101 ;;_pSegA	offset=-2 (param)
   102 ;;_new_task	offset	0
   103 ;;_prior	offset=-2 (param)
   104 ;;_f	offset=-4 (param)
   105 ;;_count	offset	0
   106 ;;_pHeap	offset	2
   107 ;;_state	offset=-1 (param)
   108 ;;_next_task_to_run	offset	0
   109 ;;_counter	offset	0
   110 ;;_dividend	offset=-2 (param)
   111 ;;_divisor	offset=-4 (param)
   112 ;;_bottle	offset	0
   113 ;;_s	offset=-2 (param)
   114 ;;_s	offset=-2 (param)
   115 ;;_time	offset=-2 (param)
   116 ;;_state	offset=-1 (param)
   117 ;;_next_task_to_run	offset	0
   118 ;;_counter	offset	0
   119 ;;_dividend	offset=-2 (param)
   120 ;;_divisor	offset=-4 (param)
   121 ;;_p	offset=-2 (param)
   122 ;;_data	offset=-4 (param)
   123 ;;_count	offset	0
   124 ;;_p	offset=-2 (param)
   125 ;;_data	offset=-4 (param)
   126 ;;_dado	offset	0
   127 ;;_i	offset	0
   128 ;;_i	offset	0
   129 ;;_next_task_to_run	offset	0
   130 ;;_counter	offset	0
   131 ;;_dividend	offset=-2 (param)
   132 ;;_divisor	offset=-4 (param)
   133 ;;_i	offset	0
   134 ;;_product	offset	0
   135 ;;_multiplier	offset=-2 (param)
   136 ;;_multiplicand	offset=-4 (param)
   137                           
   138                           	psect	idataCOMRAM
   139  001BE8                     __pidataCOMRAM:
   140                           	opt callstack 0
   141                           
   142                           ;initializer for _quantum
   143  001BE8  000A               	dw	10
   144  0000                     _TOS	set	4093
   145  0000                     _PORTBbits	set	3969
   146  0000                     _PORTCbits	set	3970
   147  0000                     _TRISD	set	3989
   148  0000                     _TRISC	set	3988
   149  0000                     _TRISB	set	3987
   150  0000                     _STKPTR	set	4092
   151  0000                     _TOSL	set	4093
   152  0000                     _TOSH	set	4094
   153  0000                     _TOSU	set	4095
   154  0000                     _BSR	set	4064
   155  0000                     _STATUS	set	4056
   156  0000                     _WREG	set	4072
   157  0000                     _PORTDbits	set	3971
   158  0000                     _TMR0L	set	4054
   159  0000                     _T0CONbits	set	4053
   160  0000                     _INTCON2bits	set	4081
   161  0000                     _INTCONbits	set	4082
   162  0000                     _TRISDbits	set	3989
   163                           
   164                           ; #config settings
   165  0000                     
   166                           	psect	cinit
   167  001A40                     __pcinit:
   168                           	opt callstack 0
   169  001A40                     start_initialization:
   170                           	opt callstack 0
   171  001A40                     __initialization:
   172                           	opt callstack 0
   173                           
   174                           ; Initialize objects allocated to COMRAM (2 bytes)
   175                           ; load TBLPTR registers with __pidataCOMRAM
   176  001A40  0EE8               	movlw	low __pidataCOMRAM
   177  001A42  6EF6               	movwf	tblptrl,c
   178  001A44  0E1B               	movlw	high __pidataCOMRAM
   179  001A46  6EF7               	movwf	tblptrh,c
   180  001A48  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   181  001A4A  6EF8               	movwf	tblptru,c
   182  001A4C  0009               	tblrd		*+	;fetch initializer
   183  001A4E  CFF5 F073          	movff	tablat,__pdataCOMRAM
   184  001A52  0009               	tblrd		*+	;fetch initializer
   185  001A54  CFF5 F074          	movff	tablat,__pdataCOMRAM+1
   186                           
   187                           ; Clear objects allocated to BIGRAM (1056 bytes)
   188  001A58  EE00  F0D4         	lfsr	0,__pbssBIGRAM
   189  001A5C  EE24 F020          	lfsr	2,1056
   190  001A60                     clear_0:
   191  001A60  6AEE               	clrf	postinc0,c
   192  001A62  50DD               	movf	postdec2,w,c
   193  001A64  50D9               	movf	fsr2l,w,c
   194  001A66  E1FC               	bnz	clear_0
   195  001A68  50DA               	movf	fsr2h,w,c
   196  001A6A  E1FA               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to BANK0 (84 bytes)
   199  001A6C  EE00  F080         	lfsr	0,__pbssBANK0
   200  001A70  0E54               	movlw	84
   201  001A72                     clear_1:
   202  001A72  6AEE               	clrf	postinc0,c
   203  001A74  06E8               	decf	wreg,f,c
   204  001A76  E1FD               	bnz	clear_1
   205                           
   206                           ; Clear objects allocated to COMRAM (66 bytes)
   207  001A78  EE00  F001         	lfsr	0,__pbssCOMRAM
   208  001A7C  0E42               	movlw	66
   209  001A7E                     clear_2:
   210  001A7E  6AEE               	clrf	postinc0,c
   211  001A80  06E8               	decf	wreg,f,c
   212  001A82  E1FD               	bnz	clear_2
   213  001A84                     end_of_initialization:
   214                           	opt callstack 0
   215  001A84                     __end_of__initialization:
   216                           	opt callstack 0
   217  001A84  0100               	movlb	0
   218  001A86  EFBD  F00B         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMRAM
   221  000001                     __pbssCOMRAM:
   222                           	opt callstack 0
   223  000001                     _global_buffer:
   224                           	opt callstack 0
   225  000001                     	ds	6
   226  000007                     _mem:
   227                           	opt callstack 0
   228  000007                     	ds	2
   229  000009                     _size:
   230                           	opt callstack 0
   231  000009                     	ds	2
   232  00000B                     _who:
   233                           	opt callstack 0
   234  00000B                     	ds	2
   235  00000D                     _check_sem:
   236                           	opt callstack 0
   237  00000D                     	ds	14
   238  00001B                     _fill_sem:
   239                           	opt callstack 0
   240  00001B                     	ds	14
   241  000029                     _count_sem:
   242                           	opt callstack 0
   243  000029                     	ds	14
   244  000037                     _p:
   245                           	opt callstack 0
   246  000037                     	ds	12
   247                           
   248                           	psect	dataCOMRAM
   249  000073                     __pdataCOMRAM:
   250                           	opt callstack 0
   251  000073                     _quantum:
   252                           	opt callstack 0
   253  000073                     	ds	2
   254                           
   255                           	psect	bssBANK0
   256  000080                     __pbssBANK0:
   257                           	opt callstack 0
   258  000080                     _out_sem:
   259                           	opt callstack 0
   260  000080                     	ds	14
   261  00008E                     _cover_sem:
   262                           	opt callstack 0
   263  00008E                     	ds	14
   264  00009C                     _r_pipe:
   265                           	opt callstack 0
   266  00009C                     	ds	14
   267  0000AA                     _w_pipe:
   268                           	opt callstack 0
   269  0000AA                     	ds	14
   270  0000B8                     _teste_2:
   271                           	opt callstack 0
   272  0000B8                     	ds	14
   273  0000C6                     _teste_1:
   274                           	opt callstack 0
   275  0000C6                     	ds	14
   276                           
   277                           	psect	bssBIGRAM
   278  0000D4                     __pbssBIGRAM:
   279                           	opt callstack 0
   280  0000D4                     _ready_queue:
   281                           	opt callstack 0
   282  0000D4                     	ds	544
   283  0002F4                     __uDynamicHeap:
   284                           	opt callstack 0
   285  0002F4                     	ds	512
   286                           
   287                           	psect	cstackCOMRAM
   288  000063                     __pcstackCOMRAM:
   289                           	opt callstack 0
   290  000063                     ??_ISR_timer0:
   291                           
   292                           ; 1 bytes @ 0x0
   293  000063                     	ds	16
   294                           
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 16 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1  [STACK] void 
   307 ;; Registers used:
   308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   314 ;;      Params:         0       0       0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels required when called:   14
   320 ;; This function calls:
   321 ;;		_config_INT0
   322 ;;		_config_timer0
   323 ;;		_dispatcher
   324 ;;		_lunos_createTask
   325 ;;		_lunos_init
   326 ;;		_user_conf
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a reentrant model
   330 ;;
   331                           
   332                           	psect	text0
   333  00177A                     __ptext0:
   334                           	opt callstack 0
   335  00177A                     _main:
   336                           	opt callstack 17
   337                           
   338                           ;main.c: 18:   lunos_createTask(5, &check_level);
   339                           
   340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   341                           ;incstack = 0
   342  00177A  EC84  F00D         	call	_lunos_init	;wreg free
   343                           
   344                           ;main.c: 20:   lunos_createTask(7, &count_out);
   345  00177E  ECD7  F00A         	call	_user_conf	;wreg free
   346                           
   347                           ;main.c: 21: 
   348  001782  ECE7  F00D         	call	_config_INT0	;wreg free
   349                           
   350                           ;main.c: 22: 
   351  001786  ECDE  F00D         	call	_config_timer0	;wreg free
   352                           
   353                           ;main.c: 30: }
   354  00178A  0EE6               	movlw	low _count_bottles
   355  00178C  6EE6               	movwf	postinc1,c
   356  00178E  0E18               	movlw	high _count_bottles
   357  001790  6EE6               	movwf	postinc1,c
   358  001792  0E03               	movlw	3
   359  001794  6EE6               	movwf	postinc1,c
   360  001796  0E00               	movlw	0
   361  001798  6EE6               	movwf	postinc1,c
   362  00179A  EC48  F008         	call	_lunos_createTask	;wreg free
   363  00179E  0E96               	movlw	low _fill_bottle
   364  0017A0  6EE6               	movwf	postinc1,c
   365  0017A2  0E1B               	movlw	high _fill_bottle
   366  0017A4  6EE6               	movwf	postinc1,c
   367  0017A6  0E04               	movlw	4
   368  0017A8  6EE6               	movwf	postinc1,c
   369  0017AA  0E00               	movlw	0
   370  0017AC  6EE6               	movwf	postinc1,c
   371  0017AE  EC48  F008         	call	_lunos_createTask	;wreg free
   372  0017B2  0ECA               	movlw	low _check_level
   373  0017B4  6EE6               	movwf	postinc1,c
   374  0017B6  0E1A               	movlw	high _check_level
   375  0017B8  6EE6               	movwf	postinc1,c
   376  0017BA  0E05               	movlw	5
   377  0017BC  6EE6               	movwf	postinc1,c
   378  0017BE  0E00               	movlw	0
   379  0017C0  6EE6               	movwf	postinc1,c
   380  0017C2  EC48  F008         	call	_lunos_createTask	;wreg free
   381  0017C6  0EA4               	movlw	low _cover_bottle
   382  0017C8  6EE6               	movwf	postinc1,c
   383  0017CA  0E19               	movlw	high _cover_bottle
   384  0017CC  6EE6               	movwf	postinc1,c
   385  0017CE  0E06               	movlw	6
   386  0017D0  6EE6               	movwf	postinc1,c
   387  0017D2  0E00               	movlw	0
   388  0017D4  6EE6               	movwf	postinc1,c
   389  0017D6  EC48  F008         	call	_lunos_createTask	;wreg free
   390  0017DA  0E3A               	movlw	low _count_out
   391  0017DC  6EE6               	movwf	postinc1,c
   392  0017DE  0E1B               	movlw	high _count_out
   393  0017E0  6EE6               	movwf	postinc1,c
   394  0017E2  0E07               	movlw	7
   395  0017E4  6EE6               	movwf	postinc1,c
   396  0017E6  0E00               	movlw	0
   397  0017E8  6EE6               	movwf	postinc1,c
   398  0017EA  EC48  F008         	call	_lunos_createTask	;wreg free
   399  0017EE  0E00               	movlw	0
   400  0017F0  6EE6               	movwf	postinc1,c
   401  0017F2  EC66  F002         	call	_dispatcher	;wreg free
   402  0017F6                     l186:
   403  0017F6  D7FF               	goto	l186
   404  0017F8                     __end_of_main:
   405                           	opt callstack 0
   406                           
   407 ;; *************** function _user_conf *****************
   408 ;; Defined at:
   409 ;;		line 21 in file "tasks.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1  [STACK] void 
   416 ;; Registers used:
   417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   423 ;;      Params:         0       0       0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:   12
   430 ;; This function calls:
   431 ;;		_SRAMalloc
   432 ;;		_pipe_create
   433 ;;		_sem_init
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a reentrant model
   437 ;;
   438                           
   439                           	psect	text1
   440  0015AE                     __ptext1:
   441                           	opt callstack 0
   442  0015AE                     _user_conf:
   443                           	opt callstack 18
   444                           
   445                           ;tasks.c: 22:   TRISB = 0b00000001;
   446                           
   447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   448                           ;incstack = 0
   449  0015AE  0E01               	movlw	1
   450  0015B0  6E93               	movwf	3987,c	;volatile
   451                           
   452                           ;tasks.c: 23:   TRISC = 0b01111111;
   453  0015B2  0E7F               	movlw	127
   454  0015B4  6E94               	movwf	3988,c	;volatile
   455                           
   456                           ;tasks.c: 24:   TRISD = 0b01111110;
   457  0015B6  0E7E               	movlw	126
   458  0015B8  6E95               	movwf	3989,c	;volatile
   459                           
   460                           ;tasks.c: 25:   PORTCbits.RC7 = 1;
   461  0015BA  8E82               	bsf	3970,7,c	;volatile
   462                           
   463                           ;tasks.c: 29:   sem_init(&count_sem, 1);
   464  0015BC  0E01               	movlw	1
   465  0015BE  6EE6               	movwf	postinc1,c
   466  0015C0  0E00               	movlw	0
   467  0015C2  6EE6               	movwf	postinc1,c
   468  0015C4  0E29               	movlw	low _count_sem
   469  0015C6  6EE6               	movwf	postinc1,c
   470  0015C8  0E00               	movlw	high _count_sem
   471  0015CA  6EE6               	movwf	postinc1,c
   472  0015CC  EC3B  F00C         	call	_sem_init	;wreg free
   473                           
   474                           ;tasks.c: 30:   sem_init(&fill_sem, 0);
   475  0015D0  0E00               	movlw	0
   476  0015D2  6EE6               	movwf	postinc1,c
   477  0015D4  0E00               	movlw	0
   478  0015D6  6EE6               	movwf	postinc1,c
   479  0015D8  0E1B               	movlw	low _fill_sem
   480  0015DA  6EE6               	movwf	postinc1,c
   481  0015DC  0E00               	movlw	high _fill_sem
   482  0015DE  6EE6               	movwf	postinc1,c
   483  0015E0  EC3B  F00C         	call	_sem_init	;wreg free
   484                           
   485                           ;tasks.c: 31:   sem_init(&check_sem, 0);
   486  0015E4  0E00               	movlw	0
   487  0015E6  6EE6               	movwf	postinc1,c
   488  0015E8  0E00               	movlw	0
   489  0015EA  6EE6               	movwf	postinc1,c
   490  0015EC  0E0D               	movlw	low _check_sem
   491  0015EE  6EE6               	movwf	postinc1,c
   492  0015F0  0E00               	movlw	high _check_sem
   493  0015F2  6EE6               	movwf	postinc1,c
   494  0015F4  EC3B  F00C         	call	_sem_init	;wreg free
   495                           
   496                           ;tasks.c: 32:   sem_init(&cover_sem, 0);
   497  0015F8  0E00               	movlw	0
   498  0015FA  6EE6               	movwf	postinc1,c
   499  0015FC  0E00               	movlw	0
   500  0015FE  6EE6               	movwf	postinc1,c
   501  001600  0E8E               	movlw	low _cover_sem
   502  001602  6EE6               	movwf	postinc1,c
   503  001604  0E00               	movlw	high _cover_sem
   504  001606  6EE6               	movwf	postinc1,c
   505  001608  EC3B  F00C         	call	_sem_init	;wreg free
   506                           
   507                           ;tasks.c: 33:   sem_init(&out_sem, 0);
   508  00160C  0E00               	movlw	0
   509  00160E  6EE6               	movwf	postinc1,c
   510  001610  0E00               	movlw	0
   511  001612  6EE6               	movwf	postinc1,c
   512  001614  0E80               	movlw	low _out_sem
   513  001616  6EE6               	movwf	postinc1,c
   514  001618  0E00               	movlw	high _out_sem
   515  00161A  6EE6               	movwf	postinc1,c
   516  00161C  EC3B  F00C         	call	_sem_init	;wreg free
   517                           
   518                           ;tasks.c: 34:   pipe_create(&p, &w_pipe, &r_pipe);
   519  001620  0E9C               	movlw	low _r_pipe
   520  001622  6EE6               	movwf	postinc1,c
   521  001624  0E00               	movlw	high _r_pipe
   522  001626  6EE6               	movwf	postinc1,c
   523  001628  0EAA               	movlw	low _w_pipe
   524  00162A  6EE6               	movwf	postinc1,c
   525  00162C  0E00               	movlw	high _w_pipe
   526  00162E  6EE6               	movwf	postinc1,c
   527  001630  0E37               	movlw	low _p
   528  001632  6EE6               	movwf	postinc1,c
   529  001634  0E00               	movlw	high _p
   530  001636  6EE6               	movwf	postinc1,c
   531  001638  ECB8  F006         	call	_pipe_create	;wreg free
   532                           
   533                           ;tasks.c: 35:   mem = SRAMalloc(5);
   534  00163C  0E05               	movlw	5
   535  00163E  6EE6               	movwf	postinc1,c
   536  001640  ECB8  F004         	call	_SRAMalloc	;wreg free
   537  001644  C043  F007         	movff	btemp,_mem
   538  001648  C044  F008         	movff	btemp+1,_mem+1
   539                           
   540                           ;tasks.c: 37:   global_buffer.count = 0;
   541  00164C  6A01               	clrf	_global_buffer,c
   542  00164E  6A02               	clrf	_global_buffer+1,c
   543                           
   544                           ;tasks.c: 38:   global_buffer.p_state = FREE_;
   545  001650  6A06               	clrf	_global_buffer+5,c
   546                           
   547                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   548  001652  0012               	return		;funcret
   549  001654                     __end_of_user_conf:
   550                           	opt callstack 0
   551                           
   552 ;; *************** function _pipe_create *****************
   553 ;; Defined at:
   554 ;;		line 9 in file "pipe.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  p               2  [STACK] PTR struct pipe
   557 ;;		 -> p(12), 
   558 ;;  w               2  [STACK] PTR struct semaphore
   559 ;;		 -> w_pipe(14), 
   560 ;;  r               2  [STACK] PTR struct semaphore
   561 ;;		 -> r_pipe(14), 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1  [STACK] void 
   566 ;; Registers used:
   567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   573 ;;      Params:         0       0       0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0
   576 ;;      Totals:         0       0       0       0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; Hardware stack levels required when called:   11
   580 ;; This function calls:
   581 ;;		_sem_init
   582 ;; This function is called by:
   583 ;;		_user_conf
   584 ;; This function uses a reentrant model
   585 ;;
   586                           
   587                           	psect	text2
   588  000D70                     __ptext2:
   589                           	opt callstack 0
   590  000D70                     _pipe_create:
   591                           	opt callstack 18
   592                           
   593                           ;pipe.c: 10:   p->index_write = 0;
   594                           ;stkvar	_p @ sp[(0)+-2]
   595                           
   596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   597                           ;incstack = 0
   598  000D70  0EFE               	movlw	-2
   599  000D72  CFE3 F04D          	movff	plusw1,btemp+10
   600  000D76  0EFF               	movlw	-1
   601  000D78  CFE3 F04E          	movff	plusw1,btemp+11
   602  000D7C  0E04               	movlw	4
   603  000D7E  244D               	addwf	btemp+10,w,c
   604  000D80  6ED9               	movwf	fsr2l,c
   605  000D82  0E00               	movlw	0
   606  000D84  204E               	addwfc	btemp+11,w,c
   607  000D86  6EDA               	movwf	fsr2h,c
   608  000D88  0E00               	movlw	0
   609  000D8A  6EDE               	movwf	postinc2,c
   610  000D8C  0E00               	movlw	0
   611  000D8E  6EDD               	movwf	postdec2,c
   612                           
   613                           ;pipe.c: 11:   p->index_read = 0;
   614                           ;stkvar	_p @ sp[(0)+-2]
   615  000D90  0EFE               	movlw	-2
   616  000D92  CFE3 F04D          	movff	plusw1,btemp+10
   617  000D96  0EFF               	movlw	-1
   618  000D98  CFE3 F04E          	movff	plusw1,btemp+11
   619  000D9C  0E06               	movlw	6
   620  000D9E  244D               	addwf	btemp+10,w,c
   621  000DA0  6ED9               	movwf	fsr2l,c
   622  000DA2  0E00               	movlw	0
   623  000DA4  204E               	addwfc	btemp+11,w,c
   624  000DA6  6EDA               	movwf	fsr2h,c
   625  000DA8  0E00               	movlw	0
   626  000DAA  6EDE               	movwf	postinc2,c
   627  000DAC  0E00               	movlw	0
   628  000DAE  6EDD               	movwf	postdec2,c
   629                           
   630                           ;pipe.c: 12:   p->w = w;
   631                           ;stkvar	_w @ sp[(0)+-4]
   632  000DB0  50E1               	movf	fsr1l,w,c
   633  000DB2  0FFC               	addlw	-4
   634  000DB4  6ED9               	movwf	fsr2l,c
   635  000DB6  50E2               	movf	fsr1h,w,c
   636  000DB8  6EDA               	movwf	fsr2h,c
   637  000DBA  0EFF               	movlw	255
   638  000DBC  22DA               	addwfc	fsr2h,f,c
   639                           
   640                           ;stkvar	_p @ sp[(0)+-2]
   641  000DBE  0EFE               	movlw	-2
   642  000DC0  CFE3 F04D          	movff	plusw1,btemp+10
   643  000DC4  0EFF               	movlw	-1
   644  000DC6  CFE3 F04E          	movff	plusw1,btemp+11
   645  000DCA  0E08               	movlw	8
   646  000DCC  244D               	addwf	btemp+10,w,c
   647  000DCE  6EE9               	movwf	fsr0l,c
   648  000DD0  0E00               	movlw	0
   649  000DD2  204E               	addwfc	btemp+11,w,c
   650  000DD4  6EEA               	movwf	fsr0h,c
   651  000DD6  CFDE FFEE          	movff	postinc2,postinc0
   652  000DDA  CFDD FFED          	movff	postdec2,postdec0
   653                           
   654                           ;pipe.c: 13:   p->r = r;
   655                           ;stkvar	_r @ sp[(0)+-6]
   656  000DDE  50E1               	movf	fsr1l,w,c
   657  000DE0  0FFA               	addlw	-6
   658  000DE2  6ED9               	movwf	fsr2l,c
   659  000DE4  50E2               	movf	fsr1h,w,c
   660  000DE6  6EDA               	movwf	fsr2h,c
   661  000DE8  0EFF               	movlw	255
   662  000DEA  22DA               	addwfc	fsr2h,f,c
   663                           
   664                           ;stkvar	_p @ sp[(0)+-2]
   665  000DEC  0EFE               	movlw	-2
   666  000DEE  CFE3 F04D          	movff	plusw1,btemp+10
   667  000DF2  0EFF               	movlw	-1
   668  000DF4  CFE3 F04E          	movff	plusw1,btemp+11
   669  000DF8  0E0A               	movlw	10
   670  000DFA  244D               	addwf	btemp+10,w,c
   671  000DFC  6EE9               	movwf	fsr0l,c
   672  000DFE  0E00               	movlw	0
   673  000E00  204E               	addwfc	btemp+11,w,c
   674  000E02  6EEA               	movwf	fsr0h,c
   675  000E04  CFDE FFEE          	movff	postinc2,postinc0
   676  000E08  CFDD FFED          	movff	postdec2,postdec0
   677                           
   678                           ;pipe.c: 14:   sem_init(p->w, 2);
   679  000E0C  0E02               	movlw	2
   680  000E0E  6EE6               	movwf	postinc1,c
   681  000E10  0E00               	movlw	0
   682  000E12  6EE6               	movwf	postinc1,c
   683                           
   684                           ;stkvar	_p @ sp[(-2)+-2]
   685  000E14  0EFC               	movlw	-4
   686  000E16  CFE3 F04D          	movff	plusw1,btemp+10
   687  000E1A  0EFD               	movlw	-3
   688  000E1C  CFE3 F04E          	movff	plusw1,btemp+11
   689  000E20  0E08               	movlw	8
   690  000E22  244D               	addwf	btemp+10,w,c
   691  000E24  6ED9               	movwf	fsr2l,c
   692  000E26  0E00               	movlw	0
   693  000E28  204E               	addwfc	btemp+11,w,c
   694  000E2A  6EDA               	movwf	fsr2h,c
   695  000E2C  CFDE F04D          	movff	postinc2,btemp+10
   696  000E30  CFDD F04E          	movff	postdec2,btemp+11
   697  000E34  C04D  FFE6         	movff	btemp+10,postinc1
   698  000E38  C04E  FFE6         	movff	btemp+11,postinc1
   699  000E3C  EC3B  F00C         	call	_sem_init	;wreg free
   700                           
   701                           ;pipe.c: 15:   sem_init(p->r, 0);
   702  000E40  0E00               	movlw	0
   703  000E42  6EE6               	movwf	postinc1,c
   704  000E44  0E00               	movlw	0
   705  000E46  6EE6               	movwf	postinc1,c
   706                           
   707                           ;stkvar	_p @ sp[(-2)+-2]
   708  000E48  0EFC               	movlw	-4
   709  000E4A  CFE3 F04D          	movff	plusw1,btemp+10
   710  000E4E  0EFD               	movlw	-3
   711  000E50  CFE3 F04E          	movff	plusw1,btemp+11
   712  000E54  0E0A               	movlw	10
   713  000E56  244D               	addwf	btemp+10,w,c
   714  000E58  6ED9               	movwf	fsr2l,c
   715  000E5A  0E00               	movlw	0
   716  000E5C  204E               	addwfc	btemp+11,w,c
   717  000E5E  6EDA               	movwf	fsr2h,c
   718  000E60  CFDE F04D          	movff	postinc2,btemp+10
   719  000E64  CFDD F04E          	movff	postdec2,btemp+11
   720  000E68  C04D  FFE6         	movff	btemp+10,postinc1
   721  000E6C  C04E  FFE6         	movff	btemp+11,postinc1
   722  000E70  EC3B  F00C         	call	_sem_init	;wreg free
   723                           
   724                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
   725  000E74  0EFA               	movlw	250
   726  000E76  26E1               	addwf	fsr1l,f,c
   727  000E78  0EFF               	movlw	255
   728  000E7A  22E2               	addwfc	fsr1h,f,c
   729  000E7C  0012               	return		;funcret
   730  000E7E                     __end_of_pipe_create:
   731                           	opt callstack 0
   732                           
   733 ;; *************** function _sem_init *****************
   734 ;; Defined at:
   735 ;;		line 10 in file "semaphore.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  s               2  [STACK] PTR struct semaphore
   738 ;;		 -> r_pipe(14), w_pipe(14), out_sem(14), cover_sem(14), 
   739 ;;		 -> check_sem(14), fill_sem(14), count_sem(14), 
   740 ;;  valor           2  [STACK] int 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;		None
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1  [STACK] void 
   745 ;; Registers used:
   746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   752 ;;      Params:         0       0       0       0       0       0       0
   753 ;;      Locals:         0       0       0       0       0       0       0
   754 ;;      Temps:          0       0       0       0       0       0       0
   755 ;;      Totals:         0       0       0       0       0       0       0
   756 ;;Total ram usage:        0 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; Hardware stack levels required when called:   10
   759 ;; This function calls:
   760 ;;		Nothing
   761 ;; This function is called by:
   762 ;;		_pipe_create
   763 ;;		_user_conf
   764 ;; This function uses a reentrant model
   765 ;;
   766                           
   767                           	psect	text3
   768  001876                     __ptext3:
   769                           	opt callstack 0
   770  001876                     _sem_init:
   771                           	opt callstack 19
   772                           
   773                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   774                           
   775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   776                           ;incstack = 0
   777  001876  9EF2               	bcf	4082,7,c	;volatile
   778                           
   779                           ;semaphore.c: 13:   s->contador = valor;
   780                           ;stkvar	_valor @ sp[(0)+-4]
   781  001878  50E1               	movf	fsr1l,w,c
   782  00187A  0FFC               	addlw	-4
   783  00187C  6ED9               	movwf	fsr2l,c
   784  00187E  50E2               	movf	fsr1h,w,c
   785  001880  6EDA               	movwf	fsr2h,c
   786  001882  0EFF               	movlw	255
   787  001884  22DA               	addwfc	fsr2h,f,c
   788                           
   789                           ;stkvar	_s @ sp[(0)+-2]
   790  001886  0EFE               	movlw	-2
   791  001888  CFE3 FFE9          	movff	plusw1,fsr0l
   792  00188C  0EFF               	movlw	-1
   793  00188E  CFE3 FFEA          	movff	plusw1,fsr0h
   794  001892  CFDE FFEE          	movff	postinc2,postinc0
   795  001896  CFDD FFED          	movff	postdec2,postdec0
   796                           
   797                           ;semaphore.c: 14:   s->bloqued_size = 0;
   798                           ;stkvar	_s @ sp[(0)+-2]
   799  00189A  0EFE               	movlw	-2
   800  00189C  CFE3 F04D          	movff	plusw1,btemp+10
   801  0018A0  0EFF               	movlw	-1
   802  0018A2  CFE3 F04E          	movff	plusw1,btemp+11
   803  0018A6  0E0A               	movlw	10
   804  0018A8  244D               	addwf	btemp+10,w,c
   805  0018AA  6ED9               	movwf	fsr2l,c
   806  0018AC  0E00               	movlw	0
   807  0018AE  204E               	addwfc	btemp+11,w,c
   808  0018B0  6EDA               	movwf	fsr2h,c
   809  0018B2  0E00               	movlw	0
   810  0018B4  6EDE               	movwf	postinc2,c
   811  0018B6  0E00               	movlw	0
   812  0018B8  6EDD               	movwf	postdec2,c
   813                           
   814                           ;semaphore.c: 15:   s->task_to_ready = 0;
   815                           ;stkvar	_s @ sp[(0)+-2]
   816  0018BA  0EFE               	movlw	-2
   817  0018BC  CFE3 F04D          	movff	plusw1,btemp+10
   818  0018C0  0EFF               	movlw	-1
   819  0018C2  CFE3 F04E          	movff	plusw1,btemp+11
   820  0018C6  0E0C               	movlw	12
   821  0018C8  244D               	addwf	btemp+10,w,c
   822  0018CA  6ED9               	movwf	fsr2l,c
   823  0018CC  0E00               	movlw	0
   824  0018CE  204E               	addwfc	btemp+11,w,c
   825  0018D0  6EDA               	movwf	fsr2h,c
   826  0018D2  0E00               	movlw	0
   827  0018D4  6EDE               	movwf	postinc2,c
   828  0018D6  0E00               	movlw	0
   829  0018D8  6EDD               	movwf	postdec2,c
   830                           
   831                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   832  0018DA  8EF2               	bsf	4082,7,c	;volatile
   833                           
   834                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   835  0018DC  52E5               	movf	postdec1,f,c
   836  0018DE  52E5               	movf	postdec1,f,c
   837  0018E0  52E5               	movf	postdec1,f,c
   838  0018E2  52E5               	movf	postdec1,f,c
   839  0018E4  0012               	return		;funcret
   840  0018E6                     __end_of_sem_init:
   841                           	opt callstack 0
   842                           
   843 ;; *************** function _SRAMalloc *****************
   844 ;; Defined at:
   845 ;;		line 191 in file "sralloc.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  nBytes          1  [STACK] unsigned char 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  pHeap           2  [STACK] PTR struct _SALLOC
   850 ;;		 -> _uDynamicHeap(512), 
   851 ;;  temp            2  [STACK] PTR struct _SALLOC
   852 ;;		 -> _uDynamicHeap(512), 
   853 ;;  segHeader       1  [STACK] struct _SALLOC
   854 ;;  segLen          1  [STACK] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  2  [STACK] PTR unsigned char 
   857 ;; Registers used:
   858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   864 ;;      Params:         0       0       0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0       0       0
   867 ;;      Totals:         0       0       0       0       0       0       0
   868 ;;Total ram usage:        0 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:   11
   871 ;; This function calls:
   872 ;;		__SRAMmerge
   873 ;; This function is called by:
   874 ;;		_user_conf
   875 ;; This function uses a reentrant model
   876 ;;
   877                           
   878                           	psect	text4
   879  000970                     __ptext4:
   880                           	opt callstack 0
   881  000970                     _SRAMalloc:
   882                           	opt callstack 0
   883                           
   884                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   885  000970  0E06               	movlw	6
   886  000972  26E1               	addwf	fsr1l,f,c
   887  000974  0E00               	movlw	0
   888  000976  22E2               	addwfc	fsr1h,f,c
   889                           
   890                           ;sralloc.c: 191: unsigned char * SRAMalloc( unsigned char nBytes);sralloc.c: 192: {;sral
      +                          loc.c: 193:  SALLOC * pHeap;;sralloc.c: 194:  SALLOC * temp;;sralloc.c: 195:       SALLO
      +                          C segHeader;;sralloc.c: 196:       unsigned char segLen;;sralloc.c: 199:  if (nBytes > (
      +                          0x7F - 1)) return (0);
   891                           ;stkvar	_nBytes @ sp[(-6)+-1]
   892                           
   893                           ;incstack = 0
   894  000978  0EF9               	movlw	-7
   895  00097A  CFE3 F043          	movff	plusw1,btemp
   896  00097E  0E7E               	movlw	126
   897  000980  6443               	cpfsgt	btemp,c
   898  000982  D005               	goto	l1824
   899  000984                     u710:
   900  000984  0E00               	movlw	0
   901  000986  6E43               	movwf	btemp,c
   902  000988  0E00               	movlw	0
   903  00098A  6E44               	movwf	btemp+1,c
   904  00098C  D0BB               	goto	l404
   905  00098E                     l1824:
   906                           
   907                           ;sralloc.c: 202:  pHeap = (SALLOC *)_uDynamicHeap;
   908                           ;stkvar	_pHeap @ sp[(-6)+0]
   909  00098E  0E02               	movlw	high __uDynamicHeap
   910  000990  6E43               	movwf	btemp,c
   911  000992  0EFB               	movlw	-5
   912  000994  C043  FFE3         	movff	btemp,plusw1
   913  000998  0EF4               	movlw	low __uDynamicHeap
   914  00099A  6E43               	movwf	btemp,c
   915  00099C  0EFA               	movlw	-6
   916  00099E  C043  FFE3         	movff	btemp,plusw1
   917  0009A2                     l1826:
   918                           
   919                           ;sralloc.c: 205:  {;sralloc.c: 207:   segHeader = *pHeap;
   920                           ;stkvar	_pHeap @ sp[(-6)+0]
   921  0009A2  0EFA               	movlw	-6
   922  0009A4  CFE3 FFD9          	movff	plusw1,fsr2l
   923  0009A8  0EFB               	movlw	-5
   924  0009AA  CFE3 FFDA          	movff	plusw1,fsr2h
   925  0009AE  50DF               	movf	indf2,w,c
   926  0009B0  6E4E               	movwf	btemp+11,c
   927                           
   928                           ;stkvar	_segHeader @ sp[(-6)+4]
   929  0009B2  0EFE               	movlw	-2
   930  0009B4  C04E  FFE3         	movff	btemp+11,plusw1
   931                           
   932                           ;sralloc.c: 210:   segLen = segHeader.bits.count - 1;
   933                           ;stkvar	_segHeader @ sp[(-6)+4]
   934  0009B8  50E1               	movf	fsr1l,w,c
   935  0009BA  0FFE               	addlw	-2
   936  0009BC  6ED9               	movwf	fsr2l,c
   937  0009BE  50E2               	movf	fsr1h,w,c
   938  0009C0  6EDA               	movwf	fsr2h,c
   939  0009C2  0EFF               	movlw	255
   940  0009C4  22DA               	addwfc	fsr2h,f,c
   941  0009C6  50DF               	movf	223,w,c
   942  0009C8  0B7F               	andlw	127
   943  0009CA  6E4E               	movwf	btemp+11,c
   944  0009CC  0EFF               	movlw	255
   945  0009CE  264E               	addwf	btemp+11,f,c
   946                           
   947                           ;stkvar	_segLen @ sp[(-6)+5]
   948  0009D0  0EFF               	movlw	-1
   949  0009D2  C04E  FFE3         	movff	btemp+11,plusw1
   950                           
   951                           ;sralloc.c: 213:   if (segHeader.byte == 0) return (0);
   952                           ;stkvar	_segHeader @ sp[(-6)+4]
   953  0009D6  0EFE               	movlw	-2
   954  0009D8  50E3               	movf	plusw1,w,c
   955  0009DA  B4D8               	btfsc	status,2,c
   956  0009DC  D7D3               	goto	u710
   957                           
   958                           ;sralloc.c: 216:   if (!(segHeader.bits.alloc))
   959                           ;stkvar	_segHeader @ sp[(-6)+4]
   960  0009DE  50E1               	movf	fsr1l,w,c
   961  0009E0  0FFE               	addlw	-2
   962  0009E2  6ED9               	movwf	fsr2l,c
   963  0009E4  50E2               	movf	fsr1h,w,c
   964  0009E6  6EDA               	movwf	fsr2h,c
   965  0009E8  0EFF               	movlw	255
   966  0009EA  22DA               	addwfc	fsr2h,f,c
   967  0009EC  BEDF               	btfsc	indf2,7,c
   968  0009EE  D016               	goto	u750
   969                           
   970                           ;sralloc.c: 217:   {;sralloc.c: 219:    if (nBytes > segLen)
   971                           ;stkvar	_nBytes @ sp[(-6)+-1]
   972                           ;stkvar	_segLen @ sp[(-6)+5]
   973  0009F0  50E1               	movf	fsr1l,w,c
   974  0009F2  0FFF               	addlw	-1
   975  0009F4  6ED9               	movwf	fsr2l,c
   976  0009F6  50E2               	movf	fsr1h,w,c
   977  0009F8  6EDA               	movwf	fsr2h,c
   978  0009FA  0EFF               	movlw	255
   979  0009FC  22DA               	addwfc	fsr2h,f,c
   980  0009FE  0EF9               	movlw	-7
   981  000A00  50E3               	movf	plusw1,w,c
   982  000A02  5CDE               	subwf	postinc2,w,c
   983  000A04  B0D8               	btfsc	status,0,c
   984  000A06  D020               	goto	l1844
   985                           
   986                           ;sralloc.c: 220:    {;sralloc.c: 222:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.b
      +                          its.count;
   987                           ;stkvar	_pHeap @ sp[(-6)+0]
   988  000A08  0EFA               	movlw	-6
   989  000A0A  CFE3 FFE6          	movff	plusw1,postinc1
   990  000A0E  CFE3 FFE6          	movff	plusw1,postinc1
   991  000A12  EC87  F005         	call	__SRAMmerge	;wreg free
   992  000A16  5043               	movf	btemp,w,c
   993  000A18  A4D8               	btfss	status,2,c
   994  000A1A  D7C3               	goto	l1826
   995  000A1C                     u750:
   996                           
   997                           ;stkvar	_segHeader @ sp[(-6)+4]
   998  000A1C  50E1               	movf	fsr1l,w,c
   999  000A1E  0FFE               	addlw	-2
  1000  000A20  6ED9               	movwf	fsr2l,c
  1001  000A22  50E2               	movf	fsr1h,w,c
  1002  000A24  6EDA               	movwf	fsr2h,c
  1003  000A26  0EFF               	movlw	255
  1004  000A28  22DA               	addwfc	fsr2h,f,c
  1005  000A2A  50DF               	movf	223,w,c
  1006  000A2C  0B7F               	andlw	127
  1007  000A2E  0D01               	mullw	1
  1008                           
  1009                           ;stkvar	_pHeap @ sp[(-6)+0]
  1010  000A30  50E1               	movf	fsr1l,w,c
  1011  000A32  0FFA               	addlw	-6
  1012  000A34  6ED9               	movwf	fsr2l,c
  1013  000A36  50E2               	movf	fsr1h,w,c
  1014  000A38  6EDA               	movwf	fsr2h,c
  1015  000A3A  0EFF               	movlw	255
  1016  000A3C  22DA               	addwfc	fsr2h,f,c
  1017  000A3E  50F3               	movf	prodl,w,c
  1018  000A40  26DE               	addwf	postinc2,f,c
  1019  000A42  50F4               	movf	prodh,w,c
  1020  000A44  22DD               	addwfc	postdec2,f,c
  1021  000A46  D7AD               	goto	l1826
  1022  000A48                     l1844:
  1023                           
  1024                           ;sralloc.c: 228:    if (nBytes == segLen)
  1025                           ;stkvar	_segLen @ sp[(-6)+5]
  1026                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1027  000A48  50E1               	movf	fsr1l,w,c
  1028  000A4A  0FF9               	addlw	-7
  1029  000A4C  6ED9               	movwf	fsr2l,c
  1030  000A4E  50E2               	movf	fsr1h,w,c
  1031  000A50  6EDA               	movwf	fsr2h,c
  1032  000A52  0EFF               	movlw	255
  1033  000A54  22DA               	addwfc	fsr2h,f,c
  1034  000A56  0EFF               	movlw	-1
  1035  000A58  50E3               	movf	plusw1,w,c
  1036  000A5A  18DE               	xorwf	postinc2,w,c
  1037  000A5C  A4D8               	btfss	status,2,c
  1038  000A5E  D011               	goto	l1854
  1039                           
  1040                           ;sralloc.c: 229:    {;sralloc.c: 231:     (*pHeap).bits.alloc = 1;
  1041                           ;stkvar	_pHeap @ sp[(-6)+0]
  1042  000A60  0EFA               	movlw	-6
  1043  000A62  CFE3 FFD9          	movff	plusw1,fsr2l
  1044  000A66  0EFB               	movlw	-5
  1045  000A68  CFE3 FFDA          	movff	plusw1,fsr2h
  1046  000A6C  8EDF               	bsf	indf2,7,c
  1047                           
  1048                           ;sralloc.c: 234:     return ((unsigned char *)(pHeap + 1));
  1049                           ;stkvar	_pHeap @ sp[(-6)+0]
  1050  000A6E  0EFA               	movlw	-6
  1051  000A70  50E3               	movf	plusw1,w,c
  1052  000A72  0F01               	addlw	1
  1053  000A74  6E43               	movwf	btemp,c
  1054  000A76  0EFB               	movlw	-5
  1055  000A78  CFE3 F044          	movff	plusw1,btemp+1
  1056  000A7C  0E00               	movlw	0
  1057  000A7E  2244               	addwfc	btemp+1,f,c
  1058  000A80  D041               	goto	l404
  1059  000A82                     l1854:
  1060                           
  1061                           ;sralloc.c: 239:    {;sralloc.c: 241:     (*pHeap).byte = nBytes + 0x81;
  1062                           ;stkvar	_pHeap @ sp[(-6)+0]
  1063  000A82  0EFA               	movlw	-6
  1064  000A84  CFE3 FFD9          	movff	plusw1,fsr2l
  1065  000A88  0EFB               	movlw	-5
  1066  000A8A  CFE3 FFDA          	movff	plusw1,fsr2h
  1067                           
  1068                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1069  000A8E  0EF9               	movlw	-7
  1070  000A90  50E3               	movf	plusw1,w,c
  1071  000A92  0F81               	addlw	129
  1072  000A94  6EDF               	movwf	indf2,c
  1073                           
  1074                           ;sralloc.c: 244:     temp = pHeap + 1;
  1075                           ;stkvar	_pHeap @ sp[(-6)+0]
  1076  000A96  0EFA               	movlw	-6
  1077  000A98  50E3               	movf	plusw1,w,c
  1078  000A9A  0F01               	addlw	1
  1079  000A9C  6E4D               	movwf	btemp+10,c
  1080  000A9E  0EFB               	movlw	-5
  1081  000AA0  CFE3 F04E          	movff	plusw1,btemp+11
  1082  000AA4  0E00               	movlw	0
  1083  000AA6  224E               	addwfc	btemp+11,f,c
  1084                           
  1085                           ;stkvar	_temp @ sp[(-6)+2]
  1086  000AA8  0EFD               	movlw	-3
  1087  000AAA  C04E  FFE3         	movff	btemp+11,plusw1
  1088  000AAE  0EFC               	movlw	-4
  1089  000AB0  C04D  FFE3         	movff	btemp+10,plusw1
  1090                           
  1091                           ;sralloc.c: 247:     pHeap += (nBytes + 1);
  1092                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1093  000AB4  0EF9               	movlw	-7
  1094  000AB6  50E3               	movf	plusw1,w,c
  1095  000AB8  6E4D               	movwf	btemp+10,c
  1096  000ABA  6A4E               	clrf	btemp+11,c
  1097  000ABC  0E01               	movlw	1
  1098  000ABE  264D               	addwf	btemp+10,f,c
  1099  000AC0  0E00               	movlw	0
  1100  000AC2  224E               	addwfc	btemp+11,f,c
  1101                           
  1102                           ;stkvar	_pHeap @ sp[(-6)+0]
  1103  000AC4  50E1               	movf	fsr1l,w,c
  1104  000AC6  0FFA               	addlw	-6
  1105  000AC8  6ED9               	movwf	fsr2l,c
  1106  000ACA  50E2               	movf	fsr1h,w,c
  1107  000ACC  6EDA               	movwf	fsr2h,c
  1108  000ACE  0EFF               	movlw	255
  1109  000AD0  22DA               	addwfc	fsr2h,f,c
  1110  000AD2  504D               	movf	btemp+10,w,c
  1111  000AD4  26DE               	addwf	postinc2,f,c
  1112  000AD6  504E               	movf	btemp+11,w,c
  1113  000AD8  22DD               	addwfc	postdec2,f,c
  1114                           
  1115                           ;sralloc.c: 250:     (*pHeap).byte = segLen - nBytes;
  1116                           ;stkvar	_pHeap @ sp[(-6)+0]
  1117  000ADA  0EFA               	movlw	-6
  1118  000ADC  CFE3 FFD9          	movff	plusw1,fsr2l
  1119  000AE0  0EFB               	movlw	-5
  1120  000AE2  CFE3 FFDA          	movff	plusw1,fsr2h
  1121                           
  1122                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1123  000AE6  0EF9               	movlw	-7
  1124  000AE8  CFE3 F04E          	movff	plusw1,btemp+11
  1125                           
  1126                           ;stkvar	_segLen @ sp[(-6)+5]
  1127  000AEC  0EFF               	movlw	-1
  1128  000AEE  CFE3 F04D          	movff	plusw1,btemp+10
  1129  000AF2  504E               	movf	btemp+11,w,c
  1130  000AF4  5C4D               	subwf	btemp+10,w,c
  1131  000AF6  6EDF               	movwf	indf2,c
  1132                           
  1133                           ;sralloc.c: 253:     return ((unsigned char *) temp);
  1134                           ;stkvar	_temp @ sp[(-6)+2]
  1135  000AF8  0EFC               	movlw	-4
  1136  000AFA  CFE3 F043          	movff	plusw1,btemp
  1137  000AFE  0EFD               	movlw	-3
  1138  000B00  CFE3 F044          	movff	plusw1,btemp+1
  1139  000B04                     l404:
  1140                           
  1141                           ; _SRAMalloc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  1142  000B04  0EF9               	movlw	249
  1143  000B06  26E1               	addwf	fsr1l,f,c
  1144  000B08  0EFF               	movlw	255
  1145  000B0A  22E2               	addwfc	fsr1h,f,c
  1146  000B0C  0012               	return		;funcret
  1147  000B0E                     __end_of_SRAMalloc:
  1148                           	opt callstack 0
  1149                           
  1150 ;; *************** function __SRAMmerge *****************
  1151 ;; Defined at:
  1152 ;;		line 359 in file "sralloc.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  pSegA           2  [STACK] PTR struct _SALLOC
  1155 ;;		 -> _uDynamicHeap(512), 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  pSegB           2  [STACK] PTR struct _SALLOC
  1158 ;;		 -> _uDynamicHeap(512), 
  1159 ;;  uSegB           1  [STACK] struct _SALLOC
  1160 ;;  uSegA           1  [STACK] struct _SALLOC
  1161 ;;  uSum            1  [STACK] struct _SALLOC
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1  [STACK] unsigned char 
  1164 ;; Registers used:
  1165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1171 ;;      Params:         0       0       0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0       0       0
  1174 ;;      Totals:         0       0       0       0       0       0       0
  1175 ;;Total ram usage:        0 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:   10
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_SRAMalloc
  1182 ;; This function uses a reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text5
  1186  000B0E                     __ptext5:
  1187                           	opt callstack 0
  1188  000B0E                     __SRAMmerge:
  1189                           	opt callstack 0
  1190                           
  1191                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1192  000B0E  0E05               	movlw	5
  1193  000B10  26E1               	addwf	fsr1l,f,c
  1194  000B12  0E00               	movlw	0
  1195  000B14  22E2               	addwfc	fsr1h,f,c
  1196                           
  1197                           ;sralloc.c: 359:      unsigned char _SRAMmerge(SALLOC * pSegA);sralloc.c: 360: {;sralloc
      +                          .c: 361:  SALLOC * pSegB;;sralloc.c: 362:       SALLOC uSegA, uSegB, uSum;;sralloc.c: 36
      +                          6:  pSegB = pSegA + (*pSegA).byte;
  1198                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1199                           
  1200                           ;incstack = 0
  1201  000B16  0EF9               	movlw	-7
  1202  000B18  CFE3 FFD9          	movff	plusw1,fsr2l
  1203  000B1C  0EFA               	movlw	-6
  1204  000B1E  CFE3 FFDA          	movff	plusw1,fsr2h
  1205  000B22  50DF               	movf	indf2,w,c
  1206  000B24  6E4D               	movwf	btemp+10,c
  1207  000B26  6A4E               	clrf	btemp+11,c
  1208                           
  1209                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1210  000B28  0EF9               	movlw	-7
  1211  000B2A  50E3               	movf	plusw1,w,c
  1212  000B2C  264D               	addwf	btemp+10,f,c
  1213  000B2E  0EFA               	movlw	-6
  1214  000B30  50E3               	movf	plusw1,w,c
  1215  000B32  224E               	addwfc	btemp+11,f,c
  1216                           
  1217                           ;stkvar	_pSegB @ sp[(-5)+0]
  1218  000B34  0EFC               	movlw	-4
  1219  000B36  C04E  FFE3         	movff	btemp+11,plusw1
  1220  000B3A  0EFB               	movlw	-5
  1221  000B3C  C04D  FFE3         	movff	btemp+10,plusw1
  1222                           
  1223                           ;sralloc.c: 369:  uSegA = *pSegA;
  1224                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1225  000B40  0EF9               	movlw	-7
  1226  000B42  CFE3 FFD9          	movff	plusw1,fsr2l
  1227  000B46  0EFA               	movlw	-6
  1228  000B48  CFE3 FFDA          	movff	plusw1,fsr2h
  1229  000B4C  50DF               	movf	indf2,w,c
  1230  000B4E  6E4E               	movwf	btemp+11,c
  1231                           
  1232                           ;stkvar	_uSegA @ sp[(-5)+3]
  1233  000B50  0EFE               	movlw	-2
  1234  000B52  C04E  FFE3         	movff	btemp+11,plusw1
  1235                           
  1236                           ;sralloc.c: 370:  uSegB = *pSegB;
  1237                           ;stkvar	_pSegB @ sp[(-5)+0]
  1238  000B56  0EFB               	movlw	-5
  1239  000B58  CFE3 FFD9          	movff	plusw1,fsr2l
  1240  000B5C  0EFC               	movlw	-4
  1241  000B5E  CFE3 FFDA          	movff	plusw1,fsr2h
  1242  000B62  50DF               	movf	indf2,w,c
  1243  000B64  6E4E               	movwf	btemp+11,c
  1244                           
  1245                           ;stkvar	_uSegB @ sp[(-5)+2]
  1246  000B66  0EFD               	movlw	-3
  1247  000B68  C04E  FFE3         	movff	btemp+11,plusw1
  1248                           
  1249                           ;sralloc.c: 373:  if (uSegB.byte == 0) return (0);
  1250                           ;stkvar	_uSegB @ sp[(-5)+2]
  1251  000B6C  0EFD               	movlw	-3
  1252  000B6E  50E3               	movf	plusw1,w,c
  1253  000B70  A4D8               	btfss	status,2,c
  1254  000B72  D002               	goto	l1698
  1255  000B74                     u610:
  1256  000B74  0E00               	movlw	0
  1257  000B76  D06E               	goto	L1
  1258  000B78                     l1698:
  1259                           
  1260                           ;sralloc.c: 376:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1261                           ;stkvar	_uSegA @ sp[(-5)+3]
  1262  000B78  50E1               	movf	fsr1l,w,c
  1263  000B7A  0FFE               	addlw	-2
  1264  000B7C  6ED9               	movwf	fsr2l,c
  1265  000B7E  50E2               	movf	fsr1h,w,c
  1266  000B80  6EDA               	movwf	fsr2h,c
  1267  000B82  0EFF               	movlw	255
  1268  000B84  22DA               	addwfc	fsr2h,f,c
  1269  000B86  BEDF               	btfsc	indf2,7,c
  1270  000B88  D7F5               	goto	u610
  1271                           
  1272                           ;stkvar	_uSegB @ sp[(-5)+2]
  1273  000B8A  50E1               	movf	fsr1l,w,c
  1274  000B8C  0FFD               	addlw	-3
  1275  000B8E  6ED9               	movwf	fsr2l,c
  1276  000B90  50E2               	movf	fsr1h,w,c
  1277  000B92  6EDA               	movwf	fsr2h,c
  1278  000B94  0EFF               	movlw	255
  1279  000B96  22DA               	addwfc	fsr2h,f,c
  1280  000B98  BEDF               	btfsc	indf2,7,c
  1281  000B9A  D7EC               	goto	u610
  1282                           
  1283                           ;sralloc.c: 379:  if (uSegA.bits.count == 0x7F) return (0);
  1284                           ;stkvar	_uSegA @ sp[(-5)+3]
  1285  000B9C  50E1               	movf	fsr1l,w,c
  1286  000B9E  0FFE               	addlw	-2
  1287  000BA0  6ED9               	movwf	fsr2l,c
  1288  000BA2  50E2               	movf	fsr1h,w,c
  1289  000BA4  6EDA               	movwf	fsr2h,c
  1290  000BA6  0EFF               	movlw	255
  1291  000BA8  22DA               	addwfc	fsr2h,f,c
  1292  000BAA  50DF               	movf	223,w,c
  1293  000BAC  0B7F               	andlw	127
  1294  000BAE  0A7F               	xorlw	127
  1295  000BB0  B4D8               	btfsc	status,2,c
  1296  000BB2  D7E0               	goto	u610
  1297                           
  1298                           ;sralloc.c: 382:  uSum.byte = uSegA.byte + uSegB.byte;
  1299                           ;stkvar	_uSegB @ sp[(-5)+2]
  1300  000BB4  0EFD               	movlw	-3
  1301  000BB6  CFE3 F04E          	movff	plusw1,btemp+11
  1302                           
  1303                           ;stkvar	_uSegA @ sp[(-5)+3]
  1304  000BBA  0EFE               	movlw	-2
  1305  000BBC  50E3               	movf	plusw1,w,c
  1306  000BBE  244E               	addwf	btemp+11,w,c
  1307  000BC0  6E4D               	movwf	btemp+10,c
  1308                           
  1309                           ;stkvar	_uSum @ sp[(-5)+4]
  1310  000BC2  0EFF               	movlw	-1
  1311  000BC4  C04D  FFE3         	movff	btemp+10,plusw1
  1312                           
  1313                           ;sralloc.c: 388:  if ((uSum.byte) > 0x7F)
  1314                           ;stkvar	_uSum @ sp[(-5)+4]
  1315  000BC8  0EFF               	movlw	-1
  1316  000BCA  CFE3 F043          	movff	plusw1,btemp
  1317  000BCE  0E7F               	movlw	127
  1318  000BD0  6443               	cpfsgt	btemp,c
  1319  000BD2  D036               	goto	l1730
  1320                           
  1321                           ;sralloc.c: 389:  {;sralloc.c: 390:   (*pSegA).byte = 0x7F;
  1322                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1323  000BD4  0EF9               	movlw	-7
  1324  000BD6  CFE3 FFD9          	movff	plusw1,fsr2l
  1325  000BDA  0EFA               	movlw	-6
  1326  000BDC  CFE3 FFDA          	movff	plusw1,fsr2h
  1327  000BE0  0E7F               	movlw	127
  1328  000BE2  6EDF               	movwf	indf2,c
  1329                           
  1330                           ;sralloc.c: 391:   pSegA += 0x7F;
  1331                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1332  000BE4  0EF9               	movlw	-7
  1333  000BE6  50E3               	movf	plusw1,w,c
  1334  000BE8  0F7F               	addlw	127
  1335  000BEA  6E43               	movwf	btemp,c
  1336  000BEC  0EF9               	movlw	-7
  1337  000BEE  C043  FFE3         	movff	btemp,plusw1
  1338  000BF2  6A43               	clrf	btemp,c
  1339  000BF4  0EFA               	movlw	-6
  1340  000BF6  50E3               	movf	plusw1,w,c
  1341  000BF8  2043               	addwfc	btemp,w,c
  1342  000BFA  6E43               	movwf	btemp,c
  1343  000BFC  0EFA               	movlw	-6
  1344  000BFE  C043  FFE3         	movff	btemp,plusw1
  1345                           
  1346                           ;sralloc.c: 392:   pSegB += uSegB.byte;
  1347                           ;stkvar	_uSegB @ sp[(-5)+2]
  1348  000C02  0EFD               	movlw	-3
  1349  000C04  50E3               	movf	plusw1,w,c
  1350  000C06  0D01               	mullw	1
  1351                           
  1352                           ;stkvar	_pSegB @ sp[(-5)+0]
  1353  000C08  50E1               	movf	fsr1l,w,c
  1354  000C0A  0FFB               	addlw	-5
  1355  000C0C  6ED9               	movwf	fsr2l,c
  1356  000C0E  50E2               	movf	fsr1h,w,c
  1357  000C10  6EDA               	movwf	fsr2h,c
  1358  000C12  0EFF               	movlw	255
  1359  000C14  22DA               	addwfc	fsr2h,f,c
  1360  000C16  50F3               	movf	prodl,w,c
  1361  000C18  26DE               	addwf	postinc2,f,c
  1362  000C1A  50F4               	movf	prodh,w,c
  1363  000C1C  22DD               	addwfc	postdec2,f,c
  1364                           
  1365                           ;sralloc.c: 393:   (*pSegA).byte = pSegB - pSegA;
  1366                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1367  000C1E  0EF9               	movlw	-7
  1368  000C20  CFE3 FFD9          	movff	plusw1,fsr2l
  1369  000C24  0EFA               	movlw	-6
  1370  000C26  CFE3 FFDA          	movff	plusw1,fsr2h
  1371                           
  1372                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1373  000C2A  0EF9               	movlw	-7
  1374  000C2C  CFE3 F04E          	movff	plusw1,btemp+11
  1375                           
  1376                           ;stkvar	_pSegB @ sp[(-5)+0]
  1377  000C30  0EFB               	movlw	-5
  1378  000C32  CFE3 F04D          	movff	plusw1,btemp+10
  1379  000C36  504E               	movf	btemp+11,w,c
  1380  000C38  5C4D               	subwf	btemp+10,w,c
  1381  000C3A  6EDF               	movwf	indf2,c
  1382                           
  1383                           ;sralloc.c: 395:   return (0x7F);
  1384  000C3C  0E7F               	movlw	127
  1385  000C3E  D00A               	goto	L1
  1386  000C40                     l1730:
  1387                           
  1388                           ;sralloc.c: 400:  {;sralloc.c: 401:   return ((*pSegA).byte = uSum.byte);
  1389                           ;stkvar	_uSum @ sp[(-5)+4]
  1390                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1391  000C40  0EF9               	movlw	-7
  1392  000C42  CFE3 FFD9          	movff	plusw1,fsr2l
  1393  000C46  0EFA               	movlw	-6
  1394  000C48  CFE3 FFDA          	movff	plusw1,fsr2h
  1395  000C4C  0EFF               	movlw	-1
  1396  000C4E  CFE3 FFDF          	movff	plusw1,indf2
  1397  000C52  50DF               	movf	indf2,w,c
  1398  000C54                     L1:
  1399  000C54  6E43               	movwf	btemp,c
  1400                           
  1401                           ; __SRAMmerge: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  1402  000C56  0EF9               	movlw	249
  1403  000C58  26E1               	addwf	fsr1l,f,c
  1404  000C5A  0EFF               	movlw	255
  1405  000C5C  22E2               	addwfc	fsr1h,f,c
  1406  000C5E  0012               	return		;funcret
  1407  000C60                     __end_of__SRAMmerge:
  1408                           	opt callstack 0
  1409                           
  1410 ;; *************** function _lunos_init *****************
  1411 ;; Defined at:
  1412 ;;		line 49 in file "kernel.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1  [STACK] void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:   11
  1433 ;; This function calls:
  1434 ;;		_SRAMInitHeap
  1435 ;;		_lunos_createTask
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text6
  1442  001B08                     __ptext6:
  1443                           	opt callstack 0
  1444  001B08                     _lunos_init:
  1445                           	opt callstack 19
  1446                           
  1447                           ;kernel.c: 50:   SRAMInitHeap();
  1448                           
  1449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1450                           ;incstack = 0
  1451  001B08  ECB3  F009         	call	_SRAMInitHeap	;wreg free
  1452                           
  1453                           ;kernel.c: 51:   ready_queue.task_running = 0;
  1454  001B0C  0E00               	movlw	0
  1455  001B0E  CFE8 F2F2          	movff	wreg,_ready_queue+542
  1456  001B12  0E00               	movlw	0
  1457  001B14  CFE8 F2F3          	movff	wreg,_ready_queue+543
  1458                           
  1459                           ;kernel.c: 52:   ready_queue.tasks_installed = 0;
  1460  001B18  0E00               	movlw	0
  1461  001B1A  CFE8 F2F0          	movff	wreg,_ready_queue+540
  1462  001B1E  0E00               	movlw	0
  1463  001B20  CFE8 F2F1          	movff	wreg,_ready_queue+541
  1464                           
  1465                           ;kernel.c: 53:   lunos_createTask(0, &task_idle);
  1466  001B24  0EE4               	movlw	low _task_idle
  1467  001B26  6EE6               	movwf	postinc1,c
  1468  001B28  0E1B               	movlw	high _task_idle
  1469  001B2A  6EE6               	movwf	postinc1,c
  1470  001B2C  0E00               	movlw	0
  1471  001B2E  6EE6               	movwf	postinc1,c
  1472  001B30  0E00               	movlw	0
  1473  001B32  6EE6               	movwf	postinc1,c
  1474  001B34  EC48  F008         	call	_lunos_createTask	;wreg free
  1475                           
  1476                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  1477  001B38  0012               	return		;funcret
  1478  001B3A                     __end_of_lunos_init:
  1479                           	opt callstack 0
  1480                           
  1481 ;; *************** function _lunos_createTask *****************
  1482 ;; Defined at:
  1483 ;;		line 14 in file "kernel.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  prior           2  [STACK] unsigned int 
  1486 ;;  f               2  [STACK] PTR FTN()void 
  1487 ;;		 -> count_out(1), cover_bottle(1), check_level(1), fill_bottle(1), 
  1488 ;;		 -> count_bottles(1), task_idle(1), 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  new_task      108  [STACK] struct pcb
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1  [STACK] void 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1500 ;;      Params:         0       0       0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:   10
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_lunos_init
  1511 ;;		_main
  1512 ;; This function uses a reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text7
  1516  001090                     __ptext7:
  1517                           	opt callstack 0
  1518  001090                     _lunos_createTask:
  1519                           	opt callstack 0
  1520                           
  1521                           ; autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  1522  001090  0E6C               	movlw	108
  1523  001092  26E1               	addwf	fsr1l,f,c
  1524  001094  0E00               	movlw	0
  1525  001096  22E2               	addwfc	fsr1h,f,c
  1526                           
  1527                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
  1528                           
  1529                           ;incstack = 0
  1530  001098  EE22  F0F0         	lfsr	2,_ready_queue+540
  1531  00109C  CFDE F04D          	movff	postinc2,btemp+10
  1532  0010A0  CFDD F04E          	movff	postdec2,btemp+11
  1533  0010A4  0E01               	movlw	1
  1534  0010A6  264D               	addwf	btemp+10,f,c
  1535  0010A8  0E00               	movlw	0
  1536  0010AA  224E               	addwfc	btemp+11,f,c
  1537                           
  1538                           ;stkvar	_new_task @ sp[(-108)+0]
  1539  0010AC  0E94               	movlw	-108
  1540  0010AE  C04D  FFE3         	movff	btemp+10,plusw1
  1541  0010B2  0E95               	movlw	-107
  1542  0010B4  C04E  FFE3         	movff	btemp+11,plusw1
  1543                           
  1544                           ;kernel.c: 19:   new_task.task_prior = prior;
  1545                           ;stkvar	_prior @ sp[(-108)+-2]
  1546  0010B8  50E1               	movf	fsr1l,w,c
  1547  0010BA  0F92               	addlw	-110
  1548  0010BC  6ED9               	movwf	fsr2l,c
  1549  0010BE  50E2               	movf	fsr1h,w,c
  1550  0010C0  6EDA               	movwf	fsr2h,c
  1551  0010C2  0EFF               	movlw	255
  1552  0010C4  22DA               	addwfc	fsr2h,f,c
  1553                           
  1554                           ;stkvar	_new_task @ sp[(-108)+0]
  1555  0010C6  0E96               	movlw	150
  1556  0010C8  24E1               	addwf	fsr1l,w,c
  1557  0010CA  6EE9               	movwf	fsr0l,c
  1558  0010CC  0EFF               	movlw	255
  1559  0010CE  20E2               	addwfc	fsr1h,w,c
  1560  0010D0  6EEA               	movwf	fsr0h,c
  1561  0010D2  CFDE FFEE          	movff	postinc2,postinc0
  1562  0010D6  CFDD FFED          	movff	postdec2,postdec0
  1563                           
  1564                           ;kernel.c: 20:   new_task.task_state = READY;
  1565                           ;stkvar	_new_task @ sp[(-108)+0]
  1566  0010DA  0E9C               	movlw	156
  1567  0010DC  24E1               	addwf	fsr1l,w,c
  1568  0010DE  6ED9               	movwf	fsr2l,c
  1569  0010E0  0EFF               	movlw	255
  1570  0010E2  20E2               	addwfc	fsr1h,w,c
  1571  0010E4  6EDA               	movwf	fsr2h,c
  1572  0010E6  0E00               	movlw	0
  1573  0010E8  6EDF               	movwf	indf2,c
  1574                           
  1575                           ;kernel.c: 21:   new_task.task_f = f;
  1576                           ;stkvar	_f @ sp[(-108)+-4]
  1577  0010EA  50E1               	movf	fsr1l,w,c
  1578  0010EC  0F90               	addlw	-112
  1579  0010EE  6ED9               	movwf	fsr2l,c
  1580  0010F0  50E2               	movf	fsr1h,w,c
  1581  0010F2  6EDA               	movwf	fsr2h,c
  1582  0010F4  0EFF               	movlw	255
  1583  0010F6  22DA               	addwfc	fsr2h,f,c
  1584                           
  1585                           ;stkvar	_new_task @ sp[(-108)+0]
  1586  0010F8  0EFC               	movlw	252
  1587  0010FA  24E1               	addwf	fsr1l,w,c
  1588  0010FC  6EE9               	movwf	fsr0l,c
  1589  0010FE  0EFF               	movlw	255
  1590  001100  20E2               	addwfc	fsr1h,w,c
  1591  001102  6EEA               	movwf	fsr0h,c
  1592  001104  CFDE FFEE          	movff	postinc2,postinc0
  1593  001108  CFDD FFED          	movff	postdec2,postdec0
  1594                           
  1595                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
  1596                           ;stkvar	_new_task @ sp[(-108)+0]
  1597  00110C  0EFA               	movlw	250
  1598  00110E  24E1               	addwf	fsr1l,w,c
  1599  001110  6ED9               	movwf	fsr2l,c
  1600  001112  0EFF               	movlw	255
  1601  001114  20E2               	addwfc	fsr1h,w,c
  1602  001116  6EDA               	movwf	fsr2h,c
  1603  001118  0E00               	movlw	0
  1604  00111A  6EDE               	movwf	postinc2,c
  1605  00111C  0E00               	movlw	0
  1606  00111E  6EDD               	movwf	postdec2,c
  1607                           
  1608                           ;kernel.c: 23:   new_task.task_delay_time = 0;
  1609                           ;stkvar	_new_task @ sp[(-108)+0]
  1610  001120  0EFE               	movlw	254
  1611  001122  24E1               	addwf	fsr1l,w,c
  1612  001124  6ED9               	movwf	fsr2l,c
  1613  001126  0EFF               	movlw	255
  1614  001128  20E2               	addwfc	fsr1h,w,c
  1615  00112A  6EDA               	movwf	fsr2h,c
  1616  00112C  0E00               	movlw	0
  1617  00112E  6EDE               	movwf	postinc2,c
  1618  001130  0E00               	movlw	0
  1619  001132  6EDD               	movwf	postdec2,c
  1620                           
  1621                           ;kernel.c: 25:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
  1622                           ;stkvar	_new_task @ sp[(-108)+0]
  1623  001134  0E94               	movlw	148
  1624  001136  24E1               	addwf	fsr1l,w,c
  1625  001138  6ED9               	movwf	fsr2l,c
  1626  00113A  0EFF               	movlw	255
  1627  00113C  20E2               	addwfc	fsr1h,w,c
  1628  00113E  6EDA               	movwf	fsr2h,c
  1629  001140  EE02  F0F0         	lfsr	0,_ready_queue+540
  1630  001144  CFEE F04D          	movff	postinc0,btemp+10
  1631  001148  CFED F04E          	movff	postdec0,btemp+11
  1632  00114C  0E6C               	movlw	108
  1633  00114E  024D               	mulwf	btemp+10,c
  1634  001150  CFF3 F04B          	movff	prodl,btemp+8
  1635  001154  CFF4 F04C          	movff	prodh,btemp+9
  1636  001158  024E               	mulwf	btemp+11,c
  1637  00115A  50F3               	movf	prodl,w,c
  1638  00115C  264C               	addwf	btemp+9,f,c
  1639  00115E  0ED4               	movlw	low _ready_queue
  1640  001160  244B               	addwf	btemp+8,w,c
  1641  001162  6EE9               	movwf	fsr0l,c
  1642  001164  0E00               	movlw	high _ready_queue
  1643  001166  204C               	addwfc	btemp+9,w,c
  1644  001168  6EEA               	movwf	fsr0h,c
  1645  00116A  0E6B               	movlw	107
  1646  00116C                     u661:
  1647  00116C  CFDB FFEB          	movff	plusw2,plusw0
  1648  001170  06E8               	decf	wreg,f,c
  1649  001172  E2FC               	bc	u661
  1650                           
  1651                           ;kernel.c: 26:   ready_queue.tasks_installed++;
  1652  001174  EE22  F0F0         	lfsr	2,_ready_queue+540
  1653  001178  2ADE               	incf	postinc2,f,c
  1654  00117A  0E00               	movlw	0
  1655  00117C  22DD               	addwfc	postdec2,f,c
  1656                           
  1657                           ; _lunos_createTask: autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
  1658  00117E  0E90               	movlw	144
  1659  001180  26E1               	addwf	fsr1l,f,c
  1660  001182  0EFF               	movlw	255
  1661  001184  22E2               	addwfc	fsr1h,f,c
  1662  001186  0012               	return		;funcret
  1663  001188                     __end_of_lunos_createTask:
  1664                           	opt callstack 0
  1665                           
  1666 ;; *************** function _SRAMInitHeap *****************
  1667 ;; Defined at:
  1668 ;;		line 313 in file "sralloc.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  count           2  [STACK] unsigned int 
  1673 ;;  pHeap           2  [STACK] PTR unsigned char 
  1674 ;;		 -> _uDynamicHeap(512), 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1  [STACK] void 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1684 ;;      Params:         0       0       0       0       0       0       0
  1685 ;;      Locals:         0       0       0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0
  1687 ;;      Totals:         0       0       0       0       0       0       0
  1688 ;;Total ram usage:        0 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:   10
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_lunos_init
  1695 ;; This function uses a reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text8
  1699  001366                     __ptext8:
  1700                           	opt callstack 0
  1701  001366                     _SRAMInitHeap:
  1702                           	opt callstack 0
  1703                           
  1704                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1705  001366  52E6               	movf	postinc1,f,c
  1706  001368  52E6               	movf	postinc1,f,c
  1707  00136A  52E6               	movf	postinc1,f,c
  1708  00136C  52E6               	movf	postinc1,f,c
  1709                           
  1710                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
  1711                           ;stkvar	_pHeap @ sp[(-4)+2]
  1712                           
  1713                           ;incstack = 0
  1714  00136E  0E02               	movlw	high __uDynamicHeap
  1715  001370  6E43               	movwf	btemp,c
  1716  001372  0EFF               	movlw	-1
  1717  001374  C043  FFE3         	movff	btemp,plusw1
  1718  001378  0EF4               	movlw	low __uDynamicHeap
  1719  00137A  6E43               	movwf	btemp,c
  1720  00137C  0EFE               	movlw	-2
  1721  00137E  C043  FFE3         	movff	btemp,plusw1
  1722                           
  1723                           ;sralloc.c: 319:  count = 0x200 -1;
  1724  001382  0EFF               	movlw	255
  1725  001384  6E4D               	movwf	btemp+10,c
  1726  001386  0E01               	movlw	1
  1727  001388  6E4E               	movwf	btemp+11,c
  1728                           
  1729                           ;stkvar	_count @ sp[(-4)+0]
  1730  00138A  0EFC               	movlw	-4
  1731  00138C  C04D  FFE3         	movff	btemp+10,plusw1
  1732  001390  0EFD               	movlw	-3
  1733  001392  C04E  FFE3         	movff	btemp+11,plusw1
  1734  001396                     l1794:
  1735                           
  1736                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
  1737                           ;stkvar	_count @ sp[(-4)+0]
  1738  001396  0EFD               	movlw	-3
  1739  001398  50E3               	movf	plusw1,w,c
  1740  00139A  E107               	bnz	u700
  1741  00139C  0EFC               	movlw	-4
  1742  00139E  CFE3 F043          	movff	plusw1,btemp
  1743  0013A2  0E80               	movlw	128
  1744  0013A4  5E43               	subwf	btemp,f,c
  1745  0013A6  A0D8               	btfss	status,0,c
  1746  0013A8  D023               	goto	l1802
  1747  0013AA                     u700:
  1748                           
  1749                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
  1750                           ;stkvar	_pHeap @ sp[(-4)+2]
  1751  0013AA  0EFE               	movlw	-2
  1752  0013AC  CFE3 FFD9          	movff	plusw1,fsr2l
  1753  0013B0  0EFF               	movlw	-1
  1754  0013B2  CFE3 FFDA          	movff	plusw1,fsr2h
  1755  0013B6  0E7F               	movlw	127
  1756  0013B8  6EDF               	movwf	indf2,c
  1757                           
  1758                           ;sralloc.c: 326:    pHeap += 0x7F;
  1759                           ;stkvar	_pHeap @ sp[(-4)+2]
  1760  0013BA  0EFE               	movlw	-2
  1761  0013BC  50E3               	movf	plusw1,w,c
  1762  0013BE  0F7F               	addlw	127
  1763  0013C0  6E43               	movwf	btemp,c
  1764  0013C2  0EFE               	movlw	-2
  1765  0013C4  C043  FFE3         	movff	btemp,plusw1
  1766  0013C8  6A43               	clrf	btemp,c
  1767  0013CA  0EFF               	movlw	-1
  1768  0013CC  50E3               	movf	plusw1,w,c
  1769  0013CE  2043               	addwfc	btemp,w,c
  1770  0013D0  6E43               	movwf	btemp,c
  1771  0013D2  0EFF               	movlw	-1
  1772  0013D4  C043  FFE3         	movff	btemp,plusw1
  1773                           
  1774                           ;sralloc.c: 327:    count = count - 0x7F;
  1775                           ;stkvar	_count @ sp[(-4)+0]
  1776  0013D8  50E1               	movf	fsr1l,w,c
  1777  0013DA  0FFC               	addlw	-4
  1778  0013DC  6ED9               	movwf	fsr2l,c
  1779  0013DE  50E2               	movf	fsr1h,w,c
  1780  0013E0  6EDA               	movwf	fsr2h,c
  1781  0013E2  0EFF               	movlw	255
  1782  0013E4  22DA               	addwfc	fsr2h,f,c
  1783  0013E6  0E81               	movlw	129
  1784  0013E8  26DE               	addwf	postinc2,f,c
  1785  0013EA  0EFF               	movlw	255
  1786  0013EC  22DD               	addwfc	postdec2,f,c
  1787                           
  1788                           ;sralloc.c: 328:   }
  1789  0013EE  D7D3               	goto	l1794
  1790  0013F0                     l1802:
  1791                           
  1792                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1793                           ;stkvar	_count @ sp[(-4)+0]
  1794                           ;stkvar	_pHeap @ sp[(-4)+2]
  1795  0013F0  0EFE               	movlw	-2
  1796  0013F2  CFE3 FFD9          	movff	plusw1,fsr2l
  1797  0013F6  0EFF               	movlw	-1
  1798  0013F8  CFE3 FFDA          	movff	plusw1,fsr2h
  1799  0013FC  0EFC               	movlw	-4
  1800  0013FE  CFE3 FFDF          	movff	plusw1,indf2
  1801                           
  1802                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1803                           ;stkvar	_count @ sp[(-4)+0]
  1804  001402  0EFC               	movlw	-4
  1805  001404  CFE3 F04D          	movff	plusw1,btemp+10
  1806  001408  0EFD               	movlw	-3
  1807  00140A  CFE3 F04E          	movff	plusw1,btemp+11
  1808                           
  1809                           ;stkvar	_pHeap @ sp[(-4)+2]
  1810  00140E  0EFE               	movlw	-2
  1811  001410  CFE3 F04B          	movff	plusw1,btemp+8
  1812  001414  0EFF               	movlw	-1
  1813  001416  CFE3 F04C          	movff	plusw1,btemp+9
  1814  00141A  504D               	movf	btemp+10,w,c
  1815  00141C  244B               	addwf	btemp+8,w,c
  1816  00141E  6ED9               	movwf	fsr2l,c
  1817  001420  504E               	movf	btemp+11,w,c
  1818  001422  204C               	addwfc	btemp+9,w,c
  1819  001424  6EDA               	movwf	fsr2h,c
  1820  001426  0E00               	movlw	0
  1821  001428  6EDF               	movwf	indf2,c
  1822                           
  1823                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1824  00142A  52E5               	movf	postdec1,f,c
  1825  00142C  52E5               	movf	postdec1,f,c
  1826  00142E  52E5               	movf	postdec1,f,c
  1827  001430  52E5               	movf	postdec1,f,c
  1828  001432  0012               	return		;funcret
  1829  001434                     __end_of_SRAMInitHeap:
  1830                           	opt callstack 0
  1831                           
  1832 ;; *************** function _dispatcher *****************
  1833 ;; Defined at:
  1834 ;;		line 64 in file "kernel.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  state           1  [STACK] enum E4
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1  [STACK] void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1848 ;;      Params:         0       0       0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:   13
  1855 ;; This function calls:
  1856 ;;		_scheduler
  1857 ;; This function is called by:
  1858 ;;		_lunos_delayTask
  1859 ;;		_main
  1860 ;;		_sem_wait
  1861 ;; This function uses a reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text9
  1865  0004CC                     __ptext9:
  1866                           	opt callstack 0
  1867  0004CC                     _dispatcher:
  1868                           	opt callstack 11
  1869                           
  1870                           ;kernel.c: 65:   INTCONbits.GIE = 0;
  1871                           
  1872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1873                           ;incstack = 0
  1874  0004CC  9EF2               	bcf	4082,7,c	;volatile
  1875                           
  1876                           ;kernel.c: 67:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  1877  0004CE  C2F2  F00B         	movff	_ready_queue+542,_who
  1878  0004D2  C2F3  F00C         	movff	_ready_queue+543,_who+1
  1879                           
  1880                           ;stkvar	_state @ sp[(0)+-1]
  1881  0004D6  C00B  F04D         	movff	_who,btemp+10
  1882  0004DA  C00C  F04E         	movff	_who+1,btemp+11
  1883  0004DE  0E6C               	movlw	108
  1884  0004E0  024D               	mulwf	btemp+10,c
  1885  0004E2  CFF3 F04B          	movff	prodl,btemp+8
  1886  0004E6  CFF4 F04C          	movff	prodh,btemp+9
  1887  0004EA  024E               	mulwf	btemp+11,c
  1888  0004EC  50F3               	movf	prodl,w,c
  1889  0004EE  264C               	addwf	btemp+9,f,c
  1890  0004F0  0EDC               	movlw	low (_ready_queue+8)
  1891  0004F2  244B               	addwf	btemp+8,w,c
  1892  0004F4  6ED9               	movwf	fsr2l,c
  1893  0004F6  0E00               	movlw	high (_ready_queue+8)
  1894  0004F8  204C               	addwfc	btemp+9,w,c
  1895  0004FA  6EDA               	movwf	fsr2h,c
  1896  0004FC  0EFF               	movlw	-1
  1897  0004FE  CFE3 FFDF          	movff	plusw1,indf2
  1898  000502  C00B  F04D         	movff	_who,btemp+10
  1899  000506  C00C  F04E         	movff	_who+1,btemp+11
  1900  00050A  0E6C               	movlw	108
  1901  00050C  024D               	mulwf	btemp+10,c
  1902  00050E  CFF3 F04B          	movff	prodl,btemp+8
  1903  000512  CFF4 F04C          	movff	prodh,btemp+9
  1904  000516  024E               	mulwf	btemp+11,c
  1905  000518  50F3               	movf	prodl,w,c
  1906  00051A  264C               	addwf	btemp+9,f,c
  1907  00051C  0ED9               	movlw	low (_ready_queue+5)
  1908  00051E  244B               	addwf	btemp+8,w,c
  1909  000520  6ED9               	movwf	fsr2l,c
  1910  000522  0E00               	movlw	high (_ready_queue+5)
  1911  000524  204C               	addwfc	btemp+9,w,c
  1912  000526  6EDA               	movwf	fsr2h,c
  1913  000528  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1914  00052C  C00B  F04D         	movff	_who,btemp+10
  1915  000530  C00C  F04E         	movff	_who+1,btemp+11
  1916  000534  0E6C               	movlw	108
  1917  000536  024D               	mulwf	btemp+10,c
  1918  000538  CFF3 F04B          	movff	prodl,btemp+8
  1919  00053C  CFF4 F04C          	movff	prodh,btemp+9
  1920  000540  024E               	mulwf	btemp+11,c
  1921  000542  50F3               	movf	prodl,w,c
  1922  000544  264C               	addwf	btemp+9,f,c
  1923  000546  0EDA               	movlw	low (_ready_queue+6)
  1924  000548  244B               	addwf	btemp+8,w,c
  1925  00054A  6ED9               	movwf	fsr2l,c
  1926  00054C  0E00               	movlw	high (_ready_queue+6)
  1927  00054E  204C               	addwfc	btemp+9,w,c
  1928  000550  6EDA               	movwf	fsr2h,c
  1929  000552  CFD8 FFDF          	movff	status,indf2	;volatile
  1930  000556  C00B  F04D         	movff	_who,btemp+10
  1931  00055A  C00C  F04E         	movff	_who+1,btemp+11
  1932  00055E  0E6C               	movlw	108
  1933  000560  024D               	mulwf	btemp+10,c
  1934  000562  CFF3 F04B          	movff	prodl,btemp+8
  1935  000566  CFF4 F04C          	movff	prodh,btemp+9
  1936  00056A  024E               	mulwf	btemp+11,c
  1937  00056C  50F3               	movf	prodl,w,c
  1938  00056E  264C               	addwf	btemp+9,f,c
  1939  000570  0EDB               	movlw	low (_ready_queue+7)
  1940  000572  244B               	addwf	btemp+8,w,c
  1941  000574  6ED9               	movwf	fsr2l,c
  1942  000576  0E00               	movlw	high (_ready_queue+7)
  1943  000578  204C               	addwfc	btemp+9,w,c
  1944  00057A  6EDA               	movwf	fsr2h,c
  1945  00057C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1946  000580  6A09               	clrf	_size,c
  1947  000582  6A0A               	clrf	_size+1,c
  1948  000584  D08D               	goto	l1766
  1949  000586                     l1762:
  1950  000586  C009  F04D         	movff	_size,btemp+10
  1951  00058A  C00A  F04E         	movff	_size+1,btemp+11
  1952  00058E  0E03               	movlw	3
  1953  000590  024D               	mulwf	btemp+10,c
  1954  000592  CFF3 F04B          	movff	prodl,btemp+8
  1955  000596  CFF4 F04C          	movff	prodh,btemp+9
  1956  00059A  024E               	mulwf	btemp+11,c
  1957  00059C  50F3               	movf	prodl,w,c
  1958  00059E  264C               	addwf	btemp+9,f,c
  1959  0005A0  C00B  F04D         	movff	_who,btemp+10
  1960  0005A4  C00C  F04E         	movff	_who+1,btemp+11
  1961  0005A8  0E6C               	movlw	108
  1962  0005AA  024D               	mulwf	btemp+10,c
  1963  0005AC  CFF3 F049          	movff	prodl,btemp+6
  1964  0005B0  CFF4 F04A          	movff	prodh,btemp+7
  1965  0005B4  024E               	mulwf	btemp+11,c
  1966  0005B6  50F3               	movf	prodl,w,c
  1967  0005B8  264A               	addwf	btemp+7,f,c
  1968  0005BA  0ED4               	movlw	low _ready_queue
  1969  0005BC  6E4D               	movwf	btemp+10,c
  1970  0005BE  0E00               	movlw	high _ready_queue
  1971  0005C0  6E4E               	movwf	btemp+11,c
  1972  0005C2  0E09               	movlw	9
  1973  0005C4  264D               	addwf	btemp+10,f,c
  1974  0005C6  0E00               	movlw	0
  1975  0005C8  224E               	addwfc	btemp+11,f,c
  1976  0005CA  5049               	movf	btemp+6,w,c
  1977  0005CC  264D               	addwf	btemp+10,f,c
  1978  0005CE  504A               	movf	btemp+7,w,c
  1979  0005D0  224E               	addwfc	btemp+11,f,c
  1980  0005D2  504B               	movf	btemp+8,w,c
  1981  0005D4  244D               	addwf	btemp+10,w,c
  1982  0005D6  6ED9               	movwf	fsr2l,c
  1983  0005D8  504C               	movf	btemp+9,w,c
  1984  0005DA  204E               	addwfc	btemp+11,w,c
  1985  0005DC  6EDA               	movwf	fsr2h,c
  1986  0005DE  CFFF FFDF          	movff	tosu,indf2	;volatile
  1987  0005E2  C009  F04D         	movff	_size,btemp+10
  1988  0005E6  C00A  F04E         	movff	_size+1,btemp+11
  1989  0005EA  0E03               	movlw	3
  1990  0005EC  024D               	mulwf	btemp+10,c
  1991  0005EE  CFF3 F04B          	movff	prodl,btemp+8
  1992  0005F2  CFF4 F04C          	movff	prodh,btemp+9
  1993  0005F6  024E               	mulwf	btemp+11,c
  1994  0005F8  50F3               	movf	prodl,w,c
  1995  0005FA  264C               	addwf	btemp+9,f,c
  1996  0005FC  C00B  F04D         	movff	_who,btemp+10
  1997  000600  C00C  F04E         	movff	_who+1,btemp+11
  1998  000604  0E6C               	movlw	108
  1999  000606  024D               	mulwf	btemp+10,c
  2000  000608  CFF3 F049          	movff	prodl,btemp+6
  2001  00060C  CFF4 F04A          	movff	prodh,btemp+7
  2002  000610  024E               	mulwf	btemp+11,c
  2003  000612  50F3               	movf	prodl,w,c
  2004  000614  264A               	addwf	btemp+7,f,c
  2005  000616  0ED4               	movlw	low _ready_queue
  2006  000618  6E4D               	movwf	btemp+10,c
  2007  00061A  0E00               	movlw	high _ready_queue
  2008  00061C  6E4E               	movwf	btemp+11,c
  2009  00061E  0E0B               	movlw	11
  2010  000620  264D               	addwf	btemp+10,f,c
  2011  000622  0E00               	movlw	0
  2012  000624  224E               	addwfc	btemp+11,f,c
  2013  000626  5049               	movf	btemp+6,w,c
  2014  000628  264D               	addwf	btemp+10,f,c
  2015  00062A  504A               	movf	btemp+7,w,c
  2016  00062C  224E               	addwfc	btemp+11,f,c
  2017  00062E  504B               	movf	btemp+8,w,c
  2018  000630  244D               	addwf	btemp+10,w,c
  2019  000632  6ED9               	movwf	fsr2l,c
  2020  000634  504C               	movf	btemp+9,w,c
  2021  000636  204E               	addwfc	btemp+11,w,c
  2022  000638  6EDA               	movwf	fsr2h,c
  2023  00063A  CFFE FFDF          	movff	tosh,indf2	;volatile
  2024  00063E  C009  F04D         	movff	_size,btemp+10
  2025  000642  C00A  F04E         	movff	_size+1,btemp+11
  2026  000646  0E03               	movlw	3
  2027  000648  024D               	mulwf	btemp+10,c
  2028  00064A  CFF3 F04B          	movff	prodl,btemp+8
  2029  00064E  CFF4 F04C          	movff	prodh,btemp+9
  2030  000652  024E               	mulwf	btemp+11,c
  2031  000654  50F3               	movf	prodl,w,c
  2032  000656  264C               	addwf	btemp+9,f,c
  2033  000658  C00B  F04D         	movff	_who,btemp+10
  2034  00065C  C00C  F04E         	movff	_who+1,btemp+11
  2035  000660  0E6C               	movlw	108
  2036  000662  024D               	mulwf	btemp+10,c
  2037  000664  CFF3 F049          	movff	prodl,btemp+6
  2038  000668  CFF4 F04A          	movff	prodh,btemp+7
  2039  00066C  024E               	mulwf	btemp+11,c
  2040  00066E  50F3               	movf	prodl,w,c
  2041  000670  264A               	addwf	btemp+7,f,c
  2042  000672  0ED4               	movlw	low _ready_queue
  2043  000674  6E4D               	movwf	btemp+10,c
  2044  000676  0E00               	movlw	high _ready_queue
  2045  000678  6E4E               	movwf	btemp+11,c
  2046  00067A  0E0A               	movlw	10
  2047  00067C  264D               	addwf	btemp+10,f,c
  2048  00067E  0E00               	movlw	0
  2049  000680  224E               	addwfc	btemp+11,f,c
  2050  000682  5049               	movf	btemp+6,w,c
  2051  000684  264D               	addwf	btemp+10,f,c
  2052  000686  504A               	movf	btemp+7,w,c
  2053  000688  224E               	addwfc	btemp+11,f,c
  2054  00068A  504B               	movf	btemp+8,w,c
  2055  00068C  244D               	addwf	btemp+10,w,c
  2056  00068E  6ED9               	movwf	fsr2l,c
  2057  000690  504C               	movf	btemp+9,w,c
  2058  000692  204E               	addwfc	btemp+11,w,c
  2059  000694  6EDA               	movwf	fsr2h,c
  2060  000696  CFFD FFDF          	movff	tosl,indf2	;volatile
  2061  00069A  4A09               	infsnz	_size,f,c
  2062  00069C  2A0A               	incf	_size+1,f,c
  2063  00069E  0006               	pop		;# 
  2064  0006A0                     l1766:
  2065  0006A0  50FC               	movf	stkptr,w,c	;volatile
  2066  0006A2  A4D8               	btfss	status,2,c
  2067  0006A4  D770               	goto	l1762
  2068  0006A6  0EFF               	movlw	255
  2069  0006A8  6E4D               	movwf	btemp+10,c
  2070  0006AA  0EFF               	movlw	255
  2071  0006AC  6E4E               	movwf	btemp+11,c
  2072  0006AE  C009  F04B         	movff	_size,btemp+8
  2073  0006B2  C00A  F04C         	movff	_size+1,btemp+9
  2074  0006B6  504D               	movf	btemp+10,w,c
  2075  0006B8  264B               	addwf	btemp+8,f,c
  2076  0006BA  504E               	movf	btemp+11,w,c
  2077  0006BC  224C               	addwfc	btemp+9,f,c
  2078  0006BE  C00B  F04D         	movff	_who,btemp+10
  2079  0006C2  C00C  F04E         	movff	_who+1,btemp+11
  2080  0006C6  0E6C               	movlw	108
  2081  0006C8  024D               	mulwf	btemp+10,c
  2082  0006CA  CFF3 F049          	movff	prodl,btemp+6
  2083  0006CE  CFF4 F04A          	movff	prodh,btemp+7
  2084  0006D2  024E               	mulwf	btemp+11,c
  2085  0006D4  50F3               	movf	prodl,w,c
  2086  0006D6  264A               	addwf	btemp+7,f,c
  2087  0006D8  0E3A               	movlw	low (_ready_queue+102)
  2088  0006DA  2449               	addwf	btemp+6,w,c
  2089  0006DC  6ED9               	movwf	fsr2l,c
  2090  0006DE  0E01               	movlw	high (_ready_queue+102)
  2091  0006E0  204A               	addwfc	btemp+7,w,c
  2092  0006E2  6EDA               	movwf	fsr2h,c
  2093  0006E4  C04B  FFDE         	movff	btemp+8,postinc2
  2094  0006E8  C04C  FFDD         	movff	btemp+9,postdec2
  2095                           
  2096                           ;kernel.c: 69:   ready_queue.task_running = scheduler();
  2097  0006EC  ECEF  F00D         	call	_scheduler	;wreg free
  2098  0006F0  C043  F2F2         	movff	btemp,_ready_queue+542
  2099  0006F4  C044  F2F3         	movff	btemp+1,_ready_queue+543
  2100                           
  2101                           ;kernel.c: 71:   { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.tasks[who
      +                          ].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task_f; } e
      +                          lse { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].W_reg; 
      +                          STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg; size =
      +                           ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL = read
      +                          y_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[who].task
      +                          _stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[size].TO
      +                          SU_reg; size--; } }};
  2102  0006F8  C2F2  F00B         	movff	_ready_queue+542,_who
  2103  0006FC  C2F3  F00C         	movff	_ready_queue+543,_who+1
  2104  000700  6AFC               	clrf	stkptr,c	;volatile
  2105  000702  C00B  F04D         	movff	_who,btemp+10
  2106  000706  C00C  F04E         	movff	_who+1,btemp+11
  2107  00070A  0E6C               	movlw	108
  2108  00070C  024D               	mulwf	btemp+10,c
  2109  00070E  CFF3 F04B          	movff	prodl,btemp+8
  2110  000712  CFF4 F04C          	movff	prodh,btemp+9
  2111  000716  024E               	mulwf	btemp+11,c
  2112  000718  50F3               	movf	prodl,w,c
  2113  00071A  264C               	addwf	btemp+9,f,c
  2114  00071C  0E3A               	movlw	low (_ready_queue+102)
  2115  00071E  244B               	addwf	btemp+8,w,c
  2116  000720  6ED9               	movwf	fsr2l,c
  2117  000722  0E01               	movlw	high (_ready_queue+102)
  2118  000724  204C               	addwfc	btemp+9,w,c
  2119  000726  6EDA               	movwf	fsr2h,c
  2120  000728  50DE               	movf	postinc2,w,c
  2121  00072A  10DE               	iorwf	postinc2,w,c
  2122  00072C  A4D8               	btfss	status,2,c
  2123  00072E  D01E               	goto	l1782
  2124  000730  0005               	push		;# 
  2125  000732  C00B  F04D         	movff	_who,btemp+10
  2126  000736  C00C  F04E         	movff	_who+1,btemp+11
  2127  00073A  0E6C               	movlw	108
  2128  00073C  024D               	mulwf	btemp+10,c
  2129  00073E  CFF3 F04B          	movff	prodl,btemp+8
  2130  000742  CFF4 F04C          	movff	prodh,btemp+9
  2131  000746  024E               	mulwf	btemp+11,c
  2132  000748  50F3               	movf	prodl,w,c
  2133  00074A  264C               	addwf	btemp+9,f,c
  2134  00074C  0E3C               	movlw	low (_ready_queue+104)
  2135  00074E  244B               	addwf	btemp+8,w,c
  2136  000750  6ED9               	movwf	fsr2l,c
  2137  000752  0E01               	movlw	high (_ready_queue+104)
  2138  000754  204C               	addwfc	btemp+9,w,c
  2139  000756  6EDA               	movwf	fsr2h,c
  2140  000758  CFDE F04D          	movff	postinc2,btemp+10
  2141  00075C  CFDD F04E          	movff	postdec2,btemp+11
  2142  000760  C04D  FFFD         	movff	btemp+10,tosl	;volatile
  2143  000764  C04E  FFFE         	movff	btemp+11,tosh	;volatile
  2144  000768  6AFF               	clrf	tosu,c	;volatile
  2145  00076A  D0FF               	goto	u690
  2146  00076C                     l1782:
  2147  00076C  C00B  F04D         	movff	_who,btemp+10
  2148  000770  C00C  F04E         	movff	_who+1,btemp+11
  2149  000774  0E6C               	movlw	108
  2150  000776  024D               	mulwf	btemp+10,c
  2151  000778  CFF3 F04B          	movff	prodl,btemp+8
  2152  00077C  CFF4 F04C          	movff	prodh,btemp+9
  2153  000780  024E               	mulwf	btemp+11,c
  2154  000782  50F3               	movf	prodl,w,c
  2155  000784  264C               	addwf	btemp+9,f,c
  2156  000786  0EDC               	movlw	low (_ready_queue+8)
  2157  000788  244B               	addwf	btemp+8,w,c
  2158  00078A  6ED9               	movwf	fsr2l,c
  2159  00078C  0E00               	movlw	high (_ready_queue+8)
  2160  00078E  204C               	addwfc	btemp+9,w,c
  2161  000790  6EDA               	movwf	fsr2h,c
  2162  000792  0E01               	movlw	1
  2163  000794  6EDF               	movwf	indf2,c
  2164  000796  C00B  F04D         	movff	_who,btemp+10
  2165  00079A  C00C  F04E         	movff	_who+1,btemp+11
  2166  00079E  0E6C               	movlw	108
  2167  0007A0  024D               	mulwf	btemp+10,c
  2168  0007A2  CFF3 F04B          	movff	prodl,btemp+8
  2169  0007A6  CFF4 F04C          	movff	prodh,btemp+9
  2170  0007AA  024E               	mulwf	btemp+11,c
  2171  0007AC  50F3               	movf	prodl,w,c
  2172  0007AE  264C               	addwf	btemp+9,f,c
  2173  0007B0  0ED9               	movlw	low (_ready_queue+5)
  2174  0007B2  244B               	addwf	btemp+8,w,c
  2175  0007B4  6ED9               	movwf	fsr2l,c
  2176  0007B6  0E00               	movlw	high (_ready_queue+5)
  2177  0007B8  204C               	addwfc	btemp+9,w,c
  2178  0007BA  6EDA               	movwf	fsr2h,c
  2179  0007BC  50DF               	movf	indf2,w,c
  2180  0007BE  6E4E               	movwf	btemp+11,c
  2181  0007C0  504E               	movf	btemp+11,w,c
  2182  0007C2  C00B  F04D         	movff	_who,btemp+10
  2183  0007C6  C00C  F04E         	movff	_who+1,btemp+11
  2184  0007CA  0E6C               	movlw	108
  2185  0007CC  024D               	mulwf	btemp+10,c
  2186  0007CE  CFF3 F04B          	movff	prodl,btemp+8
  2187  0007D2  CFF4 F04C          	movff	prodh,btemp+9
  2188  0007D6  024E               	mulwf	btemp+11,c
  2189  0007D8  50F3               	movf	prodl,w,c
  2190  0007DA  264C               	addwf	btemp+9,f,c
  2191  0007DC  0EDA               	movlw	low (_ready_queue+6)
  2192  0007DE  244B               	addwf	btemp+8,w,c
  2193  0007E0  6ED9               	movwf	fsr2l,c
  2194  0007E2  0E00               	movlw	high (_ready_queue+6)
  2195  0007E4  204C               	addwfc	btemp+9,w,c
  2196  0007E6  6EDA               	movwf	fsr2h,c
  2197  0007E8  50DF               	movf	indf2,w,c
  2198  0007EA  6ED8               	movwf	status,c	;volatile
  2199  0007EC  C00B  F04D         	movff	_who,btemp+10
  2200  0007F0  C00C  F04E         	movff	_who+1,btemp+11
  2201  0007F4  0E6C               	movlw	108
  2202  0007F6  024D               	mulwf	btemp+10,c
  2203  0007F8  CFF3 F04B          	movff	prodl,btemp+8
  2204  0007FC  CFF4 F04C          	movff	prodh,btemp+9
  2205  000800  024E               	mulwf	btemp+11,c
  2206  000802  50F3               	movf	prodl,w,c
  2207  000804  264C               	addwf	btemp+9,f,c
  2208  000806  0EDB               	movlw	low (_ready_queue+7)
  2209  000808  244B               	addwf	btemp+8,w,c
  2210  00080A  6ED9               	movwf	fsr2l,c
  2211  00080C  0E00               	movlw	high (_ready_queue+7)
  2212  00080E  204C               	addwfc	btemp+9,w,c
  2213  000810  6EDA               	movwf	fsr2h,c
  2214  000812  50DF               	movf	indf2,w,c
  2215  000814  6EE0               	movwf	bsr,c	;volatile
  2216  000816  C00B  F04D         	movff	_who,btemp+10
  2217  00081A  C00C  F04E         	movff	_who+1,btemp+11
  2218  00081E  0E6C               	movlw	108
  2219  000820  024D               	mulwf	btemp+10,c
  2220  000822  CFF3 F04B          	movff	prodl,btemp+8
  2221  000826  CFF4 F04C          	movff	prodh,btemp+9
  2222  00082A  024E               	mulwf	btemp+11,c
  2223  00082C  50F3               	movf	prodl,w,c
  2224  00082E  264C               	addwf	btemp+9,f,c
  2225  000830  0E3A               	movlw	low (_ready_queue+102)
  2226  000832  244B               	addwf	btemp+8,w,c
  2227  000834  6ED9               	movwf	fsr2l,c
  2228  000836  0E01               	movlw	high (_ready_queue+102)
  2229  000838  204C               	addwfc	btemp+9,w,c
  2230  00083A  6EDA               	movwf	fsr2h,c
  2231  00083C  CFDE F009          	movff	postinc2,_size
  2232  000840  CFDD F00A          	movff	postdec2,_size+1
  2233  000844  D08E               	goto	l1788
  2234  000846                     l127:
  2235  000846  0005               	push		;# 
  2236  000848  C009  F04D         	movff	_size,btemp+10
  2237  00084C  C00A  F04E         	movff	_size+1,btemp+11
  2238  000850  0E03               	movlw	3
  2239  000852  024D               	mulwf	btemp+10,c
  2240  000854  CFF3 F04B          	movff	prodl,btemp+8
  2241  000858  CFF4 F04C          	movff	prodh,btemp+9
  2242  00085C  024E               	mulwf	btemp+11,c
  2243  00085E  50F3               	movf	prodl,w,c
  2244  000860  264C               	addwf	btemp+9,f,c
  2245  000862  C00B  F04D         	movff	_who,btemp+10
  2246  000866  C00C  F04E         	movff	_who+1,btemp+11
  2247  00086A  0E6C               	movlw	108
  2248  00086C  024D               	mulwf	btemp+10,c
  2249  00086E  CFF3 F049          	movff	prodl,btemp+6
  2250  000872  CFF4 F04A          	movff	prodh,btemp+7
  2251  000876  024E               	mulwf	btemp+11,c
  2252  000878  50F3               	movf	prodl,w,c
  2253  00087A  264A               	addwf	btemp+7,f,c
  2254  00087C  0ED4               	movlw	low _ready_queue
  2255  00087E  6E4D               	movwf	btemp+10,c
  2256  000880  0E00               	movlw	high _ready_queue
  2257  000882  6E4E               	movwf	btemp+11,c
  2258  000884  0E0A               	movlw	10
  2259  000886  264D               	addwf	btemp+10,f,c
  2260  000888  0E00               	movlw	0
  2261  00088A  224E               	addwfc	btemp+11,f,c
  2262  00088C  5049               	movf	btemp+6,w,c
  2263  00088E  264D               	addwf	btemp+10,f,c
  2264  000890  504A               	movf	btemp+7,w,c
  2265  000892  224E               	addwfc	btemp+11,f,c
  2266  000894  504B               	movf	btemp+8,w,c
  2267  000896  244D               	addwf	btemp+10,w,c
  2268  000898  6ED9               	movwf	fsr2l,c
  2269  00089A  504C               	movf	btemp+9,w,c
  2270  00089C  204E               	addwfc	btemp+11,w,c
  2271  00089E  6EDA               	movwf	fsr2h,c
  2272  0008A0  50DF               	movf	indf2,w,c
  2273  0008A2  6EFD               	movwf	tosl,c	;volatile
  2274  0008A4  C009  F04D         	movff	_size,btemp+10
  2275  0008A8  C00A  F04E         	movff	_size+1,btemp+11
  2276  0008AC  0E03               	movlw	3
  2277  0008AE  024D               	mulwf	btemp+10,c
  2278  0008B0  CFF3 F04B          	movff	prodl,btemp+8
  2279  0008B4  CFF4 F04C          	movff	prodh,btemp+9
  2280  0008B8  024E               	mulwf	btemp+11,c
  2281  0008BA  50F3               	movf	prodl,w,c
  2282  0008BC  264C               	addwf	btemp+9,f,c
  2283  0008BE  C00B  F04D         	movff	_who,btemp+10
  2284  0008C2  C00C  F04E         	movff	_who+1,btemp+11
  2285  0008C6  0E6C               	movlw	108
  2286  0008C8  024D               	mulwf	btemp+10,c
  2287  0008CA  CFF3 F049          	movff	prodl,btemp+6
  2288  0008CE  CFF4 F04A          	movff	prodh,btemp+7
  2289  0008D2  024E               	mulwf	btemp+11,c
  2290  0008D4  50F3               	movf	prodl,w,c
  2291  0008D6  264A               	addwf	btemp+7,f,c
  2292  0008D8  0ED4               	movlw	low _ready_queue
  2293  0008DA  6E4D               	movwf	btemp+10,c
  2294  0008DC  0E00               	movlw	high _ready_queue
  2295  0008DE  6E4E               	movwf	btemp+11,c
  2296  0008E0  0E0B               	movlw	11
  2297  0008E2  264D               	addwf	btemp+10,f,c
  2298  0008E4  0E00               	movlw	0
  2299  0008E6  224E               	addwfc	btemp+11,f,c
  2300  0008E8  5049               	movf	btemp+6,w,c
  2301  0008EA  264D               	addwf	btemp+10,f,c
  2302  0008EC  504A               	movf	btemp+7,w,c
  2303  0008EE  224E               	addwfc	btemp+11,f,c
  2304  0008F0  504B               	movf	btemp+8,w,c
  2305  0008F2  244D               	addwf	btemp+10,w,c
  2306  0008F4  6ED9               	movwf	fsr2l,c
  2307  0008F6  504C               	movf	btemp+9,w,c
  2308  0008F8  204E               	addwfc	btemp+11,w,c
  2309  0008FA  6EDA               	movwf	fsr2h,c
  2310  0008FC  50DF               	movf	indf2,w,c
  2311  0008FE  6EFE               	movwf	tosh,c	;volatile
  2312  000900  C009  F04D         	movff	_size,btemp+10
  2313  000904  C00A  F04E         	movff	_size+1,btemp+11
  2314  000908  0E03               	movlw	3
  2315  00090A  024D               	mulwf	btemp+10,c
  2316  00090C  CFF3 F04B          	movff	prodl,btemp+8
  2317  000910  CFF4 F04C          	movff	prodh,btemp+9
  2318  000914  024E               	mulwf	btemp+11,c
  2319  000916  50F3               	movf	prodl,w,c
  2320  000918  264C               	addwf	btemp+9,f,c
  2321  00091A  C00B  F04D         	movff	_who,btemp+10
  2322  00091E  C00C  F04E         	movff	_who+1,btemp+11
  2323  000922  0E6C               	movlw	108
  2324  000924  024D               	mulwf	btemp+10,c
  2325  000926  CFF3 F049          	movff	prodl,btemp+6
  2326  00092A  CFF4 F04A          	movff	prodh,btemp+7
  2327  00092E  024E               	mulwf	btemp+11,c
  2328  000930  50F3               	movf	prodl,w,c
  2329  000932  264A               	addwf	btemp+7,f,c
  2330  000934  0ED4               	movlw	low _ready_queue
  2331  000936  6E4D               	movwf	btemp+10,c
  2332  000938  0E00               	movlw	high _ready_queue
  2333  00093A  6E4E               	movwf	btemp+11,c
  2334  00093C  0E09               	movlw	9
  2335  00093E  264D               	addwf	btemp+10,f,c
  2336  000940  0E00               	movlw	0
  2337  000942  224E               	addwfc	btemp+11,f,c
  2338  000944  5049               	movf	btemp+6,w,c
  2339  000946  264D               	addwf	btemp+10,f,c
  2340  000948  504A               	movf	btemp+7,w,c
  2341  00094A  224E               	addwfc	btemp+11,f,c
  2342  00094C  504B               	movf	btemp+8,w,c
  2343  00094E  244D               	addwf	btemp+10,w,c
  2344  000950  6ED9               	movwf	fsr2l,c
  2345  000952  504C               	movf	btemp+9,w,c
  2346  000954  204E               	addwfc	btemp+11,w,c
  2347  000956  6EDA               	movwf	fsr2h,c
  2348  000958  50DF               	movf	indf2,w,c
  2349  00095A  6EFF               	movwf	tosu,c	;volatile
  2350  00095C  0609               	decf	_size,f,c
  2351  00095E  A0D8               	btfss	status,0,c
  2352  000960  060A               	decf	_size+1,f,c
  2353  000962                     l1788:
  2354  000962  5009               	movf	_size,w,c
  2355  000964  100A               	iorwf	_size+1,w,c
  2356  000966  A4D8               	btfss	status,2,c
  2357  000968  D76E               	goto	l127
  2358  00096A                     u690:
  2359                           
  2360                           ;kernel.c: 73:   INTCONbits.GIE = 1;
  2361  00096A  8EF2               	bsf	4082,7,c	;volatile
  2362                           
  2363                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2364  00096C  52E5               	movf	postdec1,f,c
  2365  00096E  0012               	return		;funcret
  2366  000970                     __end_of_dispatcher:
  2367                           	opt callstack 0
  2368                           
  2369 ;; *************** function _scheduler *****************
  2370 ;; Defined at:
  2371 ;;		line 56 in file "kernel.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  2  [STACK] unsigned int 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2385 ;;      Params:         0       0       0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:   12
  2392 ;; This function calls:
  2393 ;;		_round_robin
  2394 ;; This function is called by:
  2395 ;;		_dispatcher
  2396 ;; This function uses a reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text10
  2400  001BDE                     __ptext10:
  2401                           	opt callstack 0
  2402  001BDE                     _scheduler:
  2403                           	opt callstack 11
  2404                           
  2405                           ;kernel.c: 58:   return round_robin();
  2406                           
  2407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2408                           ;incstack = 0
  2409  001BDE  EC75  F00B         	call	_round_robin	;wreg free
  2410                           
  2411                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2412  001BE2  0012               	return		;funcret
  2413  001BE4                     __end_of_scheduler:
  2414                           	opt callstack 0
  2415                           
  2416 ;; *************** function _round_robin *****************
  2417 ;; Defined at:
  2418 ;;		line 76 in file "kernel.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  next_task_to    2  [STACK] int 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  2  [STACK] unsigned int 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2432 ;;      Params:         0       0       0       0       0       0       0
  2433 ;;      Locals:         0       0       0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0
  2435 ;;      Totals:         0       0       0       0       0       0       0
  2436 ;;Total ram usage:        0 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:   11
  2439 ;; This function calls:
  2440 ;;		___lwmod
  2441 ;; This function is called by:
  2442 ;;		_ISR_timer0
  2443 ;;		_scheduler
  2444 ;; This function uses a reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text11
  2448  0016EA                     __ptext11:
  2449                           	opt callstack 0
  2450  0016EA                     _round_robin:
  2451                           	opt callstack 0
  2452                           
  2453                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2454  0016EA  52E6               	movf	postinc1,f,c
  2455  0016EC  52E6               	movf	postinc1,f,c
  2456                           
  2457                           ;kernel.c: 77:   int next_task_to_run = ready_queue.task_running;
  2458                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2459                           
  2460                           ;incstack = 0
  2461  0016EE  0EFE               	movlw	-2
  2462  0016F0  C2F2  FFE3         	movff	_ready_queue+542,plusw1
  2463  0016F4  0EFF               	movlw	-1
  2464  0016F6  C2F3  FFE3         	movff	_ready_queue+543,plusw1
  2465  0016FA                     l1906:
  2466                           
  2467                           ;kernel.c: 80:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  2468  0016FA  EE22  F0F0         	lfsr	2,_ready_queue+540
  2469  0016FE  CFDE F04D          	movff	postinc2,btemp+10
  2470  001702  CFDD F04E          	movff	postdec2,btemp+11
  2471  001706  C04D  FFE6         	movff	btemp+10,postinc1
  2472  00170A  C04E  FFE6         	movff	btemp+11,postinc1
  2473                           
  2474                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  2475  00170E  0EFC               	movlw	-4
  2476  001710  50E3               	movf	plusw1,w,c
  2477  001712  0F01               	addlw	1
  2478  001714  6E4D               	movwf	btemp+10,c
  2479  001716  0EFD               	movlw	-3
  2480  001718  CFE3 F04E          	movff	plusw1,btemp+11
  2481  00171C  0E00               	movlw	0
  2482  00171E  224E               	addwfc	btemp+11,f,c
  2483  001720  C04D  FFE6         	movff	btemp+10,postinc1
  2484  001724  C04E  FFE6         	movff	btemp+11,postinc1
  2485  001728  EC79  F00A         	call	___lwmod	;wreg free
  2486                           
  2487                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2488  00172C  0EFE               	movlw	-2
  2489  00172E  C043  FFE3         	movff	btemp,plusw1
  2490  001732  0EFF               	movlw	-1
  2491  001734  C044  FFE3         	movff	btemp+1,plusw1
  2492                           
  2493                           ;kernel.c: 81:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  2494                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2495  001738  0EFE               	movlw	-2
  2496  00173A  CFE3 F04D          	movff	plusw1,btemp+10
  2497  00173E  0EFF               	movlw	-1
  2498  001740  CFE3 F04E          	movff	plusw1,btemp+11
  2499  001744  0E6C               	movlw	108
  2500  001746  024D               	mulwf	btemp+10,c
  2501  001748  CFF3 F04B          	movff	prodl,btemp+8
  2502  00174C  CFF4 F04C          	movff	prodh,btemp+9
  2503  001750  024E               	mulwf	btemp+11,c
  2504  001752  50F3               	movf	prodl,w,c
  2505  001754  264C               	addwf	btemp+9,f,c
  2506  001756  0EDC               	movlw	low (_ready_queue+8)
  2507  001758  244B               	addwf	btemp+8,w,c
  2508  00175A  6ED9               	movwf	fsr2l,c
  2509  00175C  0E00               	movlw	high (_ready_queue+8)
  2510  00175E  204C               	addwfc	btemp+9,w,c
  2511  001760  6EDA               	movwf	fsr2h,c
  2512  001762  50DF               	movf	indf2,w,c
  2513  001764  A4D8               	btfss	status,2,c
  2514  001766  D7C9               	goto	l1906
  2515                           
  2516                           ;kernel.c: 83:   return next_task_to_run;
  2517                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2518  001768  0EFE               	movlw	-2
  2519  00176A  CFE3 F043          	movff	plusw1,btemp
  2520  00176E  0EFF               	movlw	-1
  2521  001770  CFE3 F044          	movff	plusw1,btemp+1
  2522                           
  2523                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2524  001774  52E5               	movf	postdec1,f,c
  2525  001776  52E5               	movf	postdec1,f,c
  2526  001778  0012               	return		;funcret
  2527  00177A                     __end_of_round_robin:
  2528                           	opt callstack 0
  2529                           
  2530 ;; *************** function ___lwmod *****************
  2531 ;; Defined at:
  2532 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  dividend        2  [STACK] unsigned int 
  2535 ;;  divisor         2  [STACK] unsigned int 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  counter         1  [STACK] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  2  [STACK] unsigned int 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2547 ;;      Params:         0       0       0       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0
  2550 ;;      Totals:         0       0       0       0       0       0       0
  2551 ;;Total ram usage:        0 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:   10
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_round_robin
  2558 ;; This function uses a reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text12
  2562  0014F2                     __ptext12:
  2563                           	opt callstack 0
  2564  0014F2                     ___lwmod:
  2565                           	opt callstack 0
  2566                           
  2567                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2568  0014F2  52E6               	movf	postinc1,f,c
  2569                           
  2570                           ;stkvar	_divisor @ sp[(-1)+-4]
  2571                           
  2572                           ;incstack = 0
  2573  0014F4  0EFB               	movlw	-5
  2574  0014F6  CFE3 F043          	movff	plusw1,btemp
  2575  0014FA  0EFC               	movlw	-4
  2576  0014FC  50E3               	movf	plusw1,w,c
  2577  0014FE  1043               	iorwf	btemp,w,c
  2578  001500  B4D8               	btfsc	status,2,c
  2579  001502  D04A               	goto	u800
  2580                           
  2581                           ;stkvar	_counter @ sp[(-1)+0]
  2582  001504  0EFF               	movlw	-1
  2583  001506  6AE3               	clrf	plusw1,c
  2584  001508  D010               	goto	L2
  2585  00150A                     l1872:
  2586                           
  2587                           ;stkvar	_divisor @ sp[(-1)+-4]
  2588  00150A  0EFB               	movlw	-5
  2589  00150C  50E3               	movf	plusw1,w,c
  2590  00150E  90D8               	bcf	status,0,c
  2591  001510  34E8               	rlcf	wreg,w,c
  2592  001512  6E43               	movwf	btemp,c
  2593  001514  0EFB               	movlw	-5
  2594  001516  C043  FFE3         	movff	btemp,plusw1
  2595  00151A  0EFC               	movlw	-4
  2596  00151C  50E3               	movf	plusw1,w,c
  2597  00151E  34E8               	rlcf	wreg,w,c
  2598  001520  6E43               	movwf	btemp,c
  2599  001522  0EFC               	movlw	-4
  2600  001524  C043  FFE3         	movff	btemp,plusw1
  2601                           
  2602                           ;stkvar	_counter @ sp[(-1)+0]
  2603  001528  0EFF               	movlw	-1
  2604  00152A                     L2:
  2605  00152A  2AE3               	incf	plusw1,f,c
  2606                           
  2607                           ;stkvar	_divisor @ sp[(-1)+-4]
  2608  00152C  0EFC               	movlw	-4
  2609  00152E  AEE3               	btfss	plusw1,7,c
  2610  001530  D7EC               	goto	l1872
  2611  001532                     u780:
  2612                           
  2613                           ;stkvar	_divisor @ sp[(-1)+-4]
  2614  001532  0EFB               	movlw	-5
  2615  001534  CFE3 F04D          	movff	plusw1,btemp+10
  2616  001538  0EFC               	movlw	-4
  2617  00153A  CFE3 F04E          	movff	plusw1,btemp+11
  2618                           
  2619                           ;stkvar	_dividend @ sp[(-1)+-2]
  2620  00153E  0EFD               	movlw	-3
  2621  001540  CFE3 F04B          	movff	plusw1,btemp+8
  2622  001544  0EFE               	movlw	-2
  2623  001546  CFE3 F04C          	movff	plusw1,btemp+9
  2624  00154A  504D               	movf	btemp+10,w,c
  2625  00154C  5C4B               	subwf	btemp+8,w,c
  2626  00154E  504E               	movf	btemp+11,w,c
  2627  001550  584C               	subwfb	btemp+9,w,c
  2628  001552  A0D8               	btfss	status,0,c
  2629  001554  D012               	goto	l1882
  2630                           
  2631                           ;stkvar	_divisor @ sp[(-1)+-4]
  2632                           ;stkvar	_dividend @ sp[(-1)+-2]
  2633  001556  0EFD               	movlw	-3
  2634  001558  50E3               	movf	plusw1,w,c
  2635  00155A  6E43               	movwf	btemp,c
  2636  00155C  0EFB               	movlw	-5
  2637  00155E  50E3               	movf	plusw1,w,c
  2638  001560  5E43               	subwf	btemp,f,c
  2639  001562  0EFD               	movlw	-3
  2640  001564  C043  FFE3         	movff	btemp,plusw1
  2641  001568  0EFE               	movlw	-2
  2642  00156A  50E3               	movf	plusw1,w,c
  2643  00156C  6E43               	movwf	btemp,c
  2644  00156E  0EFC               	movlw	-4
  2645  001570  50E3               	movf	plusw1,w,c
  2646  001572  5A43               	subwfb	btemp,f,c
  2647  001574  0EFE               	movlw	-2
  2648  001576  C043  FFE3         	movff	btemp,plusw1
  2649  00157A                     l1882:
  2650                           
  2651                           ;stkvar	_divisor @ sp[(-1)+-4]
  2652  00157A  90D8               	bcf	status,0,c
  2653  00157C  0EFC               	movlw	-4
  2654  00157E  32E3               	rrcf	plusw1,f,c
  2655  001580  0EFB               	movlw	-5
  2656  001582  32E3               	rrcf	plusw1,f,c
  2657                           
  2658                           ;stkvar	_counter @ sp[(-1)+0]
  2659  001584  0EFF               	movlw	-1
  2660  001586  50E3               	movf	plusw1,w,c
  2661  001588  6E43               	movwf	btemp,c
  2662  00158A  0E01               	movlw	1
  2663  00158C  5E43               	subwf	btemp,f,c
  2664  00158E  0EFF               	movlw	-1
  2665  001590  C043  FFE3         	movff	btemp,plusw1
  2666  001594  A4D8               	btfss	status,2,c
  2667  001596  D7CD               	goto	u780
  2668  001598                     u800:
  2669                           
  2670                           ;stkvar	_dividend @ sp[(-1)+-2]
  2671  001598  0EFD               	movlw	-3
  2672  00159A  CFE3 F043          	movff	plusw1,btemp
  2673  00159E  0EFE               	movlw	-2
  2674  0015A0  CFE3 F044          	movff	plusw1,btemp+1
  2675                           
  2676                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2677  0015A4  0EFB               	movlw	251
  2678  0015A6  26E1               	addwf	fsr1l,f,c
  2679  0015A8  0EFF               	movlw	255
  2680  0015AA  22E2               	addwfc	fsr1h,f,c
  2681  0015AC  0012               	return		;funcret
  2682  0015AE                     __end_of___lwmod:
  2683                           	opt callstack 0
  2684                           
  2685 ;; *************** function _config_timer0 *****************
  2686 ;; Defined at:
  2687 ;;		line 23 in file "int0_test.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1  [STACK] void 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2701 ;;      Params:         0       0       0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0
  2704 ;;      Totals:         0       0       0       0       0       0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:   10
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_main
  2712 ;; This function uses a reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text13
  2716  001BBC                     __ptext13:
  2717                           	opt callstack 0
  2718  001BBC                     _config_timer0:
  2719                           	opt callstack 20
  2720                           
  2721                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  2722                           
  2723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2724                           ;incstack = 0
  2725  001BBC  9AD5               	bcf	4053,5,c	;volatile
  2726                           
  2727                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  2728  001BBE  96D5               	bcf	4053,3,c	;volatile
  2729                           
  2730                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  2731  001BC0  0E07               	movlw	7
  2732  001BC2  12D5               	iorwf	4053,f,c	;volatile
  2733                           
  2734                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  2735  001BC4  8CF2               	bsf	4082,6,c	;volatile
  2736                           
  2737                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  2738  001BC6  8AF2               	bsf	4082,5,c	;volatile
  2739                           
  2740                           ;int0_test.c: 33:   TMR0L = 252;
  2741  001BC8  0EFC               	movlw	252
  2742  001BCA  6ED6               	movwf	4054,c	;volatile
  2743                           
  2744                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2745  001BCC  0012               	return		;funcret
  2746  001BCE                     __end_of_config_timer0:
  2747                           	opt callstack 0
  2748                           
  2749 ;; *************** function _config_INT0 *****************
  2750 ;; Defined at:
  2751 ;;		line 13 in file "int0_test.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;		None
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;		None
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1  [STACK] void 
  2758 ;; Registers used:
  2759 ;;		None
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2765 ;;      Params:         0       0       0       0       0       0       0
  2766 ;;      Locals:         0       0       0       0       0       0       0
  2767 ;;      Temps:          0       0       0       0       0       0       0
  2768 ;;      Totals:         0       0       0       0       0       0       0
  2769 ;;Total ram usage:        0 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:   10
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text14
  2780  001BCE                     __ptext14:
  2781                           	opt callstack 0
  2782  001BCE                     _config_INT0:
  2783                           	opt callstack 20
  2784                           
  2785                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2786                           
  2787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2788                           ;incstack = 0
  2789  001BCE  9095               	bcf	3989,0,c	;volatile
  2790                           
  2791                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2792  001BD0  8EF2               	bsf	4082,7,c	;volatile
  2793                           
  2794                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2795  001BD2  88F2               	bsf	4082,4,c	;volatile
  2796                           
  2797                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2798  001BD4  88F2               	bsf	4082,4,c	;volatile
  2799                           
  2800                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2801  001BD6  92F2               	bcf	4082,1,c	;volatile
  2802                           
  2803                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2804  001BD8  9EF1               	bcf	4081,7,c	;volatile
  2805                           
  2806                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2807  001BDA  9CF1               	bcf	4081,6,c	;volatile
  2808                           
  2809                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2810  001BDC  0012               	return		;funcret
  2811  001BDE                     __end_of_config_INT0:
  2812                           	opt callstack 0
  2813                           
  2814 ;; *************** function _task_idle *****************
  2815 ;; Defined at:
  2816 ;;		line 116 in file "kernel.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1  [STACK] void 
  2823 ;; Registers used:
  2824 ;;		None
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2830 ;;      Params:         0       0       0       0       0       0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0
  2833 ;;      Totals:         0       0       0       0       0       0       0
  2834 ;;Total ram usage:        0 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    3
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_lunos_init
  2841 ;; This function uses a reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text15
  2845  001BE4                     __ptext15:
  2846                           	opt callstack 0
  2847  001BE4                     _task_idle:
  2848                           	opt callstack 23
  2849                           
  2850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2851                           ;incstack = 0
  2852                           ;kernel.c: 118:   while (1) __nop();
  2853  001BE4  F000               	nop	
  2854  001BE6  D7FE               	goto	_task_idle
  2855  001BE8                     __end_of_task_idle:
  2856                           	opt callstack 0
  2857                           
  2858 ;; *************** function _count_bottles *****************
  2859 ;; Defined at:
  2860 ;;		line 42 in file "tasks.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  bottle          1  [STACK] struct .
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1  [STACK] void 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2874 ;;      Params:         0       0       0       0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0
  2877 ;;      Totals:         0       0       0       0       0       0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    8
  2881 ;; This function calls:
  2882 ;;		_lunos_delayTask
  2883 ;;		_sem_post
  2884 ;;		_sem_wait
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text16
  2891  0018E6                     __ptext16:
  2892                           	opt callstack 0
  2893  0018E6                     _count_bottles:
  2894                           	opt callstack 0
  2895                           
  2896                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2897  0018E6  52E6               	movf	postinc1,f,c
  2898  0018E8                     l294:
  2899                           
  2900                           ;tasks.c: 44:         sem_wait(&count_sem);
  2901  0018E8  0E29               	movlw	low _count_sem
  2902  0018EA  6EE6               	movwf	postinc1,c
  2903  0018EC  0E00               	movlw	high _count_sem
  2904  0018EE  6EE6               	movwf	postinc1,c
  2905  0018F0  EC3F  F009         	call	_sem_wait	;wreg free
  2906                           
  2907                           ;tasks.c: 45:         while(global_buffer.count < 3){
  2908  0018F4  D023               	goto	l2092
  2909  0018F6                     l296:
  2910                           
  2911                           ;tasks.c: 46:             if(!PORTBbits.RB6){
  2912  0018F6  BC81               	btfsc	3969,6,c	;volatile
  2913  0018F8  D021               	goto	l2092
  2914                           
  2915                           ;tasks.c: 47:                 lunos_delayTask(500);
  2916  0018FA  0EF4               	movlw	244
  2917  0018FC  6EE6               	movwf	postinc1,c
  2918  0018FE  0E01               	movlw	1
  2919  001900  6EE6               	movwf	postinc1,c
  2920  001902  ECA9  F00C         	call	_lunos_delayTask	;wreg free
  2921                           
  2922                           ;tasks.c: 48:                 t_bottle bottle;;tasks.c: 49:                 global_buffe
      +                          r.bottles[global_buffer.count] = bottle;
  2923                           ;stkvar	_bottle @ sp[(-1)+0]
  2924  001906  C001  F04D         	movff	_global_buffer,btemp+10
  2925  00190A  C002  F04E         	movff	_global_buffer+1,btemp+11
  2926  00190E  0E03               	movlw	low (_global_buffer+2)
  2927  001910  244D               	addwf	btemp+10,w,c
  2928  001912  6ED9               	movwf	fsr2l,c
  2929  001914  0E00               	movlw	high (_global_buffer+2)
  2930  001916  204E               	addwfc	btemp+11,w,c
  2931  001918  6EDA               	movwf	fsr2h,c
  2932  00191A  0EFF               	movlw	-1
  2933  00191C  CFE3 FFDF          	movff	plusw1,indf2
  2934                           
  2935                           ;tasks.c: 50:                 global_buffer.bottles[global_buffer.count].bottle_state = 
      +                          EMPTY;
  2936  001920  C001  F04D         	movff	_global_buffer,btemp+10
  2937  001924  C002  F04E         	movff	_global_buffer+1,btemp+11
  2938  001928  0E03               	movlw	low (_global_buffer+2)
  2939  00192A  244D               	addwf	btemp+10,w,c
  2940  00192C  6ED9               	movwf	fsr2l,c
  2941  00192E  0E00               	movlw	high (_global_buffer+2)
  2942  001930  204E               	addwfc	btemp+11,w,c
  2943  001932  6EDA               	movwf	fsr2h,c
  2944  001934  0E00               	movlw	0
  2945  001936  6EDF               	movwf	indf2,c
  2946                           
  2947                           ;tasks.c: 51:                 global_buffer.count += 1;
  2948  001938  4A01               	infsnz	_global_buffer,f,c
  2949  00193A  2A02               	incf	_global_buffer+1,f,c
  2950  00193C                     l2092:
  2951                           
  2952                           ;tasks.c: 45:         while(global_buffer.count < 3){
  2953  00193C  BE02               	btfsc	_global_buffer+1,7,c
  2954  00193E  D7DB               	goto	l296
  2955  001940  5002               	movf	_global_buffer+1,w,c
  2956  001942  E104               	bnz	u94_20
  2957  001944  0E03               	movlw	3
  2958  001946  5C01               	subwf	_global_buffer,w,c
  2959  001948  A0D8               	btfss	status,0,c
  2960  00194A  D7D5               	goto	l296
  2961  00194C                     u94_20:
  2962                           
  2963                           ;tasks.c: 54:         global_buffer.p_state = BUSY_;
  2964  00194C  0E01               	movlw	1
  2965  00194E  6E06               	movwf	_global_buffer+5,c
  2966  001950  D7CB               	goto	l294
  2967  001952                     __end_of_count_bottles:
  2968                           	opt callstack 0
  2969                           
  2970 ;; *************** function _sem_wait *****************
  2971 ;; Defined at:
  2972 ;;		line 20 in file "semaphore.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  s               2  [STACK] PTR struct semaphore
  2975 ;;		 -> teste_2(14), teste_1(14), r_pipe(14), w_pipe(14), 
  2976 ;;		 -> out_sem(14), cover_sem(14), check_sem(14), fill_sem(14), 
  2977 ;;		 -> count_sem(14), 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1  [STACK] void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2989 ;;      Params:         0       0       0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0
  2992 ;;      Totals:         0       0       0       0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    7
  2996 ;; This function calls:
  2997 ;;		_dispatcher
  2998 ;; This function is called by:
  2999 ;;		_pipe_write
  3000 ;;		_pipe_read
  3001 ;;		_count_bottles
  3002 ;;		_fill_bottle
  3003 ;;		_check_level
  3004 ;;		_cover_bottle
  3005 ;;		_count_out
  3006 ;;		_task_bozo
  3007 ;;		_task_xuxa
  3008 ;; This function uses a reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text17
  3012  00127E                     __ptext17:
  3013                           	opt callstack 0
  3014  00127E                     _sem_wait:
  3015                           	opt callstack 18
  3016                           
  3017                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  3018                           
  3019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3020                           ;incstack = 0
  3021  00127E  9EF2               	bcf	4082,7,c	;volatile
  3022                           
  3023                           ;semaphore.c: 22:   s->contador -= 1;
  3024                           ;stkvar	_s @ sp[(0)+-2]
  3025  001280  0EFE               	movlw	-2
  3026  001282  CFE3 FFD9          	movff	plusw1,fsr2l
  3027  001286  0EFF               	movlw	-1
  3028  001288  CFE3 FFDA          	movff	plusw1,fsr2h
  3029  00128C  06DE               	decf	postinc2,f,c
  3030  00128E  0E00               	movlw	0
  3031  001290  5ADD               	subwfb	postdec2,f,c
  3032                           
  3033                           ;semaphore.c: 23:   if (s->contador < 0) {
  3034                           ;stkvar	_s @ sp[(0)+-2]
  3035  001292  0EFE               	movlw	-2
  3036  001294  CFE3 FFD9          	movff	plusw1,fsr2l
  3037  001298  0EFF               	movlw	-1
  3038  00129A  CFE3 FFDA          	movff	plusw1,fsr2h
  3039  00129E  0E01               	movlw	1
  3040  0012A0  AEDB               	btfss	plusw2,7,c
  3041  0012A2  D05D               	goto	l1974
  3042                           
  3043                           ;semaphore.c: 24:     s->contador = 0;
  3044                           ;stkvar	_s @ sp[(0)+-2]
  3045  0012A4  0EFE               	movlw	-2
  3046  0012A6  CFE3 FFD9          	movff	plusw1,fsr2l
  3047  0012AA  0EFF               	movlw	-1
  3048  0012AC  CFE3 FFDA          	movff	plusw1,fsr2h
  3049  0012B0  0E00               	movlw	0
  3050  0012B2  6EDE               	movwf	postinc2,c
  3051  0012B4  0E00               	movlw	0
  3052  0012B6  6EDD               	movwf	postdec2,c
  3053                           
  3054                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  3055  0012B8  EE22  F0F2         	lfsr	2,_ready_queue+542
  3056                           
  3057                           ;stkvar	_s @ sp[(0)+-2]
  3058  0012BC  0EFE               	movlw	-2
  3059  0012BE  CFE3 F04D          	movff	plusw1,btemp+10
  3060  0012C2  0EFF               	movlw	-1
  3061  0012C4  CFE3 F04E          	movff	plusw1,btemp+11
  3062  0012C8  0E0A               	movlw	10
  3063  0012CA  244D               	addwf	btemp+10,w,c
  3064  0012CC  6EE9               	movwf	fsr0l,c
  3065  0012CE  0E00               	movlw	0
  3066  0012D0  204E               	addwfc	btemp+11,w,c
  3067  0012D2  6EEA               	movwf	fsr0h,c
  3068  0012D4  CFEE F04D          	movff	postinc0,btemp+10
  3069  0012D8  CFED F04E          	movff	postdec0,btemp+11
  3070  0012DC  90D8               	bcf	status,0,c
  3071  0012DE  344D               	rlcf	btemp+10,w,c
  3072  0012E0  6E4B               	movwf	btemp+8,c
  3073  0012E2  344E               	rlcf	btemp+11,w,c
  3074  0012E4  6E4C               	movwf	btemp+9,c
  3075                           
  3076                           ;stkvar	_s @ sp[(0)+-2]
  3077  0012E6  0EFE               	movlw	-2
  3078  0012E8  50E3               	movf	plusw1,w,c
  3079  0012EA  264B               	addwf	btemp+8,f,c
  3080  0012EC  0EFF               	movlw	-1
  3081  0012EE  50E3               	movf	plusw1,w,c
  3082  0012F0  224C               	addwfc	btemp+9,f,c
  3083  0012F2  0E02               	movlw	2
  3084  0012F4  244B               	addwf	btemp+8,w,c
  3085  0012F6  6EE9               	movwf	fsr0l,c
  3086  0012F8  0E00               	movlw	0
  3087  0012FA  204C               	addwfc	btemp+9,w,c
  3088  0012FC  6EEA               	movwf	fsr0h,c
  3089  0012FE  CFDE FFEE          	movff	postinc2,postinc0
  3090  001302  CFDD FFED          	movff	postdec2,postdec0
  3091                           
  3092                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 4;
  3093                           ;stkvar	_s @ sp[(0)+-2]
  3094  001306  0EFE               	movlw	-2
  3095  001308  CFE3 F04D          	movff	plusw1,btemp+10
  3096  00130C  0EFF               	movlw	-1
  3097  00130E  CFE3 F04E          	movff	plusw1,btemp+11
  3098  001312  0E0A               	movlw	10
  3099  001314  244D               	addwf	btemp+10,w,c
  3100  001316  6ED9               	movwf	fsr2l,c
  3101  001318  0E00               	movlw	0
  3102  00131A  204E               	addwfc	btemp+11,w,c
  3103  00131C  6EDA               	movwf	fsr2h,c
  3104  00131E  CFDE F04D          	movff	postinc2,btemp+10
  3105  001322  CFDD F04E          	movff	postdec2,btemp+11
  3106  001326  0E01               	movlw	1
  3107  001328  264D               	addwf	btemp+10,f,c
  3108  00132A  0E00               	movlw	0
  3109  00132C  224E               	addwfc	btemp+11,f,c
  3110  00132E  0E03               	movlw	3
  3111  001330  164D               	andwf	btemp+10,f,c
  3112  001332  0E00               	movlw	0
  3113  001334  164E               	andwf	btemp+11,f,c
  3114                           
  3115                           ;stkvar	_s @ sp[(0)+-2]
  3116  001336  0EFE               	movlw	-2
  3117  001338  CFE3 F04B          	movff	plusw1,btemp+8
  3118  00133C  0EFF               	movlw	-1
  3119  00133E  CFE3 F04C          	movff	plusw1,btemp+9
  3120  001342  0E0A               	movlw	10
  3121  001344  244B               	addwf	btemp+8,w,c
  3122  001346  6ED9               	movwf	fsr2l,c
  3123  001348  0E00               	movlw	0
  3124  00134A  204C               	addwfc	btemp+9,w,c
  3125  00134C  6EDA               	movwf	fsr2h,c
  3126  00134E  C04D  FFDE         	movff	btemp+10,postinc2
  3127  001352  C04E  FFDD         	movff	btemp+11,postdec2
  3128                           
  3129                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  3130  001356  0E05               	movlw	5
  3131  001358  6EE6               	movwf	postinc1,c
  3132  00135A  EC66  F002         	call	_dispatcher	;wreg free
  3133  00135E                     l1974:
  3134                           
  3135                           ;semaphore.c: 29:   INTCONbits.GIE = 1;
  3136  00135E  8EF2               	bsf	4082,7,c	;volatile
  3137                           
  3138                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3139  001360  52E5               	movf	postdec1,f,c
  3140  001362  52E5               	movf	postdec1,f,c
  3141  001364  0012               	return		;funcret
  3142  001366                     __end_of_sem_wait:
  3143                           	opt callstack 0
  3144                           
  3145 ;; *************** function _sem_post *****************
  3146 ;; Defined at:
  3147 ;;		line 32 in file "semaphore.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  s               2  [STACK] PTR struct semaphore
  3150 ;;		 -> teste_2(14), teste_1(14), r_pipe(14), w_pipe(14), 
  3151 ;;		 -> out_sem(14), cover_sem(14), check_sem(14), fill_sem(14), 
  3152 ;;		 -> count_sem(14), 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1  [STACK] void 
  3157 ;; Registers used:
  3158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3164 ;;      Params:         0       0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0
  3167 ;;      Totals:         0       0       0       0       0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    3
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_pipe_write
  3175 ;;		_pipe_read
  3176 ;;		_count_bottles
  3177 ;;		_fill_bottle
  3178 ;;		_check_level
  3179 ;;		_cover_bottle
  3180 ;;		_count_out
  3181 ;;		_task_bozo
  3182 ;;		_task_xuxa
  3183 ;; This function uses a reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text18
  3187  001188                     __ptext18:
  3188                           	opt callstack 0
  3189  001188                     _sem_post:
  3190                           	opt callstack 22
  3191                           
  3192                           ;semaphore.c: 33:   INTCONbits.GIE = 0;
  3193                           
  3194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3195                           ;incstack = 0
  3196  001188  9EF2               	bcf	4082,7,c	;volatile
  3197                           
  3198                           ;semaphore.c: 34:   s->contador += 1;
  3199                           ;stkvar	_s @ sp[(0)+-2]
  3200  00118A  0EFE               	movlw	-2
  3201  00118C  CFE3 FFD9          	movff	plusw1,fsr2l
  3202  001190  0EFF               	movlw	-1
  3203  001192  CFE3 FFDA          	movff	plusw1,fsr2h
  3204  001196  2ADE               	incf	postinc2,f,c
  3205  001198  0E00               	movlw	0
  3206  00119A  22DD               	addwfc	postdec2,f,c
  3207                           
  3208                           ;semaphore.c: 35:   if (s->contador > 0) {
  3209                           ;stkvar	_s @ sp[(0)+-2]
  3210  00119C  0EFE               	movlw	-2
  3211  00119E  CFE3 FFD9          	movff	plusw1,fsr2l
  3212  0011A2  0EFF               	movlw	-1
  3213  0011A4  CFE3 FFDA          	movff	plusw1,fsr2h
  3214  0011A8  0E01               	movlw	1
  3215  0011AA  BEDB               	btfsc	plusw2,7,c
  3216  0011AC  D064               	goto	l1986
  3217  0011AE  0E01               	movlw	1
  3218  0011B0  50DB               	movf	plusw2,w,c
  3219  0011B2  E103               	bnz	u86_20
  3220  0011B4  04DE               	decf	postinc2,w,c
  3221  0011B6  A0D8               	btfss	status,0,c
  3222  0011B8  D05E               	goto	l1986
  3223  0011BA                     u86_20:
  3224                           
  3225                           ;semaphore.c: 36:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  3226                           ;stkvar	_s @ sp[(0)+-2]
  3227  0011BA  0EFE               	movlw	-2
  3228  0011BC  CFE3 F04D          	movff	plusw1,btemp+10
  3229  0011C0  0EFF               	movlw	-1
  3230  0011C2  CFE3 F04E          	movff	plusw1,btemp+11
  3231  0011C6  0E0C               	movlw	12
  3232  0011C8  244D               	addwf	btemp+10,w,c
  3233  0011CA  6ED9               	movwf	fsr2l,c
  3234  0011CC  0E00               	movlw	0
  3235  0011CE  204E               	addwfc	btemp+11,w,c
  3236  0011D0  6EDA               	movwf	fsr2h,c
  3237  0011D2  CFDE F04D          	movff	postinc2,btemp+10
  3238  0011D6  CFDD F04E          	movff	postdec2,btemp+11
  3239  0011DA  90D8               	bcf	status,0,c
  3240  0011DC  344D               	rlcf	btemp+10,w,c
  3241  0011DE  6E4B               	movwf	btemp+8,c
  3242  0011E0  344E               	rlcf	btemp+11,w,c
  3243  0011E2  6E4C               	movwf	btemp+9,c
  3244                           
  3245                           ;stkvar	_s @ sp[(0)+-2]
  3246  0011E4  0EFE               	movlw	-2
  3247  0011E6  50E3               	movf	plusw1,w,c
  3248  0011E8  264B               	addwf	btemp+8,f,c
  3249  0011EA  0EFF               	movlw	-1
  3250  0011EC  50E3               	movf	plusw1,w,c
  3251  0011EE  224C               	addwfc	btemp+9,f,c
  3252  0011F0  0E02               	movlw	2
  3253  0011F2  244B               	addwf	btemp+8,w,c
  3254  0011F4  6ED9               	movwf	fsr2l,c
  3255  0011F6  0E00               	movlw	0
  3256  0011F8  204C               	addwfc	btemp+9,w,c
  3257  0011FA  6EDA               	movwf	fsr2h,c
  3258  0011FC  CFDE F04D          	movff	postinc2,btemp+10
  3259  001200  CFDD F04E          	movff	postdec2,btemp+11
  3260  001204  0E6C               	movlw	108
  3261  001206  024D               	mulwf	btemp+10,c
  3262  001208  CFF3 F04B          	movff	prodl,btemp+8
  3263  00120C  CFF4 F04C          	movff	prodh,btemp+9
  3264  001210  024E               	mulwf	btemp+11,c
  3265  001212  50F3               	movf	prodl,w,c
  3266  001214  264C               	addwf	btemp+9,f,c
  3267  001216  0EDC               	movlw	low (_ready_queue+8)
  3268  001218  244B               	addwf	btemp+8,w,c
  3269  00121A  6ED9               	movwf	fsr2l,c
  3270  00121C  0E00               	movlw	high (_ready_queue+8)
  3271  00121E  204C               	addwfc	btemp+9,w,c
  3272  001220  6EDA               	movwf	fsr2h,c
  3273  001222  0E00               	movlw	0
  3274  001224  6EDF               	movwf	indf2,c
  3275                           
  3276                           ;semaphore.c: 37:     s->task_to_ready = (s->task_to_ready + 1) % 4;
  3277                           ;stkvar	_s @ sp[(0)+-2]
  3278  001226  0EFE               	movlw	-2
  3279  001228  CFE3 F04D          	movff	plusw1,btemp+10
  3280  00122C  0EFF               	movlw	-1
  3281  00122E  CFE3 F04E          	movff	plusw1,btemp+11
  3282  001232  0E0C               	movlw	12
  3283  001234  244D               	addwf	btemp+10,w,c
  3284  001236  6ED9               	movwf	fsr2l,c
  3285  001238  0E00               	movlw	0
  3286  00123A  204E               	addwfc	btemp+11,w,c
  3287  00123C  6EDA               	movwf	fsr2h,c
  3288  00123E  CFDE F04D          	movff	postinc2,btemp+10
  3289  001242  CFDD F04E          	movff	postdec2,btemp+11
  3290  001246  0E01               	movlw	1
  3291  001248  264D               	addwf	btemp+10,f,c
  3292  00124A  0E00               	movlw	0
  3293  00124C  224E               	addwfc	btemp+11,f,c
  3294  00124E  0E03               	movlw	3
  3295  001250  164D               	andwf	btemp+10,f,c
  3296  001252  0E00               	movlw	0
  3297  001254  164E               	andwf	btemp+11,f,c
  3298                           
  3299                           ;stkvar	_s @ sp[(0)+-2]
  3300  001256  0EFE               	movlw	-2
  3301  001258  CFE3 F04B          	movff	plusw1,btemp+8
  3302  00125C  0EFF               	movlw	-1
  3303  00125E  CFE3 F04C          	movff	plusw1,btemp+9
  3304  001262  0E0C               	movlw	12
  3305  001264  244B               	addwf	btemp+8,w,c
  3306  001266  6ED9               	movwf	fsr2l,c
  3307  001268  0E00               	movlw	0
  3308  00126A  204C               	addwfc	btemp+9,w,c
  3309  00126C  6EDA               	movwf	fsr2h,c
  3310  00126E  C04D  FFDE         	movff	btemp+10,postinc2
  3311  001272  C04E  FFDD         	movff	btemp+11,postdec2
  3312  001276                     l1986:
  3313                           
  3314                           ;semaphore.c: 40:   INTCONbits.GIE = 1;
  3315  001276  8EF2               	bsf	4082,7,c	;volatile
  3316                           
  3317                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3318  001278  52E5               	movf	postdec1,f,c
  3319  00127A  52E5               	movf	postdec1,f,c
  3320  00127C  0012               	return		;funcret
  3321  00127E                     __end_of_sem_post:
  3322                           	opt callstack 0
  3323                           
  3324 ;; *************** function _lunos_delayTask *****************
  3325 ;; Defined at:
  3326 ;;		line 29 in file "kernel.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  time            2  [STACK] unsigned int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1  [STACK] void 
  3333 ;; Registers used:
  3334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3340 ;;      Params:         0       0       0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0
  3343 ;;      Totals:         0       0       0       0       0       0       0
  3344 ;;Total ram usage:        0 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    7
  3347 ;; This function calls:
  3348 ;;		_dispatcher
  3349 ;; This function is called by:
  3350 ;;		_count_bottles
  3351 ;;		_fill_bottle
  3352 ;;		_task_0
  3353 ;;		_task_1
  3354 ;;		_task_2
  3355 ;;		_task_xuxa
  3356 ;; This function uses a reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text19
  3360  001952                     __ptext19:
  3361                           	opt callstack 0
  3362  001952                     _lunos_delayTask:
  3363                           	opt callstack 18
  3364                           
  3365                           ;kernel.c: 30:   INTCONbits.GIE = 0;
  3366                           
  3367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3368                           ;incstack = 0
  3369  001952  9EF2               	bcf	4082,7,c	;volatile
  3370                           
  3371                           ;kernel.c: 32:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  3372                           ;stkvar	_time @ sp[(0)+-2]
  3373  001954  50E1               	movf	fsr1l,w,c
  3374  001956  0FFE               	addlw	-2
  3375  001958  6ED9               	movwf	fsr2l,c
  3376  00195A  50E2               	movf	fsr1h,w,c
  3377  00195C  6EDA               	movwf	fsr2h,c
  3378  00195E  0EFF               	movlw	255
  3379  001960  22DA               	addwfc	fsr2h,f,c
  3380  001962  EE02  F0F2         	lfsr	0,_ready_queue+542
  3381  001966  CFEE F04D          	movff	postinc0,btemp+10
  3382  00196A  CFED F04E          	movff	postdec0,btemp+11
  3383  00196E  0E6C               	movlw	108
  3384  001970  024D               	mulwf	btemp+10,c
  3385  001972  CFF3 F04B          	movff	prodl,btemp+8
  3386  001976  CFF4 F04C          	movff	prodh,btemp+9
  3387  00197A  024E               	mulwf	btemp+11,c
  3388  00197C  50F3               	movf	prodl,w,c
  3389  00197E  264C               	addwf	btemp+9,f,c
  3390  001980  0E3E               	movlw	low (_ready_queue+106)
  3391  001982  244B               	addwf	btemp+8,w,c
  3392  001984  6EE9               	movwf	fsr0l,c
  3393  001986  0E01               	movlw	high (_ready_queue+106)
  3394  001988  204C               	addwfc	btemp+9,w,c
  3395  00198A  6EEA               	movwf	fsr0h,c
  3396  00198C  CFDE FFEE          	movff	postinc2,postinc0
  3397  001990  CFDD FFED          	movff	postdec2,postdec0
  3398                           
  3399                           ;kernel.c: 33:   dispatcher(WAITING);
  3400  001994  0E02               	movlw	2
  3401  001996  6EE6               	movwf	postinc1,c
  3402  001998  EC66  F002         	call	_dispatcher	;wreg free
  3403                           
  3404                           ;kernel.c: 35:   INTCONbits.GIE = 1;
  3405  00199C  8EF2               	bsf	4082,7,c	;volatile
  3406                           
  3407                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3408  00199E  52E5               	movf	postdec1,f,c
  3409  0019A0  52E5               	movf	postdec1,f,c
  3410  0019A2  0012               	return		;funcret
  3411  0019A4                     __end_of_lunos_delayTask:
  3412                           	opt callstack 0
  3413                           
  3414 ;; *************** function _fill_bottle *****************
  3415 ;; Defined at:
  3416 ;;		line 59 in file "tasks.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1  [STACK] void 
  3423 ;; Registers used:
  3424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3430 ;;      Params:         0       0       0       0       0       0       0
  3431 ;;      Locals:         0       0       0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0
  3433 ;;      Totals:         0       0       0       0       0       0       0
  3434 ;;Total ram usage:        0 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    8
  3437 ;; This function calls:
  3438 ;;		_lunos_delayTask
  3439 ;;		_sem_post
  3440 ;;		_sem_wait
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text20
  3447  001B96                     __ptext20:
  3448                           	opt callstack 0
  3449  001B96                     _fill_bottle:
  3450                           	opt callstack 18
  3451                           
  3452                           ;tasks.c: 61:         sem_wait(&fill_sem);
  3453                           
  3454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3455                           ;incstack = 0
  3456                           ;tasks.c: 60:     while(1){
  3457  001B96  0E1B               	movlw	low _fill_sem
  3458  001B98  6EE6               	movwf	postinc1,c
  3459  001B9A  0E00               	movlw	high _fill_sem
  3460  001B9C  6EE6               	movwf	postinc1,c
  3461  001B9E  EC3F  F009         	call	_sem_wait	;wreg free
  3462                           
  3463                           ;tasks.c: 62:         while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  3464  001BA2  D006               	goto	l2102
  3465  001BA4                     l2100:
  3466                           
  3467                           ;tasks.c: 63:             lunos_delayTask(100);
  3468  001BA4  0E64               	movlw	100
  3469  001BA6  6EE6               	movwf	postinc1,c
  3470  001BA8  0E00               	movlw	0
  3471  001BAA  6EE6               	movwf	postinc1,c
  3472  001BAC  ECA9  F00C         	call	_lunos_delayTask	;wreg free
  3473  001BB0                     l2102:
  3474                           
  3475                           ;tasks.c: 62:         while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  3476  001BB0  A082               	btfss	3970,0,c	;volatile
  3477  001BB2  B282               	btfsc	3970,1,c	;volatile
  3478  001BB4  D7F0               	goto	_fill_bottle
  3479  001BB6  B482               	btfsc	3970,2,c	;volatile
  3480  001BB8  D7EE               	goto	_fill_bottle
  3481  001BBA  D7F4               	goto	l2100
  3482  001BBC                     __end_of_fill_bottle:
  3483                           	opt callstack 0
  3484                           
  3485 ;; *************** function _check_level *****************
  3486 ;; Defined at:
  3487 ;;		line 69 in file "tasks.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1  [STACK] void 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3501 ;;      Params:         0       0       0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0
  3504 ;;      Totals:         0       0       0       0       0       0       0
  3505 ;;Total ram usage:        0 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    8
  3508 ;; This function calls:
  3509 ;;		_sem_post
  3510 ;;		_sem_wait
  3511 ;; This function is called by:
  3512 ;;		_main
  3513 ;; This function uses a reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text21
  3517  001ACA                     __ptext21:
  3518                           	opt callstack 0
  3519  001ACA                     _check_level:
  3520                           	opt callstack 18
  3521                           
  3522                           ;tasks.c: 71:         sem_wait(&check_sem);
  3523                           
  3524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3525                           ;incstack = 0
  3526                           ;tasks.c: 70:     while(1){
  3527  001ACA  0E0D               	movlw	low _check_sem
  3528  001ACC  6EE6               	movwf	postinc1,c
  3529  001ACE  0E00               	movlw	high _check_sem
  3530  001AD0  6EE6               	movwf	postinc1,c
  3531  001AD2  EC3F  F009         	call	_sem_wait	;wreg free
  3532                           
  3533                           ;tasks.c: 72:         if (!PORTDbits.RD1)
  3534  001AD6  B283               	btfsc	3971,1,c	;volatile
  3535  001AD8  D002               	goto	l316
  3536                           
  3537                           ;tasks.c: 73:             global_buffer.bottles[0].bottle_state = EMPTY;
  3538  001ADA  6A03               	clrf	_global_buffer+2,c
  3539  001ADC  D004               	goto	l317
  3540  001ADE                     l316:
  3541  001ADE  A283               	btfss	3971,1,c	;volatile
  3542  001AE0  D002               	goto	l317
  3543                           
  3544                           ;tasks.c: 75:             global_buffer.bottles[0].bottle_state = FULL;
  3545  001AE2  0E01               	movlw	1
  3546  001AE4  6E03               	movwf	_global_buffer+2,c
  3547  001AE6                     l317:
  3548                           
  3549                           ;tasks.c: 78:         if (!PORTDbits.RD2)
  3550  001AE6  B483               	btfsc	3971,2,c	;volatile
  3551  001AE8  D002               	goto	l320
  3552                           
  3553                           ;tasks.c: 79:             global_buffer.bottles[1].bottle_state = EMPTY;
  3554  001AEA  6A04               	clrf	_global_buffer+3,c
  3555  001AEC  D004               	goto	l321
  3556  001AEE                     l320:
  3557  001AEE  A483               	btfss	3971,2,c	;volatile
  3558  001AF0  D002               	goto	l321
  3559                           
  3560                           ;tasks.c: 81:             global_buffer.bottles[1].bottle_state = FULL;
  3561  001AF2  0E01               	movlw	1
  3562  001AF4  6E04               	movwf	_global_buffer+3,c
  3563  001AF6                     l321:
  3564                           
  3565                           ;tasks.c: 84:         if (!PORTDbits.RD3)
  3566  001AF6  B683               	btfsc	3971,3,c	;volatile
  3567  001AF8  D002               	goto	l324
  3568                           
  3569                           ;tasks.c: 85:             global_buffer.bottles[2].bottle_state = EMPTY;
  3570  001AFA  6A05               	clrf	_global_buffer+4,c
  3571  001AFC  D7E6               	goto	_check_level
  3572  001AFE                     l324:
  3573  001AFE  A683               	btfss	3971,3,c	;volatile
  3574  001B00  D7E4               	goto	_check_level
  3575                           
  3576                           ;tasks.c: 87:             global_buffer.bottles[2].bottle_state = FULL;
  3577  001B02  0E01               	movlw	1
  3578  001B04  6E05               	movwf	_global_buffer+4,c
  3579  001B06  D7E1               	goto	_check_level
  3580  001B08                     __end_of_check_level:
  3581                           	opt callstack 0
  3582                           
  3583 ;; *************** function _cover_bottle *****************
  3584 ;; Defined at:
  3585 ;;		line 93 in file "tasks.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  i               2    0        int 
  3590 ;;  count           2    0        int 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1  [STACK] void 
  3593 ;; Registers used:
  3594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3600 ;;      Params:         0       0       0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    9
  3607 ;; This function calls:
  3608 ;;		_pipe_write
  3609 ;;		_sem_post
  3610 ;;		_sem_wait
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text22
  3617  0019A4                     __ptext22:
  3618                           	opt callstack 0
  3619  0019A4                     _cover_bottle:
  3620                           	opt callstack 17
  3621                           
  3622                           ;tasks.c: 95:         sem_wait(&cover_sem);
  3623                           
  3624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3625                           ;incstack = 0
  3626                           ;tasks.c: 94:     while(1){
  3627  0019A4  0E8E               	movlw	low _cover_sem
  3628  0019A6  6EE6               	movwf	postinc1,c
  3629  0019A8  0E00               	movlw	high _cover_sem
  3630  0019AA  6EE6               	movwf	postinc1,c
  3631  0019AC  EC3F  F009         	call	_sem_wait	;wreg free
  3632                           
  3633                           ;tasks.c: 96:         if (PORTCbits.RC3){
  3634  0019B0  A682               	btfss	3970,3,c	;volatile
  3635  0019B2  D009               	goto	l334
  3636                           
  3637                           ;tasks.c: 97:             if(global_buffer.bottles[0].bottle_state == FULL)
  3638  0019B4  0403               	decf	_global_buffer+2,w,c
  3639  0019B6  A4D8               	btfss	status,2,c
  3640  0019B8  D002               	goto	l335
  3641                           
  3642                           ;tasks.c: 98:                 global_buffer.bottles[0].bottle_state = CLOSED;
  3643  0019BA  0E02               	movlw	2
  3644  0019BC  D003               	goto	L3
  3645  0019BE                     l335:
  3646  0019BE  A682               	btfss	3970,3,c	;volatile
  3647  0019C0  D002               	goto	l334
  3648                           
  3649                           ;tasks.c: 100:                 global_buffer.bottles[0].bottle_state = FAIL;
  3650  0019C2  0E03               	movlw	3
  3651  0019C4                     L3:
  3652  0019C4  6E03               	movwf	_global_buffer+2,c
  3653  0019C6                     l334:
  3654                           
  3655                           ;tasks.c: 103:         if (PORTCbits.RC4){
  3656  0019C6  A882               	btfss	3970,4,c	;volatile
  3657  0019C8  D009               	goto	l339
  3658                           
  3659                           ;tasks.c: 104:             if(global_buffer.bottles[1].bottle_state == FULL)
  3660  0019CA  0404               	decf	_global_buffer+3,w,c
  3661  0019CC  A4D8               	btfss	status,2,c
  3662  0019CE  D002               	goto	l340
  3663                           
  3664                           ;tasks.c: 105:                 global_buffer.bottles[1].bottle_state = CLOSED;
  3665  0019D0  0E02               	movlw	2
  3666  0019D2  D003               	goto	L4
  3667  0019D4                     l340:
  3668  0019D4  A882               	btfss	3970,4,c	;volatile
  3669  0019D6  D002               	goto	l339
  3670                           
  3671                           ;tasks.c: 107:                 global_buffer.bottles[1].bottle_state = FAIL;
  3672  0019D8  0E03               	movlw	3
  3673  0019DA                     L4:
  3674  0019DA  6E04               	movwf	_global_buffer+3,c
  3675  0019DC                     l339:
  3676                           
  3677                           ;tasks.c: 110:         if (PORTCbits.RC5){
  3678  0019DC  AA82               	btfss	3970,5,c	;volatile
  3679  0019DE  D7E2               	goto	_cover_bottle
  3680                           
  3681                           ;tasks.c: 111:             if(global_buffer.bottles[2].bottle_state == FULL)
  3682  0019E0  0405               	decf	_global_buffer+4,w,c
  3683  0019E2  A4D8               	btfss	status,2,c
  3684  0019E4  D002               	goto	l345
  3685                           
  3686                           ;tasks.c: 112:                 global_buffer.bottles[2].bottle_state = CLOSED;
  3687  0019E6  0E02               	movlw	2
  3688  0019E8  D003               	goto	L5
  3689  0019EA                     l345:
  3690  0019EA  AA82               	btfss	3970,5,c	;volatile
  3691  0019EC  D7DB               	goto	_cover_bottle
  3692                           
  3693                           ;tasks.c: 114:                 global_buffer.bottles[2].bottle_state = FAIL;
  3694  0019EE  0E03               	movlw	3
  3695  0019F0                     L5:
  3696  0019F0  6E05               	movwf	_global_buffer+4,c
  3697                           
  3698                           ;tasks.c: 116:         }
  3699  0019F2  D7D8               	goto	_cover_bottle
  3700  0019F4                     __end_of_cover_bottle:
  3701                           	opt callstack 0
  3702                           
  3703 ;; *************** function _pipe_write *****************
  3704 ;; Defined at:
  3705 ;;		line 18 in file "pipe.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  p               2  [STACK] PTR struct pipe
  3708 ;;		 -> p(12), 
  3709 ;;  data            2  [STACK] unsigned int 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1  [STACK] void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3721 ;;      Params:         0       0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0       0
  3724 ;;      Totals:         0       0       0       0       0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    8
  3728 ;; This function calls:
  3729 ;;		_sem_post
  3730 ;;		_sem_wait
  3731 ;; This function is called by:
  3732 ;;		_cover_bottle
  3733 ;;		_task_0
  3734 ;; This function uses a reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text23
  3738  000E7E                     __ptext23:
  3739                           	opt callstack 0
  3740  000E7E                     _pipe_write:
  3741                           	opt callstack 17
  3742                           
  3743                           ;pipe.c: 20:   sem_wait(p->w);
  3744                           ;stkvar	_p @ sp[(0)+-2]
  3745                           
  3746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3747                           ;incstack = 0
  3748  000E7E  0EFE               	movlw	-2
  3749  000E80  CFE3 F04D          	movff	plusw1,btemp+10
  3750  000E84  0EFF               	movlw	-1
  3751  000E86  CFE3 F04E          	movff	plusw1,btemp+11
  3752  000E8A  0E08               	movlw	8
  3753  000E8C  244D               	addwf	btemp+10,w,c
  3754  000E8E  6ED9               	movwf	fsr2l,c
  3755  000E90  0E00               	movlw	0
  3756  000E92  204E               	addwfc	btemp+11,w,c
  3757  000E94  6EDA               	movwf	fsr2h,c
  3758  000E96  CFDE F04D          	movff	postinc2,btemp+10
  3759  000E9A  CFDD F04E          	movff	postdec2,btemp+11
  3760  000E9E  C04D  FFE6         	movff	btemp+10,postinc1
  3761  000EA2  C04E  FFE6         	movff	btemp+11,postinc1
  3762  000EA6  EC3F  F009         	call	_sem_wait	;wreg free
  3763                           
  3764                           ;pipe.c: 21:   p->pipe_data[p->index_write] = data;
  3765                           ;stkvar	_data @ sp[(0)+-4]
  3766  000EAA  50E1               	movf	fsr1l,w,c
  3767  000EAC  0FFC               	addlw	-4
  3768  000EAE  6ED9               	movwf	fsr2l,c
  3769  000EB0  50E2               	movf	fsr1h,w,c
  3770  000EB2  6EDA               	movwf	fsr2h,c
  3771  000EB4  0EFF               	movlw	255
  3772  000EB6  22DA               	addwfc	fsr2h,f,c
  3773                           
  3774                           ;stkvar	_p @ sp[(0)+-2]
  3775  000EB8  0EFE               	movlw	-2
  3776  000EBA  CFE3 F04D          	movff	plusw1,btemp+10
  3777  000EBE  0EFF               	movlw	-1
  3778  000EC0  CFE3 F04E          	movff	plusw1,btemp+11
  3779  000EC4  0E04               	movlw	4
  3780  000EC6  244D               	addwf	btemp+10,w,c
  3781  000EC8  6EE9               	movwf	fsr0l,c
  3782  000ECA  0E00               	movlw	0
  3783  000ECC  204E               	addwfc	btemp+11,w,c
  3784  000ECE  6EEA               	movwf	fsr0h,c
  3785  000ED0  CFEE F04D          	movff	postinc0,btemp+10
  3786  000ED4  CFED F04E          	movff	postdec0,btemp+11
  3787  000ED8  90D8               	bcf	status,0,c
  3788  000EDA  344D               	rlcf	btemp+10,w,c
  3789  000EDC  6E4B               	movwf	btemp+8,c
  3790  000EDE  344E               	rlcf	btemp+11,w,c
  3791  000EE0  6E4C               	movwf	btemp+9,c
  3792                           
  3793                           ;stkvar	_p @ sp[(0)+-2]
  3794  000EE2  0EFE               	movlw	-2
  3795  000EE4  CFE3 F04D          	movff	plusw1,btemp+10
  3796  000EE8  0EFF               	movlw	-1
  3797  000EEA  CFE3 F04E          	movff	plusw1,btemp+11
  3798  000EEE  504B               	movf	btemp+8,w,c
  3799  000EF0  244D               	addwf	btemp+10,w,c
  3800  000EF2  6EE9               	movwf	fsr0l,c
  3801  000EF4  504C               	movf	btemp+9,w,c
  3802  000EF6  204E               	addwfc	btemp+11,w,c
  3803  000EF8  6EEA               	movwf	fsr0h,c
  3804  000EFA  CFDE FFEE          	movff	postinc2,postinc0
  3805  000EFE  CFDD FFED          	movff	postdec2,postdec0
  3806                           
  3807                           ;pipe.c: 22:   p->index_write = (p->index_write + 1) % 2;
  3808                           ;stkvar	_p @ sp[(0)+-2]
  3809  000F02  0EFE               	movlw	-2
  3810  000F04  CFE3 F04D          	movff	plusw1,btemp+10
  3811  000F08  0EFF               	movlw	-1
  3812  000F0A  CFE3 F04E          	movff	plusw1,btemp+11
  3813  000F0E  0E04               	movlw	4
  3814  000F10  244D               	addwf	btemp+10,w,c
  3815  000F12  6ED9               	movwf	fsr2l,c
  3816  000F14  0E00               	movlw	0
  3817  000F16  204E               	addwfc	btemp+11,w,c
  3818  000F18  6EDA               	movwf	fsr2h,c
  3819  000F1A  CFDE F04D          	movff	postinc2,btemp+10
  3820  000F1E  CFDD F04E          	movff	postdec2,btemp+11
  3821  000F22  0E01               	movlw	1
  3822  000F24  264D               	addwf	btemp+10,f,c
  3823  000F26  0E00               	movlw	0
  3824  000F28  224E               	addwfc	btemp+11,f,c
  3825  000F2A  0E01               	movlw	1
  3826  000F2C  164D               	andwf	btemp+10,f,c
  3827  000F2E  0E00               	movlw	0
  3828  000F30  164E               	andwf	btemp+11,f,c
  3829                           
  3830                           ;stkvar	_p @ sp[(0)+-2]
  3831  000F32  0EFE               	movlw	-2
  3832  000F34  CFE3 F04B          	movff	plusw1,btemp+8
  3833  000F38  0EFF               	movlw	-1
  3834  000F3A  CFE3 F04C          	movff	plusw1,btemp+9
  3835  000F3E  0E04               	movlw	4
  3836  000F40  244B               	addwf	btemp+8,w,c
  3837  000F42  6ED9               	movwf	fsr2l,c
  3838  000F44  0E00               	movlw	0
  3839  000F46  204C               	addwfc	btemp+9,w,c
  3840  000F48  6EDA               	movwf	fsr2h,c
  3841  000F4A  C04D  FFDE         	movff	btemp+10,postinc2
  3842  000F4E  C04E  FFDD         	movff	btemp+11,postdec2
  3843                           
  3844                           ;pipe.c: 23:   sem_post(p->r);
  3845                           ;stkvar	_p @ sp[(0)+-2]
  3846  000F52  0EFE               	movlw	-2
  3847  000F54  CFE3 F04D          	movff	plusw1,btemp+10
  3848  000F58  0EFF               	movlw	-1
  3849  000F5A  CFE3 F04E          	movff	plusw1,btemp+11
  3850  000F5E  0E0A               	movlw	10
  3851  000F60  244D               	addwf	btemp+10,w,c
  3852  000F62  6ED9               	movwf	fsr2l,c
  3853  000F64  0E00               	movlw	0
  3854  000F66  204E               	addwfc	btemp+11,w,c
  3855  000F68  6EDA               	movwf	fsr2h,c
  3856  000F6A  CFDE F04D          	movff	postinc2,btemp+10
  3857  000F6E  CFDD F04E          	movff	postdec2,btemp+11
  3858  000F72  C04D  FFE6         	movff	btemp+10,postinc1
  3859  000F76  C04E  FFE6         	movff	btemp+11,postinc1
  3860  000F7A  ECC4  F008         	call	_sem_post	;wreg free
  3861                           
  3862                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  3863  000F7E  52E5               	movf	postdec1,f,c
  3864  000F80  52E5               	movf	postdec1,f,c
  3865  000F82  52E5               	movf	postdec1,f,c
  3866  000F84  52E5               	movf	postdec1,f,c
  3867  000F86  0012               	return		;funcret
  3868  000F88                     __end_of_pipe_write:
  3869                           	opt callstack 0
  3870                           
  3871 ;; *************** function _count_out *****************
  3872 ;; Defined at:
  3873 ;;		line 126 in file "tasks.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  count           2  [STACK] unsigned int 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1  [STACK] void 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3887 ;;      Params:         0       0       0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0
  3890 ;;      Totals:         0       0       0       0       0       0       0
  3891 ;;Total ram usage:        0 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    9
  3894 ;; This function calls:
  3895 ;;		_pipe_read
  3896 ;;		_sem_post
  3897 ;;		_sem_wait
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text24
  3904  001B3A                     __ptext24:
  3905                           	opt callstack 0
  3906  001B3A                     _count_out:
  3907                           	opt callstack 0
  3908                           
  3909                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3910  001B3A  52E6               	movf	postinc1,f,c
  3911  001B3C  52E6               	movf	postinc1,f,c
  3912                           
  3913                           ;tasks.c: 127:     sem_wait(&out_sem);
  3914                           
  3915                           ;incstack = 0
  3916  001B3E  0E80               	movlw	low _out_sem
  3917  001B40  6EE6               	movwf	postinc1,c
  3918  001B42  0E00               	movlw	high _out_sem
  3919  001B44  6EE6               	movwf	postinc1,c
  3920  001B46  EC3F  F009         	call	_sem_wait	;wreg free
  3921  001B4A                     l357:
  3922                           
  3923                           ;tasks.c: 130:         pipe_read(&p, &count);
  3924                           ;stkvar	_count @ sp[(-2)+0]
  3925  001B4A  0EFE               	movlw	254
  3926  001B4C  24E1               	addwf	fsr1l,w,c
  3927  001B4E  6E43               	movwf	btemp,c
  3928  001B50  0EFF               	movlw	255
  3929  001B52  20E2               	addwfc	fsr1h,w,c
  3930  001B54  6E44               	movwf	btemp+1,c
  3931  001B56  C043  FFE6         	movff	btemp,postinc1
  3932  001B5A  C044  FFE6         	movff	btemp+1,postinc1
  3933  001B5E  0E37               	movlw	low _p
  3934  001B60  6EE6               	movwf	postinc1,c
  3935  001B62  0E00               	movlw	high _p
  3936  001B64  6EE6               	movwf	postinc1,c
  3937  001B66  ECC4  F007         	call	_pipe_read	;wreg free
  3938  001B6A  D7EF               	goto	l357
  3939  001B6C                     __end_of_count_out:
  3940                           	opt callstack 0
  3941                           
  3942 ;; *************** function _pipe_read *****************
  3943 ;; Defined at:
  3944 ;;		line 27 in file "pipe.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  p               2  [STACK] PTR struct pipe
  3947 ;;		 -> p(12), 
  3948 ;;  data            2  [STACK] PTR unsigned int 
  3949 ;;		 -> dado(2), count(2), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1  [STACK] void 
  3954 ;; Registers used:
  3955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3961 ;;      Params:         0       0       0       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0
  3964 ;;      Totals:         0       0       0       0       0       0       0
  3965 ;;Total ram usage:        0 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    8
  3968 ;; This function calls:
  3969 ;;		_sem_post
  3970 ;;		_sem_wait
  3971 ;; This function is called by:
  3972 ;;		_count_out
  3973 ;;		_task_1
  3974 ;; This function uses a reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text25
  3978  000F88                     __ptext25:
  3979                           	opt callstack 0
  3980  000F88                     _pipe_read:
  3981                           	opt callstack 17
  3982                           
  3983                           ;pipe.c: 29:   sem_wait(p->r);
  3984                           ;stkvar	_p @ sp[(0)+-2]
  3985                           
  3986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3987                           ;incstack = 0
  3988  000F88  0EFE               	movlw	-2
  3989  000F8A  CFE3 F04D          	movff	plusw1,btemp+10
  3990  000F8E  0EFF               	movlw	-1
  3991  000F90  CFE3 F04E          	movff	plusw1,btemp+11
  3992  000F94  0E0A               	movlw	10
  3993  000F96  244D               	addwf	btemp+10,w,c
  3994  000F98  6ED9               	movwf	fsr2l,c
  3995  000F9A  0E00               	movlw	0
  3996  000F9C  204E               	addwfc	btemp+11,w,c
  3997  000F9E  6EDA               	movwf	fsr2h,c
  3998  000FA0  CFDE F04D          	movff	postinc2,btemp+10
  3999  000FA4  CFDD F04E          	movff	postdec2,btemp+11
  4000  000FA8  C04D  FFE6         	movff	btemp+10,postinc1
  4001  000FAC  C04E  FFE6         	movff	btemp+11,postinc1
  4002  000FB0  EC3F  F009         	call	_sem_wait	;wreg free
  4003                           
  4004                           ;pipe.c: 30:   *data = p->pipe_data[p->index_read];
  4005                           ;stkvar	_p @ sp[(0)+-2]
  4006  000FB4  0EFE               	movlw	-2
  4007  000FB6  CFE3 F04D          	movff	plusw1,btemp+10
  4008  000FBA  0EFF               	movlw	-1
  4009  000FBC  CFE3 F04E          	movff	plusw1,btemp+11
  4010  000FC0  0E06               	movlw	6
  4011  000FC2  244D               	addwf	btemp+10,w,c
  4012  000FC4  6ED9               	movwf	fsr2l,c
  4013  000FC6  0E00               	movlw	0
  4014  000FC8  204E               	addwfc	btemp+11,w,c
  4015  000FCA  6EDA               	movwf	fsr2h,c
  4016  000FCC  CFDE F04D          	movff	postinc2,btemp+10
  4017  000FD0  CFDD F04E          	movff	postdec2,btemp+11
  4018  000FD4  90D8               	bcf	status,0,c
  4019  000FD6  344D               	rlcf	btemp+10,w,c
  4020  000FD8  6E4B               	movwf	btemp+8,c
  4021  000FDA  344E               	rlcf	btemp+11,w,c
  4022  000FDC  6E4C               	movwf	btemp+9,c
  4023                           
  4024                           ;stkvar	_p @ sp[(0)+-2]
  4025  000FDE  0EFE               	movlw	-2
  4026  000FE0  CFE3 F04D          	movff	plusw1,btemp+10
  4027  000FE4  0EFF               	movlw	-1
  4028  000FE6  CFE3 F04E          	movff	plusw1,btemp+11
  4029  000FEA  504B               	movf	btemp+8,w,c
  4030  000FEC  244D               	addwf	btemp+10,w,c
  4031  000FEE  6ED9               	movwf	fsr2l,c
  4032  000FF0  504C               	movf	btemp+9,w,c
  4033  000FF2  204E               	addwfc	btemp+11,w,c
  4034  000FF4  6EDA               	movwf	fsr2h,c
  4035                           
  4036                           ;stkvar	_data @ sp[(0)+-4]
  4037  000FF6  0EFC               	movlw	-4
  4038  000FF8  CFE3 FFE9          	movff	plusw1,fsr0l
  4039  000FFC  0EFD               	movlw	-3
  4040  000FFE  CFE3 FFEA          	movff	plusw1,fsr0h
  4041  001002  CFDE FFEE          	movff	postinc2,postinc0
  4042  001006  CFDD FFED          	movff	postdec2,postdec0
  4043                           
  4044                           ;pipe.c: 31:   p->index_read = (p->index_read + 1) % 2;
  4045                           ;stkvar	_p @ sp[(0)+-2]
  4046  00100A  0EFE               	movlw	-2
  4047  00100C  CFE3 F04D          	movff	plusw1,btemp+10
  4048  001010  0EFF               	movlw	-1
  4049  001012  CFE3 F04E          	movff	plusw1,btemp+11
  4050  001016  0E06               	movlw	6
  4051  001018  244D               	addwf	btemp+10,w,c
  4052  00101A  6ED9               	movwf	fsr2l,c
  4053  00101C  0E00               	movlw	0
  4054  00101E  204E               	addwfc	btemp+11,w,c
  4055  001020  6EDA               	movwf	fsr2h,c
  4056  001022  CFDE F04D          	movff	postinc2,btemp+10
  4057  001026  CFDD F04E          	movff	postdec2,btemp+11
  4058  00102A  0E01               	movlw	1
  4059  00102C  264D               	addwf	btemp+10,f,c
  4060  00102E  0E00               	movlw	0
  4061  001030  224E               	addwfc	btemp+11,f,c
  4062  001032  0E01               	movlw	1
  4063  001034  164D               	andwf	btemp+10,f,c
  4064  001036  0E00               	movlw	0
  4065  001038  164E               	andwf	btemp+11,f,c
  4066                           
  4067                           ;stkvar	_p @ sp[(0)+-2]
  4068  00103A  0EFE               	movlw	-2
  4069  00103C  CFE3 F04B          	movff	plusw1,btemp+8
  4070  001040  0EFF               	movlw	-1
  4071  001042  CFE3 F04C          	movff	plusw1,btemp+9
  4072  001046  0E06               	movlw	6
  4073  001048  244B               	addwf	btemp+8,w,c
  4074  00104A  6ED9               	movwf	fsr2l,c
  4075  00104C  0E00               	movlw	0
  4076  00104E  204C               	addwfc	btemp+9,w,c
  4077  001050  6EDA               	movwf	fsr2h,c
  4078  001052  C04D  FFDE         	movff	btemp+10,postinc2
  4079  001056  C04E  FFDD         	movff	btemp+11,postdec2
  4080                           
  4081                           ;pipe.c: 32:   sem_post(p->w);
  4082                           ;stkvar	_p @ sp[(0)+-2]
  4083  00105A  0EFE               	movlw	-2
  4084  00105C  CFE3 F04D          	movff	plusw1,btemp+10
  4085  001060  0EFF               	movlw	-1
  4086  001062  CFE3 F04E          	movff	plusw1,btemp+11
  4087  001066  0E08               	movlw	8
  4088  001068  244D               	addwf	btemp+10,w,c
  4089  00106A  6ED9               	movwf	fsr2l,c
  4090  00106C  0E00               	movlw	0
  4091  00106E  204E               	addwfc	btemp+11,w,c
  4092  001070  6EDA               	movwf	fsr2h,c
  4093  001072  CFDE F04D          	movff	postinc2,btemp+10
  4094  001076  CFDD F04E          	movff	postdec2,btemp+11
  4095  00107A  C04D  FFE6         	movff	btemp+10,postinc1
  4096  00107E  C04E  FFE6         	movff	btemp+11,postinc1
  4097  001082  ECC4  F008         	call	_sem_post	;wreg free
  4098                           
  4099                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  4100  001086  52E5               	movf	postdec1,f,c
  4101  001088  52E5               	movf	postdec1,f,c
  4102  00108A  52E5               	movf	postdec1,f,c
  4103  00108C  52E5               	movf	postdec1,f,c
  4104  00108E  0012               	return		;funcret
  4105  001090                     __end_of_pipe_read:
  4106                           	opt callstack 0
  4107                           
  4108 ;; *************** function _task_0 *****************
  4109 ;; Defined at:
  4110 ;;		line 135 in file "tasks.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1  [STACK] void 
  4117 ;; Registers used:
  4118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4124 ;;      Params:         0       0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0
  4127 ;;      Totals:         0       0       0       0       0       0       0
  4128 ;;Total ram usage:        0 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    9
  4131 ;; This function calls:
  4132 ;;		_lunos_delayTask
  4133 ;;		_pipe_write
  4134 ;; This function is called by:
  4135 ;;		Interrupt level 1
  4136 ;; This function uses a reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text26
  4140  001A8A                     __ptext26:
  4141                           	opt callstack 0
  4142  001A8A                     _task_0:
  4143                           	opt callstack 17
  4144                           
  4145                           ;tasks.c: 137:     pipe_write(&p, 1);
  4146                           
  4147                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4148                           ;incstack = 0
  4149                           ;tasks.c: 136:   while(1){
  4150  001A8A  0E01               	movlw	1
  4151  001A8C  6EE6               	movwf	postinc1,c
  4152  001A8E  0E00               	movlw	0
  4153  001A90  6EE6               	movwf	postinc1,c
  4154  001A92  0E37               	movlw	low _p
  4155  001A94  6EE6               	movwf	postinc1,c
  4156  001A96  0E00               	movlw	high _p
  4157  001A98  6EE6               	movwf	postinc1,c
  4158  001A9A  EC3F  F007         	call	_pipe_write	;wreg free
  4159                           
  4160                           ;tasks.c: 138:     PORTBbits.RB3 = ~PORTBbits.RB3;
  4161  001A9E  A681               	btfss	3969,3,c	;volatile
  4162  001AA0  D002               	goto	u113_20
  4163  001AA2  0E01               	movlw	1
  4164  001AA4  D001               	goto	u113_26
  4165  001AA6                     u113_20:
  4166  001AA6  0E00               	movlw	0
  4167  001AA8                     u113_26:
  4168  001AA8  0AFF               	xorlw	255
  4169  001AAA  6E4E               	movwf	btemp+11,c
  4170  001AAC  464E               	rlncf	btemp+11,f,c
  4171  001AAE  464E               	rlncf	btemp+11,f,c
  4172  001AB0  464E               	rlncf	btemp+11,f,c
  4173  001AB2  5081               	movf	3969,w,c	;volatile
  4174  001AB4  184E               	xorwf	btemp+11,w,c
  4175  001AB6  0BF7               	andlw	-9
  4176  001AB8  184E               	xorwf	btemp+11,w,c
  4177  001ABA  6E81               	movwf	3969,c	;volatile
  4178                           
  4179                           ;tasks.c: 139:     lunos_delayTask(1000);
  4180  001ABC  0EE8               	movlw	232
  4181  001ABE  6EE6               	movwf	postinc1,c
  4182  001AC0  0E03               	movlw	3
  4183  001AC2  6EE6               	movwf	postinc1,c
  4184  001AC4  ECA9  F00C         	call	_lunos_delayTask	;wreg free
  4185  001AC8  D7E0               	goto	_task_0
  4186  001ACA                     __end_of_task_0:
  4187                           	opt callstack 0
  4188                           
  4189 ;; *************** function _task_1 *****************
  4190 ;; Defined at:
  4191 ;;		line 144 in file "tasks.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  dado            2  [STACK] unsigned int 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1  [STACK] void 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4205 ;;      Params:         0       0       0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0
  4208 ;;      Totals:         0       0       0       0       0       0       0
  4209 ;;Total ram usage:        0 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    9
  4212 ;; This function calls:
  4213 ;;		_lunos_delayTask
  4214 ;;		_pipe_read
  4215 ;; This function is called by:
  4216 ;;		Interrupt level 1
  4217 ;; This function uses a reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text27
  4221  0019F4                     __ptext27:
  4222                           	opt callstack 0
  4223  0019F4                     _task_1:
  4224                           	opt callstack 0
  4225                           
  4226                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4227  0019F4  52E6               	movf	postinc1,f,c
  4228  0019F6  52E6               	movf	postinc1,f,c
  4229  0019F8                     l369:
  4230                           
  4231                           ;tasks.c: 147:     pipe_read(&p, &dado);
  4232                           ;stkvar	_dado @ sp[(-2)+0]
  4233  0019F8  0EFE               	movlw	254
  4234  0019FA  24E1               	addwf	fsr1l,w,c
  4235  0019FC  6E43               	movwf	btemp,c
  4236  0019FE  0EFF               	movlw	255
  4237  001A00  20E2               	addwfc	fsr1h,w,c
  4238  001A02  6E44               	movwf	btemp+1,c
  4239  001A04  C043  FFE6         	movff	btemp,postinc1
  4240  001A08  C044  FFE6         	movff	btemp+1,postinc1
  4241  001A0C  0E37               	movlw	low _p
  4242  001A0E  6EE6               	movwf	postinc1,c
  4243  001A10  0E00               	movlw	high _p
  4244  001A12  6EE6               	movwf	postinc1,c
  4245  001A14  ECC4  F007         	call	_pipe_read	;wreg free
  4246                           
  4247                           ;tasks.c: 148:     PORTBbits.RB4 = ~PORTBbits.RB4;
  4248  001A18  A881               	btfss	3969,4,c	;volatile
  4249  001A1A  D002               	goto	u114_20
  4250  001A1C  0E01               	movlw	1
  4251  001A1E  D001               	goto	u114_26
  4252  001A20                     u114_20:
  4253  001A20  0E00               	movlw	0
  4254  001A22                     u114_26:
  4255  001A22  0AFF               	xorlw	255
  4256  001A24  6E4E               	movwf	btemp+11,c
  4257  001A26  3A4E               	swapf	btemp+11,f,c
  4258  001A28  5081               	movf	3969,w,c	;volatile
  4259  001A2A  184E               	xorwf	btemp+11,w,c
  4260  001A2C  0BEF               	andlw	-17
  4261  001A2E  184E               	xorwf	btemp+11,w,c
  4262  001A30  6E81               	movwf	3969,c	;volatile
  4263                           
  4264                           ;tasks.c: 149:     lunos_delayTask(2000);
  4265  001A32  0ED0               	movlw	208
  4266  001A34  6EE6               	movwf	postinc1,c
  4267  001A36  0E07               	movlw	7
  4268  001A38  6EE6               	movwf	postinc1,c
  4269  001A3A  ECA9  F00C         	call	_lunos_delayTask	;wreg free
  4270  001A3E  D7DC               	goto	l369
  4271  001A40                     __end_of_task_1:
  4272                           	opt callstack 0
  4273                           
  4274 ;; *************** function _task_2 *****************
  4275 ;; Defined at:
  4276 ;;		line 153 in file "tasks.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;		None
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1  [STACK] void 
  4283 ;; Registers used:
  4284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4290 ;;      Params:         0       0       0       0       0       0       0
  4291 ;;      Locals:         0       0       0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0
  4293 ;;      Totals:         0       0       0       0       0       0       0
  4294 ;;Total ram usage:        0 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; Hardware stack levels required when called:    8
  4297 ;; This function calls:
  4298 ;;		_lunos_delayTask
  4299 ;; This function is called by:
  4300 ;;		Interrupt level 1
  4301 ;; This function uses a reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text28
  4305  001B6C                     __ptext28:
  4306                           	opt callstack 0
  4307  001B6C                     _task_2:
  4308                           	opt callstack 18
  4309                           
  4310                           ;tasks.c: 155:     PORTBbits.RB5 = ~PORTBbits.RB5;
  4311                           
  4312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4313                           ;incstack = 0
  4314                           ;tasks.c: 154:   while(1){
  4315  001B6C  AA81               	btfss	3969,5,c	;volatile
  4316  001B6E  D002               	goto	u115_20
  4317  001B70  0E01               	movlw	1
  4318  001B72  D001               	goto	u115_26
  4319  001B74                     u115_20:
  4320  001B74  0E00               	movlw	0
  4321  001B76                     u115_26:
  4322  001B76  0AFF               	xorlw	255
  4323  001B78  6E4E               	movwf	btemp+11,c
  4324  001B7A  3A4E               	swapf	btemp+11,f,c
  4325  001B7C  464E               	rlncf	btemp+11,f,c
  4326  001B7E  5081               	movf	3969,w,c	;volatile
  4327  001B80  184E               	xorwf	btemp+11,w,c
  4328  001B82  0BDF               	andlw	-33
  4329  001B84  184E               	xorwf	btemp+11,w,c
  4330  001B86  6E81               	movwf	3969,c	;volatile
  4331                           
  4332                           ;tasks.c: 156:     lunos_delayTask(1000);
  4333  001B88  0EE8               	movlw	232
  4334  001B8A  6EE6               	movwf	postinc1,c
  4335  001B8C  0E03               	movlw	3
  4336  001B8E  6EE6               	movwf	postinc1,c
  4337  001B90  ECA9  F00C         	call	_lunos_delayTask	;wreg free
  4338  001B94  D7EB               	goto	_task_2
  4339  001B96                     __end_of_task_2:
  4340                           	opt callstack 0
  4341                           
  4342 ;; *************** function _task_bozo *****************
  4343 ;; Defined at:
  4344 ;;		line 161 in file "tasks.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;		None
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  i               2  [STACK] int 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1  [STACK] void 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4358 ;;      Params:         0       0       0       0       0       0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0
  4361 ;;      Totals:         0       0       0       0       0       0       0
  4362 ;;Total ram usage:        0 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    8
  4365 ;; This function calls:
  4366 ;;		_sem_post
  4367 ;;		_sem_wait
  4368 ;; This function is called by:
  4369 ;;		Interrupt level 1
  4370 ;; This function uses a reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text29
  4374  0017F8                     __ptext29:
  4375                           	opt callstack 0
  4376  0017F8                     _task_bozo:
  4377                           	opt callstack 0
  4378                           
  4379                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4380  0017F8  52E6               	movf	postinc1,f,c
  4381  0017FA  52E6               	movf	postinc1,f,c
  4382  0017FC                     l381:
  4383                           
  4384                           ;tasks.c: 163:     int i;;tasks.c: 164:     sem_wait(&teste_1);
  4385  0017FC  0EC6               	movlw	low _teste_1
  4386  0017FE  6EE6               	movwf	postinc1,c
  4387  001800  0E00               	movlw	high _teste_1
  4388  001802  6EE6               	movwf	postinc1,c
  4389  001804  EC3F  F009         	call	_sem_wait	;wreg free
  4390                           
  4391                           ;tasks.c: 165:     for (i = 0; i < 4; i++) {
  4392                           ;stkvar	_i @ sp[(-2)+0]
  4393  001808  0EFE               	movlw	-2
  4394  00180A  6AE3               	clrf	plusw1,c
  4395  00180C  0EFF               	movlw	-1
  4396  00180E  6AE3               	clrf	plusw1,c
  4397  001810                     l2192:
  4398                           
  4399                           ;tasks.c: 166:       mem[i] = i+1;
  4400                           ;stkvar	_i @ sp[(-2)+0]
  4401  001810  0EFE               	movlw	-2
  4402  001812  CFE3 F04D          	movff	plusw1,btemp+10
  4403  001816  0EFF               	movlw	-1
  4404  001818  CFE3 F04E          	movff	plusw1,btemp+11
  4405  00181C  504D               	movf	btemp+10,w,c
  4406  00181E  2407               	addwf	_mem,w,c
  4407  001820  6ED9               	movwf	fsr2l,c
  4408  001822  504E               	movf	btemp+11,w,c
  4409  001824  2008               	addwfc	_mem+1,w,c
  4410  001826  6EDA               	movwf	fsr2h,c
  4411                           
  4412                           ;stkvar	_i @ sp[(-2)+0]
  4413  001828  0EFE               	movlw	-2
  4414  00182A  50E3               	movf	plusw1,w,c
  4415  00182C  0F01               	addlw	1
  4416  00182E  6EDF               	movwf	indf2,c
  4417                           
  4418                           ;tasks.c: 167:     }
  4419                           ;stkvar	_i @ sp[(-2)+0]
  4420  001830  0EFE               	movlw	-2
  4421  001832  50E3               	movf	plusw1,w,c
  4422  001834  0F01               	addlw	1
  4423  001836  6E43               	movwf	btemp,c
  4424  001838  0EFE               	movlw	-2
  4425  00183A  C043  FFE3         	movff	btemp,plusw1
  4426  00183E  6A43               	clrf	btemp,c
  4427  001840  0EFF               	movlw	-1
  4428  001842  50E3               	movf	plusw1,w,c
  4429  001844  2043               	addwfc	btemp,w,c
  4430  001846  6E43               	movwf	btemp,c
  4431  001848  0EFF               	movlw	-1
  4432  00184A  C043  FFE3         	movff	btemp,plusw1
  4433                           
  4434                           ;stkvar	_i @ sp[(-2)+0]
  4435  00184E  0EFF               	movlw	-1
  4436  001850  BEE3               	btfsc	plusw1,7,c
  4437  001852  D7DE               	goto	l2192
  4438  001854  0EFF               	movlw	-1
  4439  001856  50E3               	movf	plusw1,w,c
  4440  001858  E107               	bnz	u116_20
  4441  00185A  0EFE               	movlw	-2
  4442  00185C  CFE3 F043          	movff	plusw1,btemp
  4443  001860  0E04               	movlw	4
  4444  001862  5E43               	subwf	btemp,f,c
  4445  001864  A0D8               	btfss	status,0,c
  4446  001866  D7D4               	goto	l2192
  4447  001868                     u116_20:
  4448                           
  4449                           ;tasks.c: 168:     sem_post(&teste_2);
  4450  001868  0EB8               	movlw	low _teste_2
  4451  00186A  6EE6               	movwf	postinc1,c
  4452  00186C  0E00               	movlw	high _teste_2
  4453  00186E  6EE6               	movwf	postinc1,c
  4454  001870  ECC4  F008         	call	_sem_post	;wreg free
  4455  001874  D7C3               	goto	l381
  4456  001876                     __end_of_task_bozo:
  4457                           	opt callstack 0
  4458                           
  4459 ;; *************** function _task_xuxa *****************
  4460 ;; Defined at:
  4461 ;;		line 172 in file "tasks.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  i               2  [STACK] int 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1  [STACK] void 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4475 ;;      Params:         0       0       0       0       0       0       0
  4476 ;;      Locals:         0       0       0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0
  4478 ;;      Totals:         0       0       0       0       0       0       0
  4479 ;;Total ram usage:        0 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    8
  4482 ;; This function calls:
  4483 ;;		_lunos_delayTask
  4484 ;;		_sem_post
  4485 ;;		_sem_wait
  4486 ;; This function is called by:
  4487 ;;		Interrupt level 1
  4488 ;; This function uses a reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text30
  4492  001434                     __ptext30:
  4493                           	opt callstack 0
  4494  001434                     _task_xuxa:
  4495                           	opt callstack 0
  4496                           
  4497                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4498  001434  52E6               	movf	postinc1,f,c
  4499  001436  52E6               	movf	postinc1,f,c
  4500  001438                     l389:
  4501                           
  4502                           ;tasks.c: 175:     sem_wait(&teste_2);
  4503  001438  0EB8               	movlw	low _teste_2
  4504  00143A  6EE6               	movwf	postinc1,c
  4505  00143C  0E00               	movlw	high _teste_2
  4506  00143E  6EE6               	movwf	postinc1,c
  4507  001440  EC3F  F009         	call	_sem_wait	;wreg free
  4508                           
  4509                           ;tasks.c: 176:     for (i = 0; i < 4; i++) {
  4510                           ;stkvar	_i @ sp[(-2)+0]
  4511  001444  0EFE               	movlw	-2
  4512  001446  6AE3               	clrf	plusw1,c
  4513  001448  0EFF               	movlw	-1
  4514  00144A  6AE3               	clrf	plusw1,c
  4515  00144C                     l2208:
  4516                           
  4517                           ;tasks.c: 177:       if (mem[i] % 2 == 0)
  4518                           ;stkvar	_i @ sp[(-2)+0]
  4519  00144C  0EFE               	movlw	-2
  4520  00144E  CFE3 F04D          	movff	plusw1,btemp+10
  4521  001452  0EFF               	movlw	-1
  4522  001454  CFE3 F04E          	movff	plusw1,btemp+11
  4523  001458  504D               	movf	btemp+10,w,c
  4524  00145A  2407               	addwf	_mem,w,c
  4525  00145C  6ED9               	movwf	fsr2l,c
  4526  00145E  504E               	movf	btemp+11,w,c
  4527  001460  2008               	addwfc	_mem+1,w,c
  4528  001462  6EDA               	movwf	fsr2h,c
  4529  001464  B0DF               	btfsc	indf2,0,c
  4530  001466  D00E               	goto	l2212
  4531                           
  4532                           ;tasks.c: 178:         PORTBbits.RB3 = ~PORTBbits.RB3;
  4533  001468  A681               	btfss	3969,3,c	;volatile
  4534  00146A  D002               	goto	u118_20
  4535  00146C  0E01               	movlw	1
  4536  00146E  D001               	goto	u118_26
  4537  001470                     u118_20:
  4538  001470  0E00               	movlw	0
  4539  001472                     u118_26:
  4540  001472  0AFF               	xorlw	255
  4541  001474  6E4E               	movwf	btemp+11,c
  4542  001476  464E               	rlncf	btemp+11,f,c
  4543  001478  464E               	rlncf	btemp+11,f,c
  4544  00147A  464E               	rlncf	btemp+11,f,c
  4545  00147C  5081               	movf	3969,w,c	;volatile
  4546  00147E  184E               	xorwf	btemp+11,w,c
  4547  001480  0BF7               	andlw	-9
  4548  001482  D00C               	goto	L6
  4549  001484                     l2212:
  4550                           
  4551                           ;tasks.c: 180:         PORTBbits.RB5 = ~PORTBbits.RB5;
  4552  001484  AA81               	btfss	3969,5,c	;volatile
  4553  001486  D002               	goto	u119_20
  4554  001488  0E01               	movlw	1
  4555  00148A  D001               	goto	u119_26
  4556  00148C                     u119_20:
  4557  00148C  0E00               	movlw	0
  4558  00148E                     u119_26:
  4559  00148E  0AFF               	xorlw	255
  4560  001490  6E4E               	movwf	btemp+11,c
  4561  001492  3A4E               	swapf	btemp+11,f,c
  4562  001494  464E               	rlncf	btemp+11,f,c
  4563  001496  5081               	movf	3969,w,c	;volatile
  4564  001498  184E               	xorwf	btemp+11,w,c
  4565  00149A  0BDF               	andlw	-33
  4566  00149C                     L6:
  4567  00149C  184E               	xorwf	btemp+11,w,c
  4568  00149E  6E81               	movwf	3969,c	;volatile
  4569                           
  4570                           ;tasks.c: 181:       lunos_delayTask(1000);
  4571  0014A0  0EE8               	movlw	232
  4572  0014A2  6EE6               	movwf	postinc1,c
  4573  0014A4  0E03               	movlw	3
  4574  0014A6  6EE6               	movwf	postinc1,c
  4575  0014A8  ECA9  F00C         	call	_lunos_delayTask	;wreg free
  4576                           
  4577                           ;tasks.c: 182:     }
  4578                           ;stkvar	_i @ sp[(-2)+0]
  4579  0014AC  0EFE               	movlw	-2
  4580  0014AE  50E3               	movf	plusw1,w,c
  4581  0014B0  0F01               	addlw	1
  4582  0014B2  6E43               	movwf	btemp,c
  4583  0014B4  0EFE               	movlw	-2
  4584  0014B6  C043  FFE3         	movff	btemp,plusw1
  4585  0014BA  6A43               	clrf	btemp,c
  4586  0014BC  0EFF               	movlw	-1
  4587  0014BE  50E3               	movf	plusw1,w,c
  4588  0014C0  2043               	addwfc	btemp,w,c
  4589  0014C2  6E43               	movwf	btemp,c
  4590  0014C4  0EFF               	movlw	-1
  4591  0014C6  C043  FFE3         	movff	btemp,plusw1
  4592                           
  4593                           ;stkvar	_i @ sp[(-2)+0]
  4594  0014CA  0EFF               	movlw	-1
  4595  0014CC  BEE3               	btfsc	plusw1,7,c
  4596  0014CE  D7BE               	goto	l2208
  4597  0014D0  0EFF               	movlw	-1
  4598  0014D2  50E3               	movf	plusw1,w,c
  4599  0014D4  E107               	bnz	u120_20
  4600  0014D6  0EFE               	movlw	-2
  4601  0014D8  CFE3 F043          	movff	plusw1,btemp
  4602  0014DC  0E04               	movlw	4
  4603  0014DE  5E43               	subwf	btemp,f,c
  4604  0014E0  A0D8               	btfss	status,0,c
  4605  0014E2  D7B4               	goto	l2208
  4606  0014E4                     u120_20:
  4607                           
  4608                           ;tasks.c: 183:     sem_post(&teste_1);
  4609  0014E4  0EC6               	movlw	low _teste_1
  4610  0014E6  6EE6               	movwf	postinc1,c
  4611  0014E8  0E00               	movlw	high _teste_1
  4612  0014EA  6EE6               	movwf	postinc1,c
  4613  0014EC  ECC4  F008         	call	_sem_post	;wreg free
  4614  0014F0  D7A3               	goto	l389
  4615  0014F2                     __end_of_task_xuxa:
  4616                           	opt callstack 0
  4617                           
  4618 ;; *************** function _ISR_timer0 *****************
  4619 ;; Defined at:
  4620 ;;		line 56 in file "int0_test.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;		None
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  1    wreg      void 
  4627 ;; Registers used:
  4628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4634 ;;      Params:         0       0       0       0       0       0       0
  4635 ;;      Locals:         0       0       0       0       0       0       0
  4636 ;;      Temps:         16       0       0       0       0       0       0
  4637 ;;      Totals:        16       0       0       0       0       0       0
  4638 ;;Total ram usage:       16 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    2
  4641 ;; This function calls:
  4642 ;;		___wmul
  4643 ;;		_delay_decrement
  4644 ;;		_round_robin
  4645 ;; This function is called by:
  4646 ;;		Interrupt level 2
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	intcode
  4651  000008                     __pintcode:
  4652                           	opt callstack 0
  4653  000008                     _ISR_timer0:
  4654                           	opt callstack 17
  4655                           
  4656                           ;incstack = 0
  4657  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  4658                           
  4659                           	psect	intcode_body
  4660  000014                     __pintcode_body:
  4661                           	opt callstack 17
  4662  000014                     int_func:
  4663                           	opt callstack 17
  4664  000014  0006               	pop		; remove dummy address from shadow register refresh
  4665  000016  CFE1 F067          	movff	fsr1l,??_ISR_timer0+4
  4666  00001A  CFE2 F068          	movff	fsr1h,??_ISR_timer0+5
  4667  00001E  CFD9 F069          	movff	fsr2l,??_ISR_timer0+6
  4668  000022  CFDA F06A          	movff	fsr2h,??_ISR_timer0+7
  4669  000026  CFF3 F06B          	movff	prodl,??_ISR_timer0+8
  4670  00002A  CFF4 F06C          	movff	prodh,??_ISR_timer0+9
  4671  00002E  C043  F06D         	movff	btemp,??_ISR_timer0+10
  4672  000032  C044  F06E         	movff	btemp+1,??_ISR_timer0+11
  4673  000036  C04B  F06F         	movff	btemp+8,??_ISR_timer0+12
  4674  00003A  C04C  F070         	movff	btemp+9,??_ISR_timer0+13
  4675  00003E  C04D  F071         	movff	btemp+10,??_ISR_timer0+14
  4676  000042  C04E  F072         	movff	btemp+11,??_ISR_timer0+15
  4677  000046  EE15  F04E         	lfsr	1,___inthi_sp
  4678                           
  4679                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  4680  00004A  9EF2               	bcf	4082,7,c	;volatile
  4681                           
  4682                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  4683  00004C  A4F2               	btfss	4082,2,c	;volatile
  4684  00004E  D224               	goto	i2u92_40
  4685                           
  4686                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  4687  000050  94F2               	bcf	4082,2,c	;volatile
  4688                           
  4689                           ;int0_test.c: 61:     TMR0L = 252;
  4690  000052  0EFC               	movlw	252
  4691  000054  6ED6               	movwf	4054,c	;volatile
  4692                           
  4693                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  4694  000056  A083               	btfss	3971,0,c	;volatile
  4695  000058  D002               	goto	i2u88_40
  4696  00005A  0E01               	movlw	1
  4697  00005C  D001               	goto	i2u88_46
  4698  00005E                     i2u88_40:
  4699  00005E  0E00               	movlw	0
  4700  000060                     i2u88_46:
  4701  000060  0AFF               	xorlw	255
  4702  000062  6E63               	movwf	??_ISR_timer0& (0+255),c
  4703  000064  5083               	movf	3971,w,c	;volatile
  4704  000066  1863               	xorwf	??_ISR_timer0,w,c
  4705  000068  0BFE               	andlw	-2
  4706  00006A  1863               	xorwf	??_ISR_timer0,w,c
  4707  00006C  6E83               	movwf	3971,c	;volatile
  4708                           
  4709                           ;int0_test.c: 63:     delay_decrement();
  4710  00006E  EC30  F006         	call	_delay_decrement	;wreg free
  4711                           
  4712                           ;int0_test.c: 65:     quantum--;
  4713  000072  0673               	decf	_quantum,f,c
  4714  000074  A0D8               	btfss	status,0,c
  4715  000076  0674               	decf	_quantum+1,f,c
  4716                           
  4717                           ;int0_test.c: 66:     if (quantum <= 0) {
  4718  000078  BE74               	btfsc	_quantum+1,7,c
  4719  00007A  D005               	goto	i2u89_40
  4720  00007C  5074               	movf	_quantum+1,w,c
  4721  00007E  E102               	bnz	i2u89_41
  4722  000080  0473               	decf	_quantum,w,c
  4723  000082  B0D8               	btfsc	status,0,c
  4724  000084                     i2u89_41:
  4725  000084  D209               	goto	i2u92_40
  4726  000086                     i2u89_40:
  4727                           
  4728                           ;int0_test.c: 67:       quantum = 10;
  4729  000086  0E00               	movlw	0
  4730  000088  6E74               	movwf	_quantum+1,c
  4731  00008A  0E0A               	movlw	10
  4732  00008C  6E73               	movwf	_quantum,c
  4733                           
  4734                           ;int0_test.c: 68:       { who = ready_queue.task_running; ready_queue.tasks[who].task_st
      +                          ate = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = ST
      +                          ATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks
      +                          [who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stac
      +                          k[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL
      +                          ; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  4735  00008E  C2F2  F00B         	movff	_ready_queue+542,_who
  4736  000092  C2F3  F00C         	movff	_ready_queue+543,_who+1
  4737  000096  0E6C               	movlw	108
  4738  000098  6EE6               	movwf	postinc1,c
  4739  00009A  0E00               	movlw	0
  4740  00009C  6EE6               	movwf	postinc1,c
  4741  00009E  C00B  FFE6         	movff	_who,postinc1
  4742  0000A2  C00C  FFE6         	movff	_who+1,postinc1
  4743  0000A6  EC2A  F00B         	call	___wmul	;wreg free
  4744  0000AA  0EDC               	movlw	low (_ready_queue+8)
  4745  0000AC  2443               	addwf	btemp,w,c
  4746  0000AE  6ED9               	movwf	fsr2l,c
  4747  0000B0  0E00               	movlw	high (_ready_queue+8)
  4748  0000B2  2044               	addwfc	btemp+1,w,c
  4749  0000B4  6EDA               	movwf	fsr2h,c
  4750  0000B6  0E00               	movlw	0
  4751  0000B8  6EDF               	movwf	indf2,c
  4752  0000BA  0E6C               	movlw	108
  4753  0000BC  6EE6               	movwf	postinc1,c
  4754  0000BE  0E00               	movlw	0
  4755  0000C0  6EE6               	movwf	postinc1,c
  4756  0000C2  C00B  FFE6         	movff	_who,postinc1
  4757  0000C6  C00C  FFE6         	movff	_who+1,postinc1
  4758  0000CA  EC2A  F00B         	call	___wmul	;wreg free
  4759  0000CE  0ED9               	movlw	low (_ready_queue+5)
  4760  0000D0  2443               	addwf	btemp,w,c
  4761  0000D2  6ED9               	movwf	fsr2l,c
  4762  0000D4  0E00               	movlw	high (_ready_queue+5)
  4763  0000D6  2044               	addwfc	btemp+1,w,c
  4764  0000D8  6EDA               	movwf	fsr2h,c
  4765  0000DA  CFE8 FFDF          	movff	wreg,indf2	;volatile
  4766  0000DE  0E6C               	movlw	108
  4767  0000E0  6EE6               	movwf	postinc1,c
  4768  0000E2  0E00               	movlw	0
  4769  0000E4  6EE6               	movwf	postinc1,c
  4770  0000E6  C00B  FFE6         	movff	_who,postinc1
  4771  0000EA  C00C  FFE6         	movff	_who+1,postinc1
  4772  0000EE  EC2A  F00B         	call	___wmul	;wreg free
  4773  0000F2  0EDA               	movlw	low (_ready_queue+6)
  4774  0000F4  2443               	addwf	btemp,w,c
  4775  0000F6  6ED9               	movwf	fsr2l,c
  4776  0000F8  0E00               	movlw	high (_ready_queue+6)
  4777  0000FA  2044               	addwfc	btemp+1,w,c
  4778  0000FC  6EDA               	movwf	fsr2h,c
  4779  0000FE  CFD8 FFDF          	movff	status,indf2	;volatile
  4780  000102  0E6C               	movlw	108
  4781  000104  6EE6               	movwf	postinc1,c
  4782  000106  0E00               	movlw	0
  4783  000108  6EE6               	movwf	postinc1,c
  4784  00010A  C00B  FFE6         	movff	_who,postinc1
  4785  00010E  C00C  FFE6         	movff	_who+1,postinc1
  4786  000112  EC2A  F00B         	call	___wmul	;wreg free
  4787  000116  0EDB               	movlw	low (_ready_queue+7)
  4788  000118  2443               	addwf	btemp,w,c
  4789  00011A  6ED9               	movwf	fsr2l,c
  4790  00011C  0E00               	movlw	high (_ready_queue+7)
  4791  00011E  2044               	addwfc	btemp+1,w,c
  4792  000120  6EDA               	movwf	fsr2h,c
  4793  000122  CFE0 FFDF          	movff	bsr,indf2	;volatile
  4794  000126  6A09               	clrf	_size,c
  4795  000128  6A0A               	clrf	_size+1,c
  4796  00012A  D07B               	goto	i2l2038
  4797  00012C                     i2l2034:
  4798  00012C  0E6C               	movlw	108
  4799  00012E  6EE6               	movwf	postinc1,c
  4800  000130  0E00               	movlw	0
  4801  000132  6EE6               	movwf	postinc1,c
  4802  000134  C00B  FFE6         	movff	_who,postinc1
  4803  000138  C00C  FFE6         	movff	_who+1,postinc1
  4804  00013C  EC2A  F00B         	call	___wmul	;wreg free
  4805  000140  0ED4               	movlw	low _ready_queue
  4806  000142  6E63               	movwf	??_ISR_timer0& (0+255),c
  4807  000144  0E00               	movlw	high _ready_queue
  4808  000146  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4809  000148  0E09               	movlw	9
  4810  00014A  2663               	addwf	??_ISR_timer0,f,c
  4811  00014C  0E00               	movlw	0
  4812  00014E  2264               	addwfc	??_ISR_timer0+1,f,c
  4813  000150  5043               	movf	btemp,w,c
  4814  000152  2663               	addwf	??_ISR_timer0,f,c
  4815  000154  5044               	movf	btemp+1,w,c
  4816  000156  2264               	addwfc	??_ISR_timer0+1,f,c
  4817  000158  0E03               	movlw	3
  4818  00015A  6EE6               	movwf	postinc1,c
  4819  00015C  0E00               	movlw	0
  4820  00015E  6EE6               	movwf	postinc1,c
  4821  000160  C009  FFE6         	movff	_size,postinc1
  4822  000164  C00A  FFE6         	movff	_size+1,postinc1
  4823  000168  EC2A  F00B         	call	___wmul	;wreg free
  4824  00016C  5043               	movf	btemp,w,c
  4825  00016E  2463               	addwf	??_ISR_timer0,w,c
  4826  000170  6ED9               	movwf	fsr2l,c
  4827  000172  5044               	movf	btemp+1,w,c
  4828  000174  2064               	addwfc	??_ISR_timer0+1,w,c
  4829  000176  6EDA               	movwf	fsr2h,c
  4830  000178  CFFF FFDF          	movff	tosu,indf2	;volatile
  4831  00017C  0E6C               	movlw	108
  4832  00017E  6EE6               	movwf	postinc1,c
  4833  000180  0E00               	movlw	0
  4834  000182  6EE6               	movwf	postinc1,c
  4835  000184  C00B  FFE6         	movff	_who,postinc1
  4836  000188  C00C  FFE6         	movff	_who+1,postinc1
  4837  00018C  EC2A  F00B         	call	___wmul	;wreg free
  4838  000190  0ED4               	movlw	low _ready_queue
  4839  000192  6E63               	movwf	??_ISR_timer0& (0+255),c
  4840  000194  0E00               	movlw	high _ready_queue
  4841  000196  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4842  000198  0E0B               	movlw	11
  4843  00019A  2663               	addwf	??_ISR_timer0,f,c
  4844  00019C  0E00               	movlw	0
  4845  00019E  2264               	addwfc	??_ISR_timer0+1,f,c
  4846  0001A0  5043               	movf	btemp,w,c
  4847  0001A2  2663               	addwf	??_ISR_timer0,f,c
  4848  0001A4  5044               	movf	btemp+1,w,c
  4849  0001A6  2264               	addwfc	??_ISR_timer0+1,f,c
  4850  0001A8  0E03               	movlw	3
  4851  0001AA  6EE6               	movwf	postinc1,c
  4852  0001AC  0E00               	movlw	0
  4853  0001AE  6EE6               	movwf	postinc1,c
  4854  0001B0  C009  FFE6         	movff	_size,postinc1
  4855  0001B4  C00A  FFE6         	movff	_size+1,postinc1
  4856  0001B8  EC2A  F00B         	call	___wmul	;wreg free
  4857  0001BC  5043               	movf	btemp,w,c
  4858  0001BE  2463               	addwf	??_ISR_timer0,w,c
  4859  0001C0  6ED9               	movwf	fsr2l,c
  4860  0001C2  5044               	movf	btemp+1,w,c
  4861  0001C4  2064               	addwfc	??_ISR_timer0+1,w,c
  4862  0001C6  6EDA               	movwf	fsr2h,c
  4863  0001C8  CFFE FFDF          	movff	tosh,indf2	;volatile
  4864  0001CC  0E6C               	movlw	108
  4865  0001CE  6EE6               	movwf	postinc1,c
  4866  0001D0  0E00               	movlw	0
  4867  0001D2  6EE6               	movwf	postinc1,c
  4868  0001D4  C00B  FFE6         	movff	_who,postinc1
  4869  0001D8  C00C  FFE6         	movff	_who+1,postinc1
  4870  0001DC  EC2A  F00B         	call	___wmul	;wreg free
  4871  0001E0  0ED4               	movlw	low _ready_queue
  4872  0001E2  6E63               	movwf	??_ISR_timer0& (0+255),c
  4873  0001E4  0E00               	movlw	high _ready_queue
  4874  0001E6  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4875  0001E8  0E0A               	movlw	10
  4876  0001EA  2663               	addwf	??_ISR_timer0,f,c
  4877  0001EC  0E00               	movlw	0
  4878  0001EE  2264               	addwfc	??_ISR_timer0+1,f,c
  4879  0001F0  5043               	movf	btemp,w,c
  4880  0001F2  2663               	addwf	??_ISR_timer0,f,c
  4881  0001F4  5044               	movf	btemp+1,w,c
  4882  0001F6  2264               	addwfc	??_ISR_timer0+1,f,c
  4883  0001F8  0E03               	movlw	3
  4884  0001FA  6EE6               	movwf	postinc1,c
  4885  0001FC  0E00               	movlw	0
  4886  0001FE  6EE6               	movwf	postinc1,c
  4887  000200  C009  FFE6         	movff	_size,postinc1
  4888  000204  C00A  FFE6         	movff	_size+1,postinc1
  4889  000208  EC2A  F00B         	call	___wmul	;wreg free
  4890  00020C  5043               	movf	btemp,w,c
  4891  00020E  2463               	addwf	??_ISR_timer0,w,c
  4892  000210  6ED9               	movwf	fsr2l,c
  4893  000212  5044               	movf	btemp+1,w,c
  4894  000214  2064               	addwfc	??_ISR_timer0+1,w,c
  4895  000216  6EDA               	movwf	fsr2h,c
  4896  000218  CFFD FFDF          	movff	tosl,indf2	;volatile
  4897  00021C  4A09               	infsnz	_size,f,c
  4898  00021E  2A0A               	incf	_size+1,f,c
  4899  000220  0006               	pop		;# 
  4900  000222                     i2l2038:
  4901  000222  50FC               	movf	stkptr,w,c	;volatile
  4902  000224  A4D8               	btfss	status,2,c
  4903  000226  D782               	goto	i2l2034
  4904  000228  0EFF               	movlw	255
  4905  00022A  6E63               	movwf	??_ISR_timer0& (0+255),c
  4906  00022C  0EFF               	movlw	255
  4907  00022E  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4908  000230  C009  F065         	movff	_size,??_ISR_timer0+2
  4909  000234  C00A  F066         	movff	_size+1,??_ISR_timer0+3
  4910  000238  5063               	movf	??_ISR_timer0,w,c
  4911  00023A  2665               	addwf	??_ISR_timer0+2,f,c
  4912  00023C  5064               	movf	??_ISR_timer0+1,w,c
  4913  00023E  2266               	addwfc	??_ISR_timer0+3,f,c
  4914  000240  0E6C               	movlw	108
  4915  000242  6EE6               	movwf	postinc1,c
  4916  000244  0E00               	movlw	0
  4917  000246  6EE6               	movwf	postinc1,c
  4918  000248  C00B  FFE6         	movff	_who,postinc1
  4919  00024C  C00C  FFE6         	movff	_who+1,postinc1
  4920  000250  EC2A  F00B         	call	___wmul	;wreg free
  4921  000254  0E3A               	movlw	low (_ready_queue+102)
  4922  000256  2443               	addwf	btemp,w,c
  4923  000258  6ED9               	movwf	fsr2l,c
  4924  00025A  0E01               	movlw	high (_ready_queue+102)
  4925  00025C  2044               	addwfc	btemp+1,w,c
  4926  00025E  6EDA               	movwf	fsr2h,c
  4927  000260  C065  FFDE         	movff	??_ISR_timer0+2,postinc2
  4928  000264  C066  FFDD         	movff	??_ISR_timer0+3,postdec2
  4929                           
  4930                           ;int0_test.c: 69:       ready_queue.task_running = round_robin();
  4931  000268  EC75  F00B         	call	_round_robin	;wreg free
  4932  00026C  C043  F2F2         	movff	btemp,_ready_queue+542
  4933  000270  C044  F2F3         	movff	btemp+1,_ready_queue+543
  4934                           
  4935                           ;int0_test.c: 70:       { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.ta
      +                          sks[who].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task
      +                          _f; } else { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].
      +                          W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg;
      +                           size = ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL
      +                           = ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[wh
      +                          o].task_stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[s
      +                          ize].TOSU_reg; size--; } }};
  4936  000274  C2F2  F00B         	movff	_ready_queue+542,_who
  4937  000278  C2F3  F00C         	movff	_ready_queue+543,_who+1
  4938  00027C  6AFC               	clrf	stkptr,c	;volatile
  4939  00027E  0E6C               	movlw	108
  4940  000280  6EE6               	movwf	postinc1,c
  4941  000282  0E00               	movlw	0
  4942  000284  6EE6               	movwf	postinc1,c
  4943  000286  C00B  FFE6         	movff	_who,postinc1
  4944  00028A  C00C  FFE6         	movff	_who+1,postinc1
  4945  00028E  EC2A  F00B         	call	___wmul	;wreg free
  4946  000292  0E3A               	movlw	low (_ready_queue+102)
  4947  000294  2443               	addwf	btemp,w,c
  4948  000296  6ED9               	movwf	fsr2l,c
  4949  000298  0E01               	movlw	high (_ready_queue+102)
  4950  00029A  2044               	addwfc	btemp+1,w,c
  4951  00029C  6EDA               	movwf	fsr2h,c
  4952  00029E  50DE               	movf	postinc2,w,c
  4953  0002A0  10DE               	iorwf	postinc2,w,c
  4954  0002A2  A4D8               	btfss	status,2,c
  4955  0002A4  D01B               	goto	i2l2054
  4956  0002A6  0005               	push		;# 
  4957  0002A8  0E6C               	movlw	108
  4958  0002AA  6EE6               	movwf	postinc1,c
  4959  0002AC  0E00               	movlw	0
  4960  0002AE  6EE6               	movwf	postinc1,c
  4961  0002B0  C00B  FFE6         	movff	_who,postinc1
  4962  0002B4  C00C  FFE6         	movff	_who+1,postinc1
  4963  0002B8  EC2A  F00B         	call	___wmul	;wreg free
  4964  0002BC  0E3C               	movlw	low (_ready_queue+104)
  4965  0002BE  2443               	addwf	btemp,w,c
  4966  0002C0  6ED9               	movwf	fsr2l,c
  4967  0002C2  0E01               	movlw	high (_ready_queue+104)
  4968  0002C4  2044               	addwfc	btemp+1,w,c
  4969  0002C6  6EDA               	movwf	fsr2h,c
  4970  0002C8  CFDE F063          	movff	postinc2,??_ISR_timer0
  4971  0002CC  CFDD F064          	movff	postdec2,??_ISR_timer0+1
  4972  0002D0  C063  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  4973  0002D4  C064  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  4974  0002D8  6AFF               	clrf	tosu,c	;volatile
  4975  0002DA  D0DE               	goto	i2u92_40
  4976  0002DC                     i2l2054:
  4977  0002DC  0E6C               	movlw	108
  4978  0002DE  6EE6               	movwf	postinc1,c
  4979  0002E0  0E00               	movlw	0
  4980  0002E2  6EE6               	movwf	postinc1,c
  4981  0002E4  C00B  FFE6         	movff	_who,postinc1
  4982  0002E8  C00C  FFE6         	movff	_who+1,postinc1
  4983  0002EC  EC2A  F00B         	call	___wmul	;wreg free
  4984  0002F0  0EDC               	movlw	low (_ready_queue+8)
  4985  0002F2  2443               	addwf	btemp,w,c
  4986  0002F4  6ED9               	movwf	fsr2l,c
  4987  0002F6  0E00               	movlw	high (_ready_queue+8)
  4988  0002F8  2044               	addwfc	btemp+1,w,c
  4989  0002FA  6EDA               	movwf	fsr2h,c
  4990  0002FC  0E01               	movlw	1
  4991  0002FE  6EDF               	movwf	indf2,c
  4992  000300  0E6C               	movlw	108
  4993  000302  6EE6               	movwf	postinc1,c
  4994  000304  0E00               	movlw	0
  4995  000306  6EE6               	movwf	postinc1,c
  4996  000308  C00B  FFE6         	movff	_who,postinc1
  4997  00030C  C00C  FFE6         	movff	_who+1,postinc1
  4998  000310  EC2A  F00B         	call	___wmul	;wreg free
  4999  000314  0ED9               	movlw	low (_ready_queue+5)
  5000  000316  2443               	addwf	btemp,w,c
  5001  000318  6ED9               	movwf	fsr2l,c
  5002  00031A  0E00               	movlw	high (_ready_queue+5)
  5003  00031C  2044               	addwfc	btemp+1,w,c
  5004  00031E  6EDA               	movwf	fsr2h,c
  5005  000320  50DF               	movf	indf2,w,c
  5006  000322  6E63               	movwf	??_ISR_timer0& (0+255),c
  5007  000324  5063               	movf	??_ISR_timer0,w,c
  5008  000326  0E6C               	movlw	108
  5009  000328  6EE6               	movwf	postinc1,c
  5010  00032A  0E00               	movlw	0
  5011  00032C  6EE6               	movwf	postinc1,c
  5012  00032E  C00B  FFE6         	movff	_who,postinc1
  5013  000332  C00C  FFE6         	movff	_who+1,postinc1
  5014  000336  EC2A  F00B         	call	___wmul	;wreg free
  5015  00033A  0EDA               	movlw	low (_ready_queue+6)
  5016  00033C  2443               	addwf	btemp,w,c
  5017  00033E  6ED9               	movwf	fsr2l,c
  5018  000340  0E00               	movlw	high (_ready_queue+6)
  5019  000342  2044               	addwfc	btemp+1,w,c
  5020  000344  6EDA               	movwf	fsr2h,c
  5021  000346  50DF               	movf	indf2,w,c
  5022  000348  6ED8               	movwf	status,c	;volatile
  5023  00034A  0E6C               	movlw	108
  5024  00034C  6EE6               	movwf	postinc1,c
  5025  00034E  0E00               	movlw	0
  5026  000350  6EE6               	movwf	postinc1,c
  5027  000352  C00B  FFE6         	movff	_who,postinc1
  5028  000356  C00C  FFE6         	movff	_who+1,postinc1
  5029  00035A  EC2A  F00B         	call	___wmul	;wreg free
  5030  00035E  0EDB               	movlw	low (_ready_queue+7)
  5031  000360  2443               	addwf	btemp,w,c
  5032  000362  6ED9               	movwf	fsr2l,c
  5033  000364  0E00               	movlw	high (_ready_queue+7)
  5034  000366  2044               	addwfc	btemp+1,w,c
  5035  000368  6EDA               	movwf	fsr2h,c
  5036  00036A  50DF               	movf	indf2,w,c
  5037  00036C  6EE0               	movwf	bsr,c	;volatile
  5038  00036E  0E6C               	movlw	108
  5039  000370  6EE6               	movwf	postinc1,c
  5040  000372  0E00               	movlw	0
  5041  000374  6EE6               	movwf	postinc1,c
  5042  000376  C00B  FFE6         	movff	_who,postinc1
  5043  00037A  C00C  FFE6         	movff	_who+1,postinc1
  5044  00037E  EC2A  F00B         	call	___wmul	;wreg free
  5045  000382  0E3A               	movlw	low (_ready_queue+102)
  5046  000384  2443               	addwf	btemp,w,c
  5047  000386  6ED9               	movwf	fsr2l,c
  5048  000388  0E01               	movlw	high (_ready_queue+102)
  5049  00038A  2044               	addwfc	btemp+1,w,c
  5050  00038C  6EDA               	movwf	fsr2h,c
  5051  00038E  CFDE F009          	movff	postinc2,_size
  5052  000392  CFDD F00A          	movff	postdec2,_size+1
  5053  000396  D07C               	goto	i2l2060
  5054  000398                     i2l59:
  5055  000398  0005               	push		;# 
  5056  00039A  0E6C               	movlw	108
  5057  00039C  6EE6               	movwf	postinc1,c
  5058  00039E  0E00               	movlw	0
  5059  0003A0  6EE6               	movwf	postinc1,c
  5060  0003A2  C00B  FFE6         	movff	_who,postinc1
  5061  0003A6  C00C  FFE6         	movff	_who+1,postinc1
  5062  0003AA  EC2A  F00B         	call	___wmul	;wreg free
  5063  0003AE  0ED4               	movlw	low _ready_queue
  5064  0003B0  6E63               	movwf	??_ISR_timer0& (0+255),c
  5065  0003B2  0E00               	movlw	high _ready_queue
  5066  0003B4  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5067  0003B6  0E0A               	movlw	10
  5068  0003B8  2663               	addwf	??_ISR_timer0,f,c
  5069  0003BA  0E00               	movlw	0
  5070  0003BC  2264               	addwfc	??_ISR_timer0+1,f,c
  5071  0003BE  5043               	movf	btemp,w,c
  5072  0003C0  2663               	addwf	??_ISR_timer0,f,c
  5073  0003C2  5044               	movf	btemp+1,w,c
  5074  0003C4  2264               	addwfc	??_ISR_timer0+1,f,c
  5075  0003C6  0E03               	movlw	3
  5076  0003C8  6EE6               	movwf	postinc1,c
  5077  0003CA  0E00               	movlw	0
  5078  0003CC  6EE6               	movwf	postinc1,c
  5079  0003CE  C009  FFE6         	movff	_size,postinc1
  5080  0003D2  C00A  FFE6         	movff	_size+1,postinc1
  5081  0003D6  EC2A  F00B         	call	___wmul	;wreg free
  5082  0003DA  5043               	movf	btemp,w,c
  5083  0003DC  2463               	addwf	??_ISR_timer0,w,c
  5084  0003DE  6ED9               	movwf	fsr2l,c
  5085  0003E0  5044               	movf	btemp+1,w,c
  5086  0003E2  2064               	addwfc	??_ISR_timer0+1,w,c
  5087  0003E4  6EDA               	movwf	fsr2h,c
  5088  0003E6  50DF               	movf	indf2,w,c
  5089  0003E8  6EFD               	movwf	tosl,c	;volatile
  5090  0003EA  0E6C               	movlw	108
  5091  0003EC  6EE6               	movwf	postinc1,c
  5092  0003EE  0E00               	movlw	0
  5093  0003F0  6EE6               	movwf	postinc1,c
  5094  0003F2  C00B  FFE6         	movff	_who,postinc1
  5095  0003F6  C00C  FFE6         	movff	_who+1,postinc1
  5096  0003FA  EC2A  F00B         	call	___wmul	;wreg free
  5097  0003FE  0ED4               	movlw	low _ready_queue
  5098  000400  6E63               	movwf	??_ISR_timer0& (0+255),c
  5099  000402  0E00               	movlw	high _ready_queue
  5100  000404  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5101  000406  0E0B               	movlw	11
  5102  000408  2663               	addwf	??_ISR_timer0,f,c
  5103  00040A  0E00               	movlw	0
  5104  00040C  2264               	addwfc	??_ISR_timer0+1,f,c
  5105  00040E  5043               	movf	btemp,w,c
  5106  000410  2663               	addwf	??_ISR_timer0,f,c
  5107  000412  5044               	movf	btemp+1,w,c
  5108  000414  2264               	addwfc	??_ISR_timer0+1,f,c
  5109  000416  0E03               	movlw	3
  5110  000418  6EE6               	movwf	postinc1,c
  5111  00041A  0E00               	movlw	0
  5112  00041C  6EE6               	movwf	postinc1,c
  5113  00041E  C009  FFE6         	movff	_size,postinc1
  5114  000422  C00A  FFE6         	movff	_size+1,postinc1
  5115  000426  EC2A  F00B         	call	___wmul	;wreg free
  5116  00042A  5043               	movf	btemp,w,c
  5117  00042C  2463               	addwf	??_ISR_timer0,w,c
  5118  00042E  6ED9               	movwf	fsr2l,c
  5119  000430  5044               	movf	btemp+1,w,c
  5120  000432  2064               	addwfc	??_ISR_timer0+1,w,c
  5121  000434  6EDA               	movwf	fsr2h,c
  5122  000436  50DF               	movf	indf2,w,c
  5123  000438  6EFE               	movwf	tosh,c	;volatile
  5124  00043A  0E6C               	movlw	108
  5125  00043C  6EE6               	movwf	postinc1,c
  5126  00043E  0E00               	movlw	0
  5127  000440  6EE6               	movwf	postinc1,c
  5128  000442  C00B  FFE6         	movff	_who,postinc1
  5129  000446  C00C  FFE6         	movff	_who+1,postinc1
  5130  00044A  EC2A  F00B         	call	___wmul	;wreg free
  5131  00044E  0ED4               	movlw	low _ready_queue
  5132  000450  6E63               	movwf	??_ISR_timer0& (0+255),c
  5133  000452  0E00               	movlw	high _ready_queue
  5134  000454  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5135  000456  0E09               	movlw	9
  5136  000458  2663               	addwf	??_ISR_timer0,f,c
  5137  00045A  0E00               	movlw	0
  5138  00045C  2264               	addwfc	??_ISR_timer0+1,f,c
  5139  00045E  5043               	movf	btemp,w,c
  5140  000460  2663               	addwf	??_ISR_timer0,f,c
  5141  000462  5044               	movf	btemp+1,w,c
  5142  000464  2264               	addwfc	??_ISR_timer0+1,f,c
  5143  000466  0E03               	movlw	3
  5144  000468  6EE6               	movwf	postinc1,c
  5145  00046A  0E00               	movlw	0
  5146  00046C  6EE6               	movwf	postinc1,c
  5147  00046E  C009  FFE6         	movff	_size,postinc1
  5148  000472  C00A  FFE6         	movff	_size+1,postinc1
  5149  000476  EC2A  F00B         	call	___wmul	;wreg free
  5150  00047A  5043               	movf	btemp,w,c
  5151  00047C  2463               	addwf	??_ISR_timer0,w,c
  5152  00047E  6ED9               	movwf	fsr2l,c
  5153  000480  5044               	movf	btemp+1,w,c
  5154  000482  2064               	addwfc	??_ISR_timer0+1,w,c
  5155  000484  6EDA               	movwf	fsr2h,c
  5156  000486  50DF               	movf	indf2,w,c
  5157  000488  6EFF               	movwf	tosu,c	;volatile
  5158  00048A  0609               	decf	_size,f,c
  5159  00048C  A0D8               	btfss	status,0,c
  5160  00048E  060A               	decf	_size+1,f,c
  5161  000490                     i2l2060:
  5162  000490  5009               	movf	_size,w,c
  5163  000492  100A               	iorwf	_size+1,w,c
  5164  000494  A4D8               	btfss	status,2,c
  5165  000496  D780               	goto	i2l59
  5166  000498                     i2u92_40:
  5167                           
  5168                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  5169                           
  5170                           ;int0_test.c: 73:   }
  5171  000498  8EF2               	bsf	4082,7,c	;volatile
  5172  00049A  C072  F04E         	movff	??_ISR_timer0+15,btemp+11
  5173  00049E  C071  F04D         	movff	??_ISR_timer0+14,btemp+10
  5174  0004A2  C070  F04C         	movff	??_ISR_timer0+13,btemp+9
  5175  0004A6  C06F  F04B         	movff	??_ISR_timer0+12,btemp+8
  5176  0004AA  C06E  F044         	movff	??_ISR_timer0+11,btemp+1
  5177  0004AE  C06D  F043         	movff	??_ISR_timer0+10,btemp
  5178  0004B2  C06C  FFF4         	movff	??_ISR_timer0+9,prodh
  5179  0004B6  C06B  FFF3         	movff	??_ISR_timer0+8,prodl
  5180  0004BA  C06A  FFDA         	movff	??_ISR_timer0+7,fsr2h
  5181  0004BE  C069  FFD9         	movff	??_ISR_timer0+6,fsr2l
  5182  0004C2  C068  FFE2         	movff	??_ISR_timer0+5,fsr1h
  5183  0004C6  C067  FFE1         	movff	??_ISR_timer0+4,fsr1l
  5184  0004CA  0011               	retfie		f
  5185  0004CC                     __end_of_ISR_timer0:
  5186                           	opt callstack 0
  5187                           
  5188 ;; *************** function _delay_decrement *****************
  5189 ;; Defined at:
  5190 ;;		line 99 in file "kernel.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;		None
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  i               2  [STACK] int 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1  [STACK] void 
  5197 ;; Registers used:
  5198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5204 ;;      Params:         0       0       0       0       0       0       0
  5205 ;;      Locals:         0       0       0       0       0       0       0
  5206 ;;      Temps:          0       0       0       0       0       0       0
  5207 ;;      Totals:         0       0       0       0       0       0       0
  5208 ;;Total ram usage:        0 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_ISR_timer0
  5214 ;; This function uses a reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text32
  5218  000C60                     __ptext32:
  5219                           	opt callstack 0
  5220  000C60                     _delay_decrement:
  5221                           	opt callstack 0
  5222                           
  5223                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5224  000C60  52E6               	movf	postinc1,f,c
  5225  000C62  52E6               	movf	postinc1,f,c
  5226                           
  5227                           ;kernel.c: 100:   int i;;kernel.c: 102:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  5228                           ;stkvar	_i @ sp[(-2)+0]
  5229                           
  5230                           ;incstack = 0
  5231  000C64  0EFE               	movlw	-2
  5232  000C66  6AE3               	clrf	plusw1,c
  5233  000C68  0EFF               	movlw	-1
  5234  000C6A  6AE3               	clrf	plusw1,c
  5235  000C6C  D070               	goto	l1902
  5236  000C6E                     l1892:
  5237                           
  5238                           ;kernel.c: 103:     if (ready_queue.tasks[i].task_state == WAITING) {
  5239                           ;stkvar	_i @ sp[(-2)+0]
  5240  000C6E  0EFE               	movlw	-2
  5241  000C70  CFE3 F04D          	movff	plusw1,btemp+10
  5242  000C74  0EFF               	movlw	-1
  5243  000C76  CFE3 F04E          	movff	plusw1,btemp+11
  5244  000C7A  0E6C               	movlw	108
  5245  000C7C  024D               	mulwf	btemp+10,c
  5246  000C7E  CFF3 F04B          	movff	prodl,btemp+8
  5247  000C82  CFF4 F04C          	movff	prodh,btemp+9
  5248  000C86  024E               	mulwf	btemp+11,c
  5249  000C88  50F3               	movf	prodl,w,c
  5250  000C8A  264C               	addwf	btemp+9,f,c
  5251  000C8C  0EDC               	movlw	low (_ready_queue+8)
  5252  000C8E  244B               	addwf	btemp+8,w,c
  5253  000C90  6ED9               	movwf	fsr2l,c
  5254  000C92  0E00               	movlw	high (_ready_queue+8)
  5255  000C94  204C               	addwfc	btemp+9,w,c
  5256  000C96  6EDA               	movwf	fsr2h,c
  5257  000C98  0E02               	movlw	2
  5258  000C9A  18DE               	xorwf	postinc2,w,c
  5259  000C9C  A4D8               	btfss	status,2,c
  5260  000C9E  D048               	goto	l1900
  5261                           
  5262                           ;kernel.c: 104:       ready_queue.tasks[i].task_delay_time--;
  5263                           ;stkvar	_i @ sp[(-2)+0]
  5264  000CA0  0EFE               	movlw	-2
  5265  000CA2  CFE3 F04D          	movff	plusw1,btemp+10
  5266  000CA6  0EFF               	movlw	-1
  5267  000CA8  CFE3 F04E          	movff	plusw1,btemp+11
  5268  000CAC  0E6C               	movlw	108
  5269  000CAE  024D               	mulwf	btemp+10,c
  5270  000CB0  CFF3 F04B          	movff	prodl,btemp+8
  5271  000CB4  CFF4 F04C          	movff	prodh,btemp+9
  5272  000CB8  024E               	mulwf	btemp+11,c
  5273  000CBA  50F3               	movf	prodl,w,c
  5274  000CBC  264C               	addwf	btemp+9,f,c
  5275  000CBE  0E3E               	movlw	low (_ready_queue+106)
  5276  000CC0  244B               	addwf	btemp+8,w,c
  5277  000CC2  6ED9               	movwf	fsr2l,c
  5278  000CC4  0E01               	movlw	high (_ready_queue+106)
  5279  000CC6  204C               	addwfc	btemp+9,w,c
  5280  000CC8  6EDA               	movwf	fsr2h,c
  5281  000CCA  06DE               	decf	postinc2,f,c
  5282  000CCC  0E00               	movlw	0
  5283  000CCE  5ADD               	subwfb	postdec2,f,c
  5284                           
  5285                           ;kernel.c: 105:       if (ready_queue.tasks[i].task_delay_time == 0) {
  5286                           ;stkvar	_i @ sp[(-2)+0]
  5287  000CD0  0EFE               	movlw	-2
  5288  000CD2  CFE3 F04D          	movff	plusw1,btemp+10
  5289  000CD6  0EFF               	movlw	-1
  5290  000CD8  CFE3 F04E          	movff	plusw1,btemp+11
  5291  000CDC  0E6C               	movlw	108
  5292  000CDE  024D               	mulwf	btemp+10,c
  5293  000CE0  CFF3 F04B          	movff	prodl,btemp+8
  5294  000CE4  CFF4 F04C          	movff	prodh,btemp+9
  5295  000CE8  024E               	mulwf	btemp+11,c
  5296  000CEA  50F3               	movf	prodl,w,c
  5297  000CEC  264C               	addwf	btemp+9,f,c
  5298  000CEE  0E3E               	movlw	low (_ready_queue+106)
  5299  000CF0  244B               	addwf	btemp+8,w,c
  5300  000CF2  6ED9               	movwf	fsr2l,c
  5301  000CF4  0E01               	movlw	high (_ready_queue+106)
  5302  000CF6  204C               	addwfc	btemp+9,w,c
  5303  000CF8  6EDA               	movwf	fsr2h,c
  5304  000CFA  50DE               	movf	postinc2,w,c
  5305  000CFC  10DE               	iorwf	postinc2,w,c
  5306  000CFE  A4D8               	btfss	status,2,c
  5307  000D00  D017               	goto	l1900
  5308                           
  5309                           ;kernel.c: 106:         ready_queue.tasks[i].task_state = READY;
  5310                           ;stkvar	_i @ sp[(-2)+0]
  5311  000D02  0EFE               	movlw	-2
  5312  000D04  CFE3 F04D          	movff	plusw1,btemp+10
  5313  000D08  0EFF               	movlw	-1
  5314  000D0A  CFE3 F04E          	movff	plusw1,btemp+11
  5315  000D0E  0E6C               	movlw	108
  5316  000D10  024D               	mulwf	btemp+10,c
  5317  000D12  CFF3 F04B          	movff	prodl,btemp+8
  5318  000D16  CFF4 F04C          	movff	prodh,btemp+9
  5319  000D1A  024E               	mulwf	btemp+11,c
  5320  000D1C  50F3               	movf	prodl,w,c
  5321  000D1E  264C               	addwf	btemp+9,f,c
  5322  000D20  0EDC               	movlw	low (_ready_queue+8)
  5323  000D22  244B               	addwf	btemp+8,w,c
  5324  000D24  6ED9               	movwf	fsr2l,c
  5325  000D26  0E00               	movlw	high (_ready_queue+8)
  5326  000D28  204C               	addwfc	btemp+9,w,c
  5327  000D2A  6EDA               	movwf	fsr2h,c
  5328  000D2C  0E00               	movlw	0
  5329  000D2E  6EDF               	movwf	indf2,c
  5330  000D30                     l1900:
  5331                           
  5332                           ;kernel.c: 113:   }
  5333                           ;stkvar	_i @ sp[(-2)+0]
  5334  000D30  0EFE               	movlw	-2
  5335  000D32  50E3               	movf	plusw1,w,c
  5336  000D34  0F01               	addlw	1
  5337  000D36  6E43               	movwf	btemp,c
  5338  000D38  0EFE               	movlw	-2
  5339  000D3A  C043  FFE3         	movff	btemp,plusw1
  5340  000D3E  6A43               	clrf	btemp,c
  5341  000D40  0EFF               	movlw	-1
  5342  000D42  50E3               	movf	plusw1,w,c
  5343  000D44  2043               	addwfc	btemp,w,c
  5344  000D46  6E43               	movwf	btemp,c
  5345  000D48  0EFF               	movlw	-1
  5346  000D4A  C043  FFE3         	movff	btemp,plusw1
  5347  000D4E                     l1902:
  5348  000D4E  EE22  F0F0         	lfsr	2,_ready_queue+540
  5349                           
  5350                           ;stkvar	_i @ sp[(-2)+0]
  5351  000D52  0EFE               	movlw	-2
  5352  000D54  CFE3 F043          	movff	plusw1,btemp
  5353  000D58  50DE               	movf	postinc2,w,c
  5354  000D5A  5C43               	subwf	btemp,w,c
  5355  000D5C  0EFF               	movlw	-1
  5356  000D5E  CFE3 F043          	movff	plusw1,btemp
  5357  000D62  50DE               	movf	postinc2,w,c
  5358  000D64  5843               	subwfb	btemp,w,c
  5359  000D66  A0D8               	btfss	status,0,c
  5360  000D68  D782               	goto	l1892
  5361                           
  5362                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  5363  000D6A  52E5               	movf	postdec1,f,c
  5364  000D6C  52E5               	movf	postdec1,f,c
  5365  000D6E  0012               	return		;funcret
  5366  000D70                     __end_of_delay_decrement:
  5367                           	opt callstack 0
  5368                           
  5369 ;; *************** function ___wmul *****************
  5370 ;; Defined at:
  5371 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  multiplier      2  [STACK] unsigned int 
  5374 ;;  multiplicand    2  [STACK] unsigned int 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  product         2  [STACK] unsigned int 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  2  [STACK] unsigned int 
  5379 ;; Registers used:
  5380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5386 ;;      Params:         0       0       0       0       0       0       0
  5387 ;;      Locals:         0       0       0       0       0       0       0
  5388 ;;      Temps:          0       0       0       0       0       0       0
  5389 ;;      Totals:         0       0       0       0       0       0       0
  5390 ;;Total ram usage:        0 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; This function calls:
  5393 ;;		Nothing
  5394 ;; This function is called by:
  5395 ;;		_ISR_timer0
  5396 ;; This function uses a reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text33
  5400  001654                     __ptext33:
  5401                           	opt callstack 0
  5402  001654                     ___wmul:
  5403                           	opt callstack 0
  5404                           
  5405                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5406  001654  52E6               	movf	postinc1,f,c
  5407  001656  52E6               	movf	postinc1,f,c
  5408                           
  5409                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5410                           
  5411                           ;incstack = 0
  5412  001658  0EFA               	movlw	-6
  5413  00165A  CFE3 F04E          	movff	plusw1,btemp+11
  5414                           
  5415                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5416  00165E  0EFC               	movlw	-4
  5417  001660  50E3               	movf	plusw1,w,c
  5418  001662  024E               	mulwf	btemp+11,c
  5419                           
  5420                           ;stkvar	_product @ sp[(-2)+0]
  5421  001664  0EFE               	movlw	-2
  5422  001666  CFF3 FFE3          	movff	prodl,plusw1
  5423  00166A  0EFF               	movlw	-1
  5424  00166C  CFF4 FFE3          	movff	prodh,plusw1
  5425                           
  5426                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5427  001670  0EFB               	movlw	251
  5428  001672  24E1               	addwf	fsr1l,w,c
  5429  001674  6ED9               	movwf	fsr2l,c
  5430  001676  0EFF               	movlw	255
  5431  001678  20E2               	addwfc	fsr1h,w,c
  5432  00167A  6EDA               	movwf	fsr2h,c
  5433  00167C  50DF               	movf	indf2,w,c
  5434  00167E  6E4E               	movwf	btemp+11,c
  5435                           
  5436                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5437  001680  0EFC               	movlw	-4
  5438  001682  50E3               	movf	plusw1,w,c
  5439  001684  024E               	mulwf	btemp+11,c
  5440  001686  CFF3 FFF4          	movff	prodl,prodh
  5441  00168A  6AF3               	clrf	prodl,c
  5442                           
  5443                           ;stkvar	_product @ sp[(-2)+0]
  5444  00168C  50E1               	movf	fsr1l,w,c
  5445  00168E  0FFE               	addlw	-2
  5446  001690  6ED9               	movwf	fsr2l,c
  5447  001692  50E2               	movf	fsr1h,w,c
  5448  001694  6EDA               	movwf	fsr2h,c
  5449  001696  0EFF               	movlw	255
  5450  001698  22DA               	addwfc	fsr2h,f,c
  5451  00169A  50F3               	movf	prodl,w,c
  5452  00169C  26DE               	addwf	postinc2,f,c
  5453  00169E  50F4               	movf	prodh,w,c
  5454  0016A0  22DD               	addwfc	postdec2,f,c
  5455                           
  5456                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5457  0016A2  0EFA               	movlw	-6
  5458  0016A4  CFE3 F04E          	movff	plusw1,btemp+11
  5459                           
  5460                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5461  0016A8  0EFD               	movlw	253
  5462  0016AA  24E1               	addwf	fsr1l,w,c
  5463  0016AC  6ED9               	movwf	fsr2l,c
  5464  0016AE  0EFF               	movlw	255
  5465  0016B0  20E2               	addwfc	fsr1h,w,c
  5466  0016B2  6EDA               	movwf	fsr2h,c
  5467  0016B4  50DF               	movf	indf2,w,c
  5468  0016B6  024E               	mulwf	btemp+11,c
  5469  0016B8  CFF3 FFF4          	movff	prodl,prodh
  5470  0016BC  6AF3               	clrf	prodl,c
  5471                           
  5472                           ;stkvar	_product @ sp[(-2)+0]
  5473  0016BE  50E1               	movf	fsr1l,w,c
  5474  0016C0  0FFE               	addlw	-2
  5475  0016C2  6ED9               	movwf	fsr2l,c
  5476  0016C4  50E2               	movf	fsr1h,w,c
  5477  0016C6  6EDA               	movwf	fsr2h,c
  5478  0016C8  0EFF               	movlw	255
  5479  0016CA  22DA               	addwfc	fsr2h,f,c
  5480  0016CC  50F3               	movf	prodl,w,c
  5481  0016CE  26DE               	addwf	postinc2,f,c
  5482  0016D0  50F4               	movf	prodh,w,c
  5483  0016D2  22DD               	addwfc	postdec2,f,c
  5484                           
  5485                           ;stkvar	_product @ sp[(-2)+0]
  5486  0016D4  0EFE               	movlw	-2
  5487  0016D6  CFE3 F043          	movff	plusw1,btemp
  5488  0016DA  0EFF               	movlw	-1
  5489  0016DC  CFE3 F044          	movff	plusw1,btemp+1
  5490                           
  5491                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  5492  0016E0  0EFA               	movlw	250
  5493  0016E2  26E1               	addwf	fsr1l,f,c
  5494  0016E4  0EFF               	movlw	255
  5495  0016E6  22E2               	addwfc	fsr1h,f,c
  5496  0016E8  0012               	return		;funcret
  5497  0016EA                     __end_of___wmul:
  5498                           	opt callstack 0
  5499  0000                     
  5500                           	psect	text34
  5501  000000                     __ptext34:
  5502                           	opt callstack 0
  5503                           
  5504                           	psect	rparam
  5505  0000                     
  5506                           	psect	temp
  5507  000043                     btemp:
  5508                           	opt callstack 0
  5509  000043                     	ds	32
  5510  0000                     wtemp0	set	btemp
  5511  0000                     wtemp1	set	btemp+2
  5512  0000                     wtemp2	set	btemp+4
  5513  0000                     wtemp3	set	btemp+6
  5514  0000                     wtemp4	set	btemp+8
  5515  0000                     wtemp5	set	btemp+10
  5516  0000                     wtemp8	set	btemp+1
  5517  0000                     ttemp0	set	btemp
  5518  0000                     ttemp1	set	btemp+3
  5519  0000                     ttemp2	set	btemp+6
  5520  0000                     ttemp3	set	btemp+9
  5521  0000                     ttemp5	set	btemp+1
  5522  0000                     ttemp6	set	btemp+4
  5523  0000                     ttemp7	set	btemp+8
  5524  0000                     ltemp0	set	btemp
  5525  0000                     ltemp1	set	btemp+4
  5526  0000                     ltemp2	set	btemp+8
  5527  0000                     lltemp0	set	btemp
  5528  0000                     lltemp1	set	btemp+8
  5529  0000                     lltemp2	set	btemp+16
  5530  0000                     lltemp3	set	btemp+24
  5531                           tosu	equ	0xFFF
  5532                           tosh	equ	0xFFE
  5533                           tosl	equ	0xFFD
  5534                           stkptr	equ	0xFFC
  5535                           pclatu	equ	0xFFB
  5536                           pclath	equ	0xFFA
  5537                           pcl	equ	0xFF9
  5538                           tblptru	equ	0xFF8
  5539                           tblptrh	equ	0xFF7
  5540                           tblptrl	equ	0xFF6
  5541                           tablat	equ	0xFF5
  5542                           prodh	equ	0xFF4
  5543                           prodl	equ	0xFF3
  5544                           indf0	equ	0xFEF
  5545                           postinc0	equ	0xFEE
  5546                           postdec0	equ	0xFED
  5547                           preinc0	equ	0xFEC
  5548                           plusw0	equ	0xFEB
  5549                           fsr0h	equ	0xFEA
  5550                           fsr0l	equ	0xFE9
  5551                           wreg	equ	0xFE8
  5552                           indf1	equ	0xFE7
  5553                           postinc1	equ	0xFE6
  5554                           postdec1	equ	0xFE5
  5555                           preinc1	equ	0xFE4
  5556                           plusw1	equ	0xFE3
  5557                           fsr1h	equ	0xFE2
  5558                           fsr1l	equ	0xFE1
  5559                           bsr	equ	0xFE0
  5560                           indf2	equ	0xFDF
  5561                           postinc2	equ	0xFDE
  5562                           postdec2	equ	0xFDD
  5563                           preinc2	equ	0xFDC
  5564                           plusw2	equ	0xFDB
  5565                           fsr2h	equ	0xFDA
  5566                           fsr2l	equ	0xFD9
  5567                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1206
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      84
    BANK0           128      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    mem	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> teste_2(BANK0[14]), teste_1(BANK0[14]), r_pipe(BANK0[14]), w_pipe(BANK0[14]), 
		 -> out_sem(BANK0[14]), cover_sem(BANK0[14]), check_sem(COMRAM[14]), fill_sem(COMRAM[14]), 
		 -> count_sem(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> teste_2(BANK0[14]), teste_1(BANK0[14]), r_pipe(BANK0[14]), w_pipe(BANK0[14]), 
		 -> out_sem(BANK0[14]), cover_sem(BANK0[14]), check_sem(COMRAM[14]), fill_sem(COMRAM[14]), 
		 -> count_sem(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), w_pipe(BANK0[14]), out_sem(BANK0[14]), cover_sem(BANK0[14]), 
		 -> check_sem(COMRAM[14]), fill_sem(COMRAM[14]), count_sem(COMRAM[14]), 

    data	PTR unsigned int  size(2) Largest target is 2
		 -> dado(STACK[2]), count(STACK[2]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    S541pipe$r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    S541pipe$w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    S258pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _task_0 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_bozo in COMRAM

    None.

Critical Paths under _task_xuxa in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _task_0 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_bozo in BANK0

    None.

Critical Paths under _task_xuxa in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _task_0 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_bozo in BANK1

    None.

Critical Paths under _task_xuxa in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _task_0 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_bozo in BANK2

    None.

Critical Paths under _task_xuxa in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _task_0 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_bozo in BANK3

    None.

Critical Paths under _task_xuxa in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _task_0 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_bozo in BANK4

    None.

Critical Paths under _task_xuxa in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _task_0 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_bozo in BANK5

    None.

Critical Paths under _task_xuxa in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2004
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0    1245
                          _SRAMalloc
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _pipe_create                                          6     0      6     264
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (2) _SRAMalloc                                            7     6      1     893
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (3) __SRAMmerge                                           7     5      2     402
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     323
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   112   108      4     187
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     828
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     806
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0     535
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         4     4      0    1316
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            2     2      0    1248
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     828
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     806
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0     535
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         4     4      0    1316
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            2     2      0    1248
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_0                                               0     0      0     960
                    _lunos_delayTask
                         _pipe_write
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_1                                               2     2      0     984
                    _lunos_delayTask
                          _pipe_read
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_2                                               0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_bozo                                            2     2      0     625
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_xuxa                                            2     2      0     874
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer0                                         16    16      0     498
                                              0 COMRAM    16    16      0
                             ___wmul
                    _delay_decrement
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (13) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _user_conf
     _SRAMalloc
       __SRAMmerge
     _pipe_create
       _sem_init
     _sem_init

 _task_idle (ROOT)

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_0 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_1 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_2 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_bozo (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_xuxa (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   _delay_decrement
   _round_robin
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     420      17       68.8%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      54       5       65.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      54       1       88.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8      15        0.0%
DATA                 0      0     4C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun  5 15:42:22 2019

                        _p 0037   __end_of_lunos_createTask 1188                        l127 0846  
                      l320 1AEE                        l321 1AF6                        l340 19D4  
                      l324 1AFE                        l316 1ADE                        l404 0B04  
                      l317 1AE6                        l334 19C6                        l335 19BE  
                      l345 19EA                        l186 17F6                        l339 19DC  
                      l381 17FC                        l357 1B4A                        l294 18E8  
                      l296 18F6                        l369 19F8                        l389 1438  
                      _BSR 000FE0                        u610 0B74                        u700 13AA  
                      u710 0984                        u800 1598                        u661 116C  
                      u750 0A1C                        u690 096A                        u780 1532  
                      _TOS 000FFD                        _mem 0007                        _who 000B  
              _round_robin 16EA                        wreg 000FE8               __CFG_WDT$OFF 000000  
                     l2100 1BA4                       l2102 1BB0                       l2212 1484  
                     l2208 144C                       l2092 193C                       l2192 1810  
                     l1802 13F0                       l1730 0C40                       l1900 0D30  
                     l1902 0D4E                       l1824 098E                       l1906 16FA  
                     l1762 0586                       l1826 09A2                       l1844 0A48  
                     l1782 076C                       l1766 06A0                       l1854 0A82  
                     l1872 150A                       l1882 157A                       l1794 1396  
                     l1698 0B78                       l1892 0C6E                       l1788 0962  
                     l1974 135E                       l1986 1276                       i2l59 0398  
                     _TOSH 000FFE                       _TOSL 000FFD                       _WREG 000FE8  
                     _TOSU 000FFF                       _main 177A              _global_buffer 0001  
   __size_of_count_bottles 006C                       _size 0009                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0043                       prodh 000FF4                       prodl 000FF3  
                     start 000C               ___param_bank 000000            __end_of___lwmod 15AE  
                    _TMR0L 000FD6                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      u86_20 11BA                      u94_20 194C  
              ?_ISR_timer0 0063                 __SRAMmerge 0B0E       __size_of_check_level 003E  
       __size_of_SRAMalloc 019E                      tablat 000FF5                      ltemp0 0043  
                    ltemp1 0047                      ltemp2 004B                      plusw0 000FEB  
                    plusw1 000FE3                      plusw2 000FDB                      ttemp0 0043  
                    ttemp1 0046                      ttemp2 0049                      ttemp3 004C  
                    ttemp5 0044                      ttemp6 0047                      ttemp7 004B  
                    status 000FD8                      wtemp0 0043                      wtemp1 0045  
                    wtemp2 0047                      wtemp3 0049                      wtemp4 004B  
                    wtemp5 004D                      wtemp8 0044   __size_of_delay_decrement 0110  
          __initialization 1A40               __end_of_main 17F8              _count_bottles 18E6  
            __activetblptr 000000                     u120_20 14E4                     u113_20 1AA6  
                   u113_26 1AA8                     u114_20 1A20                     u114_26 1A22  
                   u115_20 1B74                     i2l2034 012C                     i2l2060 0490  
                   i2l2054 02DC                     i2l2038 0222                     u115_26 1B76  
                   u116_20 1868                     u118_20 1470                     u118_26 1472  
                   u119_20 148C                     u119_26 148E                     _STATUS 000FD8  
                   _STKPTR 000FFC       __size_of_config_INT0 0010       __size_of_fill_bottle 0026  
      __size_of_ISR_timer0 04C4                     ___wmul 1654          __end_of_SRAMalloc 0B0E  
                   clear_0 1A60                     clear_1 1A72                     clear_2 1A7E  
                   _r_pipe 009C                     _task_0 1A8A                     _task_1 19F4  
                   _task_2 1B6C                     _w_pipe 00AA           __end_of_sem_init 18E6  
         __end_of_sem_wait 1366           __end_of_sem_post 127E               __pdataCOMRAM 0073  
                   lltemp0 0043                     lltemp1 004B                     lltemp2 0053  
                   lltemp3 005B                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0080    __end_of__initialization 1A84  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001             __pcstackCOMRAM 0063  
               ___inthi_sp 054E       __end_of_cover_bottle 19F4                 __pbssBANK0 0080  
       __size_of_count_out 0032              __uDynamicHeap 02F4         __size_of_scheduler 0006  
      __size_of__SRAMmerge 0152         __size_of_pipe_read 0108         __size_of_task_idle 0004  
       __size_of_task_bozo 007E         __size_of_task_xuxa 00BE               ??_ISR_timer0 0063  
                  i2u92_40 0498                 _dispatcher 04CC                    i2u88_40 005E  
                  i2u88_46 0060                    i2u89_40 0086                    i2u89_41 0084  
          _lunos_delayTask 1952       __size_of_pipe_create 010E         __size_of_user_conf 00A6  
                  __Hparam 0000                    __Lparam 0000            __size_of___wmul 0096  
       __end_of_ISR_timer0 04CC                    ___lwmod 14F2                    __pcinit 1A40  
                  __ramtop 0600            __size_of_task_0 0040            __size_of_task_1 004C  
          __size_of_task_2 002A          __end_of_count_out 1B6C                    __ptext0 177A  
                  __ptext1 15AE                    __ptext2 0D70                    __ptext3 1876  
                  __ptext4 0970                    __ptext5 0B0E                    __ptext6 1B08  
                  __ptext7 1090                    __ptext8 1366                    __ptext9 04CC  
                _T0CONbits 000FD5                    _teste_1 00C6                    _teste_2 00B8  
                  _quantum 0073                    _out_sem 0080          __end_of_scheduler 1BE4  
           __pintcode_body 0014       end_of_initialization 1A84          __end_of_pipe_read 1090  
        __end_of_task_idle 1BE8          __end_of_task_bozo 1876                    int_func 0014  
        __end_of_task_xuxa 14F2                 _pipe_write 0E7E      __end_of_config_timer0 1BCE  
                  postdec0 000FED                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               _lunos_init 1B08          __end_of_user_conf 1654                  _PORTBbits 000F81  
                _PORTCbits 000F82                  _PORTDbits 000F83    __end_of_lunos_delayTask 19A4  
                _SRAMalloc 0970      __size_of_cover_bottle 0050                  _TRISDbits 000F95  
     __size_of_round_robin 0090        __end_of_check_level 1B08            _delay_decrement 0C60  
             _cover_bottle 19A4         __end_of__SRAMmerge 0C60             __end_of___wmul 16EA  
            __pidataCOMRAM 1BE8             __end_of_task_0 1ACA             __end_of_task_1 1A40  
           __end_of_task_2 1B96        start_initialization 1A40  __size_of_lunos_createTask 00F8  
      __end_of_config_INT0 1BDE        __size_of_dispatcher 04A4        __end_of_fill_bottle 1BBC  
              __pbssBIGRAM 00D4                __pbssCOMRAM 0001                _check_level 1ACA  
  __end_of_delay_decrement 0D70       __end_of_SRAMInitHeap 1434                  _check_sem 000D  
                __pintcode 0008          __size_of_sem_init 0070          __size_of_sem_wait 00E8  
        __size_of_sem_post 00F6      __end_of_count_bottles 1952        __size_of_pipe_write 010A  
                _cover_sem 008E                  _count_sem 0029                  _count_out 1B3A  
      __size_of_lunos_init 0032                  _scheduler 1BDE                _config_INT0 1BCE  
                _pipe_read 0F88                _fill_bottle 1B96                  _task_idle 1BE4  
                _task_bozo 17F8                  _task_xuxa 1434                  _user_conf 15AE  
         _lunos_createTask 1090                _INTCON2bits 000FF1        __end_of_pipe_create 0E7E  
                 __Hrparam 0000                   __Lrparam 0000         __end_of_dispatcher 0970  
         __size_of___lwmod 00BC     __size_of_config_timer0 0012      __size_of_SRAMInitHeap 00CE  
                 __ptext10 1BDE                   __ptext11 16EA                   __ptext20 1B96  
                 __ptext12 14F2                   __ptext21 1ACA                   __ptext13 1BBC  
                 __ptext30 1434                   __ptext22 19A4                   __ptext14 1BCE  
                 __ptext23 0E7E                   __ptext15 1BE4                   __ptext32 0C60  
                 __ptext24 1B3A                   __ptext16 18E6                   __ptext33 1654  
                 __ptext25 0F88                   __ptext17 127E                   __ptext34 0000  
                 __ptext26 1A8A                   __ptext18 1188                   __ptext27 19F4  
                 __ptext19 1952                   __ptext28 1B6C                   __ptext29 17F8  
                 _fill_sem 001B              __size_of_main 007E                _ready_queue 00D4  
                 _sem_init 1876                   _sem_wait 127E                   _sem_post 1188  
             _SRAMInitHeap 1366                 _INTCONbits 000FF2         __end_of_pipe_write 0F88  
              _pipe_create 0D70        __end_of_round_robin 177A                   intlevel1 0000  
                 intlevel2 0000         __end_of_lunos_init 1B3A              _config_timer0 1BBC  
               _ISR_timer0 0008   __size_of_lunos_delayTask 0052  
