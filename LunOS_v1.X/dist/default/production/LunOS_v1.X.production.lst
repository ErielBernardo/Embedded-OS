

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun  3 18:46:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 2.05
    50                           ; Generated 20/12/2018 GMT
    51                           ; 
    52                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4520 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84 ;;_p	offset=-2 (param)
    85 ;;_w	offset=-4 (param)
    86 ;;_r	offset=-6 (param)
    87 ;;_s	offset=-2 (param)
    88 ;;_valor	offset=-4 (param)
    89 ;;_pHeap	offset	0
    90 ;;_temp	offset	2
    91 ;;_segHeader	offset	4
    92 ;;_segLen	offset	5
    93 ;;_nBytes	offset=-1 (param)
    94 ;;_pSegB	offset	0
    95 ;;_uSegB	offset	2
    96 ;;_uSegA	offset	3
    97 ;;_uSum	offset	4
    98 ;;_pSegA	offset=-2 (param)
    99 ;;_new_task	offset	0
   100 ;;_prior	offset=-2 (param)
   101 ;;_f	offset=-4 (param)
   102 ;;_count	offset	0
   103 ;;_pHeap	offset	2
   104 ;;_state	offset=-1 (param)
   105 ;;_next_task_to_run	offset	0
   106 ;;_counter	offset	0
   107 ;;_dividend	offset=-2 (param)
   108 ;;_divisor	offset=-4 (param)
   109 ;;_p	offset=-2 (param)
   110 ;;_data	offset=-4 (param)
   111 ;;_s	offset=-2 (param)
   112 ;;_s	offset=-2 (param)
   113 ;;_time	offset=-2 (param)
   114 ;;_state	offset=-1 (param)
   115 ;;_next_task_to_run	offset	0
   116 ;;_counter	offset	0
   117 ;;_dividend	offset=-2 (param)
   118 ;;_divisor	offset=-4 (param)
   119 ;;_dado	offset	0
   120 ;;_p	offset=-2 (param)
   121 ;;_data	offset=-4 (param)
   122 ;;_bottle	offset	0
   123 ;;_i	offset	0
   124 ;;_i	offset	0
   125 ;;_next_task_to_run	offset	0
   126 ;;_counter	offset	0
   127 ;;_dividend	offset=-2 (param)
   128 ;;_divisor	offset=-4 (param)
   129 ;;_i	offset	0
   130 ;;_product	offset	0
   131 ;;_multiplier	offset=-2 (param)
   132 ;;_multiplicand	offset=-4 (param)
   133                           
   134                           	psect	idataCOMRAM
   135  001AB0                     __pidataCOMRAM:
   136                           	opt callstack 0
   137                           
   138                           ;initializer for _quantum
   139  001AB0  000A               	dw	10
   140  0000                     _TOS	set	4093
   141  0000                     _PORTBbits	set	3969
   142  0000                     _PORTCbits	set	3970
   143  0000                     _TRISD	set	3989
   144  0000                     _TRISC	set	3988
   145  0000                     _TRISB	set	3987
   146  0000                     _STKPTR	set	4092
   147  0000                     _TOSL	set	4093
   148  0000                     _TOSH	set	4094
   149  0000                     _TOSU	set	4095
   150  0000                     _BSR	set	4064
   151  0000                     _STATUS	set	4056
   152  0000                     _WREG	set	4072
   153  0000                     _PORTDbits	set	3971
   154  0000                     _TMR0L	set	4054
   155  0000                     _T0CONbits	set	4053
   156  0000                     _INTCON2bits	set	4081
   157  0000                     _INTCONbits	set	4082
   158  0000                     _TRISDbits	set	3989
   159                           
   160                           ; #config settings
   161  0000                     
   162                           	psect	cinit
   163  001982                     __pcinit:
   164                           	opt callstack 0
   165  001982                     start_initialization:
   166                           	opt callstack 0
   167  001982                     __initialization:
   168                           	opt callstack 0
   169                           
   170                           ; Initialize objects allocated to COMRAM (2 bytes)
   171                           ; load TBLPTR registers with __pidataCOMRAM
   172  001982  0EB0               	movlw	low __pidataCOMRAM
   173  001984  6EF6               	movwf	tblptrl,c
   174  001986  0E1A               	movlw	high __pidataCOMRAM
   175  001988  6EF7               	movwf	tblptrh,c
   176  00198A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   177  00198C  6EF8               	movwf	tblptru,c
   178  00198E  0009               	tblrd		*+	;fetch initializer
   179  001990  CFF5 F073          	movff	tablat,__pdataCOMRAM
   180  001994  0009               	tblrd		*+	;fetch initializer
   181  001996  CFF5 F074          	movff	tablat,__pdataCOMRAM+1
   182                           
   183                           ; Clear objects allocated to BIGRAM (1056 bytes)
   184  00199A  EE00  F08E         	lfsr	0,__pbssBIGRAM
   185  00199E  EE24 F020          	lfsr	2,1056
   186  0019A2                     clear_0:
   187  0019A2  6AEE               	clrf	postinc0,c
   188  0019A4  50DD               	movf	postdec2,w,c
   189  0019A6  50D9               	movf	fsr2l,w,c
   190  0019A8  E1FC               	bnz	clear_0
   191  0019AA  50DA               	movf	fsr2h,w,c
   192  0019AC  E1FA               	bnz	clear_0
   193                           
   194                           ; Clear objects allocated to BANK0 (14 bytes)
   195  0019AE  EE00  F080         	lfsr	0,__pbssBANK0
   196  0019B2  0E0E               	movlw	14
   197  0019B4                     clear_1:
   198  0019B4  6AEE               	clrf	postinc0,c
   199  0019B6  06E8               	decf	wreg,f,c
   200  0019B8  E1FD               	bnz	clear_1
   201                           
   202                           ; Clear objects allocated to COMRAM (66 bytes)
   203  0019BA  EE00  F001         	lfsr	0,__pbssCOMRAM
   204  0019BE  0E42               	movlw	66
   205  0019C0                     clear_2:
   206  0019C0  6AEE               	clrf	postinc0,c
   207  0019C2  06E8               	decf	wreg,f,c
   208  0019C4  E1FD               	bnz	clear_2
   209  0019C6                     end_of_initialization:
   210                           	opt callstack 0
   211  0019C6                     __end_of__initialization:
   212                           	opt callstack 0
   213  0019C6  0100               	movlb	0
   214  0019C8  EF47  F00C         	goto	_main	;jump to C main() function
   215                           
   216                           	psect	bssCOMRAM
   217  000001                     __pbssCOMRAM:
   218                           	opt callstack 0
   219  000001                     _global_buffer:
   220                           	opt callstack 0
   221  000001                     	ds	6
   222  000007                     _mem:
   223                           	opt callstack 0
   224  000007                     	ds	2
   225  000009                     _size:
   226                           	opt callstack 0
   227  000009                     	ds	2
   228  00000B                     _who:
   229                           	opt callstack 0
   230  00000B                     	ds	2
   231  00000D                     _w_pipe:
   232                           	opt callstack 0
   233  00000D                     	ds	14
   234  00001B                     _teste_2:
   235                           	opt callstack 0
   236  00001B                     	ds	14
   237  000029                     _teste_1:
   238                           	opt callstack 0
   239  000029                     	ds	14
   240  000037                     _p:
   241                           	opt callstack 0
   242  000037                     	ds	12
   243                           
   244                           	psect	dataCOMRAM
   245  000073                     __pdataCOMRAM:
   246                           	opt callstack 0
   247  000073                     _quantum:
   248                           	opt callstack 0
   249  000073                     	ds	2
   250                           
   251                           	psect	bssBANK0
   252  000080                     __pbssBANK0:
   253                           	opt callstack 0
   254  000080                     _r_pipe:
   255                           	opt callstack 0
   256  000080                     	ds	14
   257                           
   258                           	psect	bssBIGRAM
   259  00008E                     __pbssBIGRAM:
   260                           	opt callstack 0
   261  00008E                     _ready_queue:
   262                           	opt callstack 0
   263  00008E                     	ds	544
   264  0002AE                     __uDynamicHeap:
   265                           	opt callstack 0
   266  0002AE                     	ds	512
   267                           
   268                           	psect	cstackCOMRAM
   269  000063                     __pcstackCOMRAM:
   270                           	opt callstack 0
   271  000063                     ??_ISR_timer0:
   272                           
   273                           ; 1 bytes @ 0x0
   274  000063                     	ds	16
   275                           
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 16 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1  [STACK] void 
   288 ;; Registers used:
   289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   295 ;;      Params:         0       0       0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0       0       0
   298 ;;      Totals:         0       0       0       0       0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels required when called:   14
   301 ;; This function calls:
   302 ;;		_config_INT0
   303 ;;		_config_timer0
   304 ;;		_dispatcher
   305 ;;		_lunos_createTask
   306 ;;		_lunos_init
   307 ;;		_user_conf
   308 ;; This function is called by:
   309 ;;		Startup code after reset
   310 ;; This function uses a reentrant model
   311 ;;
   312                           
   313                           	psect	text0
   314  00188E                     __ptext0:
   315                           	opt callstack 0
   316  00188E                     _main:
   317                           	opt callstack 17
   318                           
   319                           ;main.c: 18:   dispatcher(READY);
   320                           
   321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   322                           ;incstack = 0
   323  00188E  EC06  F00D         	call	_lunos_init	;wreg free
   324                           
   325                           ;main.c: 20:   while (1);
   326  001892  ECE1  F00B         	call	_user_conf	;wreg free
   327                           
   328                           ;main.c: 21: 
   329  001896  EC4B  F00D         	call	_config_INT0	;wreg free
   330                           
   331                           ;main.c: 22:   return;
   332  00189A  EC42  F00D         	call	_config_timer0	;wreg free
   333  00189E  0ECC               	movlw	low _task_0
   334  0018A0  6EE6               	movwf	postinc1,c
   335  0018A2  0E19               	movlw	high _task_0
   336  0018A4  6EE6               	movwf	postinc1,c
   337  0018A6  0E03               	movlw	3
   338  0018A8  6EE6               	movwf	postinc1,c
   339  0018AA  0E00               	movlw	0
   340  0018AC  6EE6               	movwf	postinc1,c
   341  0018AE  EC48  F008         	call	_lunos_createTask	;wreg free
   342  0018B2  0E36               	movlw	low _task_1
   343  0018B4  6EE6               	movwf	postinc1,c
   344  0018B6  0E19               	movlw	high _task_1
   345  0018B8  6EE6               	movwf	postinc1,c
   346  0018BA  0E04               	movlw	4
   347  0018BC  6EE6               	movwf	postinc1,c
   348  0018BE  0E00               	movlw	0
   349  0018C0  6EE6               	movwf	postinc1,c
   350  0018C2  EC48  F008         	call	_lunos_createTask	;wreg free
   351  0018C6  0E2C               	movlw	low _count_bottles
   352  0018C8  6EE6               	movwf	postinc1,c
   353  0018CA  0E18               	movlw	high _count_bottles
   354  0018CC  6EE6               	movwf	postinc1,c
   355  0018CE  0E05               	movlw	5
   356  0018D0  6EE6               	movwf	postinc1,c
   357  0018D2  0E00               	movlw	0
   358  0018D4  6EE6               	movwf	postinc1,c
   359  0018D6  EC48  F008         	call	_lunos_createTask	;wreg free
   360  0018DA  0E00               	movlw	0
   361  0018DC  6EE6               	movwf	postinc1,c
   362  0018DE  EC66  F002         	call	_dispatcher	;wreg free
   363  0018E2                     l182:
   364  0018E2  D7FF               	goto	l182
   365  0018E4                     __end_of_main:
   366                           	opt callstack 0
   367                           
   368 ;; *************** function _user_conf *****************
   369 ;; Defined at:
   370 ;;		line 20 in file "tasks.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1  [STACK] void 
   377 ;; Registers used:
   378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   384 ;;      Params:         0       0       0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0
   387 ;;      Totals:         0       0       0       0       0       0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; Hardware stack levels required when called:   12
   391 ;; This function calls:
   392 ;;		_SRAMalloc
   393 ;;		_pipe_create
   394 ;;		_sem_init
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a reentrant model
   398 ;;
   399                           
   400                           	psect	text1
   401  0017C2                     __ptext1:
   402                           	opt callstack 0
   403  0017C2                     _user_conf:
   404                           	opt callstack 18
   405                           
   406                           ;tasks.c: 21:   TRISB = 0b00000001;
   407                           
   408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   409                           ;incstack = 0
   410  0017C2  0E01               	movlw	1
   411  0017C4  6E93               	movwf	3987,c	;volatile
   412                           
   413                           ;tasks.c: 22:   TRISC = 0b01111111;
   414  0017C6  0E7F               	movlw	127
   415  0017C8  6E94               	movwf	3988,c	;volatile
   416                           
   417                           ;tasks.c: 23:   TRISD = 0b11111110;
   418  0017CA  0EFE               	movlw	254
   419  0017CC  6E95               	movwf	3989,c	;volatile
   420                           
   421                           ;tasks.c: 24:   PORTCbits.RC7 = 1;
   422  0017CE  8E82               	bsf	3970,7,c	;volatile
   423                           
   424                           ;tasks.c: 26:   sem_init(&teste_1, 1);
   425  0017D0  0E01               	movlw	1
   426  0017D2  6EE6               	movwf	postinc1,c
   427  0017D4  0E00               	movlw	0
   428  0017D6  6EE6               	movwf	postinc1,c
   429  0017D8  0E29               	movlw	low _teste_1
   430  0017DA  6EE6               	movwf	postinc1,c
   431  0017DC  0E00               	movlw	high _teste_1
   432  0017DE  6EE6               	movwf	postinc1,c
   433  0017E0  ECA9  F00B         	call	_sem_init	;wreg free
   434                           
   435                           ;tasks.c: 27:   sem_init(&teste_2, 0);
   436  0017E4  0E00               	movlw	0
   437  0017E6  6EE6               	movwf	postinc1,c
   438  0017E8  0E00               	movlw	0
   439  0017EA  6EE6               	movwf	postinc1,c
   440  0017EC  0E1B               	movlw	low _teste_2
   441  0017EE  6EE6               	movwf	postinc1,c
   442  0017F0  0E00               	movlw	high _teste_2
   443  0017F2  6EE6               	movwf	postinc1,c
   444  0017F4  ECA9  F00B         	call	_sem_init	;wreg free
   445                           
   446                           ;tasks.c: 28:   pipe_create(&p, &w_pipe, &r_pipe);
   447  0017F8  0E80               	movlw	low _r_pipe
   448  0017FA  6EE6               	movwf	postinc1,c
   449  0017FC  0E00               	movlw	high _r_pipe
   450  0017FE  6EE6               	movwf	postinc1,c
   451  001800  0E0D               	movlw	low _w_pipe
   452  001802  6EE6               	movwf	postinc1,c
   453  001804  0E00               	movlw	high _w_pipe
   454  001806  6EE6               	movwf	postinc1,c
   455  001808  0E37               	movlw	low _p
   456  00180A  6EE6               	movwf	postinc1,c
   457  00180C  0E00               	movlw	high _p
   458  00180E  6EE6               	movwf	postinc1,c
   459  001810  ECB8  F006         	call	_pipe_create	;wreg free
   460                           
   461                           ;tasks.c: 29:   mem = SRAMalloc(5);
   462  001814  0E05               	movlw	5
   463  001816  6EE6               	movwf	postinc1,c
   464  001818  ECB8  F004         	call	_SRAMalloc	;wreg free
   465  00181C  C043  F007         	movff	btemp,_mem
   466  001820  C044  F008         	movff	btemp+1,_mem+1
   467                           
   468                           ;tasks.c: 31:   global_buffer.count = 0;
   469  001824  6A01               	clrf	_global_buffer,c
   470  001826  6A02               	clrf	_global_buffer+1,c
   471                           
   472                           ;tasks.c: 32:   global_buffer.p_state = FREE_;
   473  001828  6A06               	clrf	_global_buffer+5,c
   474                           
   475                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   476  00182A  0012               	return		;funcret
   477  00182C                     __end_of_user_conf:
   478                           	opt callstack 0
   479                           
   480 ;; *************** function _pipe_create *****************
   481 ;; Defined at:
   482 ;;		line 9 in file "pipe.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  p               2  [STACK] PTR struct pipe
   485 ;;		 -> p(12), 
   486 ;;  w               2  [STACK] PTR struct semaphore
   487 ;;		 -> w_pipe(14), 
   488 ;;  r               2  [STACK] PTR struct semaphore
   489 ;;		 -> r_pipe(14), 
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1  [STACK] void 
   494 ;; Registers used:
   495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   501 ;;      Params:         0       0       0       0       0       0       0
   502 ;;      Locals:         0       0       0       0       0       0       0
   503 ;;      Temps:          0       0       0       0       0       0       0
   504 ;;      Totals:         0       0       0       0       0       0       0
   505 ;;Total ram usage:        0 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; Hardware stack levels required when called:   11
   508 ;; This function calls:
   509 ;;		_sem_init
   510 ;; This function is called by:
   511 ;;		_user_conf
   512 ;; This function uses a reentrant model
   513 ;;
   514                           
   515                           	psect	text2
   516  000D70                     __ptext2:
   517                           	opt callstack 0
   518  000D70                     _pipe_create:
   519                           	opt callstack 18
   520                           
   521                           ;pipe.c: 10:   p->index_write = 0;
   522                           ;stkvar	_p @ sp[(0)+-2]
   523                           
   524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   525                           ;incstack = 0
   526  000D70  0EFE               	movlw	-2
   527  000D72  CFE3 F04D          	movff	plusw1,btemp+10
   528  000D76  0EFF               	movlw	-1
   529  000D78  CFE3 F04E          	movff	plusw1,btemp+11
   530  000D7C  0E04               	movlw	4
   531  000D7E  244D               	addwf	btemp+10,w,c
   532  000D80  6ED9               	movwf	fsr2l,c
   533  000D82  0E00               	movlw	0
   534  000D84  204E               	addwfc	btemp+11,w,c
   535  000D86  6EDA               	movwf	fsr2h,c
   536  000D88  0E00               	movlw	0
   537  000D8A  6EDE               	movwf	postinc2,c
   538  000D8C  0E00               	movlw	0
   539  000D8E  6EDD               	movwf	postdec2,c
   540                           
   541                           ;pipe.c: 11:   p->index_read = 0;
   542                           ;stkvar	_p @ sp[(0)+-2]
   543  000D90  0EFE               	movlw	-2
   544  000D92  CFE3 F04D          	movff	plusw1,btemp+10
   545  000D96  0EFF               	movlw	-1
   546  000D98  CFE3 F04E          	movff	plusw1,btemp+11
   547  000D9C  0E06               	movlw	6
   548  000D9E  244D               	addwf	btemp+10,w,c
   549  000DA0  6ED9               	movwf	fsr2l,c
   550  000DA2  0E00               	movlw	0
   551  000DA4  204E               	addwfc	btemp+11,w,c
   552  000DA6  6EDA               	movwf	fsr2h,c
   553  000DA8  0E00               	movlw	0
   554  000DAA  6EDE               	movwf	postinc2,c
   555  000DAC  0E00               	movlw	0
   556  000DAE  6EDD               	movwf	postdec2,c
   557                           
   558                           ;pipe.c: 12:   p->w = w;
   559                           ;stkvar	_w @ sp[(0)+-4]
   560  000DB0  50E1               	movf	fsr1l,w,c
   561  000DB2  0FFC               	addlw	-4
   562  000DB4  6ED9               	movwf	fsr2l,c
   563  000DB6  50E2               	movf	fsr1h,w,c
   564  000DB8  6EDA               	movwf	fsr2h,c
   565  000DBA  0EFF               	movlw	255
   566  000DBC  22DA               	addwfc	fsr2h,f,c
   567                           
   568                           ;stkvar	_p @ sp[(0)+-2]
   569  000DBE  0EFE               	movlw	-2
   570  000DC0  CFE3 F04D          	movff	plusw1,btemp+10
   571  000DC4  0EFF               	movlw	-1
   572  000DC6  CFE3 F04E          	movff	plusw1,btemp+11
   573  000DCA  0E08               	movlw	8
   574  000DCC  244D               	addwf	btemp+10,w,c
   575  000DCE  6EE9               	movwf	fsr0l,c
   576  000DD0  0E00               	movlw	0
   577  000DD2  204E               	addwfc	btemp+11,w,c
   578  000DD4  6EEA               	movwf	fsr0h,c
   579  000DD6  CFDE FFEE          	movff	postinc2,postinc0
   580  000DDA  CFDD FFED          	movff	postdec2,postdec0
   581                           
   582                           ;pipe.c: 13:   p->r = r;
   583                           ;stkvar	_r @ sp[(0)+-6]
   584  000DDE  50E1               	movf	fsr1l,w,c
   585  000DE0  0FFA               	addlw	-6
   586  000DE2  6ED9               	movwf	fsr2l,c
   587  000DE4  50E2               	movf	fsr1h,w,c
   588  000DE6  6EDA               	movwf	fsr2h,c
   589  000DE8  0EFF               	movlw	255
   590  000DEA  22DA               	addwfc	fsr2h,f,c
   591                           
   592                           ;stkvar	_p @ sp[(0)+-2]
   593  000DEC  0EFE               	movlw	-2
   594  000DEE  CFE3 F04D          	movff	plusw1,btemp+10
   595  000DF2  0EFF               	movlw	-1
   596  000DF4  CFE3 F04E          	movff	plusw1,btemp+11
   597  000DF8  0E0A               	movlw	10
   598  000DFA  244D               	addwf	btemp+10,w,c
   599  000DFC  6EE9               	movwf	fsr0l,c
   600  000DFE  0E00               	movlw	0
   601  000E00  204E               	addwfc	btemp+11,w,c
   602  000E02  6EEA               	movwf	fsr0h,c
   603  000E04  CFDE FFEE          	movff	postinc2,postinc0
   604  000E08  CFDD FFED          	movff	postdec2,postdec0
   605                           
   606                           ;pipe.c: 14:   sem_init(p->w, 2);
   607  000E0C  0E02               	movlw	2
   608  000E0E  6EE6               	movwf	postinc1,c
   609  000E10  0E00               	movlw	0
   610  000E12  6EE6               	movwf	postinc1,c
   611                           
   612                           ;stkvar	_p @ sp[(-2)+-2]
   613  000E14  0EFC               	movlw	-4
   614  000E16  CFE3 F04D          	movff	plusw1,btemp+10
   615  000E1A  0EFD               	movlw	-3
   616  000E1C  CFE3 F04E          	movff	plusw1,btemp+11
   617  000E20  0E08               	movlw	8
   618  000E22  244D               	addwf	btemp+10,w,c
   619  000E24  6ED9               	movwf	fsr2l,c
   620  000E26  0E00               	movlw	0
   621  000E28  204E               	addwfc	btemp+11,w,c
   622  000E2A  6EDA               	movwf	fsr2h,c
   623  000E2C  CFDE F04D          	movff	postinc2,btemp+10
   624  000E30  CFDD F04E          	movff	postdec2,btemp+11
   625  000E34  C04D  FFE6         	movff	btemp+10,postinc1
   626  000E38  C04E  FFE6         	movff	btemp+11,postinc1
   627  000E3C  ECA9  F00B         	call	_sem_init	;wreg free
   628                           
   629                           ;pipe.c: 15:   sem_init(p->r, 0);
   630  000E40  0E00               	movlw	0
   631  000E42  6EE6               	movwf	postinc1,c
   632  000E44  0E00               	movlw	0
   633  000E46  6EE6               	movwf	postinc1,c
   634                           
   635                           ;stkvar	_p @ sp[(-2)+-2]
   636  000E48  0EFC               	movlw	-4
   637  000E4A  CFE3 F04D          	movff	plusw1,btemp+10
   638  000E4E  0EFD               	movlw	-3
   639  000E50  CFE3 F04E          	movff	plusw1,btemp+11
   640  000E54  0E0A               	movlw	10
   641  000E56  244D               	addwf	btemp+10,w,c
   642  000E58  6ED9               	movwf	fsr2l,c
   643  000E5A  0E00               	movlw	0
   644  000E5C  204E               	addwfc	btemp+11,w,c
   645  000E5E  6EDA               	movwf	fsr2h,c
   646  000E60  CFDE F04D          	movff	postinc2,btemp+10
   647  000E64  CFDD F04E          	movff	postdec2,btemp+11
   648  000E68  C04D  FFE6         	movff	btemp+10,postinc1
   649  000E6C  C04E  FFE6         	movff	btemp+11,postinc1
   650  000E70  ECA9  F00B         	call	_sem_init	;wreg free
   651                           
   652                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
   653  000E74  0EFA               	movlw	250
   654  000E76  26E1               	addwf	fsr1l,f,c
   655  000E78  0EFF               	movlw	255
   656  000E7A  22E2               	addwfc	fsr1h,f,c
   657  000E7C  0012               	return		;funcret
   658  000E7E                     __end_of_pipe_create:
   659                           	opt callstack 0
   660                           
   661 ;; *************** function _sem_init *****************
   662 ;; Defined at:
   663 ;;		line 10 in file "semaphore.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;  s               2  [STACK] PTR struct semaphore
   666 ;;		 -> r_pipe(14), w_pipe(14), teste_2(14), teste_1(14), 
   667 ;;  valor           2  [STACK] int 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1  [STACK] void 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   679 ;;      Params:         0       0       0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0       0       0
   682 ;;      Totals:         0       0       0       0       0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:   10
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_pipe_create
   690 ;;		_user_conf
   691 ;; This function uses a reentrant model
   692 ;;
   693                           
   694                           	psect	text3
   695  001752                     __ptext3:
   696                           	opt callstack 0
   697  001752                     _sem_init:
   698                           	opt callstack 19
   699                           
   700                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   701                           
   702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   703                           ;incstack = 0
   704  001752  9EF2               	bcf	4082,7,c	;volatile
   705                           
   706                           ;semaphore.c: 13:   s->contador = valor;
   707                           ;stkvar	_valor @ sp[(0)+-4]
   708  001754  50E1               	movf	fsr1l,w,c
   709  001756  0FFC               	addlw	-4
   710  001758  6ED9               	movwf	fsr2l,c
   711  00175A  50E2               	movf	fsr1h,w,c
   712  00175C  6EDA               	movwf	fsr2h,c
   713  00175E  0EFF               	movlw	255
   714  001760  22DA               	addwfc	fsr2h,f,c
   715                           
   716                           ;stkvar	_s @ sp[(0)+-2]
   717  001762  0EFE               	movlw	-2
   718  001764  CFE3 FFE9          	movff	plusw1,fsr0l
   719  001768  0EFF               	movlw	-1
   720  00176A  CFE3 FFEA          	movff	plusw1,fsr0h
   721  00176E  CFDE FFEE          	movff	postinc2,postinc0
   722  001772  CFDD FFED          	movff	postdec2,postdec0
   723                           
   724                           ;semaphore.c: 14:   s->bloqued_size = 0;
   725                           ;stkvar	_s @ sp[(0)+-2]
   726  001776  0EFE               	movlw	-2
   727  001778  CFE3 F04D          	movff	plusw1,btemp+10
   728  00177C  0EFF               	movlw	-1
   729  00177E  CFE3 F04E          	movff	plusw1,btemp+11
   730  001782  0E0A               	movlw	10
   731  001784  244D               	addwf	btemp+10,w,c
   732  001786  6ED9               	movwf	fsr2l,c
   733  001788  0E00               	movlw	0
   734  00178A  204E               	addwfc	btemp+11,w,c
   735  00178C  6EDA               	movwf	fsr2h,c
   736  00178E  0E00               	movlw	0
   737  001790  6EDE               	movwf	postinc2,c
   738  001792  0E00               	movlw	0
   739  001794  6EDD               	movwf	postdec2,c
   740                           
   741                           ;semaphore.c: 15:   s->task_to_ready = 0;
   742                           ;stkvar	_s @ sp[(0)+-2]
   743  001796  0EFE               	movlw	-2
   744  001798  CFE3 F04D          	movff	plusw1,btemp+10
   745  00179C  0EFF               	movlw	-1
   746  00179E  CFE3 F04E          	movff	plusw1,btemp+11
   747  0017A2  0E0C               	movlw	12
   748  0017A4  244D               	addwf	btemp+10,w,c
   749  0017A6  6ED9               	movwf	fsr2l,c
   750  0017A8  0E00               	movlw	0
   751  0017AA  204E               	addwfc	btemp+11,w,c
   752  0017AC  6EDA               	movwf	fsr2h,c
   753  0017AE  0E00               	movlw	0
   754  0017B0  6EDE               	movwf	postinc2,c
   755  0017B2  0E00               	movlw	0
   756  0017B4  6EDD               	movwf	postdec2,c
   757                           
   758                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   759  0017B6  8EF2               	bsf	4082,7,c	;volatile
   760                           
   761                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   762  0017B8  52E5               	movf	postdec1,f,c
   763  0017BA  52E5               	movf	postdec1,f,c
   764  0017BC  52E5               	movf	postdec1,f,c
   765  0017BE  52E5               	movf	postdec1,f,c
   766  0017C0  0012               	return		;funcret
   767  0017C2                     __end_of_sem_init:
   768                           	opt callstack 0
   769                           
   770 ;; *************** function _SRAMalloc *****************
   771 ;; Defined at:
   772 ;;		line 191 in file "sralloc.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  nBytes          1  [STACK] unsigned char 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  pHeap           2  [STACK] PTR struct _SALLOC
   777 ;;		 -> _uDynamicHeap(512), 
   778 ;;  temp            2  [STACK] PTR struct _SALLOC
   779 ;;		 -> _uDynamicHeap(512), 
   780 ;;  segHeader       1  [STACK] struct _SALLOC
   781 ;;  segLen          1  [STACK] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  2  [STACK] PTR unsigned char 
   784 ;; Registers used:
   785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   791 ;;      Params:         0       0       0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0
   794 ;;      Totals:         0       0       0       0       0       0       0
   795 ;;Total ram usage:        0 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:   11
   798 ;; This function calls:
   799 ;;		__SRAMmerge
   800 ;; This function is called by:
   801 ;;		_user_conf
   802 ;; This function uses a reentrant model
   803 ;;
   804                           
   805                           	psect	text4
   806  000970                     __ptext4:
   807                           	opt callstack 0
   808  000970                     _SRAMalloc:
   809                           	opt callstack 0
   810                           
   811                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   812  000970  0E06               	movlw	6
   813  000972  26E1               	addwf	fsr1l,f,c
   814  000974  0E00               	movlw	0
   815  000976  22E2               	addwfc	fsr1h,f,c
   816                           
   817                           ;sralloc.c: 191: unsigned char * SRAMalloc( unsigned char nBytes);sralloc.c: 192: {;sral
      +                          loc.c: 193:  SALLOC * pHeap;;sralloc.c: 194:  SALLOC * temp;;sralloc.c: 195:       SALLO
      +                          C segHeader;;sralloc.c: 196:       unsigned char segLen;;sralloc.c: 199:  if (nBytes > (
      +                          0x7F - 1)) return (0);
   818                           ;stkvar	_nBytes @ sp[(-6)+-1]
   819                           
   820                           ;incstack = 0
   821  000978  0EF9               	movlw	-7
   822  00097A  CFE3 F043          	movff	plusw1,btemp
   823  00097E  0E7E               	movlw	126
   824  000980  6443               	cpfsgt	btemp,c
   825  000982  D005               	goto	l1720
   826  000984                     u560:
   827  000984  0E00               	movlw	0
   828  000986  6E43               	movwf	btemp,c
   829  000988  0E00               	movlw	0
   830  00098A  6E44               	movwf	btemp+1,c
   831  00098C  D0BB               	goto	l372
   832  00098E                     l1720:
   833                           
   834                           ;sralloc.c: 202:  pHeap = (SALLOC *)_uDynamicHeap;
   835                           ;stkvar	_pHeap @ sp[(-6)+0]
   836  00098E  0E02               	movlw	high __uDynamicHeap
   837  000990  6E43               	movwf	btemp,c
   838  000992  0EFB               	movlw	-5
   839  000994  C043  FFE3         	movff	btemp,plusw1
   840  000998  0EAE               	movlw	low __uDynamicHeap
   841  00099A  6E43               	movwf	btemp,c
   842  00099C  0EFA               	movlw	-6
   843  00099E  C043  FFE3         	movff	btemp,plusw1
   844  0009A2                     l1722:
   845                           
   846                           ;sralloc.c: 205:  {;sralloc.c: 207:   segHeader = *pHeap;
   847                           ;stkvar	_pHeap @ sp[(-6)+0]
   848  0009A2  0EFA               	movlw	-6
   849  0009A4  CFE3 FFD9          	movff	plusw1,fsr2l
   850  0009A8  0EFB               	movlw	-5
   851  0009AA  CFE3 FFDA          	movff	plusw1,fsr2h
   852  0009AE  50DF               	movf	indf2,w,c
   853  0009B0  6E4E               	movwf	btemp+11,c
   854                           
   855                           ;stkvar	_segHeader @ sp[(-6)+4]
   856  0009B2  0EFE               	movlw	-2
   857  0009B4  C04E  FFE3         	movff	btemp+11,plusw1
   858                           
   859                           ;sralloc.c: 210:   segLen = segHeader.bits.count - 1;
   860                           ;stkvar	_segHeader @ sp[(-6)+4]
   861  0009B8  50E1               	movf	fsr1l,w,c
   862  0009BA  0FFE               	addlw	-2
   863  0009BC  6ED9               	movwf	fsr2l,c
   864  0009BE  50E2               	movf	fsr1h,w,c
   865  0009C0  6EDA               	movwf	fsr2h,c
   866  0009C2  0EFF               	movlw	255
   867  0009C4  22DA               	addwfc	fsr2h,f,c
   868  0009C6  50DF               	movf	223,w,c
   869  0009C8  0B7F               	andlw	127
   870  0009CA  6E4E               	movwf	btemp+11,c
   871  0009CC  0EFF               	movlw	255
   872  0009CE  264E               	addwf	btemp+11,f,c
   873                           
   874                           ;stkvar	_segLen @ sp[(-6)+5]
   875  0009D0  0EFF               	movlw	-1
   876  0009D2  C04E  FFE3         	movff	btemp+11,plusw1
   877                           
   878                           ;sralloc.c: 213:   if (segHeader.byte == 0) return (0);
   879                           ;stkvar	_segHeader @ sp[(-6)+4]
   880  0009D6  0EFE               	movlw	-2
   881  0009D8  50E3               	movf	plusw1,w,c
   882  0009DA  B4D8               	btfsc	status,2,c
   883  0009DC  D7D3               	goto	u560
   884                           
   885                           ;sralloc.c: 216:   if (!(segHeader.bits.alloc))
   886                           ;stkvar	_segHeader @ sp[(-6)+4]
   887  0009DE  50E1               	movf	fsr1l,w,c
   888  0009E0  0FFE               	addlw	-2
   889  0009E2  6ED9               	movwf	fsr2l,c
   890  0009E4  50E2               	movf	fsr1h,w,c
   891  0009E6  6EDA               	movwf	fsr2h,c
   892  0009E8  0EFF               	movlw	255
   893  0009EA  22DA               	addwfc	fsr2h,f,c
   894  0009EC  BEDF               	btfsc	indf2,7,c
   895  0009EE  D016               	goto	u600
   896                           
   897                           ;sralloc.c: 217:   {;sralloc.c: 219:    if (nBytes > segLen)
   898                           ;stkvar	_nBytes @ sp[(-6)+-1]
   899                           ;stkvar	_segLen @ sp[(-6)+5]
   900  0009F0  50E1               	movf	fsr1l,w,c
   901  0009F2  0FFF               	addlw	-1
   902  0009F4  6ED9               	movwf	fsr2l,c
   903  0009F6  50E2               	movf	fsr1h,w,c
   904  0009F8  6EDA               	movwf	fsr2h,c
   905  0009FA  0EFF               	movlw	255
   906  0009FC  22DA               	addwfc	fsr2h,f,c
   907  0009FE  0EF9               	movlw	-7
   908  000A00  50E3               	movf	plusw1,w,c
   909  000A02  5CDE               	subwf	postinc2,w,c
   910  000A04  B0D8               	btfsc	status,0,c
   911  000A06  D020               	goto	l1740
   912                           
   913                           ;sralloc.c: 220:    {;sralloc.c: 222:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.b
      +                          its.count;
   914                           ;stkvar	_pHeap @ sp[(-6)+0]
   915  000A08  0EFA               	movlw	-6
   916  000A0A  CFE3 FFE6          	movff	plusw1,postinc1
   917  000A0E  CFE3 FFE6          	movff	plusw1,postinc1
   918  000A12  EC87  F005         	call	__SRAMmerge	;wreg free
   919  000A16  5043               	movf	btemp,w,c
   920  000A18  A4D8               	btfss	status,2,c
   921  000A1A  D7C3               	goto	l1722
   922  000A1C                     u600:
   923                           
   924                           ;stkvar	_segHeader @ sp[(-6)+4]
   925  000A1C  50E1               	movf	fsr1l,w,c
   926  000A1E  0FFE               	addlw	-2
   927  000A20  6ED9               	movwf	fsr2l,c
   928  000A22  50E2               	movf	fsr1h,w,c
   929  000A24  6EDA               	movwf	fsr2h,c
   930  000A26  0EFF               	movlw	255
   931  000A28  22DA               	addwfc	fsr2h,f,c
   932  000A2A  50DF               	movf	223,w,c
   933  000A2C  0B7F               	andlw	127
   934  000A2E  0D01               	mullw	1
   935                           
   936                           ;stkvar	_pHeap @ sp[(-6)+0]
   937  000A30  50E1               	movf	fsr1l,w,c
   938  000A32  0FFA               	addlw	-6
   939  000A34  6ED9               	movwf	fsr2l,c
   940  000A36  50E2               	movf	fsr1h,w,c
   941  000A38  6EDA               	movwf	fsr2h,c
   942  000A3A  0EFF               	movlw	255
   943  000A3C  22DA               	addwfc	fsr2h,f,c
   944  000A3E  50F3               	movf	prodl,w,c
   945  000A40  26DE               	addwf	postinc2,f,c
   946  000A42  50F4               	movf	prodh,w,c
   947  000A44  22DD               	addwfc	postdec2,f,c
   948  000A46  D7AD               	goto	l1722
   949  000A48                     l1740:
   950                           
   951                           ;sralloc.c: 228:    if (nBytes == segLen)
   952                           ;stkvar	_segLen @ sp[(-6)+5]
   953                           ;stkvar	_nBytes @ sp[(-6)+-1]
   954  000A48  50E1               	movf	fsr1l,w,c
   955  000A4A  0FF9               	addlw	-7
   956  000A4C  6ED9               	movwf	fsr2l,c
   957  000A4E  50E2               	movf	fsr1h,w,c
   958  000A50  6EDA               	movwf	fsr2h,c
   959  000A52  0EFF               	movlw	255
   960  000A54  22DA               	addwfc	fsr2h,f,c
   961  000A56  0EFF               	movlw	-1
   962  000A58  50E3               	movf	plusw1,w,c
   963  000A5A  18DE               	xorwf	postinc2,w,c
   964  000A5C  A4D8               	btfss	status,2,c
   965  000A5E  D011               	goto	l1750
   966                           
   967                           ;sralloc.c: 229:    {;sralloc.c: 231:     (*pHeap).bits.alloc = 1;
   968                           ;stkvar	_pHeap @ sp[(-6)+0]
   969  000A60  0EFA               	movlw	-6
   970  000A62  CFE3 FFD9          	movff	plusw1,fsr2l
   971  000A66  0EFB               	movlw	-5
   972  000A68  CFE3 FFDA          	movff	plusw1,fsr2h
   973  000A6C  8EDF               	bsf	indf2,7,c
   974                           
   975                           ;sralloc.c: 234:     return ((unsigned char *)(pHeap + 1));
   976                           ;stkvar	_pHeap @ sp[(-6)+0]
   977  000A6E  0EFA               	movlw	-6
   978  000A70  50E3               	movf	plusw1,w,c
   979  000A72  0F01               	addlw	1
   980  000A74  6E43               	movwf	btemp,c
   981  000A76  0EFB               	movlw	-5
   982  000A78  CFE3 F044          	movff	plusw1,btemp+1
   983  000A7C  0E00               	movlw	0
   984  000A7E  2244               	addwfc	btemp+1,f,c
   985  000A80  D041               	goto	l372
   986  000A82                     l1750:
   987                           
   988                           ;sralloc.c: 239:    {;sralloc.c: 241:     (*pHeap).byte = nBytes + 0x81;
   989                           ;stkvar	_pHeap @ sp[(-6)+0]
   990  000A82  0EFA               	movlw	-6
   991  000A84  CFE3 FFD9          	movff	plusw1,fsr2l
   992  000A88  0EFB               	movlw	-5
   993  000A8A  CFE3 FFDA          	movff	plusw1,fsr2h
   994                           
   995                           ;stkvar	_nBytes @ sp[(-6)+-1]
   996  000A8E  0EF9               	movlw	-7
   997  000A90  50E3               	movf	plusw1,w,c
   998  000A92  0F81               	addlw	129
   999  000A94  6EDF               	movwf	indf2,c
  1000                           
  1001                           ;sralloc.c: 244:     temp = pHeap + 1;
  1002                           ;stkvar	_pHeap @ sp[(-6)+0]
  1003  000A96  0EFA               	movlw	-6
  1004  000A98  50E3               	movf	plusw1,w,c
  1005  000A9A  0F01               	addlw	1
  1006  000A9C  6E4D               	movwf	btemp+10,c
  1007  000A9E  0EFB               	movlw	-5
  1008  000AA0  CFE3 F04E          	movff	plusw1,btemp+11
  1009  000AA4  0E00               	movlw	0
  1010  000AA6  224E               	addwfc	btemp+11,f,c
  1011                           
  1012                           ;stkvar	_temp @ sp[(-6)+2]
  1013  000AA8  0EFD               	movlw	-3
  1014  000AAA  C04E  FFE3         	movff	btemp+11,plusw1
  1015  000AAE  0EFC               	movlw	-4
  1016  000AB0  C04D  FFE3         	movff	btemp+10,plusw1
  1017                           
  1018                           ;sralloc.c: 247:     pHeap += (nBytes + 1);
  1019                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1020  000AB4  0EF9               	movlw	-7
  1021  000AB6  50E3               	movf	plusw1,w,c
  1022  000AB8  6E4D               	movwf	btemp+10,c
  1023  000ABA  6A4E               	clrf	btemp+11,c
  1024  000ABC  0E01               	movlw	1
  1025  000ABE  264D               	addwf	btemp+10,f,c
  1026  000AC0  0E00               	movlw	0
  1027  000AC2  224E               	addwfc	btemp+11,f,c
  1028                           
  1029                           ;stkvar	_pHeap @ sp[(-6)+0]
  1030  000AC4  50E1               	movf	fsr1l,w,c
  1031  000AC6  0FFA               	addlw	-6
  1032  000AC8  6ED9               	movwf	fsr2l,c
  1033  000ACA  50E2               	movf	fsr1h,w,c
  1034  000ACC  6EDA               	movwf	fsr2h,c
  1035  000ACE  0EFF               	movlw	255
  1036  000AD0  22DA               	addwfc	fsr2h,f,c
  1037  000AD2  504D               	movf	btemp+10,w,c
  1038  000AD4  26DE               	addwf	postinc2,f,c
  1039  000AD6  504E               	movf	btemp+11,w,c
  1040  000AD8  22DD               	addwfc	postdec2,f,c
  1041                           
  1042                           ;sralloc.c: 250:     (*pHeap).byte = segLen - nBytes;
  1043                           ;stkvar	_pHeap @ sp[(-6)+0]
  1044  000ADA  0EFA               	movlw	-6
  1045  000ADC  CFE3 FFD9          	movff	plusw1,fsr2l
  1046  000AE0  0EFB               	movlw	-5
  1047  000AE2  CFE3 FFDA          	movff	plusw1,fsr2h
  1048                           
  1049                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1050  000AE6  0EF9               	movlw	-7
  1051  000AE8  CFE3 F04E          	movff	plusw1,btemp+11
  1052                           
  1053                           ;stkvar	_segLen @ sp[(-6)+5]
  1054  000AEC  0EFF               	movlw	-1
  1055  000AEE  CFE3 F04D          	movff	plusw1,btemp+10
  1056  000AF2  504E               	movf	btemp+11,w,c
  1057  000AF4  5C4D               	subwf	btemp+10,w,c
  1058  000AF6  6EDF               	movwf	indf2,c
  1059                           
  1060                           ;sralloc.c: 253:     return ((unsigned char *) temp);
  1061                           ;stkvar	_temp @ sp[(-6)+2]
  1062  000AF8  0EFC               	movlw	-4
  1063  000AFA  CFE3 F043          	movff	plusw1,btemp
  1064  000AFE  0EFD               	movlw	-3
  1065  000B00  CFE3 F044          	movff	plusw1,btemp+1
  1066  000B04                     l372:
  1067                           
  1068                           ; _SRAMalloc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  1069  000B04  0EF9               	movlw	249
  1070  000B06  26E1               	addwf	fsr1l,f,c
  1071  000B08  0EFF               	movlw	255
  1072  000B0A  22E2               	addwfc	fsr1h,f,c
  1073  000B0C  0012               	return		;funcret
  1074  000B0E                     __end_of_SRAMalloc:
  1075                           	opt callstack 0
  1076                           
  1077 ;; *************** function __SRAMmerge *****************
  1078 ;; Defined at:
  1079 ;;		line 359 in file "sralloc.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  pSegA           2  [STACK] PTR struct _SALLOC
  1082 ;;		 -> _uDynamicHeap(512), 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  pSegB           2  [STACK] PTR struct _SALLOC
  1085 ;;		 -> _uDynamicHeap(512), 
  1086 ;;  uSegB           1  [STACK] struct _SALLOC
  1087 ;;  uSegA           1  [STACK] struct _SALLOC
  1088 ;;  uSum            1  [STACK] struct _SALLOC
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1  [STACK] unsigned char 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1098 ;;      Params:         0       0       0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0
  1101 ;;      Totals:         0       0       0       0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:   10
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_SRAMalloc
  1109 ;; This function uses a reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text5
  1113  000B0E                     __ptext5:
  1114                           	opt callstack 0
  1115  000B0E                     __SRAMmerge:
  1116                           	opt callstack 0
  1117                           
  1118                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1119  000B0E  0E05               	movlw	5
  1120  000B10  26E1               	addwf	fsr1l,f,c
  1121  000B12  0E00               	movlw	0
  1122  000B14  22E2               	addwfc	fsr1h,f,c
  1123                           
  1124                           ;sralloc.c: 359:      unsigned char _SRAMmerge(SALLOC * pSegA);sralloc.c: 360: {;sralloc
      +                          .c: 361:  SALLOC * pSegB;;sralloc.c: 362:       SALLOC uSegA, uSegB, uSum;;sralloc.c: 36
      +                          6:  pSegB = pSegA + (*pSegA).byte;
  1125                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1126                           
  1127                           ;incstack = 0
  1128  000B16  0EF9               	movlw	-7
  1129  000B18  CFE3 FFD9          	movff	plusw1,fsr2l
  1130  000B1C  0EFA               	movlw	-6
  1131  000B1E  CFE3 FFDA          	movff	plusw1,fsr2h
  1132  000B22  50DF               	movf	indf2,w,c
  1133  000B24  6E4D               	movwf	btemp+10,c
  1134  000B26  6A4E               	clrf	btemp+11,c
  1135                           
  1136                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1137  000B28  0EF9               	movlw	-7
  1138  000B2A  50E3               	movf	plusw1,w,c
  1139  000B2C  264D               	addwf	btemp+10,f,c
  1140  000B2E  0EFA               	movlw	-6
  1141  000B30  50E3               	movf	plusw1,w,c
  1142  000B32  224E               	addwfc	btemp+11,f,c
  1143                           
  1144                           ;stkvar	_pSegB @ sp[(-5)+0]
  1145  000B34  0EFC               	movlw	-4
  1146  000B36  C04E  FFE3         	movff	btemp+11,plusw1
  1147  000B3A  0EFB               	movlw	-5
  1148  000B3C  C04D  FFE3         	movff	btemp+10,plusw1
  1149                           
  1150                           ;sralloc.c: 369:  uSegA = *pSegA;
  1151                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1152  000B40  0EF9               	movlw	-7
  1153  000B42  CFE3 FFD9          	movff	plusw1,fsr2l
  1154  000B46  0EFA               	movlw	-6
  1155  000B48  CFE3 FFDA          	movff	plusw1,fsr2h
  1156  000B4C  50DF               	movf	indf2,w,c
  1157  000B4E  6E4E               	movwf	btemp+11,c
  1158                           
  1159                           ;stkvar	_uSegA @ sp[(-5)+3]
  1160  000B50  0EFE               	movlw	-2
  1161  000B52  C04E  FFE3         	movff	btemp+11,plusw1
  1162                           
  1163                           ;sralloc.c: 370:  uSegB = *pSegB;
  1164                           ;stkvar	_pSegB @ sp[(-5)+0]
  1165  000B56  0EFB               	movlw	-5
  1166  000B58  CFE3 FFD9          	movff	plusw1,fsr2l
  1167  000B5C  0EFC               	movlw	-4
  1168  000B5E  CFE3 FFDA          	movff	plusw1,fsr2h
  1169  000B62  50DF               	movf	indf2,w,c
  1170  000B64  6E4E               	movwf	btemp+11,c
  1171                           
  1172                           ;stkvar	_uSegB @ sp[(-5)+2]
  1173  000B66  0EFD               	movlw	-3
  1174  000B68  C04E  FFE3         	movff	btemp+11,plusw1
  1175                           
  1176                           ;sralloc.c: 373:  if (uSegB.byte == 0) return (0);
  1177                           ;stkvar	_uSegB @ sp[(-5)+2]
  1178  000B6C  0EFD               	movlw	-3
  1179  000B6E  50E3               	movf	plusw1,w,c
  1180  000B70  A4D8               	btfss	status,2,c
  1181  000B72  D002               	goto	l1594
  1182  000B74                     u460:
  1183  000B74  0E00               	movlw	0
  1184  000B76  D06E               	goto	L1
  1185  000B78                     l1594:
  1186                           
  1187                           ;sralloc.c: 376:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1188                           ;stkvar	_uSegA @ sp[(-5)+3]
  1189  000B78  50E1               	movf	fsr1l,w,c
  1190  000B7A  0FFE               	addlw	-2
  1191  000B7C  6ED9               	movwf	fsr2l,c
  1192  000B7E  50E2               	movf	fsr1h,w,c
  1193  000B80  6EDA               	movwf	fsr2h,c
  1194  000B82  0EFF               	movlw	255
  1195  000B84  22DA               	addwfc	fsr2h,f,c
  1196  000B86  BEDF               	btfsc	indf2,7,c
  1197  000B88  D7F5               	goto	u460
  1198                           
  1199                           ;stkvar	_uSegB @ sp[(-5)+2]
  1200  000B8A  50E1               	movf	fsr1l,w,c
  1201  000B8C  0FFD               	addlw	-3
  1202  000B8E  6ED9               	movwf	fsr2l,c
  1203  000B90  50E2               	movf	fsr1h,w,c
  1204  000B92  6EDA               	movwf	fsr2h,c
  1205  000B94  0EFF               	movlw	255
  1206  000B96  22DA               	addwfc	fsr2h,f,c
  1207  000B98  BEDF               	btfsc	indf2,7,c
  1208  000B9A  D7EC               	goto	u460
  1209                           
  1210                           ;sralloc.c: 379:  if (uSegA.bits.count == 0x7F) return (0);
  1211                           ;stkvar	_uSegA @ sp[(-5)+3]
  1212  000B9C  50E1               	movf	fsr1l,w,c
  1213  000B9E  0FFE               	addlw	-2
  1214  000BA0  6ED9               	movwf	fsr2l,c
  1215  000BA2  50E2               	movf	fsr1h,w,c
  1216  000BA4  6EDA               	movwf	fsr2h,c
  1217  000BA6  0EFF               	movlw	255
  1218  000BA8  22DA               	addwfc	fsr2h,f,c
  1219  000BAA  50DF               	movf	223,w,c
  1220  000BAC  0B7F               	andlw	127
  1221  000BAE  0A7F               	xorlw	127
  1222  000BB0  B4D8               	btfsc	status,2,c
  1223  000BB2  D7E0               	goto	u460
  1224                           
  1225                           ;sralloc.c: 382:  uSum.byte = uSegA.byte + uSegB.byte;
  1226                           ;stkvar	_uSegB @ sp[(-5)+2]
  1227  000BB4  0EFD               	movlw	-3
  1228  000BB6  CFE3 F04E          	movff	plusw1,btemp+11
  1229                           
  1230                           ;stkvar	_uSegA @ sp[(-5)+3]
  1231  000BBA  0EFE               	movlw	-2
  1232  000BBC  50E3               	movf	plusw1,w,c
  1233  000BBE  244E               	addwf	btemp+11,w,c
  1234  000BC0  6E4D               	movwf	btemp+10,c
  1235                           
  1236                           ;stkvar	_uSum @ sp[(-5)+4]
  1237  000BC2  0EFF               	movlw	-1
  1238  000BC4  C04D  FFE3         	movff	btemp+10,plusw1
  1239                           
  1240                           ;sralloc.c: 388:  if ((uSum.byte) > 0x7F)
  1241                           ;stkvar	_uSum @ sp[(-5)+4]
  1242  000BC8  0EFF               	movlw	-1
  1243  000BCA  CFE3 F043          	movff	plusw1,btemp
  1244  000BCE  0E7F               	movlw	127
  1245  000BD0  6443               	cpfsgt	btemp,c
  1246  000BD2  D036               	goto	l1626
  1247                           
  1248                           ;sralloc.c: 389:  {;sralloc.c: 390:   (*pSegA).byte = 0x7F;
  1249                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1250  000BD4  0EF9               	movlw	-7
  1251  000BD6  CFE3 FFD9          	movff	plusw1,fsr2l
  1252  000BDA  0EFA               	movlw	-6
  1253  000BDC  CFE3 FFDA          	movff	plusw1,fsr2h
  1254  000BE0  0E7F               	movlw	127
  1255  000BE2  6EDF               	movwf	indf2,c
  1256                           
  1257                           ;sralloc.c: 391:   pSegA += 0x7F;
  1258                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1259  000BE4  0EF9               	movlw	-7
  1260  000BE6  50E3               	movf	plusw1,w,c
  1261  000BE8  0F7F               	addlw	127
  1262  000BEA  6E43               	movwf	btemp,c
  1263  000BEC  0EF9               	movlw	-7
  1264  000BEE  C043  FFE3         	movff	btemp,plusw1
  1265  000BF2  6A43               	clrf	btemp,c
  1266  000BF4  0EFA               	movlw	-6
  1267  000BF6  50E3               	movf	plusw1,w,c
  1268  000BF8  2043               	addwfc	btemp,w,c
  1269  000BFA  6E43               	movwf	btemp,c
  1270  000BFC  0EFA               	movlw	-6
  1271  000BFE  C043  FFE3         	movff	btemp,plusw1
  1272                           
  1273                           ;sralloc.c: 392:   pSegB += uSegB.byte;
  1274                           ;stkvar	_uSegB @ sp[(-5)+2]
  1275  000C02  0EFD               	movlw	-3
  1276  000C04  50E3               	movf	plusw1,w,c
  1277  000C06  0D01               	mullw	1
  1278                           
  1279                           ;stkvar	_pSegB @ sp[(-5)+0]
  1280  000C08  50E1               	movf	fsr1l,w,c
  1281  000C0A  0FFB               	addlw	-5
  1282  000C0C  6ED9               	movwf	fsr2l,c
  1283  000C0E  50E2               	movf	fsr1h,w,c
  1284  000C10  6EDA               	movwf	fsr2h,c
  1285  000C12  0EFF               	movlw	255
  1286  000C14  22DA               	addwfc	fsr2h,f,c
  1287  000C16  50F3               	movf	prodl,w,c
  1288  000C18  26DE               	addwf	postinc2,f,c
  1289  000C1A  50F4               	movf	prodh,w,c
  1290  000C1C  22DD               	addwfc	postdec2,f,c
  1291                           
  1292                           ;sralloc.c: 393:   (*pSegA).byte = pSegB - pSegA;
  1293                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1294  000C1E  0EF9               	movlw	-7
  1295  000C20  CFE3 FFD9          	movff	plusw1,fsr2l
  1296  000C24  0EFA               	movlw	-6
  1297  000C26  CFE3 FFDA          	movff	plusw1,fsr2h
  1298                           
  1299                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1300  000C2A  0EF9               	movlw	-7
  1301  000C2C  CFE3 F04E          	movff	plusw1,btemp+11
  1302                           
  1303                           ;stkvar	_pSegB @ sp[(-5)+0]
  1304  000C30  0EFB               	movlw	-5
  1305  000C32  CFE3 F04D          	movff	plusw1,btemp+10
  1306  000C36  504E               	movf	btemp+11,w,c
  1307  000C38  5C4D               	subwf	btemp+10,w,c
  1308  000C3A  6EDF               	movwf	indf2,c
  1309                           
  1310                           ;sralloc.c: 395:   return (0x7F);
  1311  000C3C  0E7F               	movlw	127
  1312  000C3E  D00A               	goto	L1
  1313  000C40                     l1626:
  1314                           
  1315                           ;sralloc.c: 400:  {;sralloc.c: 401:   return ((*pSegA).byte = uSum.byte);
  1316                           ;stkvar	_uSum @ sp[(-5)+4]
  1317                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1318  000C40  0EF9               	movlw	-7
  1319  000C42  CFE3 FFD9          	movff	plusw1,fsr2l
  1320  000C46  0EFA               	movlw	-6
  1321  000C48  CFE3 FFDA          	movff	plusw1,fsr2h
  1322  000C4C  0EFF               	movlw	-1
  1323  000C4E  CFE3 FFDF          	movff	plusw1,indf2
  1324  000C52  50DF               	movf	indf2,w,c
  1325  000C54                     L1:
  1326  000C54  6E43               	movwf	btemp,c
  1327                           
  1328                           ; __SRAMmerge: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  1329  000C56  0EF9               	movlw	249
  1330  000C58  26E1               	addwf	fsr1l,f,c
  1331  000C5A  0EFF               	movlw	255
  1332  000C5C  22E2               	addwfc	fsr1h,f,c
  1333  000C5E  0012               	return		;funcret
  1334  000C60                     __end_of__SRAMmerge:
  1335                           	opt callstack 0
  1336                           
  1337 ;; *************** function _lunos_init *****************
  1338 ;; Defined at:
  1339 ;;		line 49 in file "kernel.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1  [STACK] void 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1353 ;;      Params:         0       0       0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0
  1356 ;;      Totals:         0       0       0       0       0       0       0
  1357 ;;Total ram usage:        0 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:   11
  1360 ;; This function calls:
  1361 ;;		_SRAMInitHeap
  1362 ;;		_lunos_createTask
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text6
  1369  001A0C                     __ptext6:
  1370                           	opt callstack 0
  1371  001A0C                     _lunos_init:
  1372                           	opt callstack 19
  1373                           
  1374                           ;kernel.c: 50:   SRAMInitHeap();
  1375                           
  1376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1377                           ;incstack = 0
  1378  001A0C  ECB3  F009         	call	_SRAMInitHeap	;wreg free
  1379                           
  1380                           ;kernel.c: 51:   ready_queue.task_running = 0;
  1381  001A10  0E00               	movlw	0
  1382  001A12  CFE8 F2AC          	movff	wreg,_ready_queue+542
  1383  001A16  0E00               	movlw	0
  1384  001A18  CFE8 F2AD          	movff	wreg,_ready_queue+543
  1385                           
  1386                           ;kernel.c: 52:   ready_queue.tasks_installed = 0;
  1387  001A1C  0E00               	movlw	0
  1388  001A1E  CFE8 F2AA          	movff	wreg,_ready_queue+540
  1389  001A22  0E00               	movlw	0
  1390  001A24  CFE8 F2AB          	movff	wreg,_ready_queue+541
  1391                           
  1392                           ;kernel.c: 53:   lunos_createTask(0, &task_idle);
  1393  001A28  0EAC               	movlw	low _task_idle
  1394  001A2A  6EE6               	movwf	postinc1,c
  1395  001A2C  0E1A               	movlw	high _task_idle
  1396  001A2E  6EE6               	movwf	postinc1,c
  1397  001A30  0E00               	movlw	0
  1398  001A32  6EE6               	movwf	postinc1,c
  1399  001A34  0E00               	movlw	0
  1400  001A36  6EE6               	movwf	postinc1,c
  1401  001A38  EC48  F008         	call	_lunos_createTask	;wreg free
  1402                           
  1403                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  1404  001A3C  0012               	return		;funcret
  1405  001A3E                     __end_of_lunos_init:
  1406                           	opt callstack 0
  1407                           
  1408 ;; *************** function _lunos_createTask *****************
  1409 ;; Defined at:
  1410 ;;		line 14 in file "kernel.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  prior           2  [STACK] unsigned int 
  1413 ;;  f               2  [STACK] PTR FTN()void 
  1414 ;;		 -> count_bottles(1), task_1(1), task_0(1), task_idle(1), 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  new_task      108  [STACK] struct pcb
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1  [STACK] void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:   10
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_lunos_init
  1437 ;;		_main
  1438 ;; This function uses a reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text7
  1442  001090                     __ptext7:
  1443                           	opt callstack 0
  1444  001090                     _lunos_createTask:
  1445                           	opt callstack 0
  1446                           
  1447                           ; autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  1448  001090  0E6C               	movlw	108
  1449  001092  26E1               	addwf	fsr1l,f,c
  1450  001094  0E00               	movlw	0
  1451  001096  22E2               	addwfc	fsr1h,f,c
  1452                           
  1453                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
  1454                           
  1455                           ;incstack = 0
  1456  001098  EE22  F0AA         	lfsr	2,_ready_queue+540
  1457  00109C  CFDE F04D          	movff	postinc2,btemp+10
  1458  0010A0  CFDD F04E          	movff	postdec2,btemp+11
  1459  0010A4  0E01               	movlw	1
  1460  0010A6  264D               	addwf	btemp+10,f,c
  1461  0010A8  0E00               	movlw	0
  1462  0010AA  224E               	addwfc	btemp+11,f,c
  1463                           
  1464                           ;stkvar	_new_task @ sp[(-108)+0]
  1465  0010AC  0E94               	movlw	-108
  1466  0010AE  C04D  FFE3         	movff	btemp+10,plusw1
  1467  0010B2  0E95               	movlw	-107
  1468  0010B4  C04E  FFE3         	movff	btemp+11,plusw1
  1469                           
  1470                           ;kernel.c: 19:   new_task.task_prior = prior;
  1471                           ;stkvar	_prior @ sp[(-108)+-2]
  1472  0010B8  50E1               	movf	fsr1l,w,c
  1473  0010BA  0F92               	addlw	-110
  1474  0010BC  6ED9               	movwf	fsr2l,c
  1475  0010BE  50E2               	movf	fsr1h,w,c
  1476  0010C0  6EDA               	movwf	fsr2h,c
  1477  0010C2  0EFF               	movlw	255
  1478  0010C4  22DA               	addwfc	fsr2h,f,c
  1479                           
  1480                           ;stkvar	_new_task @ sp[(-108)+0]
  1481  0010C6  0E96               	movlw	150
  1482  0010C8  24E1               	addwf	fsr1l,w,c
  1483  0010CA  6EE9               	movwf	fsr0l,c
  1484  0010CC  0EFF               	movlw	255
  1485  0010CE  20E2               	addwfc	fsr1h,w,c
  1486  0010D0  6EEA               	movwf	fsr0h,c
  1487  0010D2  CFDE FFEE          	movff	postinc2,postinc0
  1488  0010D6  CFDD FFED          	movff	postdec2,postdec0
  1489                           
  1490                           ;kernel.c: 20:   new_task.task_state = READY;
  1491                           ;stkvar	_new_task @ sp[(-108)+0]
  1492  0010DA  0E9C               	movlw	156
  1493  0010DC  24E1               	addwf	fsr1l,w,c
  1494  0010DE  6ED9               	movwf	fsr2l,c
  1495  0010E0  0EFF               	movlw	255
  1496  0010E2  20E2               	addwfc	fsr1h,w,c
  1497  0010E4  6EDA               	movwf	fsr2h,c
  1498  0010E6  0E00               	movlw	0
  1499  0010E8  6EDF               	movwf	indf2,c
  1500                           
  1501                           ;kernel.c: 21:   new_task.task_f = f;
  1502                           ;stkvar	_f @ sp[(-108)+-4]
  1503  0010EA  50E1               	movf	fsr1l,w,c
  1504  0010EC  0F90               	addlw	-112
  1505  0010EE  6ED9               	movwf	fsr2l,c
  1506  0010F0  50E2               	movf	fsr1h,w,c
  1507  0010F2  6EDA               	movwf	fsr2h,c
  1508  0010F4  0EFF               	movlw	255
  1509  0010F6  22DA               	addwfc	fsr2h,f,c
  1510                           
  1511                           ;stkvar	_new_task @ sp[(-108)+0]
  1512  0010F8  0EFC               	movlw	252
  1513  0010FA  24E1               	addwf	fsr1l,w,c
  1514  0010FC  6EE9               	movwf	fsr0l,c
  1515  0010FE  0EFF               	movlw	255
  1516  001100  20E2               	addwfc	fsr1h,w,c
  1517  001102  6EEA               	movwf	fsr0h,c
  1518  001104  CFDE FFEE          	movff	postinc2,postinc0
  1519  001108  CFDD FFED          	movff	postdec2,postdec0
  1520                           
  1521                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
  1522                           ;stkvar	_new_task @ sp[(-108)+0]
  1523  00110C  0EFA               	movlw	250
  1524  00110E  24E1               	addwf	fsr1l,w,c
  1525  001110  6ED9               	movwf	fsr2l,c
  1526  001112  0EFF               	movlw	255
  1527  001114  20E2               	addwfc	fsr1h,w,c
  1528  001116  6EDA               	movwf	fsr2h,c
  1529  001118  0E00               	movlw	0
  1530  00111A  6EDE               	movwf	postinc2,c
  1531  00111C  0E00               	movlw	0
  1532  00111E  6EDD               	movwf	postdec2,c
  1533                           
  1534                           ;kernel.c: 23:   new_task.task_delay_time = 0;
  1535                           ;stkvar	_new_task @ sp[(-108)+0]
  1536  001120  0EFE               	movlw	254
  1537  001122  24E1               	addwf	fsr1l,w,c
  1538  001124  6ED9               	movwf	fsr2l,c
  1539  001126  0EFF               	movlw	255
  1540  001128  20E2               	addwfc	fsr1h,w,c
  1541  00112A  6EDA               	movwf	fsr2h,c
  1542  00112C  0E00               	movlw	0
  1543  00112E  6EDE               	movwf	postinc2,c
  1544  001130  0E00               	movlw	0
  1545  001132  6EDD               	movwf	postdec2,c
  1546                           
  1547                           ;kernel.c: 25:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
  1548                           ;stkvar	_new_task @ sp[(-108)+0]
  1549  001134  0E94               	movlw	148
  1550  001136  24E1               	addwf	fsr1l,w,c
  1551  001138  6ED9               	movwf	fsr2l,c
  1552  00113A  0EFF               	movlw	255
  1553  00113C  20E2               	addwfc	fsr1h,w,c
  1554  00113E  6EDA               	movwf	fsr2h,c
  1555  001140  EE02  F0AA         	lfsr	0,_ready_queue+540
  1556  001144  CFEE F04D          	movff	postinc0,btemp+10
  1557  001148  CFED F04E          	movff	postdec0,btemp+11
  1558  00114C  0E6C               	movlw	108
  1559  00114E  024D               	mulwf	btemp+10,c
  1560  001150  CFF3 F04B          	movff	prodl,btemp+8
  1561  001154  CFF4 F04C          	movff	prodh,btemp+9
  1562  001158  024E               	mulwf	btemp+11,c
  1563  00115A  50F3               	movf	prodl,w,c
  1564  00115C  264C               	addwf	btemp+9,f,c
  1565  00115E  0E8E               	movlw	low _ready_queue
  1566  001160  244B               	addwf	btemp+8,w,c
  1567  001162  6EE9               	movwf	fsr0l,c
  1568  001164  0E00               	movlw	high _ready_queue
  1569  001166  204C               	addwfc	btemp+9,w,c
  1570  001168  6EEA               	movwf	fsr0h,c
  1571  00116A  0E6B               	movlw	107
  1572  00116C                     u511:
  1573  00116C  CFDB FFEB          	movff	plusw2,plusw0
  1574  001170  06E8               	decf	wreg,f,c
  1575  001172  E2FC               	bc	u511
  1576                           
  1577                           ;kernel.c: 26:   ready_queue.tasks_installed++;
  1578  001174  EE22  F0AA         	lfsr	2,_ready_queue+540
  1579  001178  2ADE               	incf	postinc2,f,c
  1580  00117A  0E00               	movlw	0
  1581  00117C  22DD               	addwfc	postdec2,f,c
  1582                           
  1583                           ; _lunos_createTask: autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
  1584  00117E  0E90               	movlw	144
  1585  001180  26E1               	addwf	fsr1l,f,c
  1586  001182  0EFF               	movlw	255
  1587  001184  22E2               	addwfc	fsr1h,f,c
  1588  001186  0012               	return		;funcret
  1589  001188                     __end_of_lunos_createTask:
  1590                           	opt callstack 0
  1591                           
  1592 ;; *************** function _SRAMInitHeap *****************
  1593 ;; Defined at:
  1594 ;;		line 313 in file "sralloc.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  count           2  [STACK] unsigned int 
  1599 ;;  pHeap           2  [STACK] PTR unsigned char 
  1600 ;;		 -> _uDynamicHeap(512), 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1  [STACK] void 
  1603 ;; Registers used:
  1604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1610 ;;      Params:         0       0       0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:   10
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_lunos_init
  1621 ;; This function uses a reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text8
  1625  001366                     __ptext8:
  1626                           	opt callstack 0
  1627  001366                     _SRAMInitHeap:
  1628                           	opt callstack 0
  1629                           
  1630                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1631  001366  52E6               	movf	postinc1,f,c
  1632  001368  52E6               	movf	postinc1,f,c
  1633  00136A  52E6               	movf	postinc1,f,c
  1634  00136C  52E6               	movf	postinc1,f,c
  1635                           
  1636                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
  1637                           ;stkvar	_pHeap @ sp[(-4)+2]
  1638                           
  1639                           ;incstack = 0
  1640  00136E  0E02               	movlw	high __uDynamicHeap
  1641  001370  6E43               	movwf	btemp,c
  1642  001372  0EFF               	movlw	-1
  1643  001374  C043  FFE3         	movff	btemp,plusw1
  1644  001378  0EAE               	movlw	low __uDynamicHeap
  1645  00137A  6E43               	movwf	btemp,c
  1646  00137C  0EFE               	movlw	-2
  1647  00137E  C043  FFE3         	movff	btemp,plusw1
  1648                           
  1649                           ;sralloc.c: 319:  count = 0x200 -1;
  1650  001382  0EFF               	movlw	255
  1651  001384  6E4D               	movwf	btemp+10,c
  1652  001386  0E01               	movlw	1
  1653  001388  6E4E               	movwf	btemp+11,c
  1654                           
  1655                           ;stkvar	_count @ sp[(-4)+0]
  1656  00138A  0EFC               	movlw	-4
  1657  00138C  C04D  FFE3         	movff	btemp+10,plusw1
  1658  001390  0EFD               	movlw	-3
  1659  001392  C04E  FFE3         	movff	btemp+11,plusw1
  1660  001396                     l1690:
  1661                           
  1662                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
  1663                           ;stkvar	_count @ sp[(-4)+0]
  1664  001396  0EFD               	movlw	-3
  1665  001398  50E3               	movf	plusw1,w,c
  1666  00139A  E107               	bnz	u550
  1667  00139C  0EFC               	movlw	-4
  1668  00139E  CFE3 F043          	movff	plusw1,btemp
  1669  0013A2  0E80               	movlw	128
  1670  0013A4  5E43               	subwf	btemp,f,c
  1671  0013A6  A0D8               	btfss	status,0,c
  1672  0013A8  D023               	goto	l1698
  1673  0013AA                     u550:
  1674                           
  1675                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
  1676                           ;stkvar	_pHeap @ sp[(-4)+2]
  1677  0013AA  0EFE               	movlw	-2
  1678  0013AC  CFE3 FFD9          	movff	plusw1,fsr2l
  1679  0013B0  0EFF               	movlw	-1
  1680  0013B2  CFE3 FFDA          	movff	plusw1,fsr2h
  1681  0013B6  0E7F               	movlw	127
  1682  0013B8  6EDF               	movwf	indf2,c
  1683                           
  1684                           ;sralloc.c: 326:    pHeap += 0x7F;
  1685                           ;stkvar	_pHeap @ sp[(-4)+2]
  1686  0013BA  0EFE               	movlw	-2
  1687  0013BC  50E3               	movf	plusw1,w,c
  1688  0013BE  0F7F               	addlw	127
  1689  0013C0  6E43               	movwf	btemp,c
  1690  0013C2  0EFE               	movlw	-2
  1691  0013C4  C043  FFE3         	movff	btemp,plusw1
  1692  0013C8  6A43               	clrf	btemp,c
  1693  0013CA  0EFF               	movlw	-1
  1694  0013CC  50E3               	movf	plusw1,w,c
  1695  0013CE  2043               	addwfc	btemp,w,c
  1696  0013D0  6E43               	movwf	btemp,c
  1697  0013D2  0EFF               	movlw	-1
  1698  0013D4  C043  FFE3         	movff	btemp,plusw1
  1699                           
  1700                           ;sralloc.c: 327:    count = count - 0x7F;
  1701                           ;stkvar	_count @ sp[(-4)+0]
  1702  0013D8  50E1               	movf	fsr1l,w,c
  1703  0013DA  0FFC               	addlw	-4
  1704  0013DC  6ED9               	movwf	fsr2l,c
  1705  0013DE  50E2               	movf	fsr1h,w,c
  1706  0013E0  6EDA               	movwf	fsr2h,c
  1707  0013E2  0EFF               	movlw	255
  1708  0013E4  22DA               	addwfc	fsr2h,f,c
  1709  0013E6  0E81               	movlw	129
  1710  0013E8  26DE               	addwf	postinc2,f,c
  1711  0013EA  0EFF               	movlw	255
  1712  0013EC  22DD               	addwfc	postdec2,f,c
  1713                           
  1714                           ;sralloc.c: 328:   }
  1715  0013EE  D7D3               	goto	l1690
  1716  0013F0                     l1698:
  1717                           
  1718                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1719                           ;stkvar	_count @ sp[(-4)+0]
  1720                           ;stkvar	_pHeap @ sp[(-4)+2]
  1721  0013F0  0EFE               	movlw	-2
  1722  0013F2  CFE3 FFD9          	movff	plusw1,fsr2l
  1723  0013F6  0EFF               	movlw	-1
  1724  0013F8  CFE3 FFDA          	movff	plusw1,fsr2h
  1725  0013FC  0EFC               	movlw	-4
  1726  0013FE  CFE3 FFDF          	movff	plusw1,indf2
  1727                           
  1728                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1729                           ;stkvar	_count @ sp[(-4)+0]
  1730  001402  0EFC               	movlw	-4
  1731  001404  CFE3 F04D          	movff	plusw1,btemp+10
  1732  001408  0EFD               	movlw	-3
  1733  00140A  CFE3 F04E          	movff	plusw1,btemp+11
  1734                           
  1735                           ;stkvar	_pHeap @ sp[(-4)+2]
  1736  00140E  0EFE               	movlw	-2
  1737  001410  CFE3 F04B          	movff	plusw1,btemp+8
  1738  001414  0EFF               	movlw	-1
  1739  001416  CFE3 F04C          	movff	plusw1,btemp+9
  1740  00141A  504D               	movf	btemp+10,w,c
  1741  00141C  244B               	addwf	btemp+8,w,c
  1742  00141E  6ED9               	movwf	fsr2l,c
  1743  001420  504E               	movf	btemp+11,w,c
  1744  001422  204C               	addwfc	btemp+9,w,c
  1745  001424  6EDA               	movwf	fsr2h,c
  1746  001426  0E00               	movlw	0
  1747  001428  6EDF               	movwf	indf2,c
  1748                           
  1749                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1750  00142A  52E5               	movf	postdec1,f,c
  1751  00142C  52E5               	movf	postdec1,f,c
  1752  00142E  52E5               	movf	postdec1,f,c
  1753  001430  52E5               	movf	postdec1,f,c
  1754  001432  0012               	return		;funcret
  1755  001434                     __end_of_SRAMInitHeap:
  1756                           	opt callstack 0
  1757                           
  1758 ;; *************** function _dispatcher *****************
  1759 ;; Defined at:
  1760 ;;		line 64 in file "kernel.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  state           1  [STACK] enum E4
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1  [STACK] void 
  1767 ;; Registers used:
  1768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1774 ;;      Params:         0       0       0       0       0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0
  1777 ;;      Totals:         0       0       0       0       0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; Hardware stack levels required when called:   13
  1781 ;; This function calls:
  1782 ;;		_scheduler
  1783 ;; This function is called by:
  1784 ;;		_lunos_delayTask
  1785 ;;		_main
  1786 ;;		_sem_wait
  1787 ;; This function uses a reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text9
  1791  0004CC                     __ptext9:
  1792                           	opt callstack 0
  1793  0004CC                     _dispatcher:
  1794                           	opt callstack 11
  1795                           
  1796                           ;kernel.c: 65:   INTCONbits.GIE = 0;
  1797                           
  1798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1799                           ;incstack = 0
  1800  0004CC  9EF2               	bcf	4082,7,c	;volatile
  1801                           
  1802                           ;kernel.c: 67:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  1803  0004CE  C2AC  F00B         	movff	_ready_queue+542,_who
  1804  0004D2  C2AD  F00C         	movff	_ready_queue+543,_who+1
  1805                           
  1806                           ;stkvar	_state @ sp[(0)+-1]
  1807  0004D6  C00B  F04D         	movff	_who,btemp+10
  1808  0004DA  C00C  F04E         	movff	_who+1,btemp+11
  1809  0004DE  0E6C               	movlw	108
  1810  0004E0  024D               	mulwf	btemp+10,c
  1811  0004E2  CFF3 F04B          	movff	prodl,btemp+8
  1812  0004E6  CFF4 F04C          	movff	prodh,btemp+9
  1813  0004EA  024E               	mulwf	btemp+11,c
  1814  0004EC  50F3               	movf	prodl,w,c
  1815  0004EE  264C               	addwf	btemp+9,f,c
  1816  0004F0  0E96               	movlw	low (_ready_queue+8)
  1817  0004F2  244B               	addwf	btemp+8,w,c
  1818  0004F4  6ED9               	movwf	fsr2l,c
  1819  0004F6  0E00               	movlw	high (_ready_queue+8)
  1820  0004F8  204C               	addwfc	btemp+9,w,c
  1821  0004FA  6EDA               	movwf	fsr2h,c
  1822  0004FC  0EFF               	movlw	-1
  1823  0004FE  CFE3 FFDF          	movff	plusw1,indf2
  1824  000502  C00B  F04D         	movff	_who,btemp+10
  1825  000506  C00C  F04E         	movff	_who+1,btemp+11
  1826  00050A  0E6C               	movlw	108
  1827  00050C  024D               	mulwf	btemp+10,c
  1828  00050E  CFF3 F04B          	movff	prodl,btemp+8
  1829  000512  CFF4 F04C          	movff	prodh,btemp+9
  1830  000516  024E               	mulwf	btemp+11,c
  1831  000518  50F3               	movf	prodl,w,c
  1832  00051A  264C               	addwf	btemp+9,f,c
  1833  00051C  0E93               	movlw	low (_ready_queue+5)
  1834  00051E  244B               	addwf	btemp+8,w,c
  1835  000520  6ED9               	movwf	fsr2l,c
  1836  000522  0E00               	movlw	high (_ready_queue+5)
  1837  000524  204C               	addwfc	btemp+9,w,c
  1838  000526  6EDA               	movwf	fsr2h,c
  1839  000528  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1840  00052C  C00B  F04D         	movff	_who,btemp+10
  1841  000530  C00C  F04E         	movff	_who+1,btemp+11
  1842  000534  0E6C               	movlw	108
  1843  000536  024D               	mulwf	btemp+10,c
  1844  000538  CFF3 F04B          	movff	prodl,btemp+8
  1845  00053C  CFF4 F04C          	movff	prodh,btemp+9
  1846  000540  024E               	mulwf	btemp+11,c
  1847  000542  50F3               	movf	prodl,w,c
  1848  000544  264C               	addwf	btemp+9,f,c
  1849  000546  0E94               	movlw	low (_ready_queue+6)
  1850  000548  244B               	addwf	btemp+8,w,c
  1851  00054A  6ED9               	movwf	fsr2l,c
  1852  00054C  0E00               	movlw	high (_ready_queue+6)
  1853  00054E  204C               	addwfc	btemp+9,w,c
  1854  000550  6EDA               	movwf	fsr2h,c
  1855  000552  CFD8 FFDF          	movff	status,indf2	;volatile
  1856  000556  C00B  F04D         	movff	_who,btemp+10
  1857  00055A  C00C  F04E         	movff	_who+1,btemp+11
  1858  00055E  0E6C               	movlw	108
  1859  000560  024D               	mulwf	btemp+10,c
  1860  000562  CFF3 F04B          	movff	prodl,btemp+8
  1861  000566  CFF4 F04C          	movff	prodh,btemp+9
  1862  00056A  024E               	mulwf	btemp+11,c
  1863  00056C  50F3               	movf	prodl,w,c
  1864  00056E  264C               	addwf	btemp+9,f,c
  1865  000570  0E95               	movlw	low (_ready_queue+7)
  1866  000572  244B               	addwf	btemp+8,w,c
  1867  000574  6ED9               	movwf	fsr2l,c
  1868  000576  0E00               	movlw	high (_ready_queue+7)
  1869  000578  204C               	addwfc	btemp+9,w,c
  1870  00057A  6EDA               	movwf	fsr2h,c
  1871  00057C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1872  000580  6A09               	clrf	_size,c
  1873  000582  6A0A               	clrf	_size+1,c
  1874  000584  D08D               	goto	l1662
  1875  000586                     l1658:
  1876  000586  C009  F04D         	movff	_size,btemp+10
  1877  00058A  C00A  F04E         	movff	_size+1,btemp+11
  1878  00058E  0E03               	movlw	3
  1879  000590  024D               	mulwf	btemp+10,c
  1880  000592  CFF3 F04B          	movff	prodl,btemp+8
  1881  000596  CFF4 F04C          	movff	prodh,btemp+9
  1882  00059A  024E               	mulwf	btemp+11,c
  1883  00059C  50F3               	movf	prodl,w,c
  1884  00059E  264C               	addwf	btemp+9,f,c
  1885  0005A0  C00B  F04D         	movff	_who,btemp+10
  1886  0005A4  C00C  F04E         	movff	_who+1,btemp+11
  1887  0005A8  0E6C               	movlw	108
  1888  0005AA  024D               	mulwf	btemp+10,c
  1889  0005AC  CFF3 F049          	movff	prodl,btemp+6
  1890  0005B0  CFF4 F04A          	movff	prodh,btemp+7
  1891  0005B4  024E               	mulwf	btemp+11,c
  1892  0005B6  50F3               	movf	prodl,w,c
  1893  0005B8  264A               	addwf	btemp+7,f,c
  1894  0005BA  0E8E               	movlw	low _ready_queue
  1895  0005BC  6E4D               	movwf	btemp+10,c
  1896  0005BE  0E00               	movlw	high _ready_queue
  1897  0005C0  6E4E               	movwf	btemp+11,c
  1898  0005C2  0E09               	movlw	9
  1899  0005C4  264D               	addwf	btemp+10,f,c
  1900  0005C6  0E00               	movlw	0
  1901  0005C8  224E               	addwfc	btemp+11,f,c
  1902  0005CA  5049               	movf	btemp+6,w,c
  1903  0005CC  264D               	addwf	btemp+10,f,c
  1904  0005CE  504A               	movf	btemp+7,w,c
  1905  0005D0  224E               	addwfc	btemp+11,f,c
  1906  0005D2  504B               	movf	btemp+8,w,c
  1907  0005D4  244D               	addwf	btemp+10,w,c
  1908  0005D6  6ED9               	movwf	fsr2l,c
  1909  0005D8  504C               	movf	btemp+9,w,c
  1910  0005DA  204E               	addwfc	btemp+11,w,c
  1911  0005DC  6EDA               	movwf	fsr2h,c
  1912  0005DE  CFFF FFDF          	movff	tosu,indf2	;volatile
  1913  0005E2  C009  F04D         	movff	_size,btemp+10
  1914  0005E6  C00A  F04E         	movff	_size+1,btemp+11
  1915  0005EA  0E03               	movlw	3
  1916  0005EC  024D               	mulwf	btemp+10,c
  1917  0005EE  CFF3 F04B          	movff	prodl,btemp+8
  1918  0005F2  CFF4 F04C          	movff	prodh,btemp+9
  1919  0005F6  024E               	mulwf	btemp+11,c
  1920  0005F8  50F3               	movf	prodl,w,c
  1921  0005FA  264C               	addwf	btemp+9,f,c
  1922  0005FC  C00B  F04D         	movff	_who,btemp+10
  1923  000600  C00C  F04E         	movff	_who+1,btemp+11
  1924  000604  0E6C               	movlw	108
  1925  000606  024D               	mulwf	btemp+10,c
  1926  000608  CFF3 F049          	movff	prodl,btemp+6
  1927  00060C  CFF4 F04A          	movff	prodh,btemp+7
  1928  000610  024E               	mulwf	btemp+11,c
  1929  000612  50F3               	movf	prodl,w,c
  1930  000614  264A               	addwf	btemp+7,f,c
  1931  000616  0E8E               	movlw	low _ready_queue
  1932  000618  6E4D               	movwf	btemp+10,c
  1933  00061A  0E00               	movlw	high _ready_queue
  1934  00061C  6E4E               	movwf	btemp+11,c
  1935  00061E  0E0B               	movlw	11
  1936  000620  264D               	addwf	btemp+10,f,c
  1937  000622  0E00               	movlw	0
  1938  000624  224E               	addwfc	btemp+11,f,c
  1939  000626  5049               	movf	btemp+6,w,c
  1940  000628  264D               	addwf	btemp+10,f,c
  1941  00062A  504A               	movf	btemp+7,w,c
  1942  00062C  224E               	addwfc	btemp+11,f,c
  1943  00062E  504B               	movf	btemp+8,w,c
  1944  000630  244D               	addwf	btemp+10,w,c
  1945  000632  6ED9               	movwf	fsr2l,c
  1946  000634  504C               	movf	btemp+9,w,c
  1947  000636  204E               	addwfc	btemp+11,w,c
  1948  000638  6EDA               	movwf	fsr2h,c
  1949  00063A  CFFE FFDF          	movff	tosh,indf2	;volatile
  1950  00063E  C009  F04D         	movff	_size,btemp+10
  1951  000642  C00A  F04E         	movff	_size+1,btemp+11
  1952  000646  0E03               	movlw	3
  1953  000648  024D               	mulwf	btemp+10,c
  1954  00064A  CFF3 F04B          	movff	prodl,btemp+8
  1955  00064E  CFF4 F04C          	movff	prodh,btemp+9
  1956  000652  024E               	mulwf	btemp+11,c
  1957  000654  50F3               	movf	prodl,w,c
  1958  000656  264C               	addwf	btemp+9,f,c
  1959  000658  C00B  F04D         	movff	_who,btemp+10
  1960  00065C  C00C  F04E         	movff	_who+1,btemp+11
  1961  000660  0E6C               	movlw	108
  1962  000662  024D               	mulwf	btemp+10,c
  1963  000664  CFF3 F049          	movff	prodl,btemp+6
  1964  000668  CFF4 F04A          	movff	prodh,btemp+7
  1965  00066C  024E               	mulwf	btemp+11,c
  1966  00066E  50F3               	movf	prodl,w,c
  1967  000670  264A               	addwf	btemp+7,f,c
  1968  000672  0E8E               	movlw	low _ready_queue
  1969  000674  6E4D               	movwf	btemp+10,c
  1970  000676  0E00               	movlw	high _ready_queue
  1971  000678  6E4E               	movwf	btemp+11,c
  1972  00067A  0E0A               	movlw	10
  1973  00067C  264D               	addwf	btemp+10,f,c
  1974  00067E  0E00               	movlw	0
  1975  000680  224E               	addwfc	btemp+11,f,c
  1976  000682  5049               	movf	btemp+6,w,c
  1977  000684  264D               	addwf	btemp+10,f,c
  1978  000686  504A               	movf	btemp+7,w,c
  1979  000688  224E               	addwfc	btemp+11,f,c
  1980  00068A  504B               	movf	btemp+8,w,c
  1981  00068C  244D               	addwf	btemp+10,w,c
  1982  00068E  6ED9               	movwf	fsr2l,c
  1983  000690  504C               	movf	btemp+9,w,c
  1984  000692  204E               	addwfc	btemp+11,w,c
  1985  000694  6EDA               	movwf	fsr2h,c
  1986  000696  CFFD FFDF          	movff	tosl,indf2	;volatile
  1987  00069A  4A09               	infsnz	_size,f,c
  1988  00069C  2A0A               	incf	_size+1,f,c
  1989  00069E  0006               	pop		;# 
  1990  0006A0                     l1662:
  1991  0006A0  50FC               	movf	stkptr,w,c	;volatile
  1992  0006A2  A4D8               	btfss	status,2,c
  1993  0006A4  D770               	goto	l1658
  1994  0006A6  0EFF               	movlw	255
  1995  0006A8  6E4D               	movwf	btemp+10,c
  1996  0006AA  0EFF               	movlw	255
  1997  0006AC  6E4E               	movwf	btemp+11,c
  1998  0006AE  C009  F04B         	movff	_size,btemp+8
  1999  0006B2  C00A  F04C         	movff	_size+1,btemp+9
  2000  0006B6  504D               	movf	btemp+10,w,c
  2001  0006B8  264B               	addwf	btemp+8,f,c
  2002  0006BA  504E               	movf	btemp+11,w,c
  2003  0006BC  224C               	addwfc	btemp+9,f,c
  2004  0006BE  C00B  F04D         	movff	_who,btemp+10
  2005  0006C2  C00C  F04E         	movff	_who+1,btemp+11
  2006  0006C6  0E6C               	movlw	108
  2007  0006C8  024D               	mulwf	btemp+10,c
  2008  0006CA  CFF3 F049          	movff	prodl,btemp+6
  2009  0006CE  CFF4 F04A          	movff	prodh,btemp+7
  2010  0006D2  024E               	mulwf	btemp+11,c
  2011  0006D4  50F3               	movf	prodl,w,c
  2012  0006D6  264A               	addwf	btemp+7,f,c
  2013  0006D8  0EF4               	movlw	low (_ready_queue+102)
  2014  0006DA  2449               	addwf	btemp+6,w,c
  2015  0006DC  6ED9               	movwf	fsr2l,c
  2016  0006DE  0E00               	movlw	high (_ready_queue+102)
  2017  0006E0  204A               	addwfc	btemp+7,w,c
  2018  0006E2  6EDA               	movwf	fsr2h,c
  2019  0006E4  C04B  FFDE         	movff	btemp+8,postinc2
  2020  0006E8  C04C  FFDD         	movff	btemp+9,postdec2
  2021                           
  2022                           ;kernel.c: 69:   ready_queue.task_running = scheduler();
  2023  0006EC  EC53  F00D         	call	_scheduler	;wreg free
  2024  0006F0  C043  F2AC         	movff	btemp,_ready_queue+542
  2025  0006F4  C044  F2AD         	movff	btemp+1,_ready_queue+543
  2026                           
  2027                           ;kernel.c: 71:   { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.tasks[who
      +                          ].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task_f; } e
      +                          lse { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].W_reg; 
      +                          STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg; size =
      +                           ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL = read
      +                          y_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[who].task
      +                          _stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[size].TO
      +                          SU_reg; size--; } }};
  2028  0006F8  C2AC  F00B         	movff	_ready_queue+542,_who
  2029  0006FC  C2AD  F00C         	movff	_ready_queue+543,_who+1
  2030  000700  6AFC               	clrf	stkptr,c	;volatile
  2031  000702  C00B  F04D         	movff	_who,btemp+10
  2032  000706  C00C  F04E         	movff	_who+1,btemp+11
  2033  00070A  0E6C               	movlw	108
  2034  00070C  024D               	mulwf	btemp+10,c
  2035  00070E  CFF3 F04B          	movff	prodl,btemp+8
  2036  000712  CFF4 F04C          	movff	prodh,btemp+9
  2037  000716  024E               	mulwf	btemp+11,c
  2038  000718  50F3               	movf	prodl,w,c
  2039  00071A  264C               	addwf	btemp+9,f,c
  2040  00071C  0EF4               	movlw	low (_ready_queue+102)
  2041  00071E  244B               	addwf	btemp+8,w,c
  2042  000720  6ED9               	movwf	fsr2l,c
  2043  000722  0E00               	movlw	high (_ready_queue+102)
  2044  000724  204C               	addwfc	btemp+9,w,c
  2045  000726  6EDA               	movwf	fsr2h,c
  2046  000728  50DE               	movf	postinc2,w,c
  2047  00072A  10DE               	iorwf	postinc2,w,c
  2048  00072C  A4D8               	btfss	status,2,c
  2049  00072E  D01E               	goto	l1678
  2050  000730  0005               	push		;# 
  2051  000732  C00B  F04D         	movff	_who,btemp+10
  2052  000736  C00C  F04E         	movff	_who+1,btemp+11
  2053  00073A  0E6C               	movlw	108
  2054  00073C  024D               	mulwf	btemp+10,c
  2055  00073E  CFF3 F04B          	movff	prodl,btemp+8
  2056  000742  CFF4 F04C          	movff	prodh,btemp+9
  2057  000746  024E               	mulwf	btemp+11,c
  2058  000748  50F3               	movf	prodl,w,c
  2059  00074A  264C               	addwf	btemp+9,f,c
  2060  00074C  0EF6               	movlw	low (_ready_queue+104)
  2061  00074E  244B               	addwf	btemp+8,w,c
  2062  000750  6ED9               	movwf	fsr2l,c
  2063  000752  0E00               	movlw	high (_ready_queue+104)
  2064  000754  204C               	addwfc	btemp+9,w,c
  2065  000756  6EDA               	movwf	fsr2h,c
  2066  000758  CFDE F04D          	movff	postinc2,btemp+10
  2067  00075C  CFDD F04E          	movff	postdec2,btemp+11
  2068  000760  C04D  FFFD         	movff	btemp+10,tosl	;volatile
  2069  000764  C04E  FFFE         	movff	btemp+11,tosh	;volatile
  2070  000768  6AFF               	clrf	tosu,c	;volatile
  2071  00076A  D0FF               	goto	u540
  2072  00076C                     l1678:
  2073  00076C  C00B  F04D         	movff	_who,btemp+10
  2074  000770  C00C  F04E         	movff	_who+1,btemp+11
  2075  000774  0E6C               	movlw	108
  2076  000776  024D               	mulwf	btemp+10,c
  2077  000778  CFF3 F04B          	movff	prodl,btemp+8
  2078  00077C  CFF4 F04C          	movff	prodh,btemp+9
  2079  000780  024E               	mulwf	btemp+11,c
  2080  000782  50F3               	movf	prodl,w,c
  2081  000784  264C               	addwf	btemp+9,f,c
  2082  000786  0E96               	movlw	low (_ready_queue+8)
  2083  000788  244B               	addwf	btemp+8,w,c
  2084  00078A  6ED9               	movwf	fsr2l,c
  2085  00078C  0E00               	movlw	high (_ready_queue+8)
  2086  00078E  204C               	addwfc	btemp+9,w,c
  2087  000790  6EDA               	movwf	fsr2h,c
  2088  000792  0E01               	movlw	1
  2089  000794  6EDF               	movwf	indf2,c
  2090  000796  C00B  F04D         	movff	_who,btemp+10
  2091  00079A  C00C  F04E         	movff	_who+1,btemp+11
  2092  00079E  0E6C               	movlw	108
  2093  0007A0  024D               	mulwf	btemp+10,c
  2094  0007A2  CFF3 F04B          	movff	prodl,btemp+8
  2095  0007A6  CFF4 F04C          	movff	prodh,btemp+9
  2096  0007AA  024E               	mulwf	btemp+11,c
  2097  0007AC  50F3               	movf	prodl,w,c
  2098  0007AE  264C               	addwf	btemp+9,f,c
  2099  0007B0  0E93               	movlw	low (_ready_queue+5)
  2100  0007B2  244B               	addwf	btemp+8,w,c
  2101  0007B4  6ED9               	movwf	fsr2l,c
  2102  0007B6  0E00               	movlw	high (_ready_queue+5)
  2103  0007B8  204C               	addwfc	btemp+9,w,c
  2104  0007BA  6EDA               	movwf	fsr2h,c
  2105  0007BC  50DF               	movf	indf2,w,c
  2106  0007BE  6E4E               	movwf	btemp+11,c
  2107  0007C0  504E               	movf	btemp+11,w,c
  2108  0007C2  C00B  F04D         	movff	_who,btemp+10
  2109  0007C6  C00C  F04E         	movff	_who+1,btemp+11
  2110  0007CA  0E6C               	movlw	108
  2111  0007CC  024D               	mulwf	btemp+10,c
  2112  0007CE  CFF3 F04B          	movff	prodl,btemp+8
  2113  0007D2  CFF4 F04C          	movff	prodh,btemp+9
  2114  0007D6  024E               	mulwf	btemp+11,c
  2115  0007D8  50F3               	movf	prodl,w,c
  2116  0007DA  264C               	addwf	btemp+9,f,c
  2117  0007DC  0E94               	movlw	low (_ready_queue+6)
  2118  0007DE  244B               	addwf	btemp+8,w,c
  2119  0007E0  6ED9               	movwf	fsr2l,c
  2120  0007E2  0E00               	movlw	high (_ready_queue+6)
  2121  0007E4  204C               	addwfc	btemp+9,w,c
  2122  0007E6  6EDA               	movwf	fsr2h,c
  2123  0007E8  50DF               	movf	indf2,w,c
  2124  0007EA  6ED8               	movwf	status,c	;volatile
  2125  0007EC  C00B  F04D         	movff	_who,btemp+10
  2126  0007F0  C00C  F04E         	movff	_who+1,btemp+11
  2127  0007F4  0E6C               	movlw	108
  2128  0007F6  024D               	mulwf	btemp+10,c
  2129  0007F8  CFF3 F04B          	movff	prodl,btemp+8
  2130  0007FC  CFF4 F04C          	movff	prodh,btemp+9
  2131  000800  024E               	mulwf	btemp+11,c
  2132  000802  50F3               	movf	prodl,w,c
  2133  000804  264C               	addwf	btemp+9,f,c
  2134  000806  0E95               	movlw	low (_ready_queue+7)
  2135  000808  244B               	addwf	btemp+8,w,c
  2136  00080A  6ED9               	movwf	fsr2l,c
  2137  00080C  0E00               	movlw	high (_ready_queue+7)
  2138  00080E  204C               	addwfc	btemp+9,w,c
  2139  000810  6EDA               	movwf	fsr2h,c
  2140  000812  50DF               	movf	indf2,w,c
  2141  000814  6EE0               	movwf	bsr,c	;volatile
  2142  000816  C00B  F04D         	movff	_who,btemp+10
  2143  00081A  C00C  F04E         	movff	_who+1,btemp+11
  2144  00081E  0E6C               	movlw	108
  2145  000820  024D               	mulwf	btemp+10,c
  2146  000822  CFF3 F04B          	movff	prodl,btemp+8
  2147  000826  CFF4 F04C          	movff	prodh,btemp+9
  2148  00082A  024E               	mulwf	btemp+11,c
  2149  00082C  50F3               	movf	prodl,w,c
  2150  00082E  264C               	addwf	btemp+9,f,c
  2151  000830  0EF4               	movlw	low (_ready_queue+102)
  2152  000832  244B               	addwf	btemp+8,w,c
  2153  000834  6ED9               	movwf	fsr2l,c
  2154  000836  0E00               	movlw	high (_ready_queue+102)
  2155  000838  204C               	addwfc	btemp+9,w,c
  2156  00083A  6EDA               	movwf	fsr2h,c
  2157  00083C  CFDE F009          	movff	postinc2,_size
  2158  000840  CFDD F00A          	movff	postdec2,_size+1
  2159  000844  D08E               	goto	l1684
  2160  000846                     l127:
  2161  000846  0005               	push		;# 
  2162  000848  C009  F04D         	movff	_size,btemp+10
  2163  00084C  C00A  F04E         	movff	_size+1,btemp+11
  2164  000850  0E03               	movlw	3
  2165  000852  024D               	mulwf	btemp+10,c
  2166  000854  CFF3 F04B          	movff	prodl,btemp+8
  2167  000858  CFF4 F04C          	movff	prodh,btemp+9
  2168  00085C  024E               	mulwf	btemp+11,c
  2169  00085E  50F3               	movf	prodl,w,c
  2170  000860  264C               	addwf	btemp+9,f,c
  2171  000862  C00B  F04D         	movff	_who,btemp+10
  2172  000866  C00C  F04E         	movff	_who+1,btemp+11
  2173  00086A  0E6C               	movlw	108
  2174  00086C  024D               	mulwf	btemp+10,c
  2175  00086E  CFF3 F049          	movff	prodl,btemp+6
  2176  000872  CFF4 F04A          	movff	prodh,btemp+7
  2177  000876  024E               	mulwf	btemp+11,c
  2178  000878  50F3               	movf	prodl,w,c
  2179  00087A  264A               	addwf	btemp+7,f,c
  2180  00087C  0E8E               	movlw	low _ready_queue
  2181  00087E  6E4D               	movwf	btemp+10,c
  2182  000880  0E00               	movlw	high _ready_queue
  2183  000882  6E4E               	movwf	btemp+11,c
  2184  000884  0E0A               	movlw	10
  2185  000886  264D               	addwf	btemp+10,f,c
  2186  000888  0E00               	movlw	0
  2187  00088A  224E               	addwfc	btemp+11,f,c
  2188  00088C  5049               	movf	btemp+6,w,c
  2189  00088E  264D               	addwf	btemp+10,f,c
  2190  000890  504A               	movf	btemp+7,w,c
  2191  000892  224E               	addwfc	btemp+11,f,c
  2192  000894  504B               	movf	btemp+8,w,c
  2193  000896  244D               	addwf	btemp+10,w,c
  2194  000898  6ED9               	movwf	fsr2l,c
  2195  00089A  504C               	movf	btemp+9,w,c
  2196  00089C  204E               	addwfc	btemp+11,w,c
  2197  00089E  6EDA               	movwf	fsr2h,c
  2198  0008A0  50DF               	movf	indf2,w,c
  2199  0008A2  6EFD               	movwf	tosl,c	;volatile
  2200  0008A4  C009  F04D         	movff	_size,btemp+10
  2201  0008A8  C00A  F04E         	movff	_size+1,btemp+11
  2202  0008AC  0E03               	movlw	3
  2203  0008AE  024D               	mulwf	btemp+10,c
  2204  0008B0  CFF3 F04B          	movff	prodl,btemp+8
  2205  0008B4  CFF4 F04C          	movff	prodh,btemp+9
  2206  0008B8  024E               	mulwf	btemp+11,c
  2207  0008BA  50F3               	movf	prodl,w,c
  2208  0008BC  264C               	addwf	btemp+9,f,c
  2209  0008BE  C00B  F04D         	movff	_who,btemp+10
  2210  0008C2  C00C  F04E         	movff	_who+1,btemp+11
  2211  0008C6  0E6C               	movlw	108
  2212  0008C8  024D               	mulwf	btemp+10,c
  2213  0008CA  CFF3 F049          	movff	prodl,btemp+6
  2214  0008CE  CFF4 F04A          	movff	prodh,btemp+7
  2215  0008D2  024E               	mulwf	btemp+11,c
  2216  0008D4  50F3               	movf	prodl,w,c
  2217  0008D6  264A               	addwf	btemp+7,f,c
  2218  0008D8  0E8E               	movlw	low _ready_queue
  2219  0008DA  6E4D               	movwf	btemp+10,c
  2220  0008DC  0E00               	movlw	high _ready_queue
  2221  0008DE  6E4E               	movwf	btemp+11,c
  2222  0008E0  0E0B               	movlw	11
  2223  0008E2  264D               	addwf	btemp+10,f,c
  2224  0008E4  0E00               	movlw	0
  2225  0008E6  224E               	addwfc	btemp+11,f,c
  2226  0008E8  5049               	movf	btemp+6,w,c
  2227  0008EA  264D               	addwf	btemp+10,f,c
  2228  0008EC  504A               	movf	btemp+7,w,c
  2229  0008EE  224E               	addwfc	btemp+11,f,c
  2230  0008F0  504B               	movf	btemp+8,w,c
  2231  0008F2  244D               	addwf	btemp+10,w,c
  2232  0008F4  6ED9               	movwf	fsr2l,c
  2233  0008F6  504C               	movf	btemp+9,w,c
  2234  0008F8  204E               	addwfc	btemp+11,w,c
  2235  0008FA  6EDA               	movwf	fsr2h,c
  2236  0008FC  50DF               	movf	indf2,w,c
  2237  0008FE  6EFE               	movwf	tosh,c	;volatile
  2238  000900  C009  F04D         	movff	_size,btemp+10
  2239  000904  C00A  F04E         	movff	_size+1,btemp+11
  2240  000908  0E03               	movlw	3
  2241  00090A  024D               	mulwf	btemp+10,c
  2242  00090C  CFF3 F04B          	movff	prodl,btemp+8
  2243  000910  CFF4 F04C          	movff	prodh,btemp+9
  2244  000914  024E               	mulwf	btemp+11,c
  2245  000916  50F3               	movf	prodl,w,c
  2246  000918  264C               	addwf	btemp+9,f,c
  2247  00091A  C00B  F04D         	movff	_who,btemp+10
  2248  00091E  C00C  F04E         	movff	_who+1,btemp+11
  2249  000922  0E6C               	movlw	108
  2250  000924  024D               	mulwf	btemp+10,c
  2251  000926  CFF3 F049          	movff	prodl,btemp+6
  2252  00092A  CFF4 F04A          	movff	prodh,btemp+7
  2253  00092E  024E               	mulwf	btemp+11,c
  2254  000930  50F3               	movf	prodl,w,c
  2255  000932  264A               	addwf	btemp+7,f,c
  2256  000934  0E8E               	movlw	low _ready_queue
  2257  000936  6E4D               	movwf	btemp+10,c
  2258  000938  0E00               	movlw	high _ready_queue
  2259  00093A  6E4E               	movwf	btemp+11,c
  2260  00093C  0E09               	movlw	9
  2261  00093E  264D               	addwf	btemp+10,f,c
  2262  000940  0E00               	movlw	0
  2263  000942  224E               	addwfc	btemp+11,f,c
  2264  000944  5049               	movf	btemp+6,w,c
  2265  000946  264D               	addwf	btemp+10,f,c
  2266  000948  504A               	movf	btemp+7,w,c
  2267  00094A  224E               	addwfc	btemp+11,f,c
  2268  00094C  504B               	movf	btemp+8,w,c
  2269  00094E  244D               	addwf	btemp+10,w,c
  2270  000950  6ED9               	movwf	fsr2l,c
  2271  000952  504C               	movf	btemp+9,w,c
  2272  000954  204E               	addwfc	btemp+11,w,c
  2273  000956  6EDA               	movwf	fsr2h,c
  2274  000958  50DF               	movf	indf2,w,c
  2275  00095A  6EFF               	movwf	tosu,c	;volatile
  2276  00095C  0609               	decf	_size,f,c
  2277  00095E  A0D8               	btfss	status,0,c
  2278  000960  060A               	decf	_size+1,f,c
  2279  000962                     l1684:
  2280  000962  5009               	movf	_size,w,c
  2281  000964  100A               	iorwf	_size+1,w,c
  2282  000966  A4D8               	btfss	status,2,c
  2283  000968  D76E               	goto	l127
  2284  00096A                     u540:
  2285                           
  2286                           ;kernel.c: 73:   INTCONbits.GIE = 1;
  2287  00096A  8EF2               	bsf	4082,7,c	;volatile
  2288                           
  2289                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2290  00096C  52E5               	movf	postdec1,f,c
  2291  00096E  0012               	return		;funcret
  2292  000970                     __end_of_dispatcher:
  2293                           	opt callstack 0
  2294                           
  2295 ;; *************** function _scheduler *****************
  2296 ;; Defined at:
  2297 ;;		line 56 in file "kernel.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2  [STACK] unsigned int 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2311 ;;      Params:         0       0       0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0
  2314 ;;      Totals:         0       0       0       0       0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:   12
  2318 ;; This function calls:
  2319 ;;		_round_robin
  2320 ;; This function is called by:
  2321 ;;		_dispatcher
  2322 ;; This function uses a reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text10
  2326  001AA6                     __ptext10:
  2327                           	opt callstack 0
  2328  001AA6                     _scheduler:
  2329                           	opt callstack 11
  2330                           
  2331                           ;kernel.c: 58:   return round_robin();
  2332                           
  2333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2334                           ;incstack = 0
  2335  001AA6  EC22  F00B         	call	_round_robin	;wreg free
  2336                           
  2337                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2338  001AAA  0012               	return		;funcret
  2339  001AAC                     __end_of_scheduler:
  2340                           	opt callstack 0
  2341                           
  2342 ;; *************** function _round_robin *****************
  2343 ;; Defined at:
  2344 ;;		line 76 in file "kernel.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  next_task_to    2  [STACK] int 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  2  [STACK] unsigned int 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2358 ;;      Params:         0       0       0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:   11
  2365 ;; This function calls:
  2366 ;;		___lwmod
  2367 ;; This function is called by:
  2368 ;;		_ISR_timer0
  2369 ;;		_scheduler
  2370 ;; This function uses a reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text11
  2374  001644                     __ptext11:
  2375                           	opt callstack 0
  2376  001644                     _round_robin:
  2377                           	opt callstack 0
  2378                           
  2379                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2380  001644  52E6               	movf	postinc1,f,c
  2381  001646  52E6               	movf	postinc1,f,c
  2382                           
  2383                           ;kernel.c: 77:   int next_task_to_run = ready_queue.task_running;
  2384                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2385                           
  2386                           ;incstack = 0
  2387  001648  0EFE               	movlw	-2
  2388  00164A  C2AC  FFE3         	movff	_ready_queue+542,plusw1
  2389  00164E  0EFF               	movlw	-1
  2390  001650  C2AD  FFE3         	movff	_ready_queue+543,plusw1
  2391  001654                     l1802:
  2392                           
  2393                           ;kernel.c: 80:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  2394  001654  EE22  F0AA         	lfsr	2,_ready_queue+540
  2395  001658  CFDE F04D          	movff	postinc2,btemp+10
  2396  00165C  CFDD F04E          	movff	postdec2,btemp+11
  2397  001660  C04D  FFE6         	movff	btemp+10,postinc1
  2398  001664  C04E  FFE6         	movff	btemp+11,postinc1
  2399                           
  2400                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  2401  001668  0EFC               	movlw	-4
  2402  00166A  50E3               	movf	plusw1,w,c
  2403  00166C  0F01               	addlw	1
  2404  00166E  6E4D               	movwf	btemp+10,c
  2405  001670  0EFD               	movlw	-3
  2406  001672  CFE3 F04E          	movff	plusw1,btemp+11
  2407  001676  0E00               	movlw	0
  2408  001678  224E               	addwfc	btemp+11,f,c
  2409  00167A  C04D  FFE6         	movff	btemp+10,postinc1
  2410  00167E  C04E  FFE6         	movff	btemp+11,postinc1
  2411  001682  EC79  F00A         	call	___lwmod	;wreg free
  2412                           
  2413                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2414  001686  0EFE               	movlw	-2
  2415  001688  C043  FFE3         	movff	btemp,plusw1
  2416  00168C  0EFF               	movlw	-1
  2417  00168E  C044  FFE3         	movff	btemp+1,plusw1
  2418                           
  2419                           ;kernel.c: 81:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  2420                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2421  001692  0EFE               	movlw	-2
  2422  001694  CFE3 F04D          	movff	plusw1,btemp+10
  2423  001698  0EFF               	movlw	-1
  2424  00169A  CFE3 F04E          	movff	plusw1,btemp+11
  2425  00169E  0E6C               	movlw	108
  2426  0016A0  024D               	mulwf	btemp+10,c
  2427  0016A2  CFF3 F04B          	movff	prodl,btemp+8
  2428  0016A6  CFF4 F04C          	movff	prodh,btemp+9
  2429  0016AA  024E               	mulwf	btemp+11,c
  2430  0016AC  50F3               	movf	prodl,w,c
  2431  0016AE  264C               	addwf	btemp+9,f,c
  2432  0016B0  0E96               	movlw	low (_ready_queue+8)
  2433  0016B2  244B               	addwf	btemp+8,w,c
  2434  0016B4  6ED9               	movwf	fsr2l,c
  2435  0016B6  0E00               	movlw	high (_ready_queue+8)
  2436  0016B8  204C               	addwfc	btemp+9,w,c
  2437  0016BA  6EDA               	movwf	fsr2h,c
  2438  0016BC  50DF               	movf	indf2,w,c
  2439  0016BE  A4D8               	btfss	status,2,c
  2440  0016C0  D7C9               	goto	l1802
  2441                           
  2442                           ;kernel.c: 83:   return next_task_to_run;
  2443                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2444  0016C2  0EFE               	movlw	-2
  2445  0016C4  CFE3 F043          	movff	plusw1,btemp
  2446  0016C8  0EFF               	movlw	-1
  2447  0016CA  CFE3 F044          	movff	plusw1,btemp+1
  2448                           
  2449                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2450  0016CE  52E5               	movf	postdec1,f,c
  2451  0016D0  52E5               	movf	postdec1,f,c
  2452  0016D2  0012               	return		;funcret
  2453  0016D4                     __end_of_round_robin:
  2454                           	opt callstack 0
  2455                           
  2456 ;; *************** function ___lwmod *****************
  2457 ;; Defined at:
  2458 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  dividend        2  [STACK] unsigned int 
  2461 ;;  divisor         2  [STACK] unsigned int 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  counter         1  [STACK] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  2  [STACK] unsigned int 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2473 ;;      Params:         0       0       0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0
  2476 ;;      Totals:         0       0       0       0       0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:   10
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_round_robin
  2484 ;; This function uses a reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text12
  2488  0014F2                     __ptext12:
  2489                           	opt callstack 0
  2490  0014F2                     ___lwmod:
  2491                           	opt callstack 0
  2492                           
  2493                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2494  0014F2  52E6               	movf	postinc1,f,c
  2495                           
  2496                           ;stkvar	_divisor @ sp[(-1)+-4]
  2497                           
  2498                           ;incstack = 0
  2499  0014F4  0EFB               	movlw	-5
  2500  0014F6  CFE3 F043          	movff	plusw1,btemp
  2501  0014FA  0EFC               	movlw	-4
  2502  0014FC  50E3               	movf	plusw1,w,c
  2503  0014FE  1043               	iorwf	btemp,w,c
  2504  001500  B4D8               	btfsc	status,2,c
  2505  001502  D04A               	goto	u650
  2506                           
  2507                           ;stkvar	_counter @ sp[(-1)+0]
  2508  001504  0EFF               	movlw	-1
  2509  001506  6AE3               	clrf	plusw1,c
  2510  001508  D010               	goto	L2
  2511  00150A                     l1768:
  2512                           
  2513                           ;stkvar	_divisor @ sp[(-1)+-4]
  2514  00150A  0EFB               	movlw	-5
  2515  00150C  50E3               	movf	plusw1,w,c
  2516  00150E  90D8               	bcf	status,0,c
  2517  001510  34E8               	rlcf	wreg,w,c
  2518  001512  6E43               	movwf	btemp,c
  2519  001514  0EFB               	movlw	-5
  2520  001516  C043  FFE3         	movff	btemp,plusw1
  2521  00151A  0EFC               	movlw	-4
  2522  00151C  50E3               	movf	plusw1,w,c
  2523  00151E  34E8               	rlcf	wreg,w,c
  2524  001520  6E43               	movwf	btemp,c
  2525  001522  0EFC               	movlw	-4
  2526  001524  C043  FFE3         	movff	btemp,plusw1
  2527                           
  2528                           ;stkvar	_counter @ sp[(-1)+0]
  2529  001528  0EFF               	movlw	-1
  2530  00152A                     L2:
  2531  00152A  2AE3               	incf	plusw1,f,c
  2532                           
  2533                           ;stkvar	_divisor @ sp[(-1)+-4]
  2534  00152C  0EFC               	movlw	-4
  2535  00152E  AEE3               	btfss	plusw1,7,c
  2536  001530  D7EC               	goto	l1768
  2537  001532                     u630:
  2538                           
  2539                           ;stkvar	_divisor @ sp[(-1)+-4]
  2540  001532  0EFB               	movlw	-5
  2541  001534  CFE3 F04D          	movff	plusw1,btemp+10
  2542  001538  0EFC               	movlw	-4
  2543  00153A  CFE3 F04E          	movff	plusw1,btemp+11
  2544                           
  2545                           ;stkvar	_dividend @ sp[(-1)+-2]
  2546  00153E  0EFD               	movlw	-3
  2547  001540  CFE3 F04B          	movff	plusw1,btemp+8
  2548  001544  0EFE               	movlw	-2
  2549  001546  CFE3 F04C          	movff	plusw1,btemp+9
  2550  00154A  504D               	movf	btemp+10,w,c
  2551  00154C  5C4B               	subwf	btemp+8,w,c
  2552  00154E  504E               	movf	btemp+11,w,c
  2553  001550  584C               	subwfb	btemp+9,w,c
  2554  001552  A0D8               	btfss	status,0,c
  2555  001554  D012               	goto	l1778
  2556                           
  2557                           ;stkvar	_divisor @ sp[(-1)+-4]
  2558                           ;stkvar	_dividend @ sp[(-1)+-2]
  2559  001556  0EFD               	movlw	-3
  2560  001558  50E3               	movf	plusw1,w,c
  2561  00155A  6E43               	movwf	btemp,c
  2562  00155C  0EFB               	movlw	-5
  2563  00155E  50E3               	movf	plusw1,w,c
  2564  001560  5E43               	subwf	btemp,f,c
  2565  001562  0EFD               	movlw	-3
  2566  001564  C043  FFE3         	movff	btemp,plusw1
  2567  001568  0EFE               	movlw	-2
  2568  00156A  50E3               	movf	plusw1,w,c
  2569  00156C  6E43               	movwf	btemp,c
  2570  00156E  0EFC               	movlw	-4
  2571  001570  50E3               	movf	plusw1,w,c
  2572  001572  5A43               	subwfb	btemp,f,c
  2573  001574  0EFE               	movlw	-2
  2574  001576  C043  FFE3         	movff	btemp,plusw1
  2575  00157A                     l1778:
  2576                           
  2577                           ;stkvar	_divisor @ sp[(-1)+-4]
  2578  00157A  90D8               	bcf	status,0,c
  2579  00157C  0EFC               	movlw	-4
  2580  00157E  32E3               	rrcf	plusw1,f,c
  2581  001580  0EFB               	movlw	-5
  2582  001582  32E3               	rrcf	plusw1,f,c
  2583                           
  2584                           ;stkvar	_counter @ sp[(-1)+0]
  2585  001584  0EFF               	movlw	-1
  2586  001586  50E3               	movf	plusw1,w,c
  2587  001588  6E43               	movwf	btemp,c
  2588  00158A  0E01               	movlw	1
  2589  00158C  5E43               	subwf	btemp,f,c
  2590  00158E  0EFF               	movlw	-1
  2591  001590  C043  FFE3         	movff	btemp,plusw1
  2592  001594  A4D8               	btfss	status,2,c
  2593  001596  D7CD               	goto	u630
  2594  001598                     u650:
  2595                           
  2596                           ;stkvar	_dividend @ sp[(-1)+-2]
  2597  001598  0EFD               	movlw	-3
  2598  00159A  CFE3 F043          	movff	plusw1,btemp
  2599  00159E  0EFE               	movlw	-2
  2600  0015A0  CFE3 F044          	movff	plusw1,btemp+1
  2601                           
  2602                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2603  0015A4  0EFB               	movlw	251
  2604  0015A6  26E1               	addwf	fsr1l,f,c
  2605  0015A8  0EFF               	movlw	255
  2606  0015AA  22E2               	addwfc	fsr1h,f,c
  2607  0015AC  0012               	return		;funcret
  2608  0015AE                     __end_of___lwmod:
  2609                           	opt callstack 0
  2610                           
  2611 ;; *************** function _config_timer0 *****************
  2612 ;; Defined at:
  2613 ;;		line 23 in file "int0_test.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1  [STACK] void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2627 ;;      Params:         0       0       0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0
  2630 ;;      Totals:         0       0       0       0       0       0       0
  2631 ;;Total ram usage:        0 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:   10
  2634 ;; This function calls:
  2635 ;;		Nothing
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text13
  2642  001A84                     __ptext13:
  2643                           	opt callstack 0
  2644  001A84                     _config_timer0:
  2645                           	opt callstack 20
  2646                           
  2647                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  2648                           
  2649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2650                           ;incstack = 0
  2651  001A84  9AD5               	bcf	4053,5,c	;volatile
  2652                           
  2653                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  2654  001A86  96D5               	bcf	4053,3,c	;volatile
  2655                           
  2656                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  2657  001A88  0E07               	movlw	7
  2658  001A8A  12D5               	iorwf	4053,f,c	;volatile
  2659                           
  2660                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  2661  001A8C  8CF2               	bsf	4082,6,c	;volatile
  2662                           
  2663                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  2664  001A8E  8AF2               	bsf	4082,5,c	;volatile
  2665                           
  2666                           ;int0_test.c: 33:   TMR0L = 252;
  2667  001A90  0EFC               	movlw	252
  2668  001A92  6ED6               	movwf	4054,c	;volatile
  2669                           
  2670                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2671  001A94  0012               	return		;funcret
  2672  001A96                     __end_of_config_timer0:
  2673                           	opt callstack 0
  2674                           
  2675 ;; *************** function _config_INT0 *****************
  2676 ;; Defined at:
  2677 ;;		line 13 in file "int0_test.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1  [STACK] void 
  2684 ;; Registers used:
  2685 ;;		None
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2691 ;;      Params:         0       0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:   10
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;; This function uses a reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text14
  2706  001A96                     __ptext14:
  2707                           	opt callstack 0
  2708  001A96                     _config_INT0:
  2709                           	opt callstack 20
  2710                           
  2711                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2712                           
  2713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2714                           ;incstack = 0
  2715  001A96  9095               	bcf	3989,0,c	;volatile
  2716                           
  2717                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2718  001A98  8EF2               	bsf	4082,7,c	;volatile
  2719                           
  2720                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2721  001A9A  88F2               	bsf	4082,4,c	;volatile
  2722                           
  2723                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2724  001A9C  88F2               	bsf	4082,4,c	;volatile
  2725                           
  2726                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2727  001A9E  92F2               	bcf	4082,1,c	;volatile
  2728                           
  2729                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2730  001AA0  9EF1               	bcf	4081,7,c	;volatile
  2731                           
  2732                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2733  001AA2  9CF1               	bcf	4081,6,c	;volatile
  2734                           
  2735                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2736  001AA4  0012               	return		;funcret
  2737  001AA6                     __end_of_config_INT0:
  2738                           	opt callstack 0
  2739                           
  2740 ;; *************** function _task_idle *****************
  2741 ;; Defined at:
  2742 ;;		line 116 in file "kernel.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1  [STACK] void 
  2749 ;; Registers used:
  2750 ;;		None
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2756 ;;      Params:         0       0       0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0
  2759 ;;      Totals:         0       0       0       0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    3
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_lunos_init
  2767 ;; This function uses a reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text15
  2771  001AAC                     __ptext15:
  2772                           	opt callstack 0
  2773  001AAC                     _task_idle:
  2774                           	opt callstack 23
  2775                           
  2776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2777                           ;incstack = 0
  2778                           ;kernel.c: 118:   while (1) __nop();
  2779  001AAC  F000               	nop	
  2780  001AAE  D7FE               	goto	_task_idle
  2781  001AB0                     __end_of_task_idle:
  2782                           	opt callstack 0
  2783                           
  2784 ;; *************** function _task_0 *****************
  2785 ;; Defined at:
  2786 ;;		line 103 in file "tasks.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1  [STACK] void 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2800 ;;      Params:         0       0       0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0
  2803 ;;      Totals:         0       0       0       0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    9
  2807 ;; This function calls:
  2808 ;;		_lunos_delayTask
  2809 ;;		_pipe_write
  2810 ;; This function is called by:
  2811 ;;		_main
  2812 ;; This function uses a reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text16
  2816  0019CC                     __ptext16:
  2817                           	opt callstack 0
  2818  0019CC                     _task_0:
  2819                           	opt callstack 17
  2820                           
  2821                           ;tasks.c: 105:     pipe_write(&p, 1);
  2822                           
  2823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2824                           ;incstack = 0
  2825                           ;tasks.c: 104:   while(1){
  2826  0019CC  0E01               	movlw	1
  2827  0019CE  6EE6               	movwf	postinc1,c
  2828  0019D0  0E00               	movlw	0
  2829  0019D2  6EE6               	movwf	postinc1,c
  2830  0019D4  0E37               	movlw	low _p
  2831  0019D6  6EE6               	movwf	postinc1,c
  2832  0019D8  0E00               	movlw	high _p
  2833  0019DA  6EE6               	movwf	postinc1,c
  2834  0019DC  EC3F  F007         	call	_pipe_write	;wreg free
  2835                           
  2836                           ;tasks.c: 106:     PORTBbits.RB3 = ~PORTBbits.RB3;
  2837  0019E0  A681               	btfss	3969,3,c	;volatile
  2838  0019E2  D002               	goto	u83_20
  2839  0019E4  0E01               	movlw	1
  2840  0019E6  D001               	goto	u83_26
  2841  0019E8                     u83_20:
  2842  0019E8  0E00               	movlw	0
  2843  0019EA                     u83_26:
  2844  0019EA  0AFF               	xorlw	255
  2845  0019EC  6E4E               	movwf	btemp+11,c
  2846  0019EE  464E               	rlncf	btemp+11,f,c
  2847  0019F0  464E               	rlncf	btemp+11,f,c
  2848  0019F2  464E               	rlncf	btemp+11,f,c
  2849  0019F4  5081               	movf	3969,w,c	;volatile
  2850  0019F6  184E               	xorwf	btemp+11,w,c
  2851  0019F8  0BF7               	andlw	-9
  2852  0019FA  184E               	xorwf	btemp+11,w,c
  2853  0019FC  6E81               	movwf	3969,c	;volatile
  2854                           
  2855                           ;tasks.c: 107:     lunos_delayTask(1000);
  2856  0019FE  0EE8               	movlw	232
  2857  001A00  6EE6               	movwf	postinc1,c
  2858  001A02  0E03               	movlw	3
  2859  001A04  6EE6               	movwf	postinc1,c
  2860  001A06  EC72  F00C         	call	_lunos_delayTask	;wreg free
  2861  001A0A  D7E0               	goto	_task_0
  2862  001A0C                     __end_of_task_0:
  2863                           	opt callstack 0
  2864                           
  2865 ;; *************** function _pipe_write *****************
  2866 ;; Defined at:
  2867 ;;		line 18 in file "pipe.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  p               2  [STACK] PTR struct pipe
  2870 ;;		 -> p(12), 
  2871 ;;  data            2  [STACK] unsigned int 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1  [STACK] void 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2883 ;;      Params:         0       0       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    8
  2890 ;; This function calls:
  2891 ;;		_sem_post
  2892 ;;		_sem_wait
  2893 ;; This function is called by:
  2894 ;;		_task_0
  2895 ;; This function uses a reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text17
  2899  000E7E                     __ptext17:
  2900                           	opt callstack 0
  2901  000E7E                     _pipe_write:
  2902                           	opt callstack 17
  2903                           
  2904                           ;pipe.c: 20:   sem_wait(p->w);
  2905                           ;stkvar	_p @ sp[(0)+-2]
  2906                           
  2907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2908                           ;incstack = 0
  2909  000E7E  0EFE               	movlw	-2
  2910  000E80  CFE3 F04D          	movff	plusw1,btemp+10
  2911  000E84  0EFF               	movlw	-1
  2912  000E86  CFE3 F04E          	movff	plusw1,btemp+11
  2913  000E8A  0E08               	movlw	8
  2914  000E8C  244D               	addwf	btemp+10,w,c
  2915  000E8E  6ED9               	movwf	fsr2l,c
  2916  000E90  0E00               	movlw	0
  2917  000E92  204E               	addwfc	btemp+11,w,c
  2918  000E94  6EDA               	movwf	fsr2h,c
  2919  000E96  CFDE F04D          	movff	postinc2,btemp+10
  2920  000E9A  CFDD F04E          	movff	postdec2,btemp+11
  2921  000E9E  C04D  FFE6         	movff	btemp+10,postinc1
  2922  000EA2  C04E  FFE6         	movff	btemp+11,postinc1
  2923  000EA6  EC3F  F009         	call	_sem_wait	;wreg free
  2924                           
  2925                           ;pipe.c: 21:   p->pipe_data[p->index_write] = data;
  2926                           ;stkvar	_data @ sp[(0)+-4]
  2927  000EAA  50E1               	movf	fsr1l,w,c
  2928  000EAC  0FFC               	addlw	-4
  2929  000EAE  6ED9               	movwf	fsr2l,c
  2930  000EB0  50E2               	movf	fsr1h,w,c
  2931  000EB2  6EDA               	movwf	fsr2h,c
  2932  000EB4  0EFF               	movlw	255
  2933  000EB6  22DA               	addwfc	fsr2h,f,c
  2934                           
  2935                           ;stkvar	_p @ sp[(0)+-2]
  2936  000EB8  0EFE               	movlw	-2
  2937  000EBA  CFE3 F04D          	movff	plusw1,btemp+10
  2938  000EBE  0EFF               	movlw	-1
  2939  000EC0  CFE3 F04E          	movff	plusw1,btemp+11
  2940  000EC4  0E04               	movlw	4
  2941  000EC6  244D               	addwf	btemp+10,w,c
  2942  000EC8  6EE9               	movwf	fsr0l,c
  2943  000ECA  0E00               	movlw	0
  2944  000ECC  204E               	addwfc	btemp+11,w,c
  2945  000ECE  6EEA               	movwf	fsr0h,c
  2946  000ED0  CFEE F04D          	movff	postinc0,btemp+10
  2947  000ED4  CFED F04E          	movff	postdec0,btemp+11
  2948  000ED8  90D8               	bcf	status,0,c
  2949  000EDA  344D               	rlcf	btemp+10,w,c
  2950  000EDC  6E4B               	movwf	btemp+8,c
  2951  000EDE  344E               	rlcf	btemp+11,w,c
  2952  000EE0  6E4C               	movwf	btemp+9,c
  2953                           
  2954                           ;stkvar	_p @ sp[(0)+-2]
  2955  000EE2  0EFE               	movlw	-2
  2956  000EE4  CFE3 F04D          	movff	plusw1,btemp+10
  2957  000EE8  0EFF               	movlw	-1
  2958  000EEA  CFE3 F04E          	movff	plusw1,btemp+11
  2959  000EEE  504B               	movf	btemp+8,w,c
  2960  000EF0  244D               	addwf	btemp+10,w,c
  2961  000EF2  6EE9               	movwf	fsr0l,c
  2962  000EF4  504C               	movf	btemp+9,w,c
  2963  000EF6  204E               	addwfc	btemp+11,w,c
  2964  000EF8  6EEA               	movwf	fsr0h,c
  2965  000EFA  CFDE FFEE          	movff	postinc2,postinc0
  2966  000EFE  CFDD FFED          	movff	postdec2,postdec0
  2967                           
  2968                           ;pipe.c: 22:   p->index_write = (p->index_write + 1) % 2;
  2969                           ;stkvar	_p @ sp[(0)+-2]
  2970  000F02  0EFE               	movlw	-2
  2971  000F04  CFE3 F04D          	movff	plusw1,btemp+10
  2972  000F08  0EFF               	movlw	-1
  2973  000F0A  CFE3 F04E          	movff	plusw1,btemp+11
  2974  000F0E  0E04               	movlw	4
  2975  000F10  244D               	addwf	btemp+10,w,c
  2976  000F12  6ED9               	movwf	fsr2l,c
  2977  000F14  0E00               	movlw	0
  2978  000F16  204E               	addwfc	btemp+11,w,c
  2979  000F18  6EDA               	movwf	fsr2h,c
  2980  000F1A  CFDE F04D          	movff	postinc2,btemp+10
  2981  000F1E  CFDD F04E          	movff	postdec2,btemp+11
  2982  000F22  0E01               	movlw	1
  2983  000F24  264D               	addwf	btemp+10,f,c
  2984  000F26  0E00               	movlw	0
  2985  000F28  224E               	addwfc	btemp+11,f,c
  2986  000F2A  0E01               	movlw	1
  2987  000F2C  164D               	andwf	btemp+10,f,c
  2988  000F2E  0E00               	movlw	0
  2989  000F30  164E               	andwf	btemp+11,f,c
  2990                           
  2991                           ;stkvar	_p @ sp[(0)+-2]
  2992  000F32  0EFE               	movlw	-2
  2993  000F34  CFE3 F04B          	movff	plusw1,btemp+8
  2994  000F38  0EFF               	movlw	-1
  2995  000F3A  CFE3 F04C          	movff	plusw1,btemp+9
  2996  000F3E  0E04               	movlw	4
  2997  000F40  244B               	addwf	btemp+8,w,c
  2998  000F42  6ED9               	movwf	fsr2l,c
  2999  000F44  0E00               	movlw	0
  3000  000F46  204C               	addwfc	btemp+9,w,c
  3001  000F48  6EDA               	movwf	fsr2h,c
  3002  000F4A  C04D  FFDE         	movff	btemp+10,postinc2
  3003  000F4E  C04E  FFDD         	movff	btemp+11,postdec2
  3004                           
  3005                           ;pipe.c: 23:   sem_post(p->r);
  3006                           ;stkvar	_p @ sp[(0)+-2]
  3007  000F52  0EFE               	movlw	-2
  3008  000F54  CFE3 F04D          	movff	plusw1,btemp+10
  3009  000F58  0EFF               	movlw	-1
  3010  000F5A  CFE3 F04E          	movff	plusw1,btemp+11
  3011  000F5E  0E0A               	movlw	10
  3012  000F60  244D               	addwf	btemp+10,w,c
  3013  000F62  6ED9               	movwf	fsr2l,c
  3014  000F64  0E00               	movlw	0
  3015  000F66  204E               	addwfc	btemp+11,w,c
  3016  000F68  6EDA               	movwf	fsr2h,c
  3017  000F6A  CFDE F04D          	movff	postinc2,btemp+10
  3018  000F6E  CFDD F04E          	movff	postdec2,btemp+11
  3019  000F72  C04D  FFE6         	movff	btemp+10,postinc1
  3020  000F76  C04E  FFE6         	movff	btemp+11,postinc1
  3021  000F7A  ECC4  F008         	call	_sem_post	;wreg free
  3022                           
  3023                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  3024  000F7E  52E5               	movf	postdec1,f,c
  3025  000F80  52E5               	movf	postdec1,f,c
  3026  000F82  52E5               	movf	postdec1,f,c
  3027  000F84  52E5               	movf	postdec1,f,c
  3028  000F86  0012               	return		;funcret
  3029  000F88                     __end_of_pipe_write:
  3030                           	opt callstack 0
  3031                           
  3032 ;; *************** function _sem_wait *****************
  3033 ;; Defined at:
  3034 ;;		line 20 in file "semaphore.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  s               2  [STACK] PTR struct semaphore
  3037 ;;		 -> r_pipe(14), w_pipe(14), teste_2(14), teste_1(14), 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1  [STACK] void 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3049 ;;      Params:         0       0       0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0
  3052 ;;      Totals:         0       0       0       0       0       0       0
  3053 ;;Total ram usage:        0 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    7
  3056 ;; This function calls:
  3057 ;;		_dispatcher
  3058 ;; This function is called by:
  3059 ;;		_pipe_write
  3060 ;;		_pipe_read
  3061 ;;		_task_bozo
  3062 ;;		_task_xuxa
  3063 ;; This function uses a reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text18
  3067  00127E                     __ptext18:
  3068                           	opt callstack 0
  3069  00127E                     _sem_wait:
  3070                           	opt callstack 18
  3071                           
  3072                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  3073                           
  3074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3075                           ;incstack = 0
  3076  00127E  9EF2               	bcf	4082,7,c	;volatile
  3077                           
  3078                           ;semaphore.c: 22:   s->contador -= 1;
  3079                           ;stkvar	_s @ sp[(0)+-2]
  3080  001280  0EFE               	movlw	-2
  3081  001282  CFE3 FFD9          	movff	plusw1,fsr2l
  3082  001286  0EFF               	movlw	-1
  3083  001288  CFE3 FFDA          	movff	plusw1,fsr2h
  3084  00128C  06DE               	decf	postinc2,f,c
  3085  00128E  0E00               	movlw	0
  3086  001290  5ADD               	subwfb	postdec2,f,c
  3087                           
  3088                           ;semaphore.c: 23:   if (s->contador < 0) {
  3089                           ;stkvar	_s @ sp[(0)+-2]
  3090  001292  0EFE               	movlw	-2
  3091  001294  CFE3 FFD9          	movff	plusw1,fsr2l
  3092  001298  0EFF               	movlw	-1
  3093  00129A  CFE3 FFDA          	movff	plusw1,fsr2h
  3094  00129E  0E01               	movlw	1
  3095  0012A0  AEDB               	btfss	plusw2,7,c
  3096  0012A2  D05D               	goto	l1864
  3097                           
  3098                           ;semaphore.c: 24:     s->contador = 0;
  3099                           ;stkvar	_s @ sp[(0)+-2]
  3100  0012A4  0EFE               	movlw	-2
  3101  0012A6  CFE3 FFD9          	movff	plusw1,fsr2l
  3102  0012AA  0EFF               	movlw	-1
  3103  0012AC  CFE3 FFDA          	movff	plusw1,fsr2h
  3104  0012B0  0E00               	movlw	0
  3105  0012B2  6EDE               	movwf	postinc2,c
  3106  0012B4  0E00               	movlw	0
  3107  0012B6  6EDD               	movwf	postdec2,c
  3108                           
  3109                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  3110  0012B8  EE22  F0AC         	lfsr	2,_ready_queue+542
  3111                           
  3112                           ;stkvar	_s @ sp[(0)+-2]
  3113  0012BC  0EFE               	movlw	-2
  3114  0012BE  CFE3 F04D          	movff	plusw1,btemp+10
  3115  0012C2  0EFF               	movlw	-1
  3116  0012C4  CFE3 F04E          	movff	plusw1,btemp+11
  3117  0012C8  0E0A               	movlw	10
  3118  0012CA  244D               	addwf	btemp+10,w,c
  3119  0012CC  6EE9               	movwf	fsr0l,c
  3120  0012CE  0E00               	movlw	0
  3121  0012D0  204E               	addwfc	btemp+11,w,c
  3122  0012D2  6EEA               	movwf	fsr0h,c
  3123  0012D4  CFEE F04D          	movff	postinc0,btemp+10
  3124  0012D8  CFED F04E          	movff	postdec0,btemp+11
  3125  0012DC  90D8               	bcf	status,0,c
  3126  0012DE  344D               	rlcf	btemp+10,w,c
  3127  0012E0  6E4B               	movwf	btemp+8,c
  3128  0012E2  344E               	rlcf	btemp+11,w,c
  3129  0012E4  6E4C               	movwf	btemp+9,c
  3130                           
  3131                           ;stkvar	_s @ sp[(0)+-2]
  3132  0012E6  0EFE               	movlw	-2
  3133  0012E8  50E3               	movf	plusw1,w,c
  3134  0012EA  264B               	addwf	btemp+8,f,c
  3135  0012EC  0EFF               	movlw	-1
  3136  0012EE  50E3               	movf	plusw1,w,c
  3137  0012F0  224C               	addwfc	btemp+9,f,c
  3138  0012F2  0E02               	movlw	2
  3139  0012F4  244B               	addwf	btemp+8,w,c
  3140  0012F6  6EE9               	movwf	fsr0l,c
  3141  0012F8  0E00               	movlw	0
  3142  0012FA  204C               	addwfc	btemp+9,w,c
  3143  0012FC  6EEA               	movwf	fsr0h,c
  3144  0012FE  CFDE FFEE          	movff	postinc2,postinc0
  3145  001302  CFDD FFED          	movff	postdec2,postdec0
  3146                           
  3147                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 4;
  3148                           ;stkvar	_s @ sp[(0)+-2]
  3149  001306  0EFE               	movlw	-2
  3150  001308  CFE3 F04D          	movff	plusw1,btemp+10
  3151  00130C  0EFF               	movlw	-1
  3152  00130E  CFE3 F04E          	movff	plusw1,btemp+11
  3153  001312  0E0A               	movlw	10
  3154  001314  244D               	addwf	btemp+10,w,c
  3155  001316  6ED9               	movwf	fsr2l,c
  3156  001318  0E00               	movlw	0
  3157  00131A  204E               	addwfc	btemp+11,w,c
  3158  00131C  6EDA               	movwf	fsr2h,c
  3159  00131E  CFDE F04D          	movff	postinc2,btemp+10
  3160  001322  CFDD F04E          	movff	postdec2,btemp+11
  3161  001326  0E01               	movlw	1
  3162  001328  264D               	addwf	btemp+10,f,c
  3163  00132A  0E00               	movlw	0
  3164  00132C  224E               	addwfc	btemp+11,f,c
  3165  00132E  0E03               	movlw	3
  3166  001330  164D               	andwf	btemp+10,f,c
  3167  001332  0E00               	movlw	0
  3168  001334  164E               	andwf	btemp+11,f,c
  3169                           
  3170                           ;stkvar	_s @ sp[(0)+-2]
  3171  001336  0EFE               	movlw	-2
  3172  001338  CFE3 F04B          	movff	plusw1,btemp+8
  3173  00133C  0EFF               	movlw	-1
  3174  00133E  CFE3 F04C          	movff	plusw1,btemp+9
  3175  001342  0E0A               	movlw	10
  3176  001344  244B               	addwf	btemp+8,w,c
  3177  001346  6ED9               	movwf	fsr2l,c
  3178  001348  0E00               	movlw	0
  3179  00134A  204C               	addwfc	btemp+9,w,c
  3180  00134C  6EDA               	movwf	fsr2h,c
  3181  00134E  C04D  FFDE         	movff	btemp+10,postinc2
  3182  001352  C04E  FFDD         	movff	btemp+11,postdec2
  3183                           
  3184                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  3185  001356  0E05               	movlw	5
  3186  001358  6EE6               	movwf	postinc1,c
  3187  00135A  EC66  F002         	call	_dispatcher	;wreg free
  3188  00135E                     l1864:
  3189                           
  3190                           ;semaphore.c: 29:   INTCONbits.GIE = 1;
  3191  00135E  8EF2               	bsf	4082,7,c	;volatile
  3192                           
  3193                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3194  001360  52E5               	movf	postdec1,f,c
  3195  001362  52E5               	movf	postdec1,f,c
  3196  001364  0012               	return		;funcret
  3197  001366                     __end_of_sem_wait:
  3198                           	opt callstack 0
  3199                           
  3200 ;; *************** function _sem_post *****************
  3201 ;; Defined at:
  3202 ;;		line 32 in file "semaphore.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  s               2  [STACK] PTR struct semaphore
  3205 ;;		 -> r_pipe(14), w_pipe(14), teste_2(14), teste_1(14), 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1  [STACK] void 
  3210 ;; Registers used:
  3211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3217 ;;      Params:         0       0       0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0
  3220 ;;      Totals:         0       0       0       0       0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    3
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_pipe_write
  3228 ;;		_pipe_read
  3229 ;;		_task_bozo
  3230 ;;		_task_xuxa
  3231 ;; This function uses a reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text19
  3235  001188                     __ptext19:
  3236                           	opt callstack 0
  3237  001188                     _sem_post:
  3238                           	opt callstack 22
  3239                           
  3240                           ;semaphore.c: 33:   INTCONbits.GIE = 0;
  3241                           
  3242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3243                           ;incstack = 0
  3244  001188  9EF2               	bcf	4082,7,c	;volatile
  3245                           
  3246                           ;semaphore.c: 34:   s->contador += 1;
  3247                           ;stkvar	_s @ sp[(0)+-2]
  3248  00118A  0EFE               	movlw	-2
  3249  00118C  CFE3 FFD9          	movff	plusw1,fsr2l
  3250  001190  0EFF               	movlw	-1
  3251  001192  CFE3 FFDA          	movff	plusw1,fsr2h
  3252  001196  2ADE               	incf	postinc2,f,c
  3253  001198  0E00               	movlw	0
  3254  00119A  22DD               	addwfc	postdec2,f,c
  3255                           
  3256                           ;semaphore.c: 35:   if (s->contador > 0) {
  3257                           ;stkvar	_s @ sp[(0)+-2]
  3258  00119C  0EFE               	movlw	-2
  3259  00119E  CFE3 FFD9          	movff	plusw1,fsr2l
  3260  0011A2  0EFF               	movlw	-1
  3261  0011A4  CFE3 FFDA          	movff	plusw1,fsr2h
  3262  0011A8  0E01               	movlw	1
  3263  0011AA  BEDB               	btfsc	plusw2,7,c
  3264  0011AC  D064               	goto	l1876
  3265  0011AE  0E01               	movlw	1
  3266  0011B0  50DB               	movf	plusw2,w,c
  3267  0011B2  E103               	bnz	u71_20
  3268  0011B4  04DE               	decf	postinc2,w,c
  3269  0011B6  A0D8               	btfss	status,0,c
  3270  0011B8  D05E               	goto	l1876
  3271  0011BA                     u71_20:
  3272                           
  3273                           ;semaphore.c: 36:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  3274                           ;stkvar	_s @ sp[(0)+-2]
  3275  0011BA  0EFE               	movlw	-2
  3276  0011BC  CFE3 F04D          	movff	plusw1,btemp+10
  3277  0011C0  0EFF               	movlw	-1
  3278  0011C2  CFE3 F04E          	movff	plusw1,btemp+11
  3279  0011C6  0E0C               	movlw	12
  3280  0011C8  244D               	addwf	btemp+10,w,c
  3281  0011CA  6ED9               	movwf	fsr2l,c
  3282  0011CC  0E00               	movlw	0
  3283  0011CE  204E               	addwfc	btemp+11,w,c
  3284  0011D0  6EDA               	movwf	fsr2h,c
  3285  0011D2  CFDE F04D          	movff	postinc2,btemp+10
  3286  0011D6  CFDD F04E          	movff	postdec2,btemp+11
  3287  0011DA  90D8               	bcf	status,0,c
  3288  0011DC  344D               	rlcf	btemp+10,w,c
  3289  0011DE  6E4B               	movwf	btemp+8,c
  3290  0011E0  344E               	rlcf	btemp+11,w,c
  3291  0011E2  6E4C               	movwf	btemp+9,c
  3292                           
  3293                           ;stkvar	_s @ sp[(0)+-2]
  3294  0011E4  0EFE               	movlw	-2
  3295  0011E6  50E3               	movf	plusw1,w,c
  3296  0011E8  264B               	addwf	btemp+8,f,c
  3297  0011EA  0EFF               	movlw	-1
  3298  0011EC  50E3               	movf	plusw1,w,c
  3299  0011EE  224C               	addwfc	btemp+9,f,c
  3300  0011F0  0E02               	movlw	2
  3301  0011F2  244B               	addwf	btemp+8,w,c
  3302  0011F4  6ED9               	movwf	fsr2l,c
  3303  0011F6  0E00               	movlw	0
  3304  0011F8  204C               	addwfc	btemp+9,w,c
  3305  0011FA  6EDA               	movwf	fsr2h,c
  3306  0011FC  CFDE F04D          	movff	postinc2,btemp+10
  3307  001200  CFDD F04E          	movff	postdec2,btemp+11
  3308  001204  0E6C               	movlw	108
  3309  001206  024D               	mulwf	btemp+10,c
  3310  001208  CFF3 F04B          	movff	prodl,btemp+8
  3311  00120C  CFF4 F04C          	movff	prodh,btemp+9
  3312  001210  024E               	mulwf	btemp+11,c
  3313  001212  50F3               	movf	prodl,w,c
  3314  001214  264C               	addwf	btemp+9,f,c
  3315  001216  0E96               	movlw	low (_ready_queue+8)
  3316  001218  244B               	addwf	btemp+8,w,c
  3317  00121A  6ED9               	movwf	fsr2l,c
  3318  00121C  0E00               	movlw	high (_ready_queue+8)
  3319  00121E  204C               	addwfc	btemp+9,w,c
  3320  001220  6EDA               	movwf	fsr2h,c
  3321  001222  0E00               	movlw	0
  3322  001224  6EDF               	movwf	indf2,c
  3323                           
  3324                           ;semaphore.c: 37:     s->task_to_ready = (s->task_to_ready + 1) % 4;
  3325                           ;stkvar	_s @ sp[(0)+-2]
  3326  001226  0EFE               	movlw	-2
  3327  001228  CFE3 F04D          	movff	plusw1,btemp+10
  3328  00122C  0EFF               	movlw	-1
  3329  00122E  CFE3 F04E          	movff	plusw1,btemp+11
  3330  001232  0E0C               	movlw	12
  3331  001234  244D               	addwf	btemp+10,w,c
  3332  001236  6ED9               	movwf	fsr2l,c
  3333  001238  0E00               	movlw	0
  3334  00123A  204E               	addwfc	btemp+11,w,c
  3335  00123C  6EDA               	movwf	fsr2h,c
  3336  00123E  CFDE F04D          	movff	postinc2,btemp+10
  3337  001242  CFDD F04E          	movff	postdec2,btemp+11
  3338  001246  0E01               	movlw	1
  3339  001248  264D               	addwf	btemp+10,f,c
  3340  00124A  0E00               	movlw	0
  3341  00124C  224E               	addwfc	btemp+11,f,c
  3342  00124E  0E03               	movlw	3
  3343  001250  164D               	andwf	btemp+10,f,c
  3344  001252  0E00               	movlw	0
  3345  001254  164E               	andwf	btemp+11,f,c
  3346                           
  3347                           ;stkvar	_s @ sp[(0)+-2]
  3348  001256  0EFE               	movlw	-2
  3349  001258  CFE3 F04B          	movff	plusw1,btemp+8
  3350  00125C  0EFF               	movlw	-1
  3351  00125E  CFE3 F04C          	movff	plusw1,btemp+9
  3352  001262  0E0C               	movlw	12
  3353  001264  244B               	addwf	btemp+8,w,c
  3354  001266  6ED9               	movwf	fsr2l,c
  3355  001268  0E00               	movlw	0
  3356  00126A  204C               	addwfc	btemp+9,w,c
  3357  00126C  6EDA               	movwf	fsr2h,c
  3358  00126E  C04D  FFDE         	movff	btemp+10,postinc2
  3359  001272  C04E  FFDD         	movff	btemp+11,postdec2
  3360  001276                     l1876:
  3361                           
  3362                           ;semaphore.c: 40:   INTCONbits.GIE = 1;
  3363  001276  8EF2               	bsf	4082,7,c	;volatile
  3364                           
  3365                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3366  001278  52E5               	movf	postdec1,f,c
  3367  00127A  52E5               	movf	postdec1,f,c
  3368  00127C  0012               	return		;funcret
  3369  00127E                     __end_of_sem_post:
  3370                           	opt callstack 0
  3371                           
  3372 ;; *************** function _lunos_delayTask *****************
  3373 ;; Defined at:
  3374 ;;		line 29 in file "kernel.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  time            2  [STACK] unsigned int 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1  [STACK] void 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3388 ;;      Params:         0       0       0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0
  3391 ;;      Totals:         0       0       0       0       0       0       0
  3392 ;;Total ram usage:        0 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    7
  3395 ;; This function calls:
  3396 ;;		_dispatcher
  3397 ;; This function is called by:
  3398 ;;		_count_bottles
  3399 ;;		_fill_bottle
  3400 ;;		_task_0
  3401 ;;		_task_1
  3402 ;;		_task_2
  3403 ;;		_task_xuxa
  3404 ;; This function uses a reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text20
  3408  0018E4                     __ptext20:
  3409                           	opt callstack 0
  3410  0018E4                     _lunos_delayTask:
  3411                           	opt callstack 18
  3412                           
  3413                           ;kernel.c: 30:   INTCONbits.GIE = 0;
  3414                           
  3415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3416                           ;incstack = 0
  3417  0018E4  9EF2               	bcf	4082,7,c	;volatile
  3418                           
  3419                           ;kernel.c: 32:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  3420                           ;stkvar	_time @ sp[(0)+-2]
  3421  0018E6  50E1               	movf	fsr1l,w,c
  3422  0018E8  0FFE               	addlw	-2
  3423  0018EA  6ED9               	movwf	fsr2l,c
  3424  0018EC  50E2               	movf	fsr1h,w,c
  3425  0018EE  6EDA               	movwf	fsr2h,c
  3426  0018F0  0EFF               	movlw	255
  3427  0018F2  22DA               	addwfc	fsr2h,f,c
  3428  0018F4  EE02  F0AC         	lfsr	0,_ready_queue+542
  3429  0018F8  CFEE F04D          	movff	postinc0,btemp+10
  3430  0018FC  CFED F04E          	movff	postdec0,btemp+11
  3431  001900  0E6C               	movlw	108
  3432  001902  024D               	mulwf	btemp+10,c
  3433  001904  CFF3 F04B          	movff	prodl,btemp+8
  3434  001908  CFF4 F04C          	movff	prodh,btemp+9
  3435  00190C  024E               	mulwf	btemp+11,c
  3436  00190E  50F3               	movf	prodl,w,c
  3437  001910  264C               	addwf	btemp+9,f,c
  3438  001912  0EF8               	movlw	low (_ready_queue+106)
  3439  001914  244B               	addwf	btemp+8,w,c
  3440  001916  6EE9               	movwf	fsr0l,c
  3441  001918  0E00               	movlw	high (_ready_queue+106)
  3442  00191A  204C               	addwfc	btemp+9,w,c
  3443  00191C  6EEA               	movwf	fsr0h,c
  3444  00191E  CFDE FFEE          	movff	postinc2,postinc0
  3445  001922  CFDD FFED          	movff	postdec2,postdec0
  3446                           
  3447                           ;kernel.c: 33:   dispatcher(WAITING);
  3448  001926  0E02               	movlw	2
  3449  001928  6EE6               	movwf	postinc1,c
  3450  00192A  EC66  F002         	call	_dispatcher	;wreg free
  3451                           
  3452                           ;kernel.c: 35:   INTCONbits.GIE = 1;
  3453  00192E  8EF2               	bsf	4082,7,c	;volatile
  3454                           
  3455                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3456  001930  52E5               	movf	postdec1,f,c
  3457  001932  52E5               	movf	postdec1,f,c
  3458  001934  0012               	return		;funcret
  3459  001936                     __end_of_lunos_delayTask:
  3460                           	opt callstack 0
  3461                           
  3462 ;; *************** function _task_1 *****************
  3463 ;; Defined at:
  3464 ;;		line 112 in file "tasks.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  dado            2  [STACK] unsigned int 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1  [STACK] void 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3478 ;;      Params:         0       0       0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0
  3481 ;;      Totals:         0       0       0       0       0       0       0
  3482 ;;Total ram usage:        0 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    9
  3485 ;; This function calls:
  3486 ;;		_lunos_delayTask
  3487 ;;		_pipe_read
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;; This function uses a reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text21
  3494  001936                     __ptext21:
  3495                           	opt callstack 0
  3496  001936                     _task_1:
  3497                           	opt callstack 0
  3498                           
  3499                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3500  001936  52E6               	movf	postinc1,f,c
  3501  001938  52E6               	movf	postinc1,f,c
  3502  00193A                     l337:
  3503                           
  3504                           ;tasks.c: 115:     pipe_read(&p, &dado);
  3505                           ;stkvar	_dado @ sp[(-2)+0]
  3506  00193A  0EFE               	movlw	254
  3507  00193C  24E1               	addwf	fsr1l,w,c
  3508  00193E  6E43               	movwf	btemp,c
  3509  001940  0EFF               	movlw	255
  3510  001942  20E2               	addwfc	fsr1h,w,c
  3511  001944  6E44               	movwf	btemp+1,c
  3512  001946  C043  FFE6         	movff	btemp,postinc1
  3513  00194A  C044  FFE6         	movff	btemp+1,postinc1
  3514  00194E  0E37               	movlw	low _p
  3515  001950  6EE6               	movwf	postinc1,c
  3516  001952  0E00               	movlw	high _p
  3517  001954  6EE6               	movwf	postinc1,c
  3518  001956  ECC4  F007         	call	_pipe_read	;wreg free
  3519                           
  3520                           ;tasks.c: 116:     PORTBbits.RB4 = ~PORTBbits.RB4;
  3521  00195A  A881               	btfss	3969,4,c	;volatile
  3522  00195C  D002               	goto	u84_20
  3523  00195E  0E01               	movlw	1
  3524  001960  D001               	goto	u84_26
  3525  001962                     u84_20:
  3526  001962  0E00               	movlw	0
  3527  001964                     u84_26:
  3528  001964  0AFF               	xorlw	255
  3529  001966  6E4E               	movwf	btemp+11,c
  3530  001968  3A4E               	swapf	btemp+11,f,c
  3531  00196A  5081               	movf	3969,w,c	;volatile
  3532  00196C  184E               	xorwf	btemp+11,w,c
  3533  00196E  0BEF               	andlw	-17
  3534  001970  184E               	xorwf	btemp+11,w,c
  3535  001972  6E81               	movwf	3969,c	;volatile
  3536                           
  3537                           ;tasks.c: 117:     lunos_delayTask(2000);
  3538  001974  0ED0               	movlw	208
  3539  001976  6EE6               	movwf	postinc1,c
  3540  001978  0E07               	movlw	7
  3541  00197A  6EE6               	movwf	postinc1,c
  3542  00197C  EC72  F00C         	call	_lunos_delayTask	;wreg free
  3543  001980  D7DC               	goto	l337
  3544  001982                     __end_of_task_1:
  3545                           	opt callstack 0
  3546                           
  3547 ;; *************** function _pipe_read *****************
  3548 ;; Defined at:
  3549 ;;		line 27 in file "pipe.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  p               2  [STACK] PTR struct pipe
  3552 ;;		 -> p(12), 
  3553 ;;  data            2  [STACK] PTR unsigned int 
  3554 ;;		 -> dado(2), 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1  [STACK] void 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3566 ;;      Params:         0       0       0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    8
  3573 ;; This function calls:
  3574 ;;		_sem_post
  3575 ;;		_sem_wait
  3576 ;; This function is called by:
  3577 ;;		_task_1
  3578 ;; This function uses a reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text22
  3582  000F88                     __ptext22:
  3583                           	opt callstack 0
  3584  000F88                     _pipe_read:
  3585                           	opt callstack 17
  3586                           
  3587                           ;pipe.c: 29:   sem_wait(p->r);
  3588                           ;stkvar	_p @ sp[(0)+-2]
  3589                           
  3590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3591                           ;incstack = 0
  3592  000F88  0EFE               	movlw	-2
  3593  000F8A  CFE3 F04D          	movff	plusw1,btemp+10
  3594  000F8E  0EFF               	movlw	-1
  3595  000F90  CFE3 F04E          	movff	plusw1,btemp+11
  3596  000F94  0E0A               	movlw	10
  3597  000F96  244D               	addwf	btemp+10,w,c
  3598  000F98  6ED9               	movwf	fsr2l,c
  3599  000F9A  0E00               	movlw	0
  3600  000F9C  204E               	addwfc	btemp+11,w,c
  3601  000F9E  6EDA               	movwf	fsr2h,c
  3602  000FA0  CFDE F04D          	movff	postinc2,btemp+10
  3603  000FA4  CFDD F04E          	movff	postdec2,btemp+11
  3604  000FA8  C04D  FFE6         	movff	btemp+10,postinc1
  3605  000FAC  C04E  FFE6         	movff	btemp+11,postinc1
  3606  000FB0  EC3F  F009         	call	_sem_wait	;wreg free
  3607                           
  3608                           ;pipe.c: 30:   *data = p->pipe_data[p->index_read];
  3609                           ;stkvar	_p @ sp[(0)+-2]
  3610  000FB4  0EFE               	movlw	-2
  3611  000FB6  CFE3 F04D          	movff	plusw1,btemp+10
  3612  000FBA  0EFF               	movlw	-1
  3613  000FBC  CFE3 F04E          	movff	plusw1,btemp+11
  3614  000FC0  0E06               	movlw	6
  3615  000FC2  244D               	addwf	btemp+10,w,c
  3616  000FC4  6ED9               	movwf	fsr2l,c
  3617  000FC6  0E00               	movlw	0
  3618  000FC8  204E               	addwfc	btemp+11,w,c
  3619  000FCA  6EDA               	movwf	fsr2h,c
  3620  000FCC  CFDE F04D          	movff	postinc2,btemp+10
  3621  000FD0  CFDD F04E          	movff	postdec2,btemp+11
  3622  000FD4  90D8               	bcf	status,0,c
  3623  000FD6  344D               	rlcf	btemp+10,w,c
  3624  000FD8  6E4B               	movwf	btemp+8,c
  3625  000FDA  344E               	rlcf	btemp+11,w,c
  3626  000FDC  6E4C               	movwf	btemp+9,c
  3627                           
  3628                           ;stkvar	_p @ sp[(0)+-2]
  3629  000FDE  0EFE               	movlw	-2
  3630  000FE0  CFE3 F04D          	movff	plusw1,btemp+10
  3631  000FE4  0EFF               	movlw	-1
  3632  000FE6  CFE3 F04E          	movff	plusw1,btemp+11
  3633  000FEA  504B               	movf	btemp+8,w,c
  3634  000FEC  244D               	addwf	btemp+10,w,c
  3635  000FEE  6ED9               	movwf	fsr2l,c
  3636  000FF0  504C               	movf	btemp+9,w,c
  3637  000FF2  204E               	addwfc	btemp+11,w,c
  3638  000FF4  6EDA               	movwf	fsr2h,c
  3639                           
  3640                           ;stkvar	_data @ sp[(0)+-4]
  3641  000FF6  0EFC               	movlw	-4
  3642  000FF8  CFE3 FFE9          	movff	plusw1,fsr0l
  3643  000FFC  0EFD               	movlw	-3
  3644  000FFE  CFE3 FFEA          	movff	plusw1,fsr0h
  3645  001002  CFDE FFEE          	movff	postinc2,postinc0
  3646  001006  CFDD FFED          	movff	postdec2,postdec0
  3647                           
  3648                           ;pipe.c: 31:   p->index_read = (p->index_read + 1) % 2;
  3649                           ;stkvar	_p @ sp[(0)+-2]
  3650  00100A  0EFE               	movlw	-2
  3651  00100C  CFE3 F04D          	movff	plusw1,btemp+10
  3652  001010  0EFF               	movlw	-1
  3653  001012  CFE3 F04E          	movff	plusw1,btemp+11
  3654  001016  0E06               	movlw	6
  3655  001018  244D               	addwf	btemp+10,w,c
  3656  00101A  6ED9               	movwf	fsr2l,c
  3657  00101C  0E00               	movlw	0
  3658  00101E  204E               	addwfc	btemp+11,w,c
  3659  001020  6EDA               	movwf	fsr2h,c
  3660  001022  CFDE F04D          	movff	postinc2,btemp+10
  3661  001026  CFDD F04E          	movff	postdec2,btemp+11
  3662  00102A  0E01               	movlw	1
  3663  00102C  264D               	addwf	btemp+10,f,c
  3664  00102E  0E00               	movlw	0
  3665  001030  224E               	addwfc	btemp+11,f,c
  3666  001032  0E01               	movlw	1
  3667  001034  164D               	andwf	btemp+10,f,c
  3668  001036  0E00               	movlw	0
  3669  001038  164E               	andwf	btemp+11,f,c
  3670                           
  3671                           ;stkvar	_p @ sp[(0)+-2]
  3672  00103A  0EFE               	movlw	-2
  3673  00103C  CFE3 F04B          	movff	plusw1,btemp+8
  3674  001040  0EFF               	movlw	-1
  3675  001042  CFE3 F04C          	movff	plusw1,btemp+9
  3676  001046  0E06               	movlw	6
  3677  001048  244B               	addwf	btemp+8,w,c
  3678  00104A  6ED9               	movwf	fsr2l,c
  3679  00104C  0E00               	movlw	0
  3680  00104E  204C               	addwfc	btemp+9,w,c
  3681  001050  6EDA               	movwf	fsr2h,c
  3682  001052  C04D  FFDE         	movff	btemp+10,postinc2
  3683  001056  C04E  FFDD         	movff	btemp+11,postdec2
  3684                           
  3685                           ;pipe.c: 32:   sem_post(p->w);
  3686                           ;stkvar	_p @ sp[(0)+-2]
  3687  00105A  0EFE               	movlw	-2
  3688  00105C  CFE3 F04D          	movff	plusw1,btemp+10
  3689  001060  0EFF               	movlw	-1
  3690  001062  CFE3 F04E          	movff	plusw1,btemp+11
  3691  001066  0E08               	movlw	8
  3692  001068  244D               	addwf	btemp+10,w,c
  3693  00106A  6ED9               	movwf	fsr2l,c
  3694  00106C  0E00               	movlw	0
  3695  00106E  204E               	addwfc	btemp+11,w,c
  3696  001070  6EDA               	movwf	fsr2h,c
  3697  001072  CFDE F04D          	movff	postinc2,btemp+10
  3698  001076  CFDD F04E          	movff	postdec2,btemp+11
  3699  00107A  C04D  FFE6         	movff	btemp+10,postinc1
  3700  00107E  C04E  FFE6         	movff	btemp+11,postinc1
  3701  001082  ECC4  F008         	call	_sem_post	;wreg free
  3702                           
  3703                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3704  001086  52E5               	movf	postdec1,f,c
  3705  001088  52E5               	movf	postdec1,f,c
  3706  00108A  52E5               	movf	postdec1,f,c
  3707  00108C  52E5               	movf	postdec1,f,c
  3708  00108E  0012               	return		;funcret
  3709  001090                     __end_of_pipe_read:
  3710                           	opt callstack 0
  3711                           
  3712 ;; *************** function _count_bottles *****************
  3713 ;; Defined at:
  3714 ;;		line 36 in file "tasks.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  bottle          1  [STACK] struct .
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1  [STACK] void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3728 ;;      Params:         0       0       0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0
  3731 ;;      Totals:         0       0       0       0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    8
  3735 ;; This function calls:
  3736 ;;		_lunos_delayTask
  3737 ;; This function is called by:
  3738 ;;		_main
  3739 ;; This function uses a reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text23
  3743  00182C                     __ptext23:
  3744                           	opt callstack 0
  3745  00182C                     _count_bottles:
  3746                           	opt callstack 0
  3747                           
  3748                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3749  00182C  52E6               	movf	postinc1,f,c
  3750                           
  3751                           ;tasks.c: 37:     while(global_buffer.count < 3){
  3752                           
  3753                           ;incstack = 0
  3754  00182E  D023               	goto	l1978
  3755  001830                     l281:
  3756                           
  3757                           ;tasks.c: 38:         if(!PORTBbits.RB6){
  3758  001830  BC81               	btfsc	3969,6,c	;volatile
  3759  001832  D021               	goto	l1978
  3760                           
  3761                           ;tasks.c: 39:             lunos_delayTask(500);
  3762  001834  0EF4               	movlw	244
  3763  001836  6EE6               	movwf	postinc1,c
  3764  001838  0E01               	movlw	1
  3765  00183A  6EE6               	movwf	postinc1,c
  3766  00183C  EC72  F00C         	call	_lunos_delayTask	;wreg free
  3767                           
  3768                           ;tasks.c: 40:             t_bottle bottle;;tasks.c: 41:             global_buffer.bottle
      +                          s[global_buffer.count] = bottle;
  3769                           ;stkvar	_bottle @ sp[(-1)+0]
  3770  001840  C001  F04D         	movff	_global_buffer,btemp+10
  3771  001844  C002  F04E         	movff	_global_buffer+1,btemp+11
  3772  001848  0E03               	movlw	low (_global_buffer+2)
  3773  00184A  244D               	addwf	btemp+10,w,c
  3774  00184C  6ED9               	movwf	fsr2l,c
  3775  00184E  0E00               	movlw	high (_global_buffer+2)
  3776  001850  204E               	addwfc	btemp+11,w,c
  3777  001852  6EDA               	movwf	fsr2h,c
  3778  001854  0EFF               	movlw	-1
  3779  001856  CFE3 FFDF          	movff	plusw1,indf2
  3780                           
  3781                           ;tasks.c: 42:             global_buffer.bottles[global_buffer.count].bottle_state = EMPT
      +                          Y;
  3782  00185A  C001  F04D         	movff	_global_buffer,btemp+10
  3783  00185E  C002  F04E         	movff	_global_buffer+1,btemp+11
  3784  001862  0E03               	movlw	low (_global_buffer+2)
  3785  001864  244D               	addwf	btemp+10,w,c
  3786  001866  6ED9               	movwf	fsr2l,c
  3787  001868  0E00               	movlw	high (_global_buffer+2)
  3788  00186A  204E               	addwfc	btemp+11,w,c
  3789  00186C  6EDA               	movwf	fsr2h,c
  3790  00186E  0E00               	movlw	0
  3791  001870  6EDF               	movwf	indf2,c
  3792                           
  3793                           ;tasks.c: 43:             global_buffer.count += 1;
  3794  001872  4A01               	infsnz	_global_buffer,f,c
  3795  001874  2A02               	incf	_global_buffer+1,f,c
  3796  001876                     l1978:
  3797                           
  3798                           ;tasks.c: 37:     while(global_buffer.count < 3){
  3799  001876  BE02               	btfsc	_global_buffer+1,7,c
  3800  001878  D7DB               	goto	l281
  3801  00187A  5002               	movf	_global_buffer+1,w,c
  3802  00187C  E104               	bnz	u79_20
  3803  00187E  0E03               	movlw	3
  3804  001880  5C01               	subwf	_global_buffer,w,c
  3805  001882  A0D8               	btfss	status,0,c
  3806  001884  D7D5               	goto	l281
  3807  001886                     u79_20:
  3808                           
  3809                           ;tasks.c: 46:     global_buffer.p_state = BUSY_;
  3810  001886  0E01               	movlw	1
  3811  001888  6E06               	movwf	_global_buffer+5,c
  3812                           
  3813                           ; _count_bottles: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  3814  00188A  52E5               	movf	postdec1,f,c
  3815  00188C  0012               	return		;funcret
  3816  00188E                     __end_of_count_bottles:
  3817                           	opt callstack 0
  3818                           
  3819 ;; *************** function _fill_bottle *****************
  3820 ;; Defined at:
  3821 ;;		line 49 in file "tasks.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1  [STACK] void 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3835 ;;      Params:         0       0       0       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    8
  3842 ;; This function calls:
  3843 ;;		_lunos_delayTask
  3844 ;; This function is called by:
  3845 ;;		Interrupt level 1
  3846 ;; This function uses a reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text24
  3850  001A68                     __ptext24:
  3851                           	opt callstack 0
  3852  001A68                     _fill_bottle:
  3853                           	opt callstack 18
  3854                           
  3855                           ;tasks.c: 50:     while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  3856                           
  3857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3858                           ;incstack = 0
  3859  001A68  D006               	goto	l1986
  3860  001A6A                     l1984:
  3861                           
  3862                           ;tasks.c: 51:         lunos_delayTask(100);
  3863  001A6A  0E64               	movlw	100
  3864  001A6C  6EE6               	movwf	postinc1,c
  3865  001A6E  0E00               	movlw	0
  3866  001A70  6EE6               	movwf	postinc1,c
  3867  001A72  EC72  F00C         	call	_lunos_delayTask	;wreg free
  3868  001A76                     l1986:
  3869                           
  3870                           ;tasks.c: 50:     while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  3871  001A76  B082               	btfsc	3970,0,c	;volatile
  3872  001A78  0012               	return	
  3873  001A7A  B282               	btfsc	3970,1,c	;volatile
  3874  001A7C  0012               	return	
  3875  001A7E  B482               	btfsc	3970,2,c	;volatile
  3876  001A80  0012               	return	
  3877  001A82  D7F3               	goto	l1984
  3878  001A84                     __end_of_fill_bottle:
  3879                           	opt callstack 0
  3880                           
  3881 ;; *************** function _task_2 *****************
  3882 ;; Defined at:
  3883 ;;		line 121 in file "tasks.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;		None
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1  [STACK] void 
  3890 ;; Registers used:
  3891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3897 ;;      Params:         0       0       0       0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0
  3900 ;;      Totals:         0       0       0       0       0       0       0
  3901 ;;Total ram usage:        0 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    8
  3904 ;; This function calls:
  3905 ;;		_lunos_delayTask
  3906 ;; This function is called by:
  3907 ;;		Interrupt level 1
  3908 ;; This function uses a reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text25
  3912  001A3E                     __ptext25:
  3913                           	opt callstack 0
  3914  001A3E                     _task_2:
  3915                           	opt callstack 18
  3916                           
  3917                           ;tasks.c: 123:     PORTBbits.RB5 = ~PORTBbits.RB5;
  3918                           
  3919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3920                           ;incstack = 0
  3921                           ;tasks.c: 122:   while(1){
  3922  001A3E  AA81               	btfss	3969,5,c	;volatile
  3923  001A40  D002               	goto	u85_20
  3924  001A42  0E01               	movlw	1
  3925  001A44  D001               	goto	u85_26
  3926  001A46                     u85_20:
  3927  001A46  0E00               	movlw	0
  3928  001A48                     u85_26:
  3929  001A48  0AFF               	xorlw	255
  3930  001A4A  6E4E               	movwf	btemp+11,c
  3931  001A4C  3A4E               	swapf	btemp+11,f,c
  3932  001A4E  464E               	rlncf	btemp+11,f,c
  3933  001A50  5081               	movf	3969,w,c	;volatile
  3934  001A52  184E               	xorwf	btemp+11,w,c
  3935  001A54  0BDF               	andlw	-33
  3936  001A56  184E               	xorwf	btemp+11,w,c
  3937  001A58  6E81               	movwf	3969,c	;volatile
  3938                           
  3939                           ;tasks.c: 124:     lunos_delayTask(1000);
  3940  001A5A  0EE8               	movlw	232
  3941  001A5C  6EE6               	movwf	postinc1,c
  3942  001A5E  0E03               	movlw	3
  3943  001A60  6EE6               	movwf	postinc1,c
  3944  001A62  EC72  F00C         	call	_lunos_delayTask	;wreg free
  3945  001A66  D7EB               	goto	_task_2
  3946  001A68                     __end_of_task_2:
  3947                           	opt callstack 0
  3948                           
  3949 ;; *************** function _task_bozo *****************
  3950 ;; Defined at:
  3951 ;;		line 129 in file "tasks.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  i               2  [STACK] int 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1  [STACK] void 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3965 ;;      Params:         0       0       0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0
  3968 ;;      Totals:         0       0       0       0       0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    8
  3972 ;; This function calls:
  3973 ;;		_sem_post
  3974 ;;		_sem_wait
  3975 ;; This function is called by:
  3976 ;;		Interrupt level 1
  3977 ;; This function uses a reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text26
  3981  0016D4                     __ptext26:
  3982                           	opt callstack 0
  3983  0016D4                     _task_bozo:
  3984                           	opt callstack 0
  3985                           
  3986                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3987  0016D4  52E6               	movf	postinc1,f,c
  3988  0016D6  52E6               	movf	postinc1,f,c
  3989  0016D8                     l349:
  3990                           
  3991                           ;tasks.c: 131:     int i;;tasks.c: 132:     sem_wait(&teste_1);
  3992  0016D8  0E29               	movlw	low _teste_1
  3993  0016DA  6EE6               	movwf	postinc1,c
  3994  0016DC  0E00               	movlw	high _teste_1
  3995  0016DE  6EE6               	movwf	postinc1,c
  3996  0016E0  EC3F  F009         	call	_sem_wait	;wreg free
  3997                           
  3998                           ;tasks.c: 133:     for (i = 0; i < 4; i++) {
  3999                           ;stkvar	_i @ sp[(-2)+0]
  4000  0016E4  0EFE               	movlw	-2
  4001  0016E6  6AE3               	clrf	plusw1,c
  4002  0016E8  0EFF               	movlw	-1
  4003  0016EA  6AE3               	clrf	plusw1,c
  4004  0016EC                     l2016:
  4005                           
  4006                           ;tasks.c: 134:       mem[i] = i+1;
  4007                           ;stkvar	_i @ sp[(-2)+0]
  4008  0016EC  0EFE               	movlw	-2
  4009  0016EE  CFE3 F04D          	movff	plusw1,btemp+10
  4010  0016F2  0EFF               	movlw	-1
  4011  0016F4  CFE3 F04E          	movff	plusw1,btemp+11
  4012  0016F8  504D               	movf	btemp+10,w,c
  4013  0016FA  2407               	addwf	_mem,w,c
  4014  0016FC  6ED9               	movwf	fsr2l,c
  4015  0016FE  504E               	movf	btemp+11,w,c
  4016  001700  2008               	addwfc	_mem+1,w,c
  4017  001702  6EDA               	movwf	fsr2h,c
  4018                           
  4019                           ;stkvar	_i @ sp[(-2)+0]
  4020  001704  0EFE               	movlw	-2
  4021  001706  50E3               	movf	plusw1,w,c
  4022  001708  0F01               	addlw	1
  4023  00170A  6EDF               	movwf	indf2,c
  4024                           
  4025                           ;tasks.c: 135:     }
  4026                           ;stkvar	_i @ sp[(-2)+0]
  4027  00170C  0EFE               	movlw	-2
  4028  00170E  50E3               	movf	plusw1,w,c
  4029  001710  0F01               	addlw	1
  4030  001712  6E43               	movwf	btemp,c
  4031  001714  0EFE               	movlw	-2
  4032  001716  C043  FFE3         	movff	btemp,plusw1
  4033  00171A  6A43               	clrf	btemp,c
  4034  00171C  0EFF               	movlw	-1
  4035  00171E  50E3               	movf	plusw1,w,c
  4036  001720  2043               	addwfc	btemp,w,c
  4037  001722  6E43               	movwf	btemp,c
  4038  001724  0EFF               	movlw	-1
  4039  001726  C043  FFE3         	movff	btemp,plusw1
  4040                           
  4041                           ;stkvar	_i @ sp[(-2)+0]
  4042  00172A  0EFF               	movlw	-1
  4043  00172C  BEE3               	btfsc	plusw1,7,c
  4044  00172E  D7DE               	goto	l2016
  4045  001730  0EFF               	movlw	-1
  4046  001732  50E3               	movf	plusw1,w,c
  4047  001734  E107               	bnz	u86_20
  4048  001736  0EFE               	movlw	-2
  4049  001738  CFE3 F043          	movff	plusw1,btemp
  4050  00173C  0E04               	movlw	4
  4051  00173E  5E43               	subwf	btemp,f,c
  4052  001740  A0D8               	btfss	status,0,c
  4053  001742  D7D4               	goto	l2016
  4054  001744                     u86_20:
  4055                           
  4056                           ;tasks.c: 136:     sem_post(&teste_2);
  4057  001744  0E1B               	movlw	low _teste_2
  4058  001746  6EE6               	movwf	postinc1,c
  4059  001748  0E00               	movlw	high _teste_2
  4060  00174A  6EE6               	movwf	postinc1,c
  4061  00174C  ECC4  F008         	call	_sem_post	;wreg free
  4062  001750  D7C3               	goto	l349
  4063  001752                     __end_of_task_bozo:
  4064                           	opt callstack 0
  4065                           
  4066 ;; *************** function _task_xuxa *****************
  4067 ;; Defined at:
  4068 ;;		line 140 in file "tasks.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  i               2  [STACK] int 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1  [STACK] void 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4082 ;;      Params:         0       0       0       0       0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0
  4085 ;;      Totals:         0       0       0       0       0       0       0
  4086 ;;Total ram usage:        0 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    8
  4089 ;; This function calls:
  4090 ;;		_lunos_delayTask
  4091 ;;		_sem_post
  4092 ;;		_sem_wait
  4093 ;; This function is called by:
  4094 ;;		Interrupt level 1
  4095 ;; This function uses a reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text27
  4099  001434                     __ptext27:
  4100                           	opt callstack 0
  4101  001434                     _task_xuxa:
  4102                           	opt callstack 0
  4103                           
  4104                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4105  001434  52E6               	movf	postinc1,f,c
  4106  001436  52E6               	movf	postinc1,f,c
  4107  001438                     l357:
  4108                           
  4109                           ;tasks.c: 143:     sem_wait(&teste_2);
  4110  001438  0E1B               	movlw	low _teste_2
  4111  00143A  6EE6               	movwf	postinc1,c
  4112  00143C  0E00               	movlw	high _teste_2
  4113  00143E  6EE6               	movwf	postinc1,c
  4114  001440  EC3F  F009         	call	_sem_wait	;wreg free
  4115                           
  4116                           ;tasks.c: 144:     for (i = 0; i < 4; i++) {
  4117                           ;stkvar	_i @ sp[(-2)+0]
  4118  001444  0EFE               	movlw	-2
  4119  001446  6AE3               	clrf	plusw1,c
  4120  001448  0EFF               	movlw	-1
  4121  00144A  6AE3               	clrf	plusw1,c
  4122  00144C                     l2032:
  4123                           
  4124                           ;tasks.c: 145:       if (mem[i] % 2 == 0)
  4125                           ;stkvar	_i @ sp[(-2)+0]
  4126  00144C  0EFE               	movlw	-2
  4127  00144E  CFE3 F04D          	movff	plusw1,btemp+10
  4128  001452  0EFF               	movlw	-1
  4129  001454  CFE3 F04E          	movff	plusw1,btemp+11
  4130  001458  504D               	movf	btemp+10,w,c
  4131  00145A  2407               	addwf	_mem,w,c
  4132  00145C  6ED9               	movwf	fsr2l,c
  4133  00145E  504E               	movf	btemp+11,w,c
  4134  001460  2008               	addwfc	_mem+1,w,c
  4135  001462  6EDA               	movwf	fsr2h,c
  4136  001464  B0DF               	btfsc	indf2,0,c
  4137  001466  D00E               	goto	l2036
  4138                           
  4139                           ;tasks.c: 146:         PORTBbits.RB3 = ~PORTBbits.RB3;
  4140  001468  A681               	btfss	3969,3,c	;volatile
  4141  00146A  D002               	goto	u88_20
  4142  00146C  0E01               	movlw	1
  4143  00146E  D001               	goto	u88_26
  4144  001470                     u88_20:
  4145  001470  0E00               	movlw	0
  4146  001472                     u88_26:
  4147  001472  0AFF               	xorlw	255
  4148  001474  6E4E               	movwf	btemp+11,c
  4149  001476  464E               	rlncf	btemp+11,f,c
  4150  001478  464E               	rlncf	btemp+11,f,c
  4151  00147A  464E               	rlncf	btemp+11,f,c
  4152  00147C  5081               	movf	3969,w,c	;volatile
  4153  00147E  184E               	xorwf	btemp+11,w,c
  4154  001480  0BF7               	andlw	-9
  4155  001482  D00C               	goto	L3
  4156  001484                     l2036:
  4157                           
  4158                           ;tasks.c: 148:         PORTBbits.RB5 = ~PORTBbits.RB5;
  4159  001484  AA81               	btfss	3969,5,c	;volatile
  4160  001486  D002               	goto	u89_20
  4161  001488  0E01               	movlw	1
  4162  00148A  D001               	goto	u89_26
  4163  00148C                     u89_20:
  4164  00148C  0E00               	movlw	0
  4165  00148E                     u89_26:
  4166  00148E  0AFF               	xorlw	255
  4167  001490  6E4E               	movwf	btemp+11,c
  4168  001492  3A4E               	swapf	btemp+11,f,c
  4169  001494  464E               	rlncf	btemp+11,f,c
  4170  001496  5081               	movf	3969,w,c	;volatile
  4171  001498  184E               	xorwf	btemp+11,w,c
  4172  00149A  0BDF               	andlw	-33
  4173  00149C                     L3:
  4174  00149C  184E               	xorwf	btemp+11,w,c
  4175  00149E  6E81               	movwf	3969,c	;volatile
  4176                           
  4177                           ;tasks.c: 149:       lunos_delayTask(1000);
  4178  0014A0  0EE8               	movlw	232
  4179  0014A2  6EE6               	movwf	postinc1,c
  4180  0014A4  0E03               	movlw	3
  4181  0014A6  6EE6               	movwf	postinc1,c
  4182  0014A8  EC72  F00C         	call	_lunos_delayTask	;wreg free
  4183                           
  4184                           ;tasks.c: 150:     }
  4185                           ;stkvar	_i @ sp[(-2)+0]
  4186  0014AC  0EFE               	movlw	-2
  4187  0014AE  50E3               	movf	plusw1,w,c
  4188  0014B0  0F01               	addlw	1
  4189  0014B2  6E43               	movwf	btemp,c
  4190  0014B4  0EFE               	movlw	-2
  4191  0014B6  C043  FFE3         	movff	btemp,plusw1
  4192  0014BA  6A43               	clrf	btemp,c
  4193  0014BC  0EFF               	movlw	-1
  4194  0014BE  50E3               	movf	plusw1,w,c
  4195  0014C0  2043               	addwfc	btemp,w,c
  4196  0014C2  6E43               	movwf	btemp,c
  4197  0014C4  0EFF               	movlw	-1
  4198  0014C6  C043  FFE3         	movff	btemp,plusw1
  4199                           
  4200                           ;stkvar	_i @ sp[(-2)+0]
  4201  0014CA  0EFF               	movlw	-1
  4202  0014CC  BEE3               	btfsc	plusw1,7,c
  4203  0014CE  D7BE               	goto	l2032
  4204  0014D0  0EFF               	movlw	-1
  4205  0014D2  50E3               	movf	plusw1,w,c
  4206  0014D4  E107               	bnz	u90_20
  4207  0014D6  0EFE               	movlw	-2
  4208  0014D8  CFE3 F043          	movff	plusw1,btemp
  4209  0014DC  0E04               	movlw	4
  4210  0014DE  5E43               	subwf	btemp,f,c
  4211  0014E0  A0D8               	btfss	status,0,c
  4212  0014E2  D7B4               	goto	l2032
  4213  0014E4                     u90_20:
  4214                           
  4215                           ;tasks.c: 151:     sem_post(&teste_1);
  4216  0014E4  0E29               	movlw	low _teste_1
  4217  0014E6  6EE6               	movwf	postinc1,c
  4218  0014E8  0E00               	movlw	high _teste_1
  4219  0014EA  6EE6               	movwf	postinc1,c
  4220  0014EC  ECC4  F008         	call	_sem_post	;wreg free
  4221  0014F0  D7A3               	goto	l357
  4222  0014F2                     __end_of_task_xuxa:
  4223                           	opt callstack 0
  4224                           
  4225 ;; *************** function _ISR_timer0 *****************
  4226 ;; Defined at:
  4227 ;;		line 56 in file "int0_test.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4241 ;;      Params:         0       0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0
  4243 ;;      Temps:         16       0       0       0       0       0       0
  4244 ;;      Totals:        16       0       0       0       0       0       0
  4245 ;;Total ram usage:       16 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    2
  4248 ;; This function calls:
  4249 ;;		___wmul
  4250 ;;		_delay_decrement
  4251 ;;		_round_robin
  4252 ;; This function is called by:
  4253 ;;		Interrupt level 2
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	intcode
  4258  000008                     __pintcode:
  4259                           	opt callstack 0
  4260  000008                     _ISR_timer0:
  4261                           	opt callstack 17
  4262                           
  4263                           ;incstack = 0
  4264  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  4265                           
  4266                           	psect	intcode_body
  4267  000014                     __pintcode_body:
  4268                           	opt callstack 17
  4269  000014                     int_func:
  4270                           	opt callstack 17
  4271  000014  0006               	pop		; remove dummy address from shadow register refresh
  4272  000016  CFE1 F067          	movff	fsr1l,??_ISR_timer0+4
  4273  00001A  CFE2 F068          	movff	fsr1h,??_ISR_timer0+5
  4274  00001E  CFD9 F069          	movff	fsr2l,??_ISR_timer0+6
  4275  000022  CFDA F06A          	movff	fsr2h,??_ISR_timer0+7
  4276  000026  CFF3 F06B          	movff	prodl,??_ISR_timer0+8
  4277  00002A  CFF4 F06C          	movff	prodh,??_ISR_timer0+9
  4278  00002E  C043  F06D         	movff	btemp,??_ISR_timer0+10
  4279  000032  C044  F06E         	movff	btemp+1,??_ISR_timer0+11
  4280  000036  C04B  F06F         	movff	btemp+8,??_ISR_timer0+12
  4281  00003A  C04C  F070         	movff	btemp+9,??_ISR_timer0+13
  4282  00003E  C04D  F071         	movff	btemp+10,??_ISR_timer0+14
  4283  000042  C04E  F072         	movff	btemp+11,??_ISR_timer0+15
  4284  000046  EE15  F020         	lfsr	1,___inthi_sp
  4285                           
  4286                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  4287  00004A  9EF2               	bcf	4082,7,c	;volatile
  4288                           
  4289                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  4290  00004C  A4F2               	btfss	4082,2,c	;volatile
  4291  00004E  D224               	goto	i2u77_40
  4292                           
  4293                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  4294  000050  94F2               	bcf	4082,2,c	;volatile
  4295                           
  4296                           ;int0_test.c: 61:     TMR0L = 252;
  4297  000052  0EFC               	movlw	252
  4298  000054  6ED6               	movwf	4054,c	;volatile
  4299                           
  4300                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  4301  000056  A083               	btfss	3971,0,c	;volatile
  4302  000058  D002               	goto	i2u73_40
  4303  00005A  0E01               	movlw	1
  4304  00005C  D001               	goto	i2u73_46
  4305  00005E                     i2u73_40:
  4306  00005E  0E00               	movlw	0
  4307  000060                     i2u73_46:
  4308  000060  0AFF               	xorlw	255
  4309  000062  6E63               	movwf	??_ISR_timer0& (0+255),c
  4310  000064  5083               	movf	3971,w,c	;volatile
  4311  000066  1863               	xorwf	??_ISR_timer0,w,c
  4312  000068  0BFE               	andlw	-2
  4313  00006A  1863               	xorwf	??_ISR_timer0,w,c
  4314  00006C  6E83               	movwf	3971,c	;volatile
  4315                           
  4316                           ;int0_test.c: 63:     delay_decrement();
  4317  00006E  EC30  F006         	call	_delay_decrement	;wreg free
  4318                           
  4319                           ;int0_test.c: 65:     quantum--;
  4320  000072  0673               	decf	_quantum,f,c
  4321  000074  A0D8               	btfss	status,0,c
  4322  000076  0674               	decf	_quantum+1,f,c
  4323                           
  4324                           ;int0_test.c: 66:     if (quantum <= 0) {
  4325  000078  BE74               	btfsc	_quantum+1,7,c
  4326  00007A  D005               	goto	i2u74_40
  4327  00007C  5074               	movf	_quantum+1,w,c
  4328  00007E  E102               	bnz	i2u74_41
  4329  000080  0473               	decf	_quantum,w,c
  4330  000082  B0D8               	btfsc	status,0,c
  4331  000084                     i2u74_41:
  4332  000084  D209               	goto	i2u77_40
  4333  000086                     i2u74_40:
  4334                           
  4335                           ;int0_test.c: 67:       quantum = 10;
  4336  000086  0E00               	movlw	0
  4337  000088  6E74               	movwf	_quantum+1,c
  4338  00008A  0E0A               	movlw	10
  4339  00008C  6E73               	movwf	_quantum,c
  4340                           
  4341                           ;int0_test.c: 68:       { who = ready_queue.task_running; ready_queue.tasks[who].task_st
      +                          ate = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = ST
      +                          ATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks
      +                          [who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stac
      +                          k[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL
      +                          ; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  4342  00008E  C2AC  F00B         	movff	_ready_queue+542,_who
  4343  000092  C2AD  F00C         	movff	_ready_queue+543,_who+1
  4344  000096  0E6C               	movlw	108
  4345  000098  6EE6               	movwf	postinc1,c
  4346  00009A  0E00               	movlw	0
  4347  00009C  6EE6               	movwf	postinc1,c
  4348  00009E  C00B  FFE6         	movff	_who,postinc1
  4349  0000A2  C00C  FFE6         	movff	_who+1,postinc1
  4350  0000A6  ECD7  F00A         	call	___wmul	;wreg free
  4351  0000AA  0E96               	movlw	low (_ready_queue+8)
  4352  0000AC  2443               	addwf	btemp,w,c
  4353  0000AE  6ED9               	movwf	fsr2l,c
  4354  0000B0  0E00               	movlw	high (_ready_queue+8)
  4355  0000B2  2044               	addwfc	btemp+1,w,c
  4356  0000B4  6EDA               	movwf	fsr2h,c
  4357  0000B6  0E00               	movlw	0
  4358  0000B8  6EDF               	movwf	indf2,c
  4359  0000BA  0E6C               	movlw	108
  4360  0000BC  6EE6               	movwf	postinc1,c
  4361  0000BE  0E00               	movlw	0
  4362  0000C0  6EE6               	movwf	postinc1,c
  4363  0000C2  C00B  FFE6         	movff	_who,postinc1
  4364  0000C6  C00C  FFE6         	movff	_who+1,postinc1
  4365  0000CA  ECD7  F00A         	call	___wmul	;wreg free
  4366  0000CE  0E93               	movlw	low (_ready_queue+5)
  4367  0000D0  2443               	addwf	btemp,w,c
  4368  0000D2  6ED9               	movwf	fsr2l,c
  4369  0000D4  0E00               	movlw	high (_ready_queue+5)
  4370  0000D6  2044               	addwfc	btemp+1,w,c
  4371  0000D8  6EDA               	movwf	fsr2h,c
  4372  0000DA  CFE8 FFDF          	movff	wreg,indf2	;volatile
  4373  0000DE  0E6C               	movlw	108
  4374  0000E0  6EE6               	movwf	postinc1,c
  4375  0000E2  0E00               	movlw	0
  4376  0000E4  6EE6               	movwf	postinc1,c
  4377  0000E6  C00B  FFE6         	movff	_who,postinc1
  4378  0000EA  C00C  FFE6         	movff	_who+1,postinc1
  4379  0000EE  ECD7  F00A         	call	___wmul	;wreg free
  4380  0000F2  0E94               	movlw	low (_ready_queue+6)
  4381  0000F4  2443               	addwf	btemp,w,c
  4382  0000F6  6ED9               	movwf	fsr2l,c
  4383  0000F8  0E00               	movlw	high (_ready_queue+6)
  4384  0000FA  2044               	addwfc	btemp+1,w,c
  4385  0000FC  6EDA               	movwf	fsr2h,c
  4386  0000FE  CFD8 FFDF          	movff	status,indf2	;volatile
  4387  000102  0E6C               	movlw	108
  4388  000104  6EE6               	movwf	postinc1,c
  4389  000106  0E00               	movlw	0
  4390  000108  6EE6               	movwf	postinc1,c
  4391  00010A  C00B  FFE6         	movff	_who,postinc1
  4392  00010E  C00C  FFE6         	movff	_who+1,postinc1
  4393  000112  ECD7  F00A         	call	___wmul	;wreg free
  4394  000116  0E95               	movlw	low (_ready_queue+7)
  4395  000118  2443               	addwf	btemp,w,c
  4396  00011A  6ED9               	movwf	fsr2l,c
  4397  00011C  0E00               	movlw	high (_ready_queue+7)
  4398  00011E  2044               	addwfc	btemp+1,w,c
  4399  000120  6EDA               	movwf	fsr2h,c
  4400  000122  CFE0 FFDF          	movff	bsr,indf2	;volatile
  4401  000126  6A09               	clrf	_size,c
  4402  000128  6A0A               	clrf	_size+1,c
  4403  00012A  D07B               	goto	i2l1928
  4404  00012C                     i2l1924:
  4405  00012C  0E6C               	movlw	108
  4406  00012E  6EE6               	movwf	postinc1,c
  4407  000130  0E00               	movlw	0
  4408  000132  6EE6               	movwf	postinc1,c
  4409  000134  C00B  FFE6         	movff	_who,postinc1
  4410  000138  C00C  FFE6         	movff	_who+1,postinc1
  4411  00013C  ECD7  F00A         	call	___wmul	;wreg free
  4412  000140  0E8E               	movlw	low _ready_queue
  4413  000142  6E63               	movwf	??_ISR_timer0& (0+255),c
  4414  000144  0E00               	movlw	high _ready_queue
  4415  000146  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4416  000148  0E09               	movlw	9
  4417  00014A  2663               	addwf	??_ISR_timer0,f,c
  4418  00014C  0E00               	movlw	0
  4419  00014E  2264               	addwfc	??_ISR_timer0+1,f,c
  4420  000150  5043               	movf	btemp,w,c
  4421  000152  2663               	addwf	??_ISR_timer0,f,c
  4422  000154  5044               	movf	btemp+1,w,c
  4423  000156  2264               	addwfc	??_ISR_timer0+1,f,c
  4424  000158  0E03               	movlw	3
  4425  00015A  6EE6               	movwf	postinc1,c
  4426  00015C  0E00               	movlw	0
  4427  00015E  6EE6               	movwf	postinc1,c
  4428  000160  C009  FFE6         	movff	_size,postinc1
  4429  000164  C00A  FFE6         	movff	_size+1,postinc1
  4430  000168  ECD7  F00A         	call	___wmul	;wreg free
  4431  00016C  5043               	movf	btemp,w,c
  4432  00016E  2463               	addwf	??_ISR_timer0,w,c
  4433  000170  6ED9               	movwf	fsr2l,c
  4434  000172  5044               	movf	btemp+1,w,c
  4435  000174  2064               	addwfc	??_ISR_timer0+1,w,c
  4436  000176  6EDA               	movwf	fsr2h,c
  4437  000178  CFFF FFDF          	movff	tosu,indf2	;volatile
  4438  00017C  0E6C               	movlw	108
  4439  00017E  6EE6               	movwf	postinc1,c
  4440  000180  0E00               	movlw	0
  4441  000182  6EE6               	movwf	postinc1,c
  4442  000184  C00B  FFE6         	movff	_who,postinc1
  4443  000188  C00C  FFE6         	movff	_who+1,postinc1
  4444  00018C  ECD7  F00A         	call	___wmul	;wreg free
  4445  000190  0E8E               	movlw	low _ready_queue
  4446  000192  6E63               	movwf	??_ISR_timer0& (0+255),c
  4447  000194  0E00               	movlw	high _ready_queue
  4448  000196  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4449  000198  0E0B               	movlw	11
  4450  00019A  2663               	addwf	??_ISR_timer0,f,c
  4451  00019C  0E00               	movlw	0
  4452  00019E  2264               	addwfc	??_ISR_timer0+1,f,c
  4453  0001A0  5043               	movf	btemp,w,c
  4454  0001A2  2663               	addwf	??_ISR_timer0,f,c
  4455  0001A4  5044               	movf	btemp+1,w,c
  4456  0001A6  2264               	addwfc	??_ISR_timer0+1,f,c
  4457  0001A8  0E03               	movlw	3
  4458  0001AA  6EE6               	movwf	postinc1,c
  4459  0001AC  0E00               	movlw	0
  4460  0001AE  6EE6               	movwf	postinc1,c
  4461  0001B0  C009  FFE6         	movff	_size,postinc1
  4462  0001B4  C00A  FFE6         	movff	_size+1,postinc1
  4463  0001B8  ECD7  F00A         	call	___wmul	;wreg free
  4464  0001BC  5043               	movf	btemp,w,c
  4465  0001BE  2463               	addwf	??_ISR_timer0,w,c
  4466  0001C0  6ED9               	movwf	fsr2l,c
  4467  0001C2  5044               	movf	btemp+1,w,c
  4468  0001C4  2064               	addwfc	??_ISR_timer0+1,w,c
  4469  0001C6  6EDA               	movwf	fsr2h,c
  4470  0001C8  CFFE FFDF          	movff	tosh,indf2	;volatile
  4471  0001CC  0E6C               	movlw	108
  4472  0001CE  6EE6               	movwf	postinc1,c
  4473  0001D0  0E00               	movlw	0
  4474  0001D2  6EE6               	movwf	postinc1,c
  4475  0001D4  C00B  FFE6         	movff	_who,postinc1
  4476  0001D8  C00C  FFE6         	movff	_who+1,postinc1
  4477  0001DC  ECD7  F00A         	call	___wmul	;wreg free
  4478  0001E0  0E8E               	movlw	low _ready_queue
  4479  0001E2  6E63               	movwf	??_ISR_timer0& (0+255),c
  4480  0001E4  0E00               	movlw	high _ready_queue
  4481  0001E6  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4482  0001E8  0E0A               	movlw	10
  4483  0001EA  2663               	addwf	??_ISR_timer0,f,c
  4484  0001EC  0E00               	movlw	0
  4485  0001EE  2264               	addwfc	??_ISR_timer0+1,f,c
  4486  0001F0  5043               	movf	btemp,w,c
  4487  0001F2  2663               	addwf	??_ISR_timer0,f,c
  4488  0001F4  5044               	movf	btemp+1,w,c
  4489  0001F6  2264               	addwfc	??_ISR_timer0+1,f,c
  4490  0001F8  0E03               	movlw	3
  4491  0001FA  6EE6               	movwf	postinc1,c
  4492  0001FC  0E00               	movlw	0
  4493  0001FE  6EE6               	movwf	postinc1,c
  4494  000200  C009  FFE6         	movff	_size,postinc1
  4495  000204  C00A  FFE6         	movff	_size+1,postinc1
  4496  000208  ECD7  F00A         	call	___wmul	;wreg free
  4497  00020C  5043               	movf	btemp,w,c
  4498  00020E  2463               	addwf	??_ISR_timer0,w,c
  4499  000210  6ED9               	movwf	fsr2l,c
  4500  000212  5044               	movf	btemp+1,w,c
  4501  000214  2064               	addwfc	??_ISR_timer0+1,w,c
  4502  000216  6EDA               	movwf	fsr2h,c
  4503  000218  CFFD FFDF          	movff	tosl,indf2	;volatile
  4504  00021C  4A09               	infsnz	_size,f,c
  4505  00021E  2A0A               	incf	_size+1,f,c
  4506  000220  0006               	pop		;# 
  4507  000222                     i2l1928:
  4508  000222  50FC               	movf	stkptr,w,c	;volatile
  4509  000224  A4D8               	btfss	status,2,c
  4510  000226  D782               	goto	i2l1924
  4511  000228  0EFF               	movlw	255
  4512  00022A  6E63               	movwf	??_ISR_timer0& (0+255),c
  4513  00022C  0EFF               	movlw	255
  4514  00022E  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4515  000230  C009  F065         	movff	_size,??_ISR_timer0+2
  4516  000234  C00A  F066         	movff	_size+1,??_ISR_timer0+3
  4517  000238  5063               	movf	??_ISR_timer0,w,c
  4518  00023A  2665               	addwf	??_ISR_timer0+2,f,c
  4519  00023C  5064               	movf	??_ISR_timer0+1,w,c
  4520  00023E  2266               	addwfc	??_ISR_timer0+3,f,c
  4521  000240  0E6C               	movlw	108
  4522  000242  6EE6               	movwf	postinc1,c
  4523  000244  0E00               	movlw	0
  4524  000246  6EE6               	movwf	postinc1,c
  4525  000248  C00B  FFE6         	movff	_who,postinc1
  4526  00024C  C00C  FFE6         	movff	_who+1,postinc1
  4527  000250  ECD7  F00A         	call	___wmul	;wreg free
  4528  000254  0EF4               	movlw	low (_ready_queue+102)
  4529  000256  2443               	addwf	btemp,w,c
  4530  000258  6ED9               	movwf	fsr2l,c
  4531  00025A  0E00               	movlw	high (_ready_queue+102)
  4532  00025C  2044               	addwfc	btemp+1,w,c
  4533  00025E  6EDA               	movwf	fsr2h,c
  4534  000260  C065  FFDE         	movff	??_ISR_timer0+2,postinc2
  4535  000264  C066  FFDD         	movff	??_ISR_timer0+3,postdec2
  4536                           
  4537                           ;int0_test.c: 69:       ready_queue.task_running = round_robin();
  4538  000268  EC22  F00B         	call	_round_robin	;wreg free
  4539  00026C  C043  F2AC         	movff	btemp,_ready_queue+542
  4540  000270  C044  F2AD         	movff	btemp+1,_ready_queue+543
  4541                           
  4542                           ;int0_test.c: 70:       { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.ta
      +                          sks[who].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task
      +                          _f; } else { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].
      +                          W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg;
      +                           size = ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL
      +                           = ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[wh
      +                          o].task_stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[s
      +                          ize].TOSU_reg; size--; } }};
  4543  000274  C2AC  F00B         	movff	_ready_queue+542,_who
  4544  000278  C2AD  F00C         	movff	_ready_queue+543,_who+1
  4545  00027C  6AFC               	clrf	stkptr,c	;volatile
  4546  00027E  0E6C               	movlw	108
  4547  000280  6EE6               	movwf	postinc1,c
  4548  000282  0E00               	movlw	0
  4549  000284  6EE6               	movwf	postinc1,c
  4550  000286  C00B  FFE6         	movff	_who,postinc1
  4551  00028A  C00C  FFE6         	movff	_who+1,postinc1
  4552  00028E  ECD7  F00A         	call	___wmul	;wreg free
  4553  000292  0EF4               	movlw	low (_ready_queue+102)
  4554  000294  2443               	addwf	btemp,w,c
  4555  000296  6ED9               	movwf	fsr2l,c
  4556  000298  0E00               	movlw	high (_ready_queue+102)
  4557  00029A  2044               	addwfc	btemp+1,w,c
  4558  00029C  6EDA               	movwf	fsr2h,c
  4559  00029E  50DE               	movf	postinc2,w,c
  4560  0002A0  10DE               	iorwf	postinc2,w,c
  4561  0002A2  A4D8               	btfss	status,2,c
  4562  0002A4  D01B               	goto	i2l1944
  4563  0002A6  0005               	push		;# 
  4564  0002A8  0E6C               	movlw	108
  4565  0002AA  6EE6               	movwf	postinc1,c
  4566  0002AC  0E00               	movlw	0
  4567  0002AE  6EE6               	movwf	postinc1,c
  4568  0002B0  C00B  FFE6         	movff	_who,postinc1
  4569  0002B4  C00C  FFE6         	movff	_who+1,postinc1
  4570  0002B8  ECD7  F00A         	call	___wmul	;wreg free
  4571  0002BC  0EF6               	movlw	low (_ready_queue+104)
  4572  0002BE  2443               	addwf	btemp,w,c
  4573  0002C0  6ED9               	movwf	fsr2l,c
  4574  0002C2  0E00               	movlw	high (_ready_queue+104)
  4575  0002C4  2044               	addwfc	btemp+1,w,c
  4576  0002C6  6EDA               	movwf	fsr2h,c
  4577  0002C8  CFDE F063          	movff	postinc2,??_ISR_timer0
  4578  0002CC  CFDD F064          	movff	postdec2,??_ISR_timer0+1
  4579  0002D0  C063  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  4580  0002D4  C064  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  4581  0002D8  6AFF               	clrf	tosu,c	;volatile
  4582  0002DA  D0DE               	goto	i2u77_40
  4583  0002DC                     i2l1944:
  4584  0002DC  0E6C               	movlw	108
  4585  0002DE  6EE6               	movwf	postinc1,c
  4586  0002E0  0E00               	movlw	0
  4587  0002E2  6EE6               	movwf	postinc1,c
  4588  0002E4  C00B  FFE6         	movff	_who,postinc1
  4589  0002E8  C00C  FFE6         	movff	_who+1,postinc1
  4590  0002EC  ECD7  F00A         	call	___wmul	;wreg free
  4591  0002F0  0E96               	movlw	low (_ready_queue+8)
  4592  0002F2  2443               	addwf	btemp,w,c
  4593  0002F4  6ED9               	movwf	fsr2l,c
  4594  0002F6  0E00               	movlw	high (_ready_queue+8)
  4595  0002F8  2044               	addwfc	btemp+1,w,c
  4596  0002FA  6EDA               	movwf	fsr2h,c
  4597  0002FC  0E01               	movlw	1
  4598  0002FE  6EDF               	movwf	indf2,c
  4599  000300  0E6C               	movlw	108
  4600  000302  6EE6               	movwf	postinc1,c
  4601  000304  0E00               	movlw	0
  4602  000306  6EE6               	movwf	postinc1,c
  4603  000308  C00B  FFE6         	movff	_who,postinc1
  4604  00030C  C00C  FFE6         	movff	_who+1,postinc1
  4605  000310  ECD7  F00A         	call	___wmul	;wreg free
  4606  000314  0E93               	movlw	low (_ready_queue+5)
  4607  000316  2443               	addwf	btemp,w,c
  4608  000318  6ED9               	movwf	fsr2l,c
  4609  00031A  0E00               	movlw	high (_ready_queue+5)
  4610  00031C  2044               	addwfc	btemp+1,w,c
  4611  00031E  6EDA               	movwf	fsr2h,c
  4612  000320  50DF               	movf	indf2,w,c
  4613  000322  6E63               	movwf	??_ISR_timer0& (0+255),c
  4614  000324  5063               	movf	??_ISR_timer0,w,c
  4615  000326  0E6C               	movlw	108
  4616  000328  6EE6               	movwf	postinc1,c
  4617  00032A  0E00               	movlw	0
  4618  00032C  6EE6               	movwf	postinc1,c
  4619  00032E  C00B  FFE6         	movff	_who,postinc1
  4620  000332  C00C  FFE6         	movff	_who+1,postinc1
  4621  000336  ECD7  F00A         	call	___wmul	;wreg free
  4622  00033A  0E94               	movlw	low (_ready_queue+6)
  4623  00033C  2443               	addwf	btemp,w,c
  4624  00033E  6ED9               	movwf	fsr2l,c
  4625  000340  0E00               	movlw	high (_ready_queue+6)
  4626  000342  2044               	addwfc	btemp+1,w,c
  4627  000344  6EDA               	movwf	fsr2h,c
  4628  000346  50DF               	movf	indf2,w,c
  4629  000348  6ED8               	movwf	status,c	;volatile
  4630  00034A  0E6C               	movlw	108
  4631  00034C  6EE6               	movwf	postinc1,c
  4632  00034E  0E00               	movlw	0
  4633  000350  6EE6               	movwf	postinc1,c
  4634  000352  C00B  FFE6         	movff	_who,postinc1
  4635  000356  C00C  FFE6         	movff	_who+1,postinc1
  4636  00035A  ECD7  F00A         	call	___wmul	;wreg free
  4637  00035E  0E95               	movlw	low (_ready_queue+7)
  4638  000360  2443               	addwf	btemp,w,c
  4639  000362  6ED9               	movwf	fsr2l,c
  4640  000364  0E00               	movlw	high (_ready_queue+7)
  4641  000366  2044               	addwfc	btemp+1,w,c
  4642  000368  6EDA               	movwf	fsr2h,c
  4643  00036A  50DF               	movf	indf2,w,c
  4644  00036C  6EE0               	movwf	bsr,c	;volatile
  4645  00036E  0E6C               	movlw	108
  4646  000370  6EE6               	movwf	postinc1,c
  4647  000372  0E00               	movlw	0
  4648  000374  6EE6               	movwf	postinc1,c
  4649  000376  C00B  FFE6         	movff	_who,postinc1
  4650  00037A  C00C  FFE6         	movff	_who+1,postinc1
  4651  00037E  ECD7  F00A         	call	___wmul	;wreg free
  4652  000382  0EF4               	movlw	low (_ready_queue+102)
  4653  000384  2443               	addwf	btemp,w,c
  4654  000386  6ED9               	movwf	fsr2l,c
  4655  000388  0E00               	movlw	high (_ready_queue+102)
  4656  00038A  2044               	addwfc	btemp+1,w,c
  4657  00038C  6EDA               	movwf	fsr2h,c
  4658  00038E  CFDE F009          	movff	postinc2,_size
  4659  000392  CFDD F00A          	movff	postdec2,_size+1
  4660  000396  D07C               	goto	i2l1950
  4661  000398                     i2l59:
  4662  000398  0005               	push		;# 
  4663  00039A  0E6C               	movlw	108
  4664  00039C  6EE6               	movwf	postinc1,c
  4665  00039E  0E00               	movlw	0
  4666  0003A0  6EE6               	movwf	postinc1,c
  4667  0003A2  C00B  FFE6         	movff	_who,postinc1
  4668  0003A6  C00C  FFE6         	movff	_who+1,postinc1
  4669  0003AA  ECD7  F00A         	call	___wmul	;wreg free
  4670  0003AE  0E8E               	movlw	low _ready_queue
  4671  0003B0  6E63               	movwf	??_ISR_timer0& (0+255),c
  4672  0003B2  0E00               	movlw	high _ready_queue
  4673  0003B4  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4674  0003B6  0E0A               	movlw	10
  4675  0003B8  2663               	addwf	??_ISR_timer0,f,c
  4676  0003BA  0E00               	movlw	0
  4677  0003BC  2264               	addwfc	??_ISR_timer0+1,f,c
  4678  0003BE  5043               	movf	btemp,w,c
  4679  0003C0  2663               	addwf	??_ISR_timer0,f,c
  4680  0003C2  5044               	movf	btemp+1,w,c
  4681  0003C4  2264               	addwfc	??_ISR_timer0+1,f,c
  4682  0003C6  0E03               	movlw	3
  4683  0003C8  6EE6               	movwf	postinc1,c
  4684  0003CA  0E00               	movlw	0
  4685  0003CC  6EE6               	movwf	postinc1,c
  4686  0003CE  C009  FFE6         	movff	_size,postinc1
  4687  0003D2  C00A  FFE6         	movff	_size+1,postinc1
  4688  0003D6  ECD7  F00A         	call	___wmul	;wreg free
  4689  0003DA  5043               	movf	btemp,w,c
  4690  0003DC  2463               	addwf	??_ISR_timer0,w,c
  4691  0003DE  6ED9               	movwf	fsr2l,c
  4692  0003E0  5044               	movf	btemp+1,w,c
  4693  0003E2  2064               	addwfc	??_ISR_timer0+1,w,c
  4694  0003E4  6EDA               	movwf	fsr2h,c
  4695  0003E6  50DF               	movf	indf2,w,c
  4696  0003E8  6EFD               	movwf	tosl,c	;volatile
  4697  0003EA  0E6C               	movlw	108
  4698  0003EC  6EE6               	movwf	postinc1,c
  4699  0003EE  0E00               	movlw	0
  4700  0003F0  6EE6               	movwf	postinc1,c
  4701  0003F2  C00B  FFE6         	movff	_who,postinc1
  4702  0003F6  C00C  FFE6         	movff	_who+1,postinc1
  4703  0003FA  ECD7  F00A         	call	___wmul	;wreg free
  4704  0003FE  0E8E               	movlw	low _ready_queue
  4705  000400  6E63               	movwf	??_ISR_timer0& (0+255),c
  4706  000402  0E00               	movlw	high _ready_queue
  4707  000404  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4708  000406  0E0B               	movlw	11
  4709  000408  2663               	addwf	??_ISR_timer0,f,c
  4710  00040A  0E00               	movlw	0
  4711  00040C  2264               	addwfc	??_ISR_timer0+1,f,c
  4712  00040E  5043               	movf	btemp,w,c
  4713  000410  2663               	addwf	??_ISR_timer0,f,c
  4714  000412  5044               	movf	btemp+1,w,c
  4715  000414  2264               	addwfc	??_ISR_timer0+1,f,c
  4716  000416  0E03               	movlw	3
  4717  000418  6EE6               	movwf	postinc1,c
  4718  00041A  0E00               	movlw	0
  4719  00041C  6EE6               	movwf	postinc1,c
  4720  00041E  C009  FFE6         	movff	_size,postinc1
  4721  000422  C00A  FFE6         	movff	_size+1,postinc1
  4722  000426  ECD7  F00A         	call	___wmul	;wreg free
  4723  00042A  5043               	movf	btemp,w,c
  4724  00042C  2463               	addwf	??_ISR_timer0,w,c
  4725  00042E  6ED9               	movwf	fsr2l,c
  4726  000430  5044               	movf	btemp+1,w,c
  4727  000432  2064               	addwfc	??_ISR_timer0+1,w,c
  4728  000434  6EDA               	movwf	fsr2h,c
  4729  000436  50DF               	movf	indf2,w,c
  4730  000438  6EFE               	movwf	tosh,c	;volatile
  4731  00043A  0E6C               	movlw	108
  4732  00043C  6EE6               	movwf	postinc1,c
  4733  00043E  0E00               	movlw	0
  4734  000440  6EE6               	movwf	postinc1,c
  4735  000442  C00B  FFE6         	movff	_who,postinc1
  4736  000446  C00C  FFE6         	movff	_who+1,postinc1
  4737  00044A  ECD7  F00A         	call	___wmul	;wreg free
  4738  00044E  0E8E               	movlw	low _ready_queue
  4739  000450  6E63               	movwf	??_ISR_timer0& (0+255),c
  4740  000452  0E00               	movlw	high _ready_queue
  4741  000454  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4742  000456  0E09               	movlw	9
  4743  000458  2663               	addwf	??_ISR_timer0,f,c
  4744  00045A  0E00               	movlw	0
  4745  00045C  2264               	addwfc	??_ISR_timer0+1,f,c
  4746  00045E  5043               	movf	btemp,w,c
  4747  000460  2663               	addwf	??_ISR_timer0,f,c
  4748  000462  5044               	movf	btemp+1,w,c
  4749  000464  2264               	addwfc	??_ISR_timer0+1,f,c
  4750  000466  0E03               	movlw	3
  4751  000468  6EE6               	movwf	postinc1,c
  4752  00046A  0E00               	movlw	0
  4753  00046C  6EE6               	movwf	postinc1,c
  4754  00046E  C009  FFE6         	movff	_size,postinc1
  4755  000472  C00A  FFE6         	movff	_size+1,postinc1
  4756  000476  ECD7  F00A         	call	___wmul	;wreg free
  4757  00047A  5043               	movf	btemp,w,c
  4758  00047C  2463               	addwf	??_ISR_timer0,w,c
  4759  00047E  6ED9               	movwf	fsr2l,c
  4760  000480  5044               	movf	btemp+1,w,c
  4761  000482  2064               	addwfc	??_ISR_timer0+1,w,c
  4762  000484  6EDA               	movwf	fsr2h,c
  4763  000486  50DF               	movf	indf2,w,c
  4764  000488  6EFF               	movwf	tosu,c	;volatile
  4765  00048A  0609               	decf	_size,f,c
  4766  00048C  A0D8               	btfss	status,0,c
  4767  00048E  060A               	decf	_size+1,f,c
  4768  000490                     i2l1950:
  4769  000490  5009               	movf	_size,w,c
  4770  000492  100A               	iorwf	_size+1,w,c
  4771  000494  A4D8               	btfss	status,2,c
  4772  000496  D780               	goto	i2l59
  4773  000498                     i2u77_40:
  4774                           
  4775                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  4776                           
  4777                           ;int0_test.c: 73:   }
  4778  000498  8EF2               	bsf	4082,7,c	;volatile
  4779  00049A  C072  F04E         	movff	??_ISR_timer0+15,btemp+11
  4780  00049E  C071  F04D         	movff	??_ISR_timer0+14,btemp+10
  4781  0004A2  C070  F04C         	movff	??_ISR_timer0+13,btemp+9
  4782  0004A6  C06F  F04B         	movff	??_ISR_timer0+12,btemp+8
  4783  0004AA  C06E  F044         	movff	??_ISR_timer0+11,btemp+1
  4784  0004AE  C06D  F043         	movff	??_ISR_timer0+10,btemp
  4785  0004B2  C06C  FFF4         	movff	??_ISR_timer0+9,prodh
  4786  0004B6  C06B  FFF3         	movff	??_ISR_timer0+8,prodl
  4787  0004BA  C06A  FFDA         	movff	??_ISR_timer0+7,fsr2h
  4788  0004BE  C069  FFD9         	movff	??_ISR_timer0+6,fsr2l
  4789  0004C2  C068  FFE2         	movff	??_ISR_timer0+5,fsr1h
  4790  0004C6  C067  FFE1         	movff	??_ISR_timer0+4,fsr1l
  4791  0004CA  0011               	retfie		f
  4792  0004CC                     __end_of_ISR_timer0:
  4793                           	opt callstack 0
  4794                           
  4795 ;; *************** function _delay_decrement *****************
  4796 ;; Defined at:
  4797 ;;		line 99 in file "kernel.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  i               2  [STACK] int 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1  [STACK] void 
  4804 ;; Registers used:
  4805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4811 ;;      Params:         0       0       0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0
  4814 ;;      Totals:         0       0       0       0       0       0       0
  4815 ;;Total ram usage:        0 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_ISR_timer0
  4821 ;; This function uses a reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text29
  4825  000C60                     __ptext29:
  4826                           	opt callstack 0
  4827  000C60                     _delay_decrement:
  4828                           	opt callstack 0
  4829                           
  4830                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4831  000C60  52E6               	movf	postinc1,f,c
  4832  000C62  52E6               	movf	postinc1,f,c
  4833                           
  4834                           ;kernel.c: 100:   int i;;kernel.c: 102:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  4835                           ;stkvar	_i @ sp[(-2)+0]
  4836                           
  4837                           ;incstack = 0
  4838  000C64  0EFE               	movlw	-2
  4839  000C66  6AE3               	clrf	plusw1,c
  4840  000C68  0EFF               	movlw	-1
  4841  000C6A  6AE3               	clrf	plusw1,c
  4842  000C6C  D070               	goto	l1798
  4843  000C6E                     l1788:
  4844                           
  4845                           ;kernel.c: 103:     if (ready_queue.tasks[i].task_state == WAITING) {
  4846                           ;stkvar	_i @ sp[(-2)+0]
  4847  000C6E  0EFE               	movlw	-2
  4848  000C70  CFE3 F04D          	movff	plusw1,btemp+10
  4849  000C74  0EFF               	movlw	-1
  4850  000C76  CFE3 F04E          	movff	plusw1,btemp+11
  4851  000C7A  0E6C               	movlw	108
  4852  000C7C  024D               	mulwf	btemp+10,c
  4853  000C7E  CFF3 F04B          	movff	prodl,btemp+8
  4854  000C82  CFF4 F04C          	movff	prodh,btemp+9
  4855  000C86  024E               	mulwf	btemp+11,c
  4856  000C88  50F3               	movf	prodl,w,c
  4857  000C8A  264C               	addwf	btemp+9,f,c
  4858  000C8C  0E96               	movlw	low (_ready_queue+8)
  4859  000C8E  244B               	addwf	btemp+8,w,c
  4860  000C90  6ED9               	movwf	fsr2l,c
  4861  000C92  0E00               	movlw	high (_ready_queue+8)
  4862  000C94  204C               	addwfc	btemp+9,w,c
  4863  000C96  6EDA               	movwf	fsr2h,c
  4864  000C98  0E02               	movlw	2
  4865  000C9A  18DE               	xorwf	postinc2,w,c
  4866  000C9C  A4D8               	btfss	status,2,c
  4867  000C9E  D048               	goto	l1796
  4868                           
  4869                           ;kernel.c: 104:       ready_queue.tasks[i].task_delay_time--;
  4870                           ;stkvar	_i @ sp[(-2)+0]
  4871  000CA0  0EFE               	movlw	-2
  4872  000CA2  CFE3 F04D          	movff	plusw1,btemp+10
  4873  000CA6  0EFF               	movlw	-1
  4874  000CA8  CFE3 F04E          	movff	plusw1,btemp+11
  4875  000CAC  0E6C               	movlw	108
  4876  000CAE  024D               	mulwf	btemp+10,c
  4877  000CB0  CFF3 F04B          	movff	prodl,btemp+8
  4878  000CB4  CFF4 F04C          	movff	prodh,btemp+9
  4879  000CB8  024E               	mulwf	btemp+11,c
  4880  000CBA  50F3               	movf	prodl,w,c
  4881  000CBC  264C               	addwf	btemp+9,f,c
  4882  000CBE  0EF8               	movlw	low (_ready_queue+106)
  4883  000CC0  244B               	addwf	btemp+8,w,c
  4884  000CC2  6ED9               	movwf	fsr2l,c
  4885  000CC4  0E00               	movlw	high (_ready_queue+106)
  4886  000CC6  204C               	addwfc	btemp+9,w,c
  4887  000CC8  6EDA               	movwf	fsr2h,c
  4888  000CCA  06DE               	decf	postinc2,f,c
  4889  000CCC  0E00               	movlw	0
  4890  000CCE  5ADD               	subwfb	postdec2,f,c
  4891                           
  4892                           ;kernel.c: 105:       if (ready_queue.tasks[i].task_delay_time == 0) {
  4893                           ;stkvar	_i @ sp[(-2)+0]
  4894  000CD0  0EFE               	movlw	-2
  4895  000CD2  CFE3 F04D          	movff	plusw1,btemp+10
  4896  000CD6  0EFF               	movlw	-1
  4897  000CD8  CFE3 F04E          	movff	plusw1,btemp+11
  4898  000CDC  0E6C               	movlw	108
  4899  000CDE  024D               	mulwf	btemp+10,c
  4900  000CE0  CFF3 F04B          	movff	prodl,btemp+8
  4901  000CE4  CFF4 F04C          	movff	prodh,btemp+9
  4902  000CE8  024E               	mulwf	btemp+11,c
  4903  000CEA  50F3               	movf	prodl,w,c
  4904  000CEC  264C               	addwf	btemp+9,f,c
  4905  000CEE  0EF8               	movlw	low (_ready_queue+106)
  4906  000CF0  244B               	addwf	btemp+8,w,c
  4907  000CF2  6ED9               	movwf	fsr2l,c
  4908  000CF4  0E00               	movlw	high (_ready_queue+106)
  4909  000CF6  204C               	addwfc	btemp+9,w,c
  4910  000CF8  6EDA               	movwf	fsr2h,c
  4911  000CFA  50DE               	movf	postinc2,w,c
  4912  000CFC  10DE               	iorwf	postinc2,w,c
  4913  000CFE  A4D8               	btfss	status,2,c
  4914  000D00  D017               	goto	l1796
  4915                           
  4916                           ;kernel.c: 106:         ready_queue.tasks[i].task_state = READY;
  4917                           ;stkvar	_i @ sp[(-2)+0]
  4918  000D02  0EFE               	movlw	-2
  4919  000D04  CFE3 F04D          	movff	plusw1,btemp+10
  4920  000D08  0EFF               	movlw	-1
  4921  000D0A  CFE3 F04E          	movff	plusw1,btemp+11
  4922  000D0E  0E6C               	movlw	108
  4923  000D10  024D               	mulwf	btemp+10,c
  4924  000D12  CFF3 F04B          	movff	prodl,btemp+8
  4925  000D16  CFF4 F04C          	movff	prodh,btemp+9
  4926  000D1A  024E               	mulwf	btemp+11,c
  4927  000D1C  50F3               	movf	prodl,w,c
  4928  000D1E  264C               	addwf	btemp+9,f,c
  4929  000D20  0E96               	movlw	low (_ready_queue+8)
  4930  000D22  244B               	addwf	btemp+8,w,c
  4931  000D24  6ED9               	movwf	fsr2l,c
  4932  000D26  0E00               	movlw	high (_ready_queue+8)
  4933  000D28  204C               	addwfc	btemp+9,w,c
  4934  000D2A  6EDA               	movwf	fsr2h,c
  4935  000D2C  0E00               	movlw	0
  4936  000D2E  6EDF               	movwf	indf2,c
  4937  000D30                     l1796:
  4938                           
  4939                           ;kernel.c: 113:   }
  4940                           ;stkvar	_i @ sp[(-2)+0]
  4941  000D30  0EFE               	movlw	-2
  4942  000D32  50E3               	movf	plusw1,w,c
  4943  000D34  0F01               	addlw	1
  4944  000D36  6E43               	movwf	btemp,c
  4945  000D38  0EFE               	movlw	-2
  4946  000D3A  C043  FFE3         	movff	btemp,plusw1
  4947  000D3E  6A43               	clrf	btemp,c
  4948  000D40  0EFF               	movlw	-1
  4949  000D42  50E3               	movf	plusw1,w,c
  4950  000D44  2043               	addwfc	btemp,w,c
  4951  000D46  6E43               	movwf	btemp,c
  4952  000D48  0EFF               	movlw	-1
  4953  000D4A  C043  FFE3         	movff	btemp,plusw1
  4954  000D4E                     l1798:
  4955  000D4E  EE22  F0AA         	lfsr	2,_ready_queue+540
  4956                           
  4957                           ;stkvar	_i @ sp[(-2)+0]
  4958  000D52  0EFE               	movlw	-2
  4959  000D54  CFE3 F043          	movff	plusw1,btemp
  4960  000D58  50DE               	movf	postinc2,w,c
  4961  000D5A  5C43               	subwf	btemp,w,c
  4962  000D5C  0EFF               	movlw	-1
  4963  000D5E  CFE3 F043          	movff	plusw1,btemp
  4964  000D62  50DE               	movf	postinc2,w,c
  4965  000D64  5843               	subwfb	btemp,w,c
  4966  000D66  A0D8               	btfss	status,0,c
  4967  000D68  D782               	goto	l1788
  4968                           
  4969                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  4970  000D6A  52E5               	movf	postdec1,f,c
  4971  000D6C  52E5               	movf	postdec1,f,c
  4972  000D6E  0012               	return		;funcret
  4973  000D70                     __end_of_delay_decrement:
  4974                           	opt callstack 0
  4975                           
  4976 ;; *************** function ___wmul *****************
  4977 ;; Defined at:
  4978 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;  multiplier      2  [STACK] unsigned int 
  4981 ;;  multiplicand    2  [STACK] unsigned int 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  product         2  [STACK] unsigned int 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  2  [STACK] unsigned int 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4993 ;;      Params:         0       0       0       0       0       0       0
  4994 ;;      Locals:         0       0       0       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0       0       0
  4996 ;;      Totals:         0       0       0       0       0       0       0
  4997 ;;Total ram usage:        0 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		_ISR_timer0
  5003 ;; This function uses a reentrant model
  5004 ;;
  5005                           
  5006                           	psect	text30
  5007  0015AE                     __ptext30:
  5008                           	opt callstack 0
  5009  0015AE                     ___wmul:
  5010                           	opt callstack 0
  5011                           
  5012                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5013  0015AE  52E6               	movf	postinc1,f,c
  5014  0015B0  52E6               	movf	postinc1,f,c
  5015                           
  5016                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5017                           
  5018                           ;incstack = 0
  5019  0015B2  0EFA               	movlw	-6
  5020  0015B4  CFE3 F04E          	movff	plusw1,btemp+11
  5021                           
  5022                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5023  0015B8  0EFC               	movlw	-4
  5024  0015BA  50E3               	movf	plusw1,w,c
  5025  0015BC  024E               	mulwf	btemp+11,c
  5026                           
  5027                           ;stkvar	_product @ sp[(-2)+0]
  5028  0015BE  0EFE               	movlw	-2
  5029  0015C0  CFF3 FFE3          	movff	prodl,plusw1
  5030  0015C4  0EFF               	movlw	-1
  5031  0015C6  CFF4 FFE3          	movff	prodh,plusw1
  5032                           
  5033                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5034  0015CA  0EFB               	movlw	251
  5035  0015CC  24E1               	addwf	fsr1l,w,c
  5036  0015CE  6ED9               	movwf	fsr2l,c
  5037  0015D0  0EFF               	movlw	255
  5038  0015D2  20E2               	addwfc	fsr1h,w,c
  5039  0015D4  6EDA               	movwf	fsr2h,c
  5040  0015D6  50DF               	movf	indf2,w,c
  5041  0015D8  6E4E               	movwf	btemp+11,c
  5042                           
  5043                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5044  0015DA  0EFC               	movlw	-4
  5045  0015DC  50E3               	movf	plusw1,w,c
  5046  0015DE  024E               	mulwf	btemp+11,c
  5047  0015E0  CFF3 FFF4          	movff	prodl,prodh
  5048  0015E4  6AF3               	clrf	prodl,c
  5049                           
  5050                           ;stkvar	_product @ sp[(-2)+0]
  5051  0015E6  50E1               	movf	fsr1l,w,c
  5052  0015E8  0FFE               	addlw	-2
  5053  0015EA  6ED9               	movwf	fsr2l,c
  5054  0015EC  50E2               	movf	fsr1h,w,c
  5055  0015EE  6EDA               	movwf	fsr2h,c
  5056  0015F0  0EFF               	movlw	255
  5057  0015F2  22DA               	addwfc	fsr2h,f,c
  5058  0015F4  50F3               	movf	prodl,w,c
  5059  0015F6  26DE               	addwf	postinc2,f,c
  5060  0015F8  50F4               	movf	prodh,w,c
  5061  0015FA  22DD               	addwfc	postdec2,f,c
  5062                           
  5063                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5064  0015FC  0EFA               	movlw	-6
  5065  0015FE  CFE3 F04E          	movff	plusw1,btemp+11
  5066                           
  5067                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5068  001602  0EFD               	movlw	253
  5069  001604  24E1               	addwf	fsr1l,w,c
  5070  001606  6ED9               	movwf	fsr2l,c
  5071  001608  0EFF               	movlw	255
  5072  00160A  20E2               	addwfc	fsr1h,w,c
  5073  00160C  6EDA               	movwf	fsr2h,c
  5074  00160E  50DF               	movf	indf2,w,c
  5075  001610  024E               	mulwf	btemp+11,c
  5076  001612  CFF3 FFF4          	movff	prodl,prodh
  5077  001616  6AF3               	clrf	prodl,c
  5078                           
  5079                           ;stkvar	_product @ sp[(-2)+0]
  5080  001618  50E1               	movf	fsr1l,w,c
  5081  00161A  0FFE               	addlw	-2
  5082  00161C  6ED9               	movwf	fsr2l,c
  5083  00161E  50E2               	movf	fsr1h,w,c
  5084  001620  6EDA               	movwf	fsr2h,c
  5085  001622  0EFF               	movlw	255
  5086  001624  22DA               	addwfc	fsr2h,f,c
  5087  001626  50F3               	movf	prodl,w,c
  5088  001628  26DE               	addwf	postinc2,f,c
  5089  00162A  50F4               	movf	prodh,w,c
  5090  00162C  22DD               	addwfc	postdec2,f,c
  5091                           
  5092                           ;stkvar	_product @ sp[(-2)+0]
  5093  00162E  0EFE               	movlw	-2
  5094  001630  CFE3 F043          	movff	plusw1,btemp
  5095  001634  0EFF               	movlw	-1
  5096  001636  CFE3 F044          	movff	plusw1,btemp+1
  5097                           
  5098                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  5099  00163A  0EFA               	movlw	250
  5100  00163C  26E1               	addwf	fsr1l,f,c
  5101  00163E  0EFF               	movlw	255
  5102  001640  22E2               	addwfc	fsr1h,f,c
  5103  001642  0012               	return		;funcret
  5104  001644                     __end_of___wmul:
  5105                           	opt callstack 0
  5106  0000                     
  5107                           	psect	text31
  5108  000000                     __ptext31:
  5109                           	opt callstack 0
  5110                           
  5111                           	psect	rparam
  5112  0000                     
  5113                           	psect	temp
  5114  000043                     btemp:
  5115                           	opt callstack 0
  5116  000043                     	ds	32
  5117  0000                     wtemp0	set	btemp
  5118  0000                     wtemp1	set	btemp+2
  5119  0000                     wtemp2	set	btemp+4
  5120  0000                     wtemp3	set	btemp+6
  5121  0000                     wtemp4	set	btemp+8
  5122  0000                     wtemp5	set	btemp+10
  5123  0000                     wtemp8	set	btemp+1
  5124  0000                     ttemp0	set	btemp
  5125  0000                     ttemp1	set	btemp+3
  5126  0000                     ttemp2	set	btemp+6
  5127  0000                     ttemp3	set	btemp+9
  5128  0000                     ttemp5	set	btemp+1
  5129  0000                     ttemp6	set	btemp+4
  5130  0000                     ttemp7	set	btemp+8
  5131  0000                     ltemp0	set	btemp
  5132  0000                     ltemp1	set	btemp+4
  5133  0000                     ltemp2	set	btemp+8
  5134  0000                     lltemp0	set	btemp
  5135  0000                     lltemp1	set	btemp+8
  5136  0000                     lltemp2	set	btemp+16
  5137  0000                     lltemp3	set	btemp+24
  5138                           tosu	equ	0xFFF
  5139                           tosh	equ	0xFFE
  5140                           tosl	equ	0xFFD
  5141                           stkptr	equ	0xFFC
  5142                           pclatu	equ	0xFFB
  5143                           pclath	equ	0xFFA
  5144                           pcl	equ	0xFF9
  5145                           tblptru	equ	0xFF8
  5146                           tblptrh	equ	0xFF7
  5147                           tblptrl	equ	0xFF6
  5148                           tablat	equ	0xFF5
  5149                           prodh	equ	0xFF4
  5150                           prodl	equ	0xFF3
  5151                           indf0	equ	0xFEF
  5152                           postinc0	equ	0xFEE
  5153                           postdec0	equ	0xFED
  5154                           preinc0	equ	0xFEC
  5155                           plusw0	equ	0xFEB
  5156                           fsr0h	equ	0xFEA
  5157                           fsr0l	equ	0xFE9
  5158                           wreg	equ	0xFE8
  5159                           indf1	equ	0xFE7
  5160                           postinc1	equ	0xFE6
  5161                           postdec1	equ	0xFE5
  5162                           preinc1	equ	0xFE4
  5163                           plusw1	equ	0xFE3
  5164                           fsr1h	equ	0xFE2
  5165                           fsr1l	equ	0xFE1
  5166                           bsr	equ	0xFE0
  5167                           indf2	equ	0xFDF
  5168                           postinc2	equ	0xFDE
  5169                           postdec2	equ	0xFDD
  5170                           preinc2	equ	0xFDC
  5171                           plusw2	equ	0xFDB
  5172                           fsr2h	equ	0xFDA
  5173                           fsr2l	equ	0xFD9
  5174                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      84
    BANK0           128      0      14
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    mem	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), w_pipe(COMRAM[14]), teste_2(COMRAM[14]), teste_1(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), w_pipe(COMRAM[14]), teste_2(COMRAM[14]), teste_1(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), w_pipe(COMRAM[14]), teste_2(COMRAM[14]), teste_1(COMRAM[14]), 

    data	PTR unsigned int  size(2) Largest target is 2
		 -> dado(STACK[2]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    S533pipe$r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    S533pipe$w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(COMRAM[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> count_bottles(), task_1(), task_0(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_bottles(), task_1(), task_0(), task_idle(), 

    S258pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_bottles(), task_1(), task_0(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_bottles(), task_1(), task_0(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_0 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _task_0 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_bozo in COMRAM

    None.

Critical Paths under _task_xuxa in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_0 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _task_0 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_bozo in BANK0

    None.

Critical Paths under _task_xuxa in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_0 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _task_0 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_bozo in BANK1

    None.

Critical Paths under _task_xuxa in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_0 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _task_0 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_bozo in BANK2

    None.

Critical Paths under _task_xuxa in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_0 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _task_0 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_bozo in BANK3

    None.

Critical Paths under _task_xuxa in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_0 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _task_0 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_bozo in BANK4

    None.

Critical Paths under _task_xuxa in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_0 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _task_0 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_bozo in BANK5

    None.

Critical Paths under _task_xuxa in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2004
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0    1245
                          _SRAMalloc
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _pipe_create                                          6     0      6     264
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (2) _SRAMalloc                                            7     6      1     893
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (3) __SRAMmerge                                           7     5      2     402
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     323
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   112   108      4     187
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_0                                               0     0      0     960
                    _lunos_delayTask
                         _pipe_write
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_1                                               2     2      0     984
                    _lunos_delayTask
                          _pipe_read
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     293
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     293
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_0                                               0     0      0     960
                    _lunos_delayTask
                         _pipe_write
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_1                                               2     2      0     984
                    _lunos_delayTask
                          _pipe_read
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_2                                               0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_bozo                                            2     2      0     625
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_xuxa                                            2     2      0     874
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer0                                         16    16      0     498
                                              0 COMRAM    16    16      0
                             ___wmul
                    _delay_decrement
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (13) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _user_conf
     _SRAMalloc
       __SRAMmerge
     _pipe_create
       _sem_init
     _sem_init

 _task_idle (ROOT)

 _task_0 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_1 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_0 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_1 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_2 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_bozo (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_xuxa (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   _delay_decrement
   _round_robin
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     420      17       68.8%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       E       5       10.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      54       1       88.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62      15        0.0%
DATA                 0      0     482       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun  3 18:46:29 2019

                        _p 0037   __end_of_lunos_createTask 1188                        l127 0846  
                      l182 18E2                        l281 1830                        l337 193A  
                      l372 0B04                        l357 1438                        l349 16D8  
                      _BSR 000FE0                        u511 116C                        u600 0A1C  
                      u540 096A                        u460 0B74                        u630 1532  
                      u550 13AA                        u560 0984                        u650 1598  
                      _TOS 000FFD                        _mem 0007                        _who 000B  
              _round_robin 1644                        wreg 000FE8               __CFG_WDT$OFF 000000  
                     l2032 144C                       l2016 16EC                       l2036 1484  
                     l1720 098E                       l1802 1654                       l1626 0C40  
                     l1722 09A2                       l1740 0A48                       l1662 06A0  
                     l1750 0A82                       l1658 0586                       l1690 1396  
                     l1594 0B78                       l1684 0962                       l1678 076C  
                     l1864 135E                       l1768 150A                       l1778 157A  
                     l1698 13F0                       l1796 0D30                       l1788 0C6E  
                     l1876 1276                       l1798 0D4E                       l1984 1A6A  
                     l1986 1A76                       l1978 1876                       i2l59 0398  
                     _TOSH 000FFE                       _TOSL 000FFD                       _WREG 000FE8  
                     _TOSU 000FFF                       _main 188E              _global_buffer 0001  
   __size_of_count_bottles 0062                       _size 0009                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0043                       prodh 000FF4                       prodl 000FF3  
                     start 000C               ___param_bank 000000            __end_of___lwmod 15AE  
                    _TMR0L 000FD6                      u71_20 11BA                      _TRISB 000F93  
                    _TRISC 000F94                      _TRISD 000F95                      u90_20 14E4  
                    u83_20 19E8                      u83_26 19EA                      u84_20 1962  
                    u84_26 1964                      u85_20 1A46                      u85_26 1A48  
                    u86_20 1744                      u79_20 1886                      u88_20 1470  
                    u88_26 1472                      u89_20 148C                      u89_26 148E  
              ?_ISR_timer0 0063                 __SRAMmerge 0B0E         __size_of_SRAMalloc 019E  
                    tablat 000FF5                      ltemp0 0043                      ltemp1 0047  
                    ltemp2 004B                      plusw0 000FEB                      plusw1 000FE3  
                    plusw2 000FDB                      ttemp0 0043                      ttemp1 0046  
                    ttemp2 0049                      ttemp3 004C                      ttemp5 0044  
                    ttemp6 0047                      ttemp7 004B                      status 000FD8  
                    wtemp0 0043                      wtemp1 0045                      wtemp2 0047  
                    wtemp3 0049                      wtemp4 004B                      wtemp5 004D  
                    wtemp8 0044   __size_of_delay_decrement 0110            __initialization 1982  
             __end_of_main 18E4              _count_bottles 182C              __activetblptr 000000  
                   i2l1924 012C                     i2l1950 0490                     i2l1944 02DC  
                   i2l1928 0222                     _STATUS 000FD8                     _STKPTR 000FFC  
     __size_of_config_INT0 0010       __size_of_fill_bottle 001C        __size_of_ISR_timer0 04C4  
                   ___wmul 15AE          __end_of_SRAMalloc 0B0E                     clear_0 19A2  
                   clear_1 19B4                     clear_2 19C0                     _r_pipe 0080  
                   _task_0 19CC                     _task_1 1936                     _task_2 1A3E  
                   _w_pipe 000D           __end_of_sem_init 17C2           __end_of_sem_wait 1366  
         __end_of_sem_post 127E               __pdataCOMRAM 0073                     lltemp0 0043  
                   lltemp1 004B                     lltemp2 0053                     lltemp3 005B  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0080    __end_of__initialization 19C6            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001             __pcstackCOMRAM 0063                 ___inthi_sp 0520  
               __pbssBANK0 0080              __uDynamicHeap 02AE         __size_of_scheduler 0006  
      __size_of__SRAMmerge 0152         __size_of_pipe_read 0108         __size_of_task_idle 0004  
       __size_of_task_bozo 007E         __size_of_task_xuxa 00BE               ??_ISR_timer0 0063  
                  i2u73_40 005E                    i2u73_46 0060                    i2u74_40 0086  
                  i2u74_41 0084                    i2u77_40 0498                 _dispatcher 04CC  
          _lunos_delayTask 18E4       __size_of_pipe_create 010E         __size_of_user_conf 006A  
                  __Hparam 0000                    __Lparam 0000            __size_of___wmul 0096  
       __end_of_ISR_timer0 04CC                    ___lwmod 14F2                    __pcinit 1982  
                  __ramtop 0600            __size_of_task_0 0040            __size_of_task_1 004C  
          __size_of_task_2 002A                    __ptext0 188E                    __ptext1 17C2  
                  __ptext2 0D70                    __ptext3 1752                    __ptext4 0970  
                  __ptext5 0B0E                    __ptext6 1A0C                    __ptext7 1090  
                  __ptext8 1366                    __ptext9 04CC                  _T0CONbits 000FD5  
                  _teste_1 0029                    _teste_2 001B                    _quantum 0073  
        __end_of_scheduler 1AAC             __pintcode_body 0014       end_of_initialization 19C6  
        __end_of_pipe_read 1090          __end_of_task_idle 1AB0          __end_of_task_bozo 1752  
                  int_func 0014          __end_of_task_xuxa 14F2                 _pipe_write 0E7E  
    __end_of_config_timer0 1A96                    postdec0 000FED                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 _lunos_init 1A0C          __end_of_user_conf 182C  
                _PORTBbits 000F81                  _PORTCbits 000F82                  _PORTDbits 000F83  
  __end_of_lunos_delayTask 1936                  _SRAMalloc 0970                  _TRISDbits 000F95  
     __size_of_round_robin 0090            _delay_decrement 0C60         __end_of__SRAMmerge 0C60  
           __end_of___wmul 1644              __pidataCOMRAM 1AB0             __end_of_task_0 1A0C  
           __end_of_task_1 1982             __end_of_task_2 1A68        start_initialization 1982  
__size_of_lunos_createTask 00F8        __end_of_config_INT0 1AA6        __size_of_dispatcher 04A4  
      __end_of_fill_bottle 1A84                __pbssBIGRAM 008E                __pbssCOMRAM 0001  
  __end_of_delay_decrement 0D70       __end_of_SRAMInitHeap 1434                  __pintcode 0008  
        __size_of_sem_init 0070          __size_of_sem_wait 00E8          __size_of_sem_post 00F6  
    __end_of_count_bottles 188E        __size_of_pipe_write 010A        __size_of_lunos_init 0032  
                _scheduler 1AA6                _config_INT0 1A96                  _pipe_read 0F88  
              _fill_bottle 1A68                  _task_idle 1AAC                  _task_bozo 16D4  
                _task_xuxa 1434                  _user_conf 17C2           _lunos_createTask 1090  
              _INTCON2bits 000FF1        __end_of_pipe_create 0E7E                   __Hrparam 0000  
                 __Lrparam 0000         __end_of_dispatcher 0970           __size_of___lwmod 00BC  
   __size_of_config_timer0 0012      __size_of_SRAMInitHeap 00CE                   __ptext10 1AA6  
                 __ptext11 1644                   __ptext20 18E4                   __ptext12 14F2  
                 __ptext21 1936                   __ptext13 1A84                   __ptext30 15AE  
                 __ptext22 0F88                   __ptext14 1A96                   __ptext31 0000  
                 __ptext23 182C                   __ptext15 1AAC                   __ptext24 1A68  
                 __ptext16 19CC                   __ptext25 1A3E                   __ptext17 0E7E  
                 __ptext26 16D4                   __ptext18 127E                   __ptext27 1434  
                 __ptext19 1188                   __ptext29 0C60              __size_of_main 0056  
              _ready_queue 008E                   _sem_init 1752                   _sem_wait 127E  
                 _sem_post 1188               _SRAMInitHeap 1366                 _INTCONbits 000FF2  
       __end_of_pipe_write 0F88                _pipe_create 0D70        __end_of_round_robin 16D4  
                 intlevel1 0000                   intlevel2 0000         __end_of_lunos_init 1A3E  
            _config_timer0 1A84                 _ISR_timer0 0008   __size_of_lunos_delayTask 0052  
