

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jun 06 03:32:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80 ;;_p	offset=-2 (param)
    81 ;;_w	offset=-4 (param)
    82 ;;_r	offset=-6 (param)
    83 ;;_s	offset=-2 (param)
    84 ;;_valor	offset=-4 (param)
    85 ;;_new_task	offset	0
    86 ;;_prior	offset=-2 (param)
    87 ;;_f	offset=-4 (param)
    88 ;;_count	offset	0
    89 ;;_pHeap	offset	2
    90 ;;_state	offset=-1 (param)
    91 ;;_next_task_to_run	offset	0
    92 ;;_counter	offset	0
    93 ;;_dividend	offset=-2 (param)
    94 ;;_divisor	offset=-4 (param)
    95 ;;_bottle	offset	0
    96 ;;_s	offset=-2 (param)
    97 ;;_s	offset=-2 (param)
    98 ;;_time	offset=-2 (param)
    99 ;;_state	offset=-1 (param)
   100 ;;_next_task_to_run	offset	0
   101 ;;_counter	offset	0
   102 ;;_dividend	offset=-2 (param)
   103 ;;_divisor	offset=-4 (param)
   104 ;;_i	offset	0
   105 ;;_count	offset	2
   106 ;;_p	offset=-2 (param)
   107 ;;_data	offset=-4 (param)
   108 ;;_n	offset	0
   109 ;;_count	offset	2
   110 ;;_p	offset=-2 (param)
   111 ;;_data	offset=-4 (param)
   112 ;;_next_task_to_run	offset	0
   113 ;;_counter	offset	0
   114 ;;_dividend	offset=-2 (param)
   115 ;;_divisor	offset=-4 (param)
   116 ;;_i	offset	0
   117 ;;_product	offset	0
   118 ;;_multiplier	offset=-2 (param)
   119 ;;_multiplicand	offset=-4 (param)
   120                           
   121                           	psect	idataCOMRAM
   122  0018C8                     __pidataCOMRAM:
   123                           	opt callstack 0
   124                           
   125                           ;initializer for _quantum
   126  0018C8  000A               	dw	10
   127  0000                     _TOS	set	4093
   128  0000                     _PORTCbits	set	3970
   129  0000                     _PORTBbits	set	3969
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISB	set	3987
   133  0000                     _STKPTR	set	4092
   134  0000                     _TOSL	set	4093
   135  0000                     _TOSH	set	4094
   136  0000                     _TOSU	set	4095
   137  0000                     _BSR	set	4064
   138  0000                     _STATUS	set	4056
   139  0000                     _WREG	set	4072
   140  0000                     _PORTDbits	set	3971
   141  0000                     _TMR0L	set	4054
   142  0000                     _T0CONbits	set	4053
   143  0000                     _INTCON2bits	set	4081
   144  0000                     _INTCONbits	set	4082
   145  0000                     _TRISDbits	set	3989
   146                           
   147                           ; #config settings
   148  0000                     
   149                           	psect	cinit
   150  0017DC                     __pcinit:
   151                           	opt callstack 0
   152  0017DC                     start_initialization:
   153                           	opt callstack 0
   154  0017DC                     __initialization:
   155                           	opt callstack 0
   156                           
   157                           ; Initialize objects allocated to COMRAM (2 bytes)
   158                           ; load TBLPTR registers with __pidataCOMRAM
   159  0017DC  0EC8               	movlw	low __pidataCOMRAM
   160  0017DE  6EF6               	movwf	tblptrl,c
   161  0017E0  0E18               	movlw	high __pidataCOMRAM
   162  0017E2  6EF7               	movwf	tblptrh,c
   163  0017E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   164  0017E6  6EF8               	movwf	tblptru,c
   165  0017E8  0009               	tblrd		*+	;fetch initializer
   166  0017EA  CFF5 F075          	movff	tablat,__pdataCOMRAM
   167  0017EE  0009               	tblrd		*+	;fetch initializer
   168  0017F0  CFF5 F076          	movff	tablat,__pdataCOMRAM+1
   169                           
   170                           ; Clear objects allocated to BIGRAM (1176 bytes)
   171  0017F4  EE00  F0C0         	lfsr	0,__pbssBIGRAM
   172  0017F8  EE24 F098          	lfsr	2,1176
   173  0017FC                     clear_0:
   174  0017FC  6AEE               	clrf	postinc0,c
   175  0017FE  50DD               	movf	postdec2,w,c
   176  001800  50D9               	movf	fsr2l,w,c
   177  001802  E1FC               	bnz	clear_0
   178  001804  50DA               	movf	fsr2h,w,c
   179  001806  E1FA               	bnz	clear_0
   180                           
   181                           ; Clear objects allocated to BANK0 (64 bytes)
   182  001808  EE00  F080         	lfsr	0,__pbssBANK0
   183  00180C  0E40               	movlw	64
   184  00180E                     clear_1:
   185  00180E  6AEE               	clrf	postinc0,c
   186  001810  06E8               	decf	wreg,f,c
   187  001812  E1FD               	bnz	clear_1
   188                           
   189                           ; Clear objects allocated to COMRAM (70 bytes)
   190  001814  EE00  F001         	lfsr	0,__pbssCOMRAM
   191  001818  0E46               	movlw	70
   192  00181A                     clear_2:
   193  00181A  6AEE               	clrf	postinc0,c
   194  00181C  06E8               	decf	wreg,f,c
   195  00181E  E1FD               	bnz	clear_2
   196  001820                     end_of_initialization:
   197                           	opt callstack 0
   198  001820                     __end_of__initialization:
   199                           	opt callstack 0
   200  001820  0100               	movlb	0
   201  001822  EF18  F00B         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMRAM
   204  000001                     __pbssCOMRAM:
   205                           	opt callstack 0
   206  000001                     _global_buffer:
   207                           	opt callstack 0
   208  000001                     	ds	6
   209  000007                     _size:
   210                           	opt callstack 0
   211  000007                     	ds	2
   212  000009                     _who:
   213                           	opt callstack 0
   214  000009                     	ds	2
   215  00000B                     _check_sem:
   216                           	opt callstack 0
   217  00000B                     	ds	16
   218  00001B                     _fill_sem:
   219                           	opt callstack 0
   220  00001B                     	ds	16
   221  00002B                     _count_sem:
   222                           	opt callstack 0
   223  00002B                     	ds	16
   224  00003B                     _p:
   225                           	opt callstack 0
   226  00003B                     	ds	12
   227                           
   228                           	psect	dataCOMRAM
   229  000075                     __pdataCOMRAM:
   230                           	opt callstack 0
   231  000075                     _quantum:
   232                           	opt callstack 0
   233  000075                     	ds	2
   234                           
   235                           	psect	bssBANK0
   236  000080                     __pbssBANK0:
   237                           	opt callstack 0
   238  000080                     _r_pipe:
   239                           	opt callstack 0
   240  000080                     	ds	16
   241  000090                     _w_pipe:
   242                           	opt callstack 0
   243  000090                     	ds	16
   244  0000A0                     _out_sem:
   245                           	opt callstack 0
   246  0000A0                     	ds	16
   247  0000B0                     _cover_sem:
   248                           	opt callstack 0
   249  0000B0                     	ds	16
   250                           
   251                           	psect	bssBIGRAM
   252  0000C0                     __pbssBIGRAM:
   253                           	opt callstack 0
   254  0000C0                     _ready_queue:
   255                           	opt callstack 0
   256  0000C0                     	ds	664
   257  000358                     __uDynamicHeap:
   258                           	opt callstack 0
   259  000358                     	ds	512
   260                           
   261                           	psect	cstackCOMRAM
   262  000067                     __pcstackCOMRAM:
   263                           	opt callstack 0
   264  000067                     ??_ISR_timer0:
   265                           
   266                           ; 1 bytes @ 0x0
   267  000067                     	ds	14
   268                           
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 16 in file "main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1  [STACK] void 
   281 ;; Registers used:
   282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   288 ;;      Params:         0       0       0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0       0       0
   290 ;;      Temps:          0       0       0       0       0       0       0
   291 ;;      Totals:         0       0       0       0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels required when called:   14
   294 ;; This function calls:
   295 ;;		_config_INT0
   296 ;;		_config_timer0
   297 ;;		_dispatcher
   298 ;;		_lunos_createTask
   299 ;;		_lunos_init
   300 ;;		_user_conf
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a reentrant model
   304 ;;
   305                           
   306                           	psect	text0
   307  001630                     __ptext0:
   308                           	opt callstack 0
   309  001630                     _main:
   310                           	opt callstack 17
   311                           
   312                           ;main.c: 18:   dispatcher(READY);
   313                           
   314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   315                           ;incstack = 0
   316  001630  EC35  F00C         	call	_lunos_init	;wreg free
   317                           
   318                           ;main.c: 20:   while (1);
   319  001634  ECF2  F009         	call	_user_conf	;wreg free
   320                           
   321                           ;main.c: 21: 
   322  001638  EC57  F00C         	call	_config_INT0	;wreg free
   323                           
   324                           ;main.c: 22:   return;
   325  00163C  EC4E  F00C         	call	_config_timer0	;wreg free
   326  001640  0EAA               	movlw	low _count_bottles
   327  001642  6EE6               	movwf	postinc1,c
   328  001644  0E15               	movlw	high _count_bottles
   329  001646  6EE6               	movwf	postinc1,c
   330  001648  0E05               	movlw	5
   331  00164A  6EE6               	movwf	postinc1,c
   332  00164C  0E00               	movlw	0
   333  00164E  6EE6               	movwf	postinc1,c
   334  001650  ECDA  F005         	call	_lunos_createTask	;wreg free
   335  001654  0E26               	movlw	low _fill_bottle
   336  001656  6EE6               	movwf	postinc1,c
   337  001658  0E18               	movlw	high _fill_bottle
   338  00165A  6EE6               	movwf	postinc1,c
   339  00165C  0E04               	movlw	4
   340  00165E  6EE6               	movwf	postinc1,c
   341  001660  0E00               	movlw	0
   342  001662  6EE6               	movwf	postinc1,c
   343  001664  ECDA  F005         	call	_lunos_createTask	;wreg free
   344  001668  0E1E               	movlw	low _check_level
   345  00166A  6EE6               	movwf	postinc1,c
   346  00166C  0E17               	movlw	high _check_level
   347  00166E  6EE6               	movwf	postinc1,c
   348  001670  0E05               	movlw	5
   349  001672  6EE6               	movwf	postinc1,c
   350  001674  0E00               	movlw	0
   351  001676  6EE6               	movwf	postinc1,c
   352  001678  ECDA  F005         	call	_lunos_createTask	;wreg free
   353  00167C  0EB4               	movlw	low _cover_bottle
   354  00167E  6EE6               	movwf	postinc1,c
   355  001680  0E10               	movlw	high _cover_bottle
   356  001682  6EE6               	movwf	postinc1,c
   357  001684  0E05               	movlw	5
   358  001686  6EE6               	movwf	postinc1,c
   359  001688  0E00               	movlw	0
   360  00168A  6EE6               	movwf	postinc1,c
   361  00168C  ECDA  F005         	call	_lunos_createTask	;wreg free
   362  001690  0E60               	movlw	low _count_out
   363  001692  6EE6               	movwf	postinc1,c
   364  001694  0E12               	movlw	high _count_out
   365  001696  6EE6               	movwf	postinc1,c
   366  001698  0E04               	movlw	4
   367  00169A  6EE6               	movwf	postinc1,c
   368  00169C  0E00               	movlw	0
   369  00169E  6EE6               	movwf	postinc1,c
   370  0016A0  ECDA  F005         	call	_lunos_createTask	;wreg free
   371  0016A4  0E00               	movlw	0
   372  0016A6  6EE6               	movwf	postinc1,c
   373  0016A8  EC6E  F002         	call	_dispatcher	;wreg free
   374  0016AC                     l186:
   375  0016AC  D7FF               	goto	l186
   376  0016AE                     __end_of_main:
   377                           	opt callstack 0
   378                           
   379 ;; *************** function _user_conf *****************
   380 ;; Defined at:
   381 ;;		line 20 in file "tasks.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1  [STACK] void 
   388 ;; Registers used:
   389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   395 ;;      Params:         0       0       0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used:    1
   401 ;; Hardware stack levels required when called:   12
   402 ;; This function calls:
   403 ;;		_pipe_create
   404 ;;		_sem_init
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a reentrant model
   408 ;;
   409                           
   410                           	psect	text1
   411  0013E4                     __ptext1:
   412                           	opt callstack 0
   413  0013E4                     _user_conf:
   414                           	opt callstack 18
   415                           
   416                           ;tasks.c: 22:     TRISB = 0b00000101;
   417                           
   418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   419                           ;incstack = 0
   420  0013E4  0E05               	movlw	5
   421  0013E6  6E93               	movwf	3987,c	;volatile
   422                           
   423                           ;tasks.c: 23:     TRISC = 0b01111111;
   424  0013E8  0E7F               	movlw	127
   425  0013EA  6E94               	movwf	3988,c	;volatile
   426                           
   427                           ;tasks.c: 24:     TRISD = 0b00001110;
   428  0013EC  0E0E               	movlw	14
   429  0013EE  6E95               	movwf	3989,c	;volatile
   430                           
   431                           ;tasks.c: 26:     PORTBbits.RB1 = 1;
   432  0013F0  8281               	bsf	3969,1,c	;volatile
   433                           
   434                           ;tasks.c: 28:     PORTCbits.RC7 = 1;
   435  0013F2  8E82               	bsf	3970,7,c	;volatile
   436                           
   437                           ;tasks.c: 30:     PORTDbits.RD4 = 1;
   438  0013F4  8883               	bsf	3971,4,c	;volatile
   439                           
   440                           ;tasks.c: 31:     PORTDbits.RD5 = 1;
   441  0013F6  8A83               	bsf	3971,5,c	;volatile
   442                           
   443                           ;tasks.c: 32:     PORTDbits.RD6 = 1;
   444  0013F8  8C83               	bsf	3971,6,c	;volatile
   445                           
   446                           ;tasks.c: 33:     PORTDbits.RD7 = 1;
   447  0013FA  8E83               	bsf	3971,7,c	;volatile
   448                           
   449                           ;tasks.c: 35:     sem_init(&count_sem, 1);
   450  0013FC  0E01               	movlw	1
   451  0013FE  6EE6               	movwf	postinc1,c
   452  001400  0E00               	movlw	0
   453  001402  6EE6               	movwf	postinc1,c
   454  001404  0E2B               	movlw	low _count_sem
   455  001406  6EE6               	movwf	postinc1,c
   456  001408  0E00               	movlw	high _count_sem
   457  00140A  6EE6               	movwf	postinc1,c
   458  00140C  EC57  F00B         	call	_sem_init	;wreg free
   459                           
   460                           ;tasks.c: 36:     sem_init(&fill_sem, 0);
   461  001410  0E00               	movlw	0
   462  001412  6EE6               	movwf	postinc1,c
   463  001414  0E00               	movlw	0
   464  001416  6EE6               	movwf	postinc1,c
   465  001418  0E1B               	movlw	low _fill_sem
   466  00141A  6EE6               	movwf	postinc1,c
   467  00141C  0E00               	movlw	high _fill_sem
   468  00141E  6EE6               	movwf	postinc1,c
   469  001420  EC57  F00B         	call	_sem_init	;wreg free
   470                           
   471                           ;tasks.c: 37:     sem_init(&check_sem, 0);
   472  001424  0E00               	movlw	0
   473  001426  6EE6               	movwf	postinc1,c
   474  001428  0E00               	movlw	0
   475  00142A  6EE6               	movwf	postinc1,c
   476  00142C  0E0B               	movlw	low _check_sem
   477  00142E  6EE6               	movwf	postinc1,c
   478  001430  0E00               	movlw	high _check_sem
   479  001432  6EE6               	movwf	postinc1,c
   480  001434  EC57  F00B         	call	_sem_init	;wreg free
   481                           
   482                           ;tasks.c: 38:     sem_init(&cover_sem, 0);
   483  001438  0E00               	movlw	0
   484  00143A  6EE6               	movwf	postinc1,c
   485  00143C  0E00               	movlw	0
   486  00143E  6EE6               	movwf	postinc1,c
   487  001440  0EB0               	movlw	low _cover_sem
   488  001442  6EE6               	movwf	postinc1,c
   489  001444  0E00               	movlw	high _cover_sem
   490  001446  6EE6               	movwf	postinc1,c
   491  001448  EC57  F00B         	call	_sem_init	;wreg free
   492                           
   493                           ;tasks.c: 39:     sem_init(&out_sem, 0);
   494  00144C  0E00               	movlw	0
   495  00144E  6EE6               	movwf	postinc1,c
   496  001450  0E00               	movlw	0
   497  001452  6EE6               	movwf	postinc1,c
   498  001454  0EA0               	movlw	low _out_sem
   499  001456  6EE6               	movwf	postinc1,c
   500  001458  0E00               	movlw	high _out_sem
   501  00145A  6EE6               	movwf	postinc1,c
   502  00145C  EC57  F00B         	call	_sem_init	;wreg free
   503                           
   504                           ;tasks.c: 40:     pipe_create(&p, &w_pipe, &r_pipe);
   505  001460  0E80               	movlw	low _r_pipe
   506  001462  6EE6               	movwf	postinc1,c
   507  001464  0E00               	movlw	high _r_pipe
   508  001466  6EE6               	movwf	postinc1,c
   509  001468  0E90               	movlw	low _w_pipe
   510  00146A  6EE6               	movwf	postinc1,c
   511  00146C  0E00               	movlw	high _w_pipe
   512  00146E  6EE6               	movwf	postinc1,c
   513  001470  0E3B               	movlw	low _p
   514  001472  6EE6               	movwf	postinc1,c
   515  001474  0E00               	movlw	high _p
   516  001476  6EE6               	movwf	postinc1,c
   517  001478  EC53  F005         	call	_pipe_create	;wreg free
   518                           
   519                           ;tasks.c: 43:     global_buffer.count = 0;
   520  00147C  6A01               	clrf	_global_buffer,c
   521  00147E  6A02               	clrf	_global_buffer+1,c
   522                           
   523                           ;tasks.c: 44:     global_buffer.p_state = FREE_;
   524  001480  6A06               	clrf	_global_buffer+5,c
   525                           
   526                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   527  001482  0012               	return		;funcret
   528  001484                     __end_of_user_conf:
   529                           	opt callstack 0
   530                           
   531 ;; *************** function _pipe_create *****************
   532 ;; Defined at:
   533 ;;		line 9 in file "pipe.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  p               2  [STACK] PTR struct pipe
   536 ;;		 -> p(12), 
   537 ;;  w               2  [STACK] PTR struct semaphore
   538 ;;		 -> w_pipe(16), 
   539 ;;  r               2  [STACK] PTR struct semaphore
   540 ;;		 -> r_pipe(16), 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1  [STACK] void 
   545 ;; Registers used:
   546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   552 ;;      Params:         0       0       0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0
   555 ;;      Totals:         0       0       0       0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:   11
   559 ;; This function calls:
   560 ;;		_sem_init
   561 ;; This function is called by:
   562 ;;		_user_conf
   563 ;; This function uses a reentrant model
   564 ;;
   565                           
   566                           	psect	text2
   567  000AA6                     __ptext2:
   568                           	opt callstack 0
   569  000AA6                     _pipe_create:
   570                           	opt callstack 18
   571                           
   572                           ;pipe.c: 10:   p->index_write = 0;
   573                           ;stkvar	_p @ sp[(0)+-2]
   574                           
   575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   576                           ;incstack = 0
   577  000AA6  0EFE               	movlw	-2
   578  000AA8  CFE3 F051          	movff	plusw1,btemp+10
   579  000AAC  0EFF               	movlw	-1
   580  000AAE  CFE3 F052          	movff	plusw1,btemp+11
   581  000AB2  0E04               	movlw	4
   582  000AB4  2451               	addwf	btemp+10,w,c
   583  000AB6  6ED9               	movwf	fsr2l,c
   584  000AB8  0E00               	movlw	0
   585  000ABA  2052               	addwfc	btemp+11,w,c
   586  000ABC  6EDA               	movwf	fsr2h,c
   587  000ABE  0E00               	movlw	0
   588  000AC0  6EDE               	movwf	postinc2,c
   589  000AC2  0E00               	movlw	0
   590  000AC4  6EDD               	movwf	postdec2,c
   591                           
   592                           ;pipe.c: 11:   p->index_read = 0;
   593                           ;stkvar	_p @ sp[(0)+-2]
   594  000AC6  0EFE               	movlw	-2
   595  000AC8  CFE3 F051          	movff	plusw1,btemp+10
   596  000ACC  0EFF               	movlw	-1
   597  000ACE  CFE3 F052          	movff	plusw1,btemp+11
   598  000AD2  0E06               	movlw	6
   599  000AD4  2451               	addwf	btemp+10,w,c
   600  000AD6  6ED9               	movwf	fsr2l,c
   601  000AD8  0E00               	movlw	0
   602  000ADA  2052               	addwfc	btemp+11,w,c
   603  000ADC  6EDA               	movwf	fsr2h,c
   604  000ADE  0E00               	movlw	0
   605  000AE0  6EDE               	movwf	postinc2,c
   606  000AE2  0E00               	movlw	0
   607  000AE4  6EDD               	movwf	postdec2,c
   608                           
   609                           ;pipe.c: 12:   p->w = w;
   610                           ;stkvar	_w @ sp[(0)+-4]
   611  000AE6  50E1               	movf	fsr1l,w,c
   612  000AE8  0FFC               	addlw	-4
   613  000AEA  6ED9               	movwf	fsr2l,c
   614  000AEC  50E2               	movf	fsr1h,w,c
   615  000AEE  6EDA               	movwf	fsr2h,c
   616  000AF0  0EFF               	movlw	255
   617  000AF2  22DA               	addwfc	fsr2h,f,c
   618                           
   619                           ;stkvar	_p @ sp[(0)+-2]
   620  000AF4  0EFE               	movlw	-2
   621  000AF6  CFE3 F051          	movff	plusw1,btemp+10
   622  000AFA  0EFF               	movlw	-1
   623  000AFC  CFE3 F052          	movff	plusw1,btemp+11
   624  000B00  0E08               	movlw	8
   625  000B02  2451               	addwf	btemp+10,w,c
   626  000B04  6EE9               	movwf	fsr0l,c
   627  000B06  0E00               	movlw	0
   628  000B08  2052               	addwfc	btemp+11,w,c
   629  000B0A  6EEA               	movwf	fsr0h,c
   630  000B0C  CFDE FFEE          	movff	postinc2,postinc0
   631  000B10  CFDD FFED          	movff	postdec2,postdec0
   632                           
   633                           ;pipe.c: 13:   p->r = r;
   634                           ;stkvar	_r @ sp[(0)+-6]
   635  000B14  50E1               	movf	fsr1l,w,c
   636  000B16  0FFA               	addlw	-6
   637  000B18  6ED9               	movwf	fsr2l,c
   638  000B1A  50E2               	movf	fsr1h,w,c
   639  000B1C  6EDA               	movwf	fsr2h,c
   640  000B1E  0EFF               	movlw	255
   641  000B20  22DA               	addwfc	fsr2h,f,c
   642                           
   643                           ;stkvar	_p @ sp[(0)+-2]
   644  000B22  0EFE               	movlw	-2
   645  000B24  CFE3 F051          	movff	plusw1,btemp+10
   646  000B28  0EFF               	movlw	-1
   647  000B2A  CFE3 F052          	movff	plusw1,btemp+11
   648  000B2E  0E0A               	movlw	10
   649  000B30  2451               	addwf	btemp+10,w,c
   650  000B32  6EE9               	movwf	fsr0l,c
   651  000B34  0E00               	movlw	0
   652  000B36  2052               	addwfc	btemp+11,w,c
   653  000B38  6EEA               	movwf	fsr0h,c
   654  000B3A  CFDE FFEE          	movff	postinc2,postinc0
   655  000B3E  CFDD FFED          	movff	postdec2,postdec0
   656                           
   657                           ;pipe.c: 14:   sem_init(p->w, 2);
   658  000B42  0E02               	movlw	2
   659  000B44  6EE6               	movwf	postinc1,c
   660  000B46  0E00               	movlw	0
   661  000B48  6EE6               	movwf	postinc1,c
   662                           
   663                           ;stkvar	_p @ sp[(-2)+-2]
   664  000B4A  0EFC               	movlw	-4
   665  000B4C  CFE3 F051          	movff	plusw1,btemp+10
   666  000B50  0EFD               	movlw	-3
   667  000B52  CFE3 F052          	movff	plusw1,btemp+11
   668  000B56  0E08               	movlw	8
   669  000B58  2451               	addwf	btemp+10,w,c
   670  000B5A  6ED9               	movwf	fsr2l,c
   671  000B5C  0E00               	movlw	0
   672  000B5E  2052               	addwfc	btemp+11,w,c
   673  000B60  6EDA               	movwf	fsr2h,c
   674  000B62  CFDE F051          	movff	postinc2,btemp+10
   675  000B66  CFDD F052          	movff	postdec2,btemp+11
   676  000B6A  C051  FFE6         	movff	btemp+10,postinc1
   677  000B6E  C052  FFE6         	movff	btemp+11,postinc1
   678  000B72  EC57  F00B         	call	_sem_init	;wreg free
   679                           
   680                           ;pipe.c: 15:   sem_init(p->r, 0);
   681  000B76  0E00               	movlw	0
   682  000B78  6EE6               	movwf	postinc1,c
   683  000B7A  0E00               	movlw	0
   684  000B7C  6EE6               	movwf	postinc1,c
   685                           
   686                           ;stkvar	_p @ sp[(-2)+-2]
   687  000B7E  0EFC               	movlw	-4
   688  000B80  CFE3 F051          	movff	plusw1,btemp+10
   689  000B84  0EFD               	movlw	-3
   690  000B86  CFE3 F052          	movff	plusw1,btemp+11
   691  000B8A  0E0A               	movlw	10
   692  000B8C  2451               	addwf	btemp+10,w,c
   693  000B8E  6ED9               	movwf	fsr2l,c
   694  000B90  0E00               	movlw	0
   695  000B92  2052               	addwfc	btemp+11,w,c
   696  000B94  6EDA               	movwf	fsr2h,c
   697  000B96  CFDE F051          	movff	postinc2,btemp+10
   698  000B9A  CFDD F052          	movff	postdec2,btemp+11
   699  000B9E  C051  FFE6         	movff	btemp+10,postinc1
   700  000BA2  C052  FFE6         	movff	btemp+11,postinc1
   701  000BA6  EC57  F00B         	call	_sem_init	;wreg free
   702                           
   703                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
   704  000BAA  0EFA               	movlw	250
   705  000BAC  26E1               	addwf	fsr1l,f,c
   706  000BAE  0EFF               	movlw	255
   707  000BB0  22E2               	addwfc	fsr1h,f,c
   708  000BB2  0012               	return		;funcret
   709  000BB4                     __end_of_pipe_create:
   710                           	opt callstack 0
   711                           
   712 ;; *************** function _sem_init *****************
   713 ;; Defined at:
   714 ;;		line 10 in file "semaphore.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  s               2  [STACK] PTR struct semaphore
   717 ;;		 -> r_pipe(16), w_pipe(16), out_sem(16), cover_sem(16), 
   718 ;;		 -> check_sem(16), fill_sem(16), count_sem(16), 
   719 ;;  valor           2  [STACK] int 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1  [STACK] void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   731 ;;      Params:         0       0       0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0
   734 ;;      Totals:         0       0       0       0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:   10
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_pipe_create
   742 ;;		_user_conf
   743 ;; This function uses a reentrant model
   744 ;;
   745                           
   746                           	psect	text3
   747  0016AE                     __ptext3:
   748                           	opt callstack 0
   749  0016AE                     _sem_init:
   750                           	opt callstack 19
   751                           
   752                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   753                           
   754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   755                           ;incstack = 0
   756  0016AE  9EF2               	bcf	4082,7,c	;volatile
   757                           
   758                           ;semaphore.c: 13:   s->contador = valor;
   759                           ;stkvar	_valor @ sp[(0)+-4]
   760  0016B0  50E1               	movf	fsr1l,w,c
   761  0016B2  0FFC               	addlw	-4
   762  0016B4  6ED9               	movwf	fsr2l,c
   763  0016B6  50E2               	movf	fsr1h,w,c
   764  0016B8  6EDA               	movwf	fsr2h,c
   765  0016BA  0EFF               	movlw	255
   766  0016BC  22DA               	addwfc	fsr2h,f,c
   767                           
   768                           ;stkvar	_s @ sp[(0)+-2]
   769  0016BE  0EFE               	movlw	-2
   770  0016C0  CFE3 FFE9          	movff	plusw1,fsr0l
   771  0016C4  0EFF               	movlw	-1
   772  0016C6  CFE3 FFEA          	movff	plusw1,fsr0h
   773  0016CA  CFDE FFEE          	movff	postinc2,postinc0
   774  0016CE  CFDD FFED          	movff	postdec2,postdec0
   775                           
   776                           ;semaphore.c: 14:   s->bloqued_size = 0;
   777                           ;stkvar	_s @ sp[(0)+-2]
   778  0016D2  0EFE               	movlw	-2
   779  0016D4  CFE3 F051          	movff	plusw1,btemp+10
   780  0016D8  0EFF               	movlw	-1
   781  0016DA  CFE3 F052          	movff	plusw1,btemp+11
   782  0016DE  0E0C               	movlw	12
   783  0016E0  2451               	addwf	btemp+10,w,c
   784  0016E2  6ED9               	movwf	fsr2l,c
   785  0016E4  0E00               	movlw	0
   786  0016E6  2052               	addwfc	btemp+11,w,c
   787  0016E8  6EDA               	movwf	fsr2h,c
   788  0016EA  0E00               	movlw	0
   789  0016EC  6EDE               	movwf	postinc2,c
   790  0016EE  0E00               	movlw	0
   791  0016F0  6EDD               	movwf	postdec2,c
   792                           
   793                           ;semaphore.c: 15:   s->task_to_ready = 0;
   794                           ;stkvar	_s @ sp[(0)+-2]
   795  0016F2  0EFE               	movlw	-2
   796  0016F4  CFE3 F051          	movff	plusw1,btemp+10
   797  0016F8  0EFF               	movlw	-1
   798  0016FA  CFE3 F052          	movff	plusw1,btemp+11
   799  0016FE  0E0E               	movlw	14
   800  001700  2451               	addwf	btemp+10,w,c
   801  001702  6ED9               	movwf	fsr2l,c
   802  001704  0E00               	movlw	0
   803  001706  2052               	addwfc	btemp+11,w,c
   804  001708  6EDA               	movwf	fsr2h,c
   805  00170A  0E00               	movlw	0
   806  00170C  6EDE               	movwf	postinc2,c
   807  00170E  0E00               	movlw	0
   808  001710  6EDD               	movwf	postdec2,c
   809                           
   810                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   811  001712  8EF2               	bsf	4082,7,c	;volatile
   812                           
   813                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   814  001714  52E5               	movf	postdec1,f,c
   815  001716  52E5               	movf	postdec1,f,c
   816  001718  52E5               	movf	postdec1,f,c
   817  00171A  52E5               	movf	postdec1,f,c
   818  00171C  0012               	return		;funcret
   819  00171E                     __end_of_sem_init:
   820                           	opt callstack 0
   821                           
   822 ;; *************** function _lunos_init *****************
   823 ;; Defined at:
   824 ;;		line 51 in file "kernel.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1  [STACK] void 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   838 ;;      Params:         0       0       0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0
   841 ;;      Totals:         0       0       0       0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:   11
   845 ;; This function calls:
   846 ;;		_SRAMInitHeap
   847 ;;		_lunos_createTask
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a reentrant model
   851 ;;
   852                           
   853                           	psect	text4
   854  00186A                     __ptext4:
   855                           	opt callstack 0
   856  00186A                     _lunos_init:
   857                           	opt callstack 19
   858                           
   859                           ;kernel.c: 52:   SRAMInitHeap();
   860                           
   861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   862                           ;incstack = 0
   863  00186A  ECC9  F008         	call	_SRAMInitHeap	;wreg free
   864                           
   865                           ;kernel.c: 53:   ready_queue.task_running = 0;
   866  00186E  0E00               	movlw	0
   867  001870  CFE8 F356          	movff	wreg,_ready_queue+662
   868  001874  0E00               	movlw	0
   869  001876  CFE8 F357          	movff	wreg,_ready_queue+663
   870                           
   871                           ;kernel.c: 54:   ready_queue.tasks_installed = 0;
   872  00187A  0E00               	movlw	0
   873  00187C  CFE8 F354          	movff	wreg,_ready_queue+660
   874  001880  0E00               	movlw	0
   875  001882  CFE8 F355          	movff	wreg,_ready_queue+661
   876                           
   877                           ;kernel.c: 55:   lunos_createTask(0, &task_idle);
   878  001886  0EC4               	movlw	low _task_idle
   879  001888  6EE6               	movwf	postinc1,c
   880  00188A  0E18               	movlw	high _task_idle
   881  00188C  6EE6               	movwf	postinc1,c
   882  00188E  0E00               	movlw	0
   883  001890  6EE6               	movwf	postinc1,c
   884  001892  0E00               	movlw	0
   885  001894  6EE6               	movwf	postinc1,c
   886  001896  ECDA  F005         	call	_lunos_createTask	;wreg free
   887                           
   888                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
   889  00189A  0012               	return		;funcret
   890  00189C                     __end_of_lunos_init:
   891                           	opt callstack 0
   892                           
   893 ;; *************** function _lunos_createTask *****************
   894 ;; Defined at:
   895 ;;		line 14 in file "kernel.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  prior           2  [STACK] unsigned int 
   898 ;;  f               2  [STACK] PTR FTN()void 
   899 ;;		 -> count_out(1), cover_bottle(1), check_level(1), fill_bottle(1), 
   900 ;;		 -> count_bottles(1), task_idle(1), 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  new_task      110  [STACK] struct pcb
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1  [STACK] void 
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   912 ;;      Params:         0       0       0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0
   915 ;;      Totals:         0       0       0       0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:   10
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_lunos_init
   923 ;;		_main
   924 ;; This function uses a reentrant model
   925 ;;
   926                           
   927                           	psect	text5
   928  000BB4                     __ptext5:
   929                           	opt callstack 0
   930  000BB4                     _lunos_createTask:
   931                           	opt callstack 0
   932                           
   933                           ; autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
   934  000BB4  0E6E               	movlw	110
   935  000BB6  26E1               	addwf	fsr1l,f,c
   936  000BB8  0E00               	movlw	0
   937  000BBA  22E2               	addwfc	fsr1h,f,c
   938                           
   939                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
   940                           
   941                           ;incstack = 0
   942  000BBC  EE23  F054         	lfsr	2,_ready_queue+660
   943  000BC0  CFDE F051          	movff	postinc2,btemp+10
   944  000BC4  CFDD F052          	movff	postdec2,btemp+11
   945  000BC8  0E01               	movlw	1
   946  000BCA  2651               	addwf	btemp+10,f,c
   947  000BCC  0E00               	movlw	0
   948  000BCE  2252               	addwfc	btemp+11,f,c
   949                           
   950                           ;stkvar	_new_task @ sp[(-110)+0]
   951  000BD0  0E92               	movlw	-110
   952  000BD2  C051  FFE3         	movff	btemp+10,plusw1
   953  000BD6  0E93               	movlw	-109
   954  000BD8  C052  FFE3         	movff	btemp+11,plusw1
   955                           
   956                           ;kernel.c: 19:   new_task.task_prior = prior;
   957                           ;stkvar	_prior @ sp[(-110)+-2]
   958  000BDC  50E1               	movf	fsr1l,w,c
   959  000BDE  0F90               	addlw	-112
   960  000BE0  6ED9               	movwf	fsr2l,c
   961  000BE2  50E2               	movf	fsr1h,w,c
   962  000BE4  6EDA               	movwf	fsr2h,c
   963  000BE6  0EFF               	movlw	255
   964  000BE8  22DA               	addwfc	fsr2h,f,c
   965                           
   966                           ;stkvar	_new_task @ sp[(-110)+0]
   967  000BEA  0E94               	movlw	148
   968  000BEC  24E1               	addwf	fsr1l,w,c
   969  000BEE  6EE9               	movwf	fsr0l,c
   970  000BF0  0EFF               	movlw	255
   971  000BF2  20E2               	addwfc	fsr1h,w,c
   972  000BF4  6EEA               	movwf	fsr0h,c
   973  000BF6  CFDE FFEE          	movff	postinc2,postinc0
   974  000BFA  CFDD FFED          	movff	postdec2,postdec0
   975                           
   976                           ;kernel.c: 20:   new_task.task_state = READY;
   977                           ;stkvar	_new_task @ sp[(-110)+0]
   978  000BFE  0E9A               	movlw	154
   979  000C00  24E1               	addwf	fsr1l,w,c
   980  000C02  6ED9               	movwf	fsr2l,c
   981  000C04  0EFF               	movlw	255
   982  000C06  20E2               	addwfc	fsr1h,w,c
   983  000C08  6EDA               	movwf	fsr2h,c
   984  000C0A  0E00               	movlw	0
   985  000C0C  6EDF               	movwf	indf2,c
   986                           
   987                           ;kernel.c: 21:   new_task.task_f = f;
   988                           ;stkvar	_f @ sp[(-110)+-4]
   989  000C0E  50E1               	movf	fsr1l,w,c
   990  000C10  0F8E               	addlw	-114
   991  000C12  6ED9               	movwf	fsr2l,c
   992  000C14  50E2               	movf	fsr1h,w,c
   993  000C16  6EDA               	movwf	fsr2h,c
   994  000C18  0EFF               	movlw	255
   995  000C1A  22DA               	addwfc	fsr2h,f,c
   996                           
   997                           ;stkvar	_new_task @ sp[(-110)+0]
   998  000C1C  0EFC               	movlw	252
   999  000C1E  24E1               	addwf	fsr1l,w,c
  1000  000C20  6EE9               	movwf	fsr0l,c
  1001  000C22  0EFF               	movlw	255
  1002  000C24  20E2               	addwfc	fsr1h,w,c
  1003  000C26  6EEA               	movwf	fsr0h,c
  1004  000C28  CFDE FFEE          	movff	postinc2,postinc0
  1005  000C2C  CFDD FFED          	movff	postdec2,postdec0
  1006                           
  1007                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
  1008                           ;stkvar	_new_task @ sp[(-110)+0]
  1009  000C30  0EF8               	movlw	248
  1010  000C32  24E1               	addwf	fsr1l,w,c
  1011  000C34  6ED9               	movwf	fsr2l,c
  1012  000C36  0EFF               	movlw	255
  1013  000C38  20E2               	addwfc	fsr1h,w,c
  1014  000C3A  6EDA               	movwf	fsr2h,c
  1015  000C3C  0E00               	movlw	0
  1016  000C3E  6EDE               	movwf	postinc2,c
  1017  000C40  0E00               	movlw	0
  1018  000C42  6EDD               	movwf	postdec2,c
  1019                           
  1020                           ;kernel.c: 23:   new_task.task_delay_time = 0;
  1021                           ;stkvar	_new_task @ sp[(-110)+0]
  1022  000C44  0EFE               	movlw	254
  1023  000C46  24E1               	addwf	fsr1l,w,c
  1024  000C48  6ED9               	movwf	fsr2l,c
  1025  000C4A  0EFF               	movlw	255
  1026  000C4C  20E2               	addwfc	fsr1h,w,c
  1027  000C4E  6EDA               	movwf	fsr2h,c
  1028  000C50  0E00               	movlw	0
  1029  000C52  6EDE               	movwf	postinc2,c
  1030  000C54  0E00               	movlw	0
  1031  000C56  6EDD               	movwf	postdec2,c
  1032                           
  1033                           ;kernel.c: 24:   new_task.task_installed = 0;
  1034                           ;stkvar	_new_task @ sp[(-110)+0]
  1035  000C58  0EFA               	movlw	250
  1036  000C5A  24E1               	addwf	fsr1l,w,c
  1037  000C5C  6ED9               	movwf	fsr2l,c
  1038  000C5E  0EFF               	movlw	255
  1039  000C60  20E2               	addwfc	fsr1h,w,c
  1040  000C62  6EDA               	movwf	fsr2h,c
  1041  000C64  0E00               	movlw	0
  1042  000C66  6EDE               	movwf	postinc2,c
  1043  000C68  0E00               	movlw	0
  1044  000C6A  6EDD               	movwf	postdec2,c
  1045                           
  1046                           ;kernel.c: 27:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
  1047                           ;stkvar	_new_task @ sp[(-110)+0]
  1048  000C6C  0E92               	movlw	146
  1049  000C6E  24E1               	addwf	fsr1l,w,c
  1050  000C70  6ED9               	movwf	fsr2l,c
  1051  000C72  0EFF               	movlw	255
  1052  000C74  20E2               	addwfc	fsr1h,w,c
  1053  000C76  6EDA               	movwf	fsr2h,c
  1054  000C78  EE03  F054         	lfsr	0,_ready_queue+660
  1055  000C7C  CFEE F051          	movff	postinc0,btemp+10
  1056  000C80  CFED F052          	movff	postdec0,btemp+11
  1057  000C84  0E6E               	movlw	110
  1058  000C86  0251               	mulwf	btemp+10,c
  1059  000C88  CFF3 F04F          	movff	prodl,btemp+8
  1060  000C8C  CFF4 F050          	movff	prodh,btemp+9
  1061  000C90  0252               	mulwf	btemp+11,c
  1062  000C92  50F3               	movf	prodl,w,c
  1063  000C94  2650               	addwf	btemp+9,f,c
  1064  000C96  0EC0               	movlw	low _ready_queue
  1065  000C98  244F               	addwf	btemp+8,w,c
  1066  000C9A  6EE9               	movwf	fsr0l,c
  1067  000C9C  0E00               	movlw	high _ready_queue
  1068  000C9E  2050               	addwfc	btemp+9,w,c
  1069  000CA0  6EEA               	movwf	fsr0h,c
  1070  000CA2  0E6D               	movlw	109
  1071  000CA4                     u431:
  1072  000CA4  CFDB FFEB          	movff	plusw2,plusw0
  1073  000CA8  06E8               	decf	wreg,f,c
  1074  000CAA  E2FC               	bc	u431
  1075                           
  1076                           ;kernel.c: 28:   ready_queue.tasks_installed++;
  1077  000CAC  EE23  F054         	lfsr	2,_ready_queue+660
  1078  000CB0  2ADE               	incf	postinc2,f,c
  1079  000CB2  0E00               	movlw	0
  1080  000CB4  22DD               	addwfc	postdec2,f,c
  1081                           
  1082                           ; _lunos_createTask: autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
  1083  000CB6  0E8E               	movlw	142
  1084  000CB8  26E1               	addwf	fsr1l,f,c
  1085  000CBA  0EFF               	movlw	255
  1086  000CBC  22E2               	addwfc	fsr1h,f,c
  1087  000CBE  0012               	return		;funcret
  1088  000CC0                     __end_of_lunos_createTask:
  1089                           	opt callstack 0
  1090                           
  1091 ;; *************** function _SRAMInitHeap *****************
  1092 ;; Defined at:
  1093 ;;		line 313 in file "sralloc.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  count           2  [STACK] unsigned int 
  1098 ;;  pHeap           2  [STACK] PTR unsigned char 
  1099 ;;		 -> _uDynamicHeap(512), 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1  [STACK] void 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1109 ;;      Params:         0       0       0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:   10
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_lunos_init
  1120 ;; This function uses a reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text6
  1124  001192                     __ptext6:
  1125                           	opt callstack 0
  1126  001192                     _SRAMInitHeap:
  1127                           	opt callstack 0
  1128                           
  1129                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1130  001192  52E6               	movf	postinc1,f,c
  1131  001194  52E6               	movf	postinc1,f,c
  1132  001196  52E6               	movf	postinc1,f,c
  1133  001198  52E6               	movf	postinc1,f,c
  1134                           
  1135                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
  1136                           ;stkvar	_pHeap @ sp[(-4)+2]
  1137                           
  1138                           ;incstack = 0
  1139  00119A  0E03               	movlw	high __uDynamicHeap
  1140  00119C  6E47               	movwf	btemp,c
  1141  00119E  0EFF               	movlw	-1
  1142  0011A0  C047  FFE3         	movff	btemp,plusw1
  1143  0011A4  0E58               	movlw	low __uDynamicHeap
  1144  0011A6  6E47               	movwf	btemp,c
  1145  0011A8  0EFE               	movlw	-2
  1146  0011AA  C047  FFE3         	movff	btemp,plusw1
  1147                           
  1148                           ;sralloc.c: 319:  count = 0x200 -1;
  1149  0011AE  0EFF               	movlw	255
  1150  0011B0  6E51               	movwf	btemp+10,c
  1151  0011B2  0E01               	movlw	1
  1152  0011B4  6E52               	movwf	btemp+11,c
  1153                           
  1154                           ;stkvar	_count @ sp[(-4)+0]
  1155  0011B6  0EFC               	movlw	-4
  1156  0011B8  C051  FFE3         	movff	btemp+10,plusw1
  1157  0011BC  0EFD               	movlw	-3
  1158  0011BE  C052  FFE3         	movff	btemp+11,plusw1
  1159  0011C2                     l1598:
  1160                           
  1161                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
  1162                           ;stkvar	_count @ sp[(-4)+0]
  1163  0011C2  0EFD               	movlw	-3
  1164  0011C4  50E3               	movf	plusw1,w,c
  1165  0011C6  E107               	bnz	u440
  1166  0011C8  0EFC               	movlw	-4
  1167  0011CA  CFE3 F047          	movff	plusw1,btemp
  1168  0011CE  0E80               	movlw	128
  1169  0011D0  5E47               	subwf	btemp,f,c
  1170  0011D2  A0D8               	btfss	status,0,c
  1171  0011D4  D023               	goto	l1606
  1172  0011D6                     u440:
  1173                           
  1174                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
  1175                           ;stkvar	_pHeap @ sp[(-4)+2]
  1176  0011D6  0EFE               	movlw	-2
  1177  0011D8  CFE3 FFD9          	movff	plusw1,fsr2l
  1178  0011DC  0EFF               	movlw	-1
  1179  0011DE  CFE3 FFDA          	movff	plusw1,fsr2h
  1180  0011E2  0E7F               	movlw	127
  1181  0011E4  6EDF               	movwf	indf2,c
  1182                           
  1183                           ;sralloc.c: 326:    pHeap += 0x7F;
  1184                           ;stkvar	_pHeap @ sp[(-4)+2]
  1185  0011E6  0EFE               	movlw	-2
  1186  0011E8  50E3               	movf	plusw1,w,c
  1187  0011EA  0F7F               	addlw	127
  1188  0011EC  6E47               	movwf	btemp,c
  1189  0011EE  0EFE               	movlw	-2
  1190  0011F0  C047  FFE3         	movff	btemp,plusw1
  1191  0011F4  6A47               	clrf	btemp,c
  1192  0011F6  0EFF               	movlw	-1
  1193  0011F8  50E3               	movf	plusw1,w,c
  1194  0011FA  2047               	addwfc	btemp,w,c
  1195  0011FC  6E47               	movwf	btemp,c
  1196  0011FE  0EFF               	movlw	-1
  1197  001200  C047  FFE3         	movff	btemp,plusw1
  1198                           
  1199                           ;sralloc.c: 327:    count = count - 0x7F;
  1200                           ;stkvar	_count @ sp[(-4)+0]
  1201  001204  50E1               	movf	fsr1l,w,c
  1202  001206  0FFC               	addlw	-4
  1203  001208  6ED9               	movwf	fsr2l,c
  1204  00120A  50E2               	movf	fsr1h,w,c
  1205  00120C  6EDA               	movwf	fsr2h,c
  1206  00120E  0EFF               	movlw	255
  1207  001210  22DA               	addwfc	fsr2h,f,c
  1208  001212  0E81               	movlw	129
  1209  001214  26DE               	addwf	postinc2,f,c
  1210  001216  0EFF               	movlw	255
  1211  001218  22DD               	addwfc	postdec2,f,c
  1212                           
  1213                           ;sralloc.c: 328:   }
  1214  00121A  D7D3               	goto	l1598
  1215  00121C                     l1606:
  1216                           
  1217                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1218                           ;stkvar	_count @ sp[(-4)+0]
  1219                           ;stkvar	_pHeap @ sp[(-4)+2]
  1220  00121C  0EFE               	movlw	-2
  1221  00121E  CFE3 FFD9          	movff	plusw1,fsr2l
  1222  001222  0EFF               	movlw	-1
  1223  001224  CFE3 FFDA          	movff	plusw1,fsr2h
  1224  001228  0EFC               	movlw	-4
  1225  00122A  CFE3 FFDF          	movff	plusw1,indf2
  1226                           
  1227                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1228                           ;stkvar	_count @ sp[(-4)+0]
  1229  00122E  0EFC               	movlw	-4
  1230  001230  CFE3 F051          	movff	plusw1,btemp+10
  1231  001234  0EFD               	movlw	-3
  1232  001236  CFE3 F052          	movff	plusw1,btemp+11
  1233                           
  1234                           ;stkvar	_pHeap @ sp[(-4)+2]
  1235  00123A  0EFE               	movlw	-2
  1236  00123C  CFE3 F04F          	movff	plusw1,btemp+8
  1237  001240  0EFF               	movlw	-1
  1238  001242  CFE3 F050          	movff	plusw1,btemp+9
  1239  001246  5051               	movf	btemp+10,w,c
  1240  001248  244F               	addwf	btemp+8,w,c
  1241  00124A  6ED9               	movwf	fsr2l,c
  1242  00124C  5052               	movf	btemp+11,w,c
  1243  00124E  2050               	addwfc	btemp+9,w,c
  1244  001250  6EDA               	movwf	fsr2h,c
  1245  001252  0E00               	movlw	0
  1246  001254  6EDF               	movwf	indf2,c
  1247                           
  1248                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1249  001256  52E5               	movf	postdec1,f,c
  1250  001258  52E5               	movf	postdec1,f,c
  1251  00125A  52E5               	movf	postdec1,f,c
  1252  00125C  52E5               	movf	postdec1,f,c
  1253  00125E  0012               	return		;funcret
  1254  001260                     __end_of_SRAMInitHeap:
  1255                           	opt callstack 0
  1256                           
  1257 ;; *************** function _dispatcher *****************
  1258 ;; Defined at:
  1259 ;;		line 66 in file "kernel.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  state           1  [STACK] enum E4
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1  [STACK] void 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1273 ;;      Params:         0       0       0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0
  1276 ;;      Totals:         0       0       0       0       0       0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:   13
  1280 ;; This function calls:
  1281 ;;		_scheduler
  1282 ;; This function is called by:
  1283 ;;		_lunos_delayTask
  1284 ;;		_main
  1285 ;;		_sem_wait
  1286 ;; This function uses a reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text7
  1290  0004DC                     __ptext7:
  1291                           	opt callstack 0
  1292  0004DC                     _dispatcher:
  1293                           	opt callstack 11
  1294                           
  1295                           ;kernel.c: 67:   INTCONbits.GIE = 0;
  1296                           
  1297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1298                           ;incstack = 0
  1299  0004DC  9EF2               	bcf	4082,7,c	;volatile
  1300                           
  1301                           ;kernel.c: 69:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size;};
  1302  0004DE  C356  F009         	movff	_ready_queue+662,_who
  1303  0004E2  C357  F00A         	movff	_ready_queue+663,_who+1
  1304                           
  1305                           ;stkvar	_state @ sp[(0)+-1]
  1306  0004E6  C009  F051         	movff	_who,btemp+10
  1307  0004EA  C00A  F052         	movff	_who+1,btemp+11
  1308  0004EE  0E6E               	movlw	110
  1309  0004F0  0251               	mulwf	btemp+10,c
  1310  0004F2  CFF3 F04F          	movff	prodl,btemp+8
  1311  0004F6  CFF4 F050          	movff	prodh,btemp+9
  1312  0004FA  0252               	mulwf	btemp+11,c
  1313  0004FC  50F3               	movf	prodl,w,c
  1314  0004FE  2650               	addwf	btemp+9,f,c
  1315  000500  0EC8               	movlw	low (_ready_queue+8)
  1316  000502  244F               	addwf	btemp+8,w,c
  1317  000504  6ED9               	movwf	fsr2l,c
  1318  000506  0E00               	movlw	high (_ready_queue+8)
  1319  000508  2050               	addwfc	btemp+9,w,c
  1320  00050A  6EDA               	movwf	fsr2h,c
  1321  00050C  0EFF               	movlw	-1
  1322  00050E  CFE3 FFDF          	movff	plusw1,indf2
  1323  000512  C009  F051         	movff	_who,btemp+10
  1324  000516  C00A  F052         	movff	_who+1,btemp+11
  1325  00051A  0E6E               	movlw	110
  1326  00051C  0251               	mulwf	btemp+10,c
  1327  00051E  CFF3 F04F          	movff	prodl,btemp+8
  1328  000522  CFF4 F050          	movff	prodh,btemp+9
  1329  000526  0252               	mulwf	btemp+11,c
  1330  000528  50F3               	movf	prodl,w,c
  1331  00052A  2650               	addwf	btemp+9,f,c
  1332  00052C  0EC5               	movlw	low (_ready_queue+5)
  1333  00052E  244F               	addwf	btemp+8,w,c
  1334  000530  6ED9               	movwf	fsr2l,c
  1335  000532  0E00               	movlw	high (_ready_queue+5)
  1336  000534  2050               	addwfc	btemp+9,w,c
  1337  000536  6EDA               	movwf	fsr2h,c
  1338  000538  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1339  00053C  C009  F051         	movff	_who,btemp+10
  1340  000540  C00A  F052         	movff	_who+1,btemp+11
  1341  000544  0E6E               	movlw	110
  1342  000546  0251               	mulwf	btemp+10,c
  1343  000548  CFF3 F04F          	movff	prodl,btemp+8
  1344  00054C  CFF4 F050          	movff	prodh,btemp+9
  1345  000550  0252               	mulwf	btemp+11,c
  1346  000552  50F3               	movf	prodl,w,c
  1347  000554  2650               	addwf	btemp+9,f,c
  1348  000556  0EC6               	movlw	low (_ready_queue+6)
  1349  000558  244F               	addwf	btemp+8,w,c
  1350  00055A  6ED9               	movwf	fsr2l,c
  1351  00055C  0E00               	movlw	high (_ready_queue+6)
  1352  00055E  2050               	addwfc	btemp+9,w,c
  1353  000560  6EDA               	movwf	fsr2h,c
  1354  000562  CFD8 FFDF          	movff	status,indf2	;volatile
  1355  000566  C009  F051         	movff	_who,btemp+10
  1356  00056A  C00A  F052         	movff	_who+1,btemp+11
  1357  00056E  0E6E               	movlw	110
  1358  000570  0251               	mulwf	btemp+10,c
  1359  000572  CFF3 F04F          	movff	prodl,btemp+8
  1360  000576  CFF4 F050          	movff	prodh,btemp+9
  1361  00057A  0252               	mulwf	btemp+11,c
  1362  00057C  50F3               	movf	prodl,w,c
  1363  00057E  2650               	addwf	btemp+9,f,c
  1364  000580  0EC7               	movlw	low (_ready_queue+7)
  1365  000582  244F               	addwf	btemp+8,w,c
  1366  000584  6ED9               	movwf	fsr2l,c
  1367  000586  0E00               	movlw	high (_ready_queue+7)
  1368  000588  2050               	addwfc	btemp+9,w,c
  1369  00058A  6EDA               	movwf	fsr2h,c
  1370  00058C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1371  000590  6A07               	clrf	_size,c
  1372  000592  6A08               	clrf	_size+1,c
  1373  000594  D08D               	goto	l1544
  1374  000596                     l1540:
  1375  000596  C007  F051         	movff	_size,btemp+10
  1376  00059A  C008  F052         	movff	_size+1,btemp+11
  1377  00059E  0E03               	movlw	3
  1378  0005A0  0251               	mulwf	btemp+10,c
  1379  0005A2  CFF3 F04F          	movff	prodl,btemp+8
  1380  0005A6  CFF4 F050          	movff	prodh,btemp+9
  1381  0005AA  0252               	mulwf	btemp+11,c
  1382  0005AC  50F3               	movf	prodl,w,c
  1383  0005AE  2650               	addwf	btemp+9,f,c
  1384  0005B0  C009  F051         	movff	_who,btemp+10
  1385  0005B4  C00A  F052         	movff	_who+1,btemp+11
  1386  0005B8  0E6E               	movlw	110
  1387  0005BA  0251               	mulwf	btemp+10,c
  1388  0005BC  CFF3 F04D          	movff	prodl,btemp+6
  1389  0005C0  CFF4 F04E          	movff	prodh,btemp+7
  1390  0005C4  0252               	mulwf	btemp+11,c
  1391  0005C6  50F3               	movf	prodl,w,c
  1392  0005C8  264E               	addwf	btemp+7,f,c
  1393  0005CA  0EC0               	movlw	low _ready_queue
  1394  0005CC  6E51               	movwf	btemp+10,c
  1395  0005CE  0E00               	movlw	high _ready_queue
  1396  0005D0  6E52               	movwf	btemp+11,c
  1397  0005D2  0E09               	movlw	9
  1398  0005D4  2651               	addwf	btemp+10,f,c
  1399  0005D6  0E00               	movlw	0
  1400  0005D8  2252               	addwfc	btemp+11,f,c
  1401  0005DA  504D               	movf	btemp+6,w,c
  1402  0005DC  2651               	addwf	btemp+10,f,c
  1403  0005DE  504E               	movf	btemp+7,w,c
  1404  0005E0  2252               	addwfc	btemp+11,f,c
  1405  0005E2  504F               	movf	btemp+8,w,c
  1406  0005E4  2451               	addwf	btemp+10,w,c
  1407  0005E6  6ED9               	movwf	fsr2l,c
  1408  0005E8  5050               	movf	btemp+9,w,c
  1409  0005EA  2052               	addwfc	btemp+11,w,c
  1410  0005EC  6EDA               	movwf	fsr2h,c
  1411  0005EE  CFFF FFDF          	movff	tosu,indf2	;volatile
  1412  0005F2  C007  F051         	movff	_size,btemp+10
  1413  0005F6  C008  F052         	movff	_size+1,btemp+11
  1414  0005FA  0E03               	movlw	3
  1415  0005FC  0251               	mulwf	btemp+10,c
  1416  0005FE  CFF3 F04F          	movff	prodl,btemp+8
  1417  000602  CFF4 F050          	movff	prodh,btemp+9
  1418  000606  0252               	mulwf	btemp+11,c
  1419  000608  50F3               	movf	prodl,w,c
  1420  00060A  2650               	addwf	btemp+9,f,c
  1421  00060C  C009  F051         	movff	_who,btemp+10
  1422  000610  C00A  F052         	movff	_who+1,btemp+11
  1423  000614  0E6E               	movlw	110
  1424  000616  0251               	mulwf	btemp+10,c
  1425  000618  CFF3 F04D          	movff	prodl,btemp+6
  1426  00061C  CFF4 F04E          	movff	prodh,btemp+7
  1427  000620  0252               	mulwf	btemp+11,c
  1428  000622  50F3               	movf	prodl,w,c
  1429  000624  264E               	addwf	btemp+7,f,c
  1430  000626  0EC0               	movlw	low _ready_queue
  1431  000628  6E51               	movwf	btemp+10,c
  1432  00062A  0E00               	movlw	high _ready_queue
  1433  00062C  6E52               	movwf	btemp+11,c
  1434  00062E  0E0B               	movlw	11
  1435  000630  2651               	addwf	btemp+10,f,c
  1436  000632  0E00               	movlw	0
  1437  000634  2252               	addwfc	btemp+11,f,c
  1438  000636  504D               	movf	btemp+6,w,c
  1439  000638  2651               	addwf	btemp+10,f,c
  1440  00063A  504E               	movf	btemp+7,w,c
  1441  00063C  2252               	addwfc	btemp+11,f,c
  1442  00063E  504F               	movf	btemp+8,w,c
  1443  000640  2451               	addwf	btemp+10,w,c
  1444  000642  6ED9               	movwf	fsr2l,c
  1445  000644  5050               	movf	btemp+9,w,c
  1446  000646  2052               	addwfc	btemp+11,w,c
  1447  000648  6EDA               	movwf	fsr2h,c
  1448  00064A  CFFE FFDF          	movff	tosh,indf2	;volatile
  1449  00064E  C007  F051         	movff	_size,btemp+10
  1450  000652  C008  F052         	movff	_size+1,btemp+11
  1451  000656  0E03               	movlw	3
  1452  000658  0251               	mulwf	btemp+10,c
  1453  00065A  CFF3 F04F          	movff	prodl,btemp+8
  1454  00065E  CFF4 F050          	movff	prodh,btemp+9
  1455  000662  0252               	mulwf	btemp+11,c
  1456  000664  50F3               	movf	prodl,w,c
  1457  000666  2650               	addwf	btemp+9,f,c
  1458  000668  C009  F051         	movff	_who,btemp+10
  1459  00066C  C00A  F052         	movff	_who+1,btemp+11
  1460  000670  0E6E               	movlw	110
  1461  000672  0251               	mulwf	btemp+10,c
  1462  000674  CFF3 F04D          	movff	prodl,btemp+6
  1463  000678  CFF4 F04E          	movff	prodh,btemp+7
  1464  00067C  0252               	mulwf	btemp+11,c
  1465  00067E  50F3               	movf	prodl,w,c
  1466  000680  264E               	addwf	btemp+7,f,c
  1467  000682  0EC0               	movlw	low _ready_queue
  1468  000684  6E51               	movwf	btemp+10,c
  1469  000686  0E00               	movlw	high _ready_queue
  1470  000688  6E52               	movwf	btemp+11,c
  1471  00068A  0E0A               	movlw	10
  1472  00068C  2651               	addwf	btemp+10,f,c
  1473  00068E  0E00               	movlw	0
  1474  000690  2252               	addwfc	btemp+11,f,c
  1475  000692  504D               	movf	btemp+6,w,c
  1476  000694  2651               	addwf	btemp+10,f,c
  1477  000696  504E               	movf	btemp+7,w,c
  1478  000698  2252               	addwfc	btemp+11,f,c
  1479  00069A  504F               	movf	btemp+8,w,c
  1480  00069C  2451               	addwf	btemp+10,w,c
  1481  00069E  6ED9               	movwf	fsr2l,c
  1482  0006A0  5050               	movf	btemp+9,w,c
  1483  0006A2  2052               	addwfc	btemp+11,w,c
  1484  0006A4  6EDA               	movwf	fsr2h,c
  1485  0006A6  CFFD FFDF          	movff	tosl,indf2	;volatile
  1486  0006AA  4A07               	infsnz	_size,f,c
  1487  0006AC  2A08               	incf	_size+1,f,c
  1488  0006AE  0006               	pop		;# 
  1489  0006B0                     l1544:
  1490  0006B0  50FC               	movf	stkptr,w,c	;volatile
  1491  0006B2  A4D8               	btfss	status,2,c
  1492  0006B4  D770               	goto	l1540
  1493  0006B6  C009  F051         	movff	_who,btemp+10
  1494  0006BA  C00A  F052         	movff	_who+1,btemp+11
  1495  0006BE  0E6E               	movlw	110
  1496  0006C0  0251               	mulwf	btemp+10,c
  1497  0006C2  CFF3 F04F          	movff	prodl,btemp+8
  1498  0006C6  CFF4 F050          	movff	prodh,btemp+9
  1499  0006CA  0252               	mulwf	btemp+11,c
  1500  0006CC  50F3               	movf	prodl,w,c
  1501  0006CE  2650               	addwf	btemp+9,f,c
  1502  0006D0  0E26               	movlw	low (_ready_queue+102)
  1503  0006D2  244F               	addwf	btemp+8,w,c
  1504  0006D4  6ED9               	movwf	fsr2l,c
  1505  0006D6  0E01               	movlw	high (_ready_queue+102)
  1506  0006D8  2050               	addwfc	btemp+9,w,c
  1507  0006DA  6EDA               	movwf	fsr2h,c
  1508  0006DC  C007  FFDE         	movff	_size,postinc2
  1509  0006E0  C008  FFDD         	movff	_size+1,postdec2
  1510                           
  1511                           ;kernel.c: 71:   ready_queue.task_running = scheduler();
  1512  0006E4  EC5F  F00C         	call	_scheduler	;wreg free
  1513  0006E8  C047  F356         	movff	btemp,_ready_queue+662
  1514  0006EC  C048  F357         	movff	btemp+1,_ready_queue+663
  1515                           
  1516                           ;kernel.c: 73:   { STKPTR = 0; who = ready_queue.task_running; if (ready_queue.tasks[who
      +                          ].task_installed == 0) { ready_queue.tasks[who].task_installed = 1; __asm("PUSH"); TOS =
      +                           ready_queue.tasks[who].task_f; } else { ready_queue.tasks[who].task_state = RUNNING; WR
      +                          EG = ready_queue.tasks[who].W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = rea
      +                          dy_queue.tasks[who].BSR_reg; size = ready_queue.tasks[who].task_stack.stack_level; while
      +                          (size){ __asm("PUSH"); TOSL = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSL_reg
      +                          ; TOSH = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSH_reg; TOSU = ready_queue.
      +                          tasks[who].task_stack.h_stack[size-1].TOSU_reg; size--; } }};
  1517  0006F0  6AFC               	clrf	stkptr,c	;volatile
  1518  0006F2  C356  F009         	movff	_ready_queue+662,_who
  1519  0006F6  C357  F00A         	movff	_ready_queue+663,_who+1
  1520  0006FA  C009  F051         	movff	_who,btemp+10
  1521  0006FE  C00A  F052         	movff	_who+1,btemp+11
  1522  000702  0E6E               	movlw	110
  1523  000704  0251               	mulwf	btemp+10,c
  1524  000706  CFF3 F04F          	movff	prodl,btemp+8
  1525  00070A  CFF4 F050          	movff	prodh,btemp+9
  1526  00070E  0252               	mulwf	btemp+11,c
  1527  000710  50F3               	movf	prodl,w,c
  1528  000712  2650               	addwf	btemp+9,f,c
  1529  000714  0E28               	movlw	low (_ready_queue+104)
  1530  000716  244F               	addwf	btemp+8,w,c
  1531  000718  6ED9               	movwf	fsr2l,c
  1532  00071A  0E01               	movlw	high (_ready_queue+104)
  1533  00071C  2050               	addwfc	btemp+9,w,c
  1534  00071E  6EDA               	movwf	fsr2h,c
  1535  000720  50DE               	movf	postinc2,w,c
  1536  000722  10DE               	iorwf	postinc2,w,c
  1537  000724  A4D8               	btfss	status,2,c
  1538  000726  D035               	goto	l1558
  1539  000728  C009  F051         	movff	_who,btemp+10
  1540  00072C  C00A  F052         	movff	_who+1,btemp+11
  1541  000730  0E6E               	movlw	110
  1542  000732  0251               	mulwf	btemp+10,c
  1543  000734  CFF3 F04F          	movff	prodl,btemp+8
  1544  000738  CFF4 F050          	movff	prodh,btemp+9
  1545  00073C  0252               	mulwf	btemp+11,c
  1546  00073E  50F3               	movf	prodl,w,c
  1547  000740  2650               	addwf	btemp+9,f,c
  1548  000742  0E28               	movlw	low (_ready_queue+104)
  1549  000744  244F               	addwf	btemp+8,w,c
  1550  000746  6ED9               	movwf	fsr2l,c
  1551  000748  0E01               	movlw	high (_ready_queue+104)
  1552  00074A  2050               	addwfc	btemp+9,w,c
  1553  00074C  6EDA               	movwf	fsr2h,c
  1554  00074E  0E01               	movlw	1
  1555  000750  6EDE               	movwf	postinc2,c
  1556  000752  0E00               	movlw	0
  1557  000754  6EDD               	movwf	postdec2,c
  1558  000756  0005               	push		;# 
  1559  000758  C009  F051         	movff	_who,btemp+10
  1560  00075C  C00A  F052         	movff	_who+1,btemp+11
  1561  000760  0E6E               	movlw	110
  1562  000762  0251               	mulwf	btemp+10,c
  1563  000764  CFF3 F04F          	movff	prodl,btemp+8
  1564  000768  CFF4 F050          	movff	prodh,btemp+9
  1565  00076C  0252               	mulwf	btemp+11,c
  1566  00076E  50F3               	movf	prodl,w,c
  1567  000770  2650               	addwf	btemp+9,f,c
  1568  000772  0E2A               	movlw	low (_ready_queue+106)
  1569  000774  244F               	addwf	btemp+8,w,c
  1570  000776  6ED9               	movwf	fsr2l,c
  1571  000778  0E01               	movlw	high (_ready_queue+106)
  1572  00077A  2050               	addwfc	btemp+9,w,c
  1573  00077C  6EDA               	movwf	fsr2h,c
  1574  00077E  CFDE F051          	movff	postinc2,btemp+10
  1575  000782  CFDD F052          	movff	postdec2,btemp+11
  1576  000786  C051  FFFD         	movff	btemp+10,tosl	;volatile
  1577  00078A  C052  FFFE         	movff	btemp+11,tosh	;volatile
  1578  00078E  6AFF               	clrf	tosu,c	;volatile
  1579  000790  D0FF               	goto	u420
  1580  000792                     l1558:
  1581  000792  C009  F051         	movff	_who,btemp+10
  1582  000796  C00A  F052         	movff	_who+1,btemp+11
  1583  00079A  0E6E               	movlw	110
  1584  00079C  0251               	mulwf	btemp+10,c
  1585  00079E  CFF3 F04F          	movff	prodl,btemp+8
  1586  0007A2  CFF4 F050          	movff	prodh,btemp+9
  1587  0007A6  0252               	mulwf	btemp+11,c
  1588  0007A8  50F3               	movf	prodl,w,c
  1589  0007AA  2650               	addwf	btemp+9,f,c
  1590  0007AC  0EC8               	movlw	low (_ready_queue+8)
  1591  0007AE  244F               	addwf	btemp+8,w,c
  1592  0007B0  6ED9               	movwf	fsr2l,c
  1593  0007B2  0E00               	movlw	high (_ready_queue+8)
  1594  0007B4  2050               	addwfc	btemp+9,w,c
  1595  0007B6  6EDA               	movwf	fsr2h,c
  1596  0007B8  0E01               	movlw	1
  1597  0007BA  6EDF               	movwf	indf2,c
  1598  0007BC  C009  F051         	movff	_who,btemp+10
  1599  0007C0  C00A  F052         	movff	_who+1,btemp+11
  1600  0007C4  0E6E               	movlw	110
  1601  0007C6  0251               	mulwf	btemp+10,c
  1602  0007C8  CFF3 F04F          	movff	prodl,btemp+8
  1603  0007CC  CFF4 F050          	movff	prodh,btemp+9
  1604  0007D0  0252               	mulwf	btemp+11,c
  1605  0007D2  50F3               	movf	prodl,w,c
  1606  0007D4  2650               	addwf	btemp+9,f,c
  1607  0007D6  0EC5               	movlw	low (_ready_queue+5)
  1608  0007D8  244F               	addwf	btemp+8,w,c
  1609  0007DA  6ED9               	movwf	fsr2l,c
  1610  0007DC  0E00               	movlw	high (_ready_queue+5)
  1611  0007DE  2050               	addwfc	btemp+9,w,c
  1612  0007E0  6EDA               	movwf	fsr2h,c
  1613  0007E2  50DF               	movf	indf2,w,c
  1614  0007E4  6E52               	movwf	btemp+11,c
  1615  0007E6  5052               	movf	btemp+11,w,c
  1616  0007E8  C009  F051         	movff	_who,btemp+10
  1617  0007EC  C00A  F052         	movff	_who+1,btemp+11
  1618  0007F0  0E6E               	movlw	110
  1619  0007F2  0251               	mulwf	btemp+10,c
  1620  0007F4  CFF3 F04F          	movff	prodl,btemp+8
  1621  0007F8  CFF4 F050          	movff	prodh,btemp+9
  1622  0007FC  0252               	mulwf	btemp+11,c
  1623  0007FE  50F3               	movf	prodl,w,c
  1624  000800  2650               	addwf	btemp+9,f,c
  1625  000802  0EC6               	movlw	low (_ready_queue+6)
  1626  000804  244F               	addwf	btemp+8,w,c
  1627  000806  6ED9               	movwf	fsr2l,c
  1628  000808  0E00               	movlw	high (_ready_queue+6)
  1629  00080A  2050               	addwfc	btemp+9,w,c
  1630  00080C  6EDA               	movwf	fsr2h,c
  1631  00080E  50DF               	movf	indf2,w,c
  1632  000810  6ED8               	movwf	status,c	;volatile
  1633  000812  C009  F051         	movff	_who,btemp+10
  1634  000816  C00A  F052         	movff	_who+1,btemp+11
  1635  00081A  0E6E               	movlw	110
  1636  00081C  0251               	mulwf	btemp+10,c
  1637  00081E  CFF3 F04F          	movff	prodl,btemp+8
  1638  000822  CFF4 F050          	movff	prodh,btemp+9
  1639  000826  0252               	mulwf	btemp+11,c
  1640  000828  50F3               	movf	prodl,w,c
  1641  00082A  2650               	addwf	btemp+9,f,c
  1642  00082C  0EC7               	movlw	low (_ready_queue+7)
  1643  00082E  244F               	addwf	btemp+8,w,c
  1644  000830  6ED9               	movwf	fsr2l,c
  1645  000832  0E00               	movlw	high (_ready_queue+7)
  1646  000834  2050               	addwfc	btemp+9,w,c
  1647  000836  6EDA               	movwf	fsr2h,c
  1648  000838  50DF               	movf	indf2,w,c
  1649  00083A  6EE0               	movwf	bsr,c	;volatile
  1650  00083C  C009  F051         	movff	_who,btemp+10
  1651  000840  C00A  F052         	movff	_who+1,btemp+11
  1652  000844  0E6E               	movlw	110
  1653  000846  0251               	mulwf	btemp+10,c
  1654  000848  CFF3 F04F          	movff	prodl,btemp+8
  1655  00084C  CFF4 F050          	movff	prodh,btemp+9
  1656  000850  0252               	mulwf	btemp+11,c
  1657  000852  50F3               	movf	prodl,w,c
  1658  000854  2650               	addwf	btemp+9,f,c
  1659  000856  0E26               	movlw	low (_ready_queue+102)
  1660  000858  244F               	addwf	btemp+8,w,c
  1661  00085A  6ED9               	movwf	fsr2l,c
  1662  00085C  0E01               	movlw	high (_ready_queue+102)
  1663  00085E  2050               	addwfc	btemp+9,w,c
  1664  000860  6EDA               	movwf	fsr2h,c
  1665  000862  CFDE F007          	movff	postinc2,_size
  1666  000866  CFDD F008          	movff	postdec2,_size+1
  1667  00086A  D08E               	goto	l1564
  1668  00086C                     l127:
  1669  00086C  0005               	push		;# 
  1670  00086E  C007  F051         	movff	_size,btemp+10
  1671  000872  C008  F052         	movff	_size+1,btemp+11
  1672  000876  0E03               	movlw	3
  1673  000878  0251               	mulwf	btemp+10,c
  1674  00087A  CFF3 F04F          	movff	prodl,btemp+8
  1675  00087E  CFF4 F050          	movff	prodh,btemp+9
  1676  000882  0252               	mulwf	btemp+11,c
  1677  000884  50F3               	movf	prodl,w,c
  1678  000886  2650               	addwf	btemp+9,f,c
  1679  000888  C009  F051         	movff	_who,btemp+10
  1680  00088C  C00A  F052         	movff	_who+1,btemp+11
  1681  000890  0E6E               	movlw	110
  1682  000892  0251               	mulwf	btemp+10,c
  1683  000894  CFF3 F04D          	movff	prodl,btemp+6
  1684  000898  CFF4 F04E          	movff	prodh,btemp+7
  1685  00089C  0252               	mulwf	btemp+11,c
  1686  00089E  50F3               	movf	prodl,w,c
  1687  0008A0  264E               	addwf	btemp+7,f,c
  1688  0008A2  0EC0               	movlw	low _ready_queue
  1689  0008A4  6E51               	movwf	btemp+10,c
  1690  0008A6  0E00               	movlw	high _ready_queue
  1691  0008A8  6E52               	movwf	btemp+11,c
  1692  0008AA  0E07               	movlw	7
  1693  0008AC  2651               	addwf	btemp+10,f,c
  1694  0008AE  0E00               	movlw	0
  1695  0008B0  2252               	addwfc	btemp+11,f,c
  1696  0008B2  504D               	movf	btemp+6,w,c
  1697  0008B4  2651               	addwf	btemp+10,f,c
  1698  0008B6  504E               	movf	btemp+7,w,c
  1699  0008B8  2252               	addwfc	btemp+11,f,c
  1700  0008BA  504F               	movf	btemp+8,w,c
  1701  0008BC  2451               	addwf	btemp+10,w,c
  1702  0008BE  6ED9               	movwf	fsr2l,c
  1703  0008C0  5050               	movf	btemp+9,w,c
  1704  0008C2  2052               	addwfc	btemp+11,w,c
  1705  0008C4  6EDA               	movwf	fsr2h,c
  1706  0008C6  50DF               	movf	indf2,w,c
  1707  0008C8  6EFD               	movwf	tosl,c	;volatile
  1708  0008CA  C007  F051         	movff	_size,btemp+10
  1709  0008CE  C008  F052         	movff	_size+1,btemp+11
  1710  0008D2  0E03               	movlw	3
  1711  0008D4  0251               	mulwf	btemp+10,c
  1712  0008D6  CFF3 F04F          	movff	prodl,btemp+8
  1713  0008DA  CFF4 F050          	movff	prodh,btemp+9
  1714  0008DE  0252               	mulwf	btemp+11,c
  1715  0008E0  50F3               	movf	prodl,w,c
  1716  0008E2  2650               	addwf	btemp+9,f,c
  1717  0008E4  C009  F051         	movff	_who,btemp+10
  1718  0008E8  C00A  F052         	movff	_who+1,btemp+11
  1719  0008EC  0E6E               	movlw	110
  1720  0008EE  0251               	mulwf	btemp+10,c
  1721  0008F0  CFF3 F04D          	movff	prodl,btemp+6
  1722  0008F4  CFF4 F04E          	movff	prodh,btemp+7
  1723  0008F8  0252               	mulwf	btemp+11,c
  1724  0008FA  50F3               	movf	prodl,w,c
  1725  0008FC  264E               	addwf	btemp+7,f,c
  1726  0008FE  0EC0               	movlw	low _ready_queue
  1727  000900  6E51               	movwf	btemp+10,c
  1728  000902  0E00               	movlw	high _ready_queue
  1729  000904  6E52               	movwf	btemp+11,c
  1730  000906  0E08               	movlw	8
  1731  000908  2651               	addwf	btemp+10,f,c
  1732  00090A  0E00               	movlw	0
  1733  00090C  2252               	addwfc	btemp+11,f,c
  1734  00090E  504D               	movf	btemp+6,w,c
  1735  000910  2651               	addwf	btemp+10,f,c
  1736  000912  504E               	movf	btemp+7,w,c
  1737  000914  2252               	addwfc	btemp+11,f,c
  1738  000916  504F               	movf	btemp+8,w,c
  1739  000918  2451               	addwf	btemp+10,w,c
  1740  00091A  6ED9               	movwf	fsr2l,c
  1741  00091C  5050               	movf	btemp+9,w,c
  1742  00091E  2052               	addwfc	btemp+11,w,c
  1743  000920  6EDA               	movwf	fsr2h,c
  1744  000922  50DF               	movf	indf2,w,c
  1745  000924  6EFE               	movwf	tosh,c	;volatile
  1746  000926  C007  F051         	movff	_size,btemp+10
  1747  00092A  C008  F052         	movff	_size+1,btemp+11
  1748  00092E  0E03               	movlw	3
  1749  000930  0251               	mulwf	btemp+10,c
  1750  000932  CFF3 F04F          	movff	prodl,btemp+8
  1751  000936  CFF4 F050          	movff	prodh,btemp+9
  1752  00093A  0252               	mulwf	btemp+11,c
  1753  00093C  50F3               	movf	prodl,w,c
  1754  00093E  2650               	addwf	btemp+9,f,c
  1755  000940  C009  F051         	movff	_who,btemp+10
  1756  000944  C00A  F052         	movff	_who+1,btemp+11
  1757  000948  0E6E               	movlw	110
  1758  00094A  0251               	mulwf	btemp+10,c
  1759  00094C  CFF3 F04D          	movff	prodl,btemp+6
  1760  000950  CFF4 F04E          	movff	prodh,btemp+7
  1761  000954  0252               	mulwf	btemp+11,c
  1762  000956  50F3               	movf	prodl,w,c
  1763  000958  264E               	addwf	btemp+7,f,c
  1764  00095A  0EC0               	movlw	low _ready_queue
  1765  00095C  6E51               	movwf	btemp+10,c
  1766  00095E  0E00               	movlw	high _ready_queue
  1767  000960  6E52               	movwf	btemp+11,c
  1768  000962  0E06               	movlw	6
  1769  000964  2651               	addwf	btemp+10,f,c
  1770  000966  0E00               	movlw	0
  1771  000968  2252               	addwfc	btemp+11,f,c
  1772  00096A  504D               	movf	btemp+6,w,c
  1773  00096C  2651               	addwf	btemp+10,f,c
  1774  00096E  504E               	movf	btemp+7,w,c
  1775  000970  2252               	addwfc	btemp+11,f,c
  1776  000972  504F               	movf	btemp+8,w,c
  1777  000974  2451               	addwf	btemp+10,w,c
  1778  000976  6ED9               	movwf	fsr2l,c
  1779  000978  5050               	movf	btemp+9,w,c
  1780  00097A  2052               	addwfc	btemp+11,w,c
  1781  00097C  6EDA               	movwf	fsr2h,c
  1782  00097E  50DF               	movf	indf2,w,c
  1783  000980  6EFF               	movwf	tosu,c	;volatile
  1784  000982  0607               	decf	_size,f,c
  1785  000984  A0D8               	btfss	status,0,c
  1786  000986  0608               	decf	_size+1,f,c
  1787  000988                     l1564:
  1788  000988  5007               	movf	_size,w,c
  1789  00098A  1008               	iorwf	_size+1,w,c
  1790  00098C  A4D8               	btfss	status,2,c
  1791  00098E  D76E               	goto	l127
  1792  000990                     u420:
  1793                           
  1794                           ;kernel.c: 75:   INTCONbits.GIE = 1;
  1795  000990  8EF2               	bsf	4082,7,c	;volatile
  1796                           
  1797                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  1798  000992  52E5               	movf	postdec1,f,c
  1799  000994  0012               	return		;funcret
  1800  000996                     __end_of_dispatcher:
  1801                           	opt callstack 0
  1802                           
  1803 ;; *************** function _scheduler *****************
  1804 ;; Defined at:
  1805 ;;		line 58 in file "kernel.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  2  [STACK] unsigned int 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1819 ;;      Params:         0       0       0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:   12
  1826 ;; This function calls:
  1827 ;;		_round_robin
  1828 ;; This function is called by:
  1829 ;;		_dispatcher
  1830 ;; This function uses a reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text8
  1834  0018BE                     __ptext8:
  1835                           	opt callstack 0
  1836  0018BE                     _scheduler:
  1837                           	opt callstack 11
  1838                           
  1839                           ;kernel.c: 60:   return round_robin();
  1840                           
  1841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1842                           ;incstack = 0
  1843  0018BE  EC8D  F00A         	call	_round_robin	;wreg free
  1844                           
  1845                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  1846  0018C2  0012               	return		;funcret
  1847  0018C4                     __end_of_scheduler:
  1848                           	opt callstack 0
  1849                           
  1850 ;; *************** function _round_robin *****************
  1851 ;; Defined at:
  1852 ;;		line 78 in file "kernel.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  next_task_to    2  [STACK] int 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  2  [STACK] unsigned int 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1866 ;;      Params:         0       0       0       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0
  1869 ;;      Totals:         0       0       0       0       0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:   11
  1873 ;; This function calls:
  1874 ;;		___lwmod
  1875 ;; This function is called by:
  1876 ;;		_ISR_timer0
  1877 ;;		_scheduler
  1878 ;; This function uses a reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text9
  1882  00151A                     __ptext9:
  1883                           	opt callstack 0
  1884  00151A                     _round_robin:
  1885                           	opt callstack 0
  1886                           
  1887                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1888  00151A  52E6               	movf	postinc1,f,c
  1889  00151C  52E6               	movf	postinc1,f,c
  1890                           
  1891                           ;kernel.c: 79:   int next_task_to_run = ready_queue.task_running;
  1892                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1893                           
  1894                           ;incstack = 0
  1895  00151E  0EFE               	movlw	-2
  1896  001520  C356  FFE3         	movff	_ready_queue+662,plusw1
  1897  001524  0EFF               	movlw	-1
  1898  001526  C357  FFE3         	movff	_ready_queue+663,plusw1
  1899  00152A                     l1686:
  1900                           
  1901                           ;kernel.c: 82:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  1902  00152A  EE23  F054         	lfsr	2,_ready_queue+660
  1903  00152E  CFDE F051          	movff	postinc2,btemp+10
  1904  001532  CFDD F052          	movff	postdec2,btemp+11
  1905  001536  C051  FFE6         	movff	btemp+10,postinc1
  1906  00153A  C052  FFE6         	movff	btemp+11,postinc1
  1907                           
  1908                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  1909  00153E  0EFC               	movlw	-4
  1910  001540  50E3               	movf	plusw1,w,c
  1911  001542  0F01               	addlw	1
  1912  001544  6E51               	movwf	btemp+10,c
  1913  001546  0EFD               	movlw	-3
  1914  001548  CFE3 F052          	movff	plusw1,btemp+11
  1915  00154C  0E00               	movlw	0
  1916  00154E  2252               	addwfc	btemp+11,f,c
  1917  001550  C051  FFE6         	movff	btemp+10,postinc1
  1918  001554  C052  FFE6         	movff	btemp+11,postinc1
  1919  001558  EC94  F009         	call	___lwmod	;wreg free
  1920                           
  1921                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1922  00155C  0EFE               	movlw	-2
  1923  00155E  C047  FFE3         	movff	btemp,plusw1
  1924  001562  0EFF               	movlw	-1
  1925  001564  C048  FFE3         	movff	btemp+1,plusw1
  1926                           
  1927                           ;kernel.c: 83:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  1928                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1929  001568  0EFE               	movlw	-2
  1930  00156A  CFE3 F051          	movff	plusw1,btemp+10
  1931  00156E  0EFF               	movlw	-1
  1932  001570  CFE3 F052          	movff	plusw1,btemp+11
  1933  001574  0E6E               	movlw	110
  1934  001576  0251               	mulwf	btemp+10,c
  1935  001578  CFF3 F04F          	movff	prodl,btemp+8
  1936  00157C  CFF4 F050          	movff	prodh,btemp+9
  1937  001580  0252               	mulwf	btemp+11,c
  1938  001582  50F3               	movf	prodl,w,c
  1939  001584  2650               	addwf	btemp+9,f,c
  1940  001586  0EC8               	movlw	low (_ready_queue+8)
  1941  001588  244F               	addwf	btemp+8,w,c
  1942  00158A  6ED9               	movwf	fsr2l,c
  1943  00158C  0E00               	movlw	high (_ready_queue+8)
  1944  00158E  2050               	addwfc	btemp+9,w,c
  1945  001590  6EDA               	movwf	fsr2h,c
  1946  001592  50DF               	movf	indf2,w,c
  1947  001594  A4D8               	btfss	status,2,c
  1948  001596  D7C9               	goto	l1686
  1949                           
  1950                           ;kernel.c: 85:   return next_task_to_run;
  1951                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1952  001598  0EFE               	movlw	-2
  1953  00159A  CFE3 F047          	movff	plusw1,btemp
  1954  00159E  0EFF               	movlw	-1
  1955  0015A0  CFE3 F048          	movff	plusw1,btemp+1
  1956                           
  1957                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  1958  0015A4  52E5               	movf	postdec1,f,c
  1959  0015A6  52E5               	movf	postdec1,f,c
  1960  0015A8  0012               	return		;funcret
  1961  0015AA                     __end_of_round_robin:
  1962                           	opt callstack 0
  1963                           
  1964 ;; *************** function ___lwmod *****************
  1965 ;; Defined at:
  1966 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  dividend        2  [STACK] unsigned int 
  1969 ;;  divisor         2  [STACK] unsigned int 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  counter         1  [STACK] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  2  [STACK] unsigned int 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1981 ;;      Params:         0       0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:   10
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_round_robin
  1992 ;;		_sem_wait
  1993 ;;		_sem_post
  1994 ;; This function uses a reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text10
  1998  001328                     __ptext10:
  1999                           	opt callstack 0
  2000  001328                     ___lwmod:
  2001                           	opt callstack 0
  2002                           
  2003                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2004  001328  52E6               	movf	postinc1,f,c
  2005                           
  2006                           ;stkvar	_divisor @ sp[(-1)+-4]
  2007                           
  2008                           ;incstack = 0
  2009  00132A  0EFB               	movlw	-5
  2010  00132C  CFE3 F047          	movff	plusw1,btemp
  2011  001330  0EFC               	movlw	-4
  2012  001332  50E3               	movf	plusw1,w,c
  2013  001334  1047               	iorwf	btemp,w,c
  2014  001336  B4D8               	btfsc	status,2,c
  2015  001338  D04A               	goto	u500
  2016                           
  2017                           ;stkvar	_counter @ sp[(-1)+0]
  2018  00133A  0EFF               	movlw	-1
  2019  00133C  6AE3               	clrf	plusw1,c
  2020  00133E  D010               	goto	L1
  2021  001340                     l1652:
  2022                           
  2023                           ;stkvar	_divisor @ sp[(-1)+-4]
  2024  001340  0EFB               	movlw	-5
  2025  001342  50E3               	movf	plusw1,w,c
  2026  001344  90D8               	bcf	status,0,c
  2027  001346  34E8               	rlcf	wreg,w,c
  2028  001348  6E47               	movwf	btemp,c
  2029  00134A  0EFB               	movlw	-5
  2030  00134C  C047  FFE3         	movff	btemp,plusw1
  2031  001350  0EFC               	movlw	-4
  2032  001352  50E3               	movf	plusw1,w,c
  2033  001354  34E8               	rlcf	wreg,w,c
  2034  001356  6E47               	movwf	btemp,c
  2035  001358  0EFC               	movlw	-4
  2036  00135A  C047  FFE3         	movff	btemp,plusw1
  2037                           
  2038                           ;stkvar	_counter @ sp[(-1)+0]
  2039  00135E  0EFF               	movlw	-1
  2040  001360                     L1:
  2041  001360  2AE3               	incf	plusw1,f,c
  2042                           
  2043                           ;stkvar	_divisor @ sp[(-1)+-4]
  2044  001362  0EFC               	movlw	-4
  2045  001364  AEE3               	btfss	plusw1,7,c
  2046  001366  D7EC               	goto	l1652
  2047  001368                     u480:
  2048                           
  2049                           ;stkvar	_divisor @ sp[(-1)+-4]
  2050  001368  0EFB               	movlw	-5
  2051  00136A  CFE3 F051          	movff	plusw1,btemp+10
  2052  00136E  0EFC               	movlw	-4
  2053  001370  CFE3 F052          	movff	plusw1,btemp+11
  2054                           
  2055                           ;stkvar	_dividend @ sp[(-1)+-2]
  2056  001374  0EFD               	movlw	-3
  2057  001376  CFE3 F04F          	movff	plusw1,btemp+8
  2058  00137A  0EFE               	movlw	-2
  2059  00137C  CFE3 F050          	movff	plusw1,btemp+9
  2060  001380  5051               	movf	btemp+10,w,c
  2061  001382  5C4F               	subwf	btemp+8,w,c
  2062  001384  5052               	movf	btemp+11,w,c
  2063  001386  5850               	subwfb	btemp+9,w,c
  2064  001388  A0D8               	btfss	status,0,c
  2065  00138A  D012               	goto	l1662
  2066                           
  2067                           ;stkvar	_divisor @ sp[(-1)+-4]
  2068                           ;stkvar	_dividend @ sp[(-1)+-2]
  2069  00138C  0EFD               	movlw	-3
  2070  00138E  50E3               	movf	plusw1,w,c
  2071  001390  6E47               	movwf	btemp,c
  2072  001392  0EFB               	movlw	-5
  2073  001394  50E3               	movf	plusw1,w,c
  2074  001396  5E47               	subwf	btemp,f,c
  2075  001398  0EFD               	movlw	-3
  2076  00139A  C047  FFE3         	movff	btemp,plusw1
  2077  00139E  0EFE               	movlw	-2
  2078  0013A0  50E3               	movf	plusw1,w,c
  2079  0013A2  6E47               	movwf	btemp,c
  2080  0013A4  0EFC               	movlw	-4
  2081  0013A6  50E3               	movf	plusw1,w,c
  2082  0013A8  5A47               	subwfb	btemp,f,c
  2083  0013AA  0EFE               	movlw	-2
  2084  0013AC  C047  FFE3         	movff	btemp,plusw1
  2085  0013B0                     l1662:
  2086                           
  2087                           ;stkvar	_divisor @ sp[(-1)+-4]
  2088  0013B0  90D8               	bcf	status,0,c
  2089  0013B2  0EFC               	movlw	-4
  2090  0013B4  32E3               	rrcf	plusw1,f,c
  2091  0013B6  0EFB               	movlw	-5
  2092  0013B8  32E3               	rrcf	plusw1,f,c
  2093                           
  2094                           ;stkvar	_counter @ sp[(-1)+0]
  2095  0013BA  0EFF               	movlw	-1
  2096  0013BC  50E3               	movf	plusw1,w,c
  2097  0013BE  6E47               	movwf	btemp,c
  2098  0013C0  0E01               	movlw	1
  2099  0013C2  5E47               	subwf	btemp,f,c
  2100  0013C4  0EFF               	movlw	-1
  2101  0013C6  C047  FFE3         	movff	btemp,plusw1
  2102  0013CA  A4D8               	btfss	status,2,c
  2103  0013CC  D7CD               	goto	u480
  2104  0013CE                     u500:
  2105                           
  2106                           ;stkvar	_dividend @ sp[(-1)+-2]
  2107  0013CE  0EFD               	movlw	-3
  2108  0013D0  CFE3 F047          	movff	plusw1,btemp
  2109  0013D4  0EFE               	movlw	-2
  2110  0013D6  CFE3 F048          	movff	plusw1,btemp+1
  2111                           
  2112                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2113  0013DA  0EFB               	movlw	251
  2114  0013DC  26E1               	addwf	fsr1l,f,c
  2115  0013DE  0EFF               	movlw	255
  2116  0013E0  22E2               	addwfc	fsr1h,f,c
  2117  0013E2  0012               	return		;funcret
  2118  0013E4                     __end_of___lwmod:
  2119                           	opt callstack 0
  2120                           
  2121 ;; *************** function _config_timer0 *****************
  2122 ;; Defined at:
  2123 ;;		line 23 in file "int0_test.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1  [STACK] void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2137 ;;      Params:         0       0       0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:   10
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text11
  2152  00189C                     __ptext11:
  2153                           	opt callstack 0
  2154  00189C                     _config_timer0:
  2155                           	opt callstack 20
  2156                           
  2157                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  2158                           
  2159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2160                           ;incstack = 0
  2161  00189C  9AD5               	bcf	4053,5,c	;volatile
  2162                           
  2163                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  2164  00189E  96D5               	bcf	4053,3,c	;volatile
  2165                           
  2166                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  2167  0018A0  0E07               	movlw	7
  2168  0018A2  12D5               	iorwf	4053,f,c	;volatile
  2169                           
  2170                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  2171  0018A4  8CF2               	bsf	4082,6,c	;volatile
  2172                           
  2173                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  2174  0018A6  8AF2               	bsf	4082,5,c	;volatile
  2175                           
  2176                           ;int0_test.c: 33:   TMR0L = 252;
  2177  0018A8  0EFC               	movlw	252
  2178  0018AA  6ED6               	movwf	4054,c	;volatile
  2179                           
  2180                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2181  0018AC  0012               	return		;funcret
  2182  0018AE                     __end_of_config_timer0:
  2183                           	opt callstack 0
  2184                           
  2185 ;; *************** function _config_INT0 *****************
  2186 ;; Defined at:
  2187 ;;		line 13 in file "int0_test.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1  [STACK] void 
  2194 ;; Registers used:
  2195 ;;		None
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2201 ;;      Params:         0       0       0       0       0       0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0
  2204 ;;      Totals:         0       0       0       0       0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:   10
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text12
  2216  0018AE                     __ptext12:
  2217                           	opt callstack 0
  2218  0018AE                     _config_INT0:
  2219                           	opt callstack 20
  2220                           
  2221                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2222                           
  2223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2224                           ;incstack = 0
  2225  0018AE  9095               	bcf	3989,0,c	;volatile
  2226                           
  2227                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2228  0018B0  8EF2               	bsf	4082,7,c	;volatile
  2229                           
  2230                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2231  0018B2  88F2               	bsf	4082,4,c	;volatile
  2232                           
  2233                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2234  0018B4  88F2               	bsf	4082,4,c	;volatile
  2235                           
  2236                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2237  0018B6  92F2               	bcf	4082,1,c	;volatile
  2238                           
  2239                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2240  0018B8  9EF1               	bcf	4081,7,c	;volatile
  2241                           
  2242                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2243  0018BA  9CF1               	bcf	4081,6,c	;volatile
  2244                           
  2245                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2246  0018BC  0012               	return		;funcret
  2247  0018BE                     __end_of_config_INT0:
  2248                           	opt callstack 0
  2249                           
  2250 ;; *************** function _task_idle *****************
  2251 ;; Defined at:
  2252 ;;		line 117 in file "kernel.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1  [STACK] void 
  2259 ;; Registers used:
  2260 ;;		None
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2266 ;;      Params:         0       0       0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    3
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_lunos_init
  2277 ;; This function uses a reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text13
  2281  0018C4                     __ptext13:
  2282                           	opt callstack 0
  2283  0018C4                     _task_idle:
  2284                           	opt callstack 23
  2285                           
  2286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2287                           ;incstack = 0
  2288                           ;kernel.c: 119:   while (1) __nop();
  2289  0018C4  F000               	nop	
  2290  0018C6  D7FE               	goto	_task_idle
  2291  0018C8                     __end_of_task_idle:
  2292                           	opt callstack 0
  2293                           
  2294 ;; *************** function _count_bottles *****************
  2295 ;; Defined at:
  2296 ;;		line 47 in file "tasks.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  bottle          1  [STACK] struct .
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1  [STACK] void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2310 ;;      Params:         0       0       0       0       0       0       0
  2311 ;;      Locals:         0       0       0       0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0       0       0
  2313 ;;      Totals:         0       0       0       0       0       0       0
  2314 ;;Total ram usage:        0 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    8
  2317 ;; This function calls:
  2318 ;;		_lunos_delayTask
  2319 ;;		_sem_post
  2320 ;;		_sem_wait
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text14
  2327  0015AA                     __ptext14:
  2328                           	opt callstack 0
  2329  0015AA                     _count_bottles:
  2330                           	opt callstack 0
  2331                           
  2332                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2333  0015AA  52E6               	movf	postinc1,f,c
  2334  0015AC                     l288:
  2335                           
  2336                           ;tasks.c: 49:         sem_wait(&count_sem);
  2337  0015AC  0E2B               	movlw	low _count_sem
  2338  0015AE  6EE6               	movwf	postinc1,c
  2339  0015B0  0E00               	movlw	high _count_sem
  2340  0015B2  6EE6               	movwf	postinc1,c
  2341  0015B4  ECEA  F007         	call	_sem_wait	;wreg free
  2342                           
  2343                           ;tasks.c: 50:         PORTDbits.RD4 = 0;
  2344  0015B8  9883               	bcf	3971,4,c	;volatile
  2345                           
  2346                           ;tasks.c: 51:         if (global_buffer.p_state != BUSY_) {
  2347  0015BA  0406               	decf	_global_buffer+5,w,c
  2348  0015BC  A4D8               	btfss	status,2,c
  2349  0015BE  D026               	goto	l1858
  2350  0015C0  D02D               	goto	u63_20
  2351  0015C2                     l292:
  2352  0015C2  BC82               	btfsc	3970,6,c	;volatile
  2353  0015C4  D7FE               	goto	l292
  2354                           
  2355                           ;tasks.c: 54:                 PORTCbits.RC7 = 0;
  2356  0015C6  9E82               	bcf	3970,7,c	;volatile
  2357                           
  2358                           ;tasks.c: 55:                 lunos_delayTask(300);
  2359  0015C8  0E2C               	movlw	44
  2360  0015CA  6EE6               	movwf	postinc1,c
  2361  0015CC  0E01               	movlw	1
  2362  0015CE  6EE6               	movwf	postinc1,c
  2363  0015D0  ECC5  F00B         	call	_lunos_delayTask	;wreg free
  2364                           
  2365                           ;tasks.c: 56:                 t_bottle bottle;;tasks.c: 57:                 global_buffe
      +                          r.bottles[global_buffer.count] = bottle;
  2366                           ;stkvar	_bottle @ sp[(-1)+0]
  2367  0015D4  C001  F051         	movff	_global_buffer,btemp+10
  2368  0015D8  C002  F052         	movff	_global_buffer+1,btemp+11
  2369  0015DC  0E03               	movlw	low (_global_buffer+2)
  2370  0015DE  2451               	addwf	btemp+10,w,c
  2371  0015E0  6ED9               	movwf	fsr2l,c
  2372  0015E2  0E00               	movlw	high (_global_buffer+2)
  2373  0015E4  2052               	addwfc	btemp+11,w,c
  2374  0015E6  6EDA               	movwf	fsr2h,c
  2375  0015E8  0EFF               	movlw	-1
  2376  0015EA  CFE3 FFDF          	movff	plusw1,indf2
  2377                           
  2378                           ;tasks.c: 58:                 global_buffer.bottles[global_buffer.count].bottle_state = 
      +                          EMPTY;
  2379  0015EE  C001  F051         	movff	_global_buffer,btemp+10
  2380  0015F2  C002  F052         	movff	_global_buffer+1,btemp+11
  2381  0015F6  0E03               	movlw	low (_global_buffer+2)
  2382  0015F8  2451               	addwf	btemp+10,w,c
  2383  0015FA  6ED9               	movwf	fsr2l,c
  2384  0015FC  0E00               	movlw	high (_global_buffer+2)
  2385  0015FE  2052               	addwfc	btemp+11,w,c
  2386  001600  6EDA               	movwf	fsr2h,c
  2387  001602  0E00               	movlw	0
  2388  001604  6EDF               	movwf	indf2,c
  2389                           
  2390                           ;tasks.c: 59:                 global_buffer.count += 1;
  2391  001606  4A01               	infsnz	_global_buffer,f,c
  2392  001608  2A02               	incf	_global_buffer+1,f,c
  2393                           
  2394                           ;tasks.c: 60:                 PORTCbits.RC7 = 1;
  2395  00160A  8E82               	bsf	3970,7,c	;volatile
  2396  00160C                     l1858:
  2397                           
  2398                           ;tasks.c: 52:             while(global_buffer.count < 3){
  2399  00160C  BE02               	btfsc	_global_buffer+1,7,c
  2400  00160E  D7D9               	goto	l292
  2401  001610  5002               	movf	_global_buffer+1,w,c
  2402  001612  E104               	bnz	u63_20
  2403  001614  0E03               	movlw	3
  2404  001616  5C01               	subwf	_global_buffer,w,c
  2405  001618  A0D8               	btfss	status,0,c
  2406  00161A  D7D3               	goto	l292
  2407  00161C                     u63_20:
  2408                           
  2409                           ;tasks.c: 63:         global_buffer.p_state = BUSY_;
  2410  00161C  0E01               	movlw	1
  2411  00161E  6E06               	movwf	_global_buffer+5,c
  2412                           
  2413                           ;tasks.c: 64:         sem_post(&fill_sem);
  2414  001620  0E1B               	movlw	low _fill_sem
  2415  001622  6EE6               	movwf	postinc1,c
  2416  001624  0E00               	movlw	high _fill_sem
  2417  001626  6EE6               	movwf	postinc1,c
  2418  001628  EC69  F007         	call	_sem_post	;wreg free
  2419                           
  2420                           ;tasks.c: 65:         PORTDbits.RD4 = 1;
  2421  00162C  8883               	bsf	3971,4,c	;volatile
  2422  00162E  D7BE               	goto	l288
  2423  001630                     __end_of_count_bottles:
  2424                           	opt callstack 0
  2425                           
  2426 ;; *************** function _sem_wait *****************
  2427 ;; Defined at:
  2428 ;;		line 20 in file "semaphore.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  s               2  [STACK] PTR struct semaphore
  2431 ;;		 -> r_pipe(16), w_pipe(16), out_sem(16), cover_sem(16), 
  2432 ;;		 -> check_sem(16), fill_sem(16), count_sem(16), 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1  [STACK] void 
  2437 ;; Registers used:
  2438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2444 ;;      Params:         0       0       0       0       0       0       0
  2445 ;;      Locals:         0       0       0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0
  2447 ;;      Totals:         0       0       0       0       0       0       0
  2448 ;;Total ram usage:        0 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    7
  2451 ;; This function calls:
  2452 ;;		___lwmod
  2453 ;;		_dispatcher
  2454 ;; This function is called by:
  2455 ;;		_pipe_write
  2456 ;;		_pipe_read
  2457 ;;		_count_bottles
  2458 ;;		_fill_bottle
  2459 ;;		_check_level
  2460 ;;		_cover_bottle
  2461 ;;		_count_out
  2462 ;; This function uses a reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text15
  2466  000FD4                     __ptext15:
  2467                           	opt callstack 0
  2468  000FD4                     _sem_wait:
  2469                           	opt callstack 18
  2470                           
  2471                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  2472                           
  2473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2474                           ;incstack = 0
  2475  000FD4  9EF2               	bcf	4082,7,c	;volatile
  2476                           
  2477                           ;semaphore.c: 23:   s->contador -= 1;
  2478                           ;stkvar	_s @ sp[(0)+-2]
  2479  000FD6  0EFE               	movlw	-2
  2480  000FD8  CFE3 FFD9          	movff	plusw1,fsr2l
  2481  000FDC  0EFF               	movlw	-1
  2482  000FDE  CFE3 FFDA          	movff	plusw1,fsr2h
  2483  000FE2  06DE               	decf	postinc2,f,c
  2484  000FE4  0E00               	movlw	0
  2485  000FE6  5ADD               	subwfb	postdec2,f,c
  2486                           
  2487                           ;semaphore.c: 24:   if (s->contador < 0) {
  2488                           ;stkvar	_s @ sp[(0)+-2]
  2489  000FE8  0EFE               	movlw	-2
  2490  000FEA  CFE3 FFD9          	movff	plusw1,fsr2l
  2491  000FEE  0EFF               	movlw	-1
  2492  000FF0  CFE3 FFDA          	movff	plusw1,fsr2h
  2493  000FF4  0E01               	movlw	1
  2494  000FF6  AEDB               	btfss	plusw2,7,c
  2495  000FF8  D059               	goto	l1634
  2496                           
  2497                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  2498  000FFA  EE23  F056         	lfsr	2,_ready_queue+662
  2499                           
  2500                           ;stkvar	_s @ sp[(0)+-2]
  2501  000FFE  0EFE               	movlw	-2
  2502  001000  CFE3 F051          	movff	plusw1,btemp+10
  2503  001004  0EFF               	movlw	-1
  2504  001006  CFE3 F052          	movff	plusw1,btemp+11
  2505  00100A  0E0C               	movlw	12
  2506  00100C  2451               	addwf	btemp+10,w,c
  2507  00100E  6EE9               	movwf	fsr0l,c
  2508  001010  0E00               	movlw	0
  2509  001012  2052               	addwfc	btemp+11,w,c
  2510  001014  6EEA               	movwf	fsr0h,c
  2511  001016  CFEE F051          	movff	postinc0,btemp+10
  2512  00101A  CFED F052          	movff	postdec0,btemp+11
  2513  00101E  90D8               	bcf	status,0,c
  2514  001020  3451               	rlcf	btemp+10,w,c
  2515  001022  6E4F               	movwf	btemp+8,c
  2516  001024  3452               	rlcf	btemp+11,w,c
  2517  001026  6E50               	movwf	btemp+9,c
  2518                           
  2519                           ;stkvar	_s @ sp[(0)+-2]
  2520  001028  0EFE               	movlw	-2
  2521  00102A  50E3               	movf	plusw1,w,c
  2522  00102C  264F               	addwf	btemp+8,f,c
  2523  00102E  0EFF               	movlw	-1
  2524  001030  50E3               	movf	plusw1,w,c
  2525  001032  2250               	addwfc	btemp+9,f,c
  2526  001034  0E02               	movlw	2
  2527  001036  244F               	addwf	btemp+8,w,c
  2528  001038  6EE9               	movwf	fsr0l,c
  2529  00103A  0E00               	movlw	0
  2530  00103C  2050               	addwfc	btemp+9,w,c
  2531  00103E  6EEA               	movwf	fsr0h,c
  2532  001040  CFDE FFEE          	movff	postinc2,postinc0
  2533  001044  CFDD FFED          	movff	postdec2,postdec0
  2534                           
  2535                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 5;
  2536  001048  0E05               	movlw	5
  2537  00104A  6EE6               	movwf	postinc1,c
  2538  00104C  0E00               	movlw	0
  2539  00104E  6EE6               	movwf	postinc1,c
  2540                           
  2541                           ;stkvar	_s @ sp[(-2)+-2]
  2542  001050  0EFC               	movlw	-4
  2543  001052  CFE3 F051          	movff	plusw1,btemp+10
  2544  001056  0EFD               	movlw	-3
  2545  001058  CFE3 F052          	movff	plusw1,btemp+11
  2546  00105C  0E0C               	movlw	12
  2547  00105E  2451               	addwf	btemp+10,w,c
  2548  001060  6ED9               	movwf	fsr2l,c
  2549  001062  0E00               	movlw	0
  2550  001064  2052               	addwfc	btemp+11,w,c
  2551  001066  6EDA               	movwf	fsr2h,c
  2552  001068  CFDE F051          	movff	postinc2,btemp+10
  2553  00106C  CFDD F052          	movff	postdec2,btemp+11
  2554  001070  0E01               	movlw	1
  2555  001072  2651               	addwf	btemp+10,f,c
  2556  001074  0E00               	movlw	0
  2557  001076  2252               	addwfc	btemp+11,f,c
  2558  001078  C051  FFE6         	movff	btemp+10,postinc1
  2559  00107C  C052  FFE6         	movff	btemp+11,postinc1
  2560  001080  EC94  F009         	call	___lwmod	;wreg free
  2561                           
  2562                           ;stkvar	_s @ sp[(0)+-2]
  2563  001084  0EFE               	movlw	-2
  2564  001086  CFE3 F051          	movff	plusw1,btemp+10
  2565  00108A  0EFF               	movlw	-1
  2566  00108C  CFE3 F052          	movff	plusw1,btemp+11
  2567  001090  0E0C               	movlw	12
  2568  001092  2451               	addwf	btemp+10,w,c
  2569  001094  6ED9               	movwf	fsr2l,c
  2570  001096  0E00               	movlw	0
  2571  001098  2052               	addwfc	btemp+11,w,c
  2572  00109A  6EDA               	movwf	fsr2h,c
  2573  00109C  C047  FFDE         	movff	btemp,postinc2
  2574  0010A0  C048  FFDD         	movff	btemp+1,postdec2
  2575                           
  2576                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  2577  0010A4  0E05               	movlw	5
  2578  0010A6  6EE6               	movwf	postinc1,c
  2579  0010A8  EC6E  F002         	call	_dispatcher	;wreg free
  2580  0010AC                     l1634:
  2581                           
  2582                           ;semaphore.c: 30:   INTCONbits.GIE = 1;
  2583  0010AC  8EF2               	bsf	4082,7,c	;volatile
  2584                           
  2585                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2586  0010AE  52E5               	movf	postdec1,f,c
  2587  0010B0  52E5               	movf	postdec1,f,c
  2588  0010B2  0012               	return		;funcret
  2589  0010B4                     __end_of_sem_wait:
  2590                           	opt callstack 0
  2591                           
  2592 ;; *************** function _sem_post *****************
  2593 ;; Defined at:
  2594 ;;		line 33 in file "semaphore.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  s               2  [STACK] PTR struct semaphore
  2597 ;;		 -> r_pipe(16), w_pipe(16), out_sem(16), cover_sem(16), 
  2598 ;;		 -> check_sem(16), fill_sem(16), count_sem(16), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1  [STACK] void 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2610 ;;      Params:         0       0       0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0
  2613 ;;      Totals:         0       0       0       0       0       0       0
  2614 ;;Total ram usage:        0 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    4
  2617 ;; This function calls:
  2618 ;;		___lwmod
  2619 ;; This function is called by:
  2620 ;;		_pipe_write
  2621 ;;		_pipe_read
  2622 ;;		_count_bottles
  2623 ;;		_fill_bottle
  2624 ;;		_check_level
  2625 ;;		_cover_bottle
  2626 ;;		_count_out
  2627 ;; This function uses a reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text16
  2631  000ED2                     __ptext16:
  2632                           	opt callstack 0
  2633  000ED2                     _sem_post:
  2634                           	opt callstack 21
  2635                           
  2636                           ;semaphore.c: 34:   INTCONbits.GIE = 0;
  2637                           
  2638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2639                           ;incstack = 0
  2640  000ED2  9EF2               	bcf	4082,7,c	;volatile
  2641                           
  2642                           ;semaphore.c: 36:   s->contador += 1;
  2643                           ;stkvar	_s @ sp[(0)+-2]
  2644  000ED4  0EFE               	movlw	-2
  2645  000ED6  CFE3 FFD9          	movff	plusw1,fsr2l
  2646  000EDA  0EFF               	movlw	-1
  2647  000EDC  CFE3 FFDA          	movff	plusw1,fsr2h
  2648  000EE0  2ADE               	incf	postinc2,f,c
  2649  000EE2  0E00               	movlw	0
  2650  000EE4  22DD               	addwfc	postdec2,f,c
  2651                           
  2652                           ;semaphore.c: 37:   if (s->contador <= 0) {
  2653                           ;stkvar	_s @ sp[(0)+-2]
  2654  000EE6  0EFE               	movlw	-2
  2655  000EE8  CFE3 FFD9          	movff	plusw1,fsr2l
  2656  000EEC  0EFF               	movlw	-1
  2657  000EEE  CFE3 FFDA          	movff	plusw1,fsr2h
  2658  000EF2  0E01               	movlw	1
  2659  000EF4  BEDB               	btfsc	plusw2,7,c
  2660  000EF6  D006               	goto	u46_20
  2661  000EF8  0E01               	movlw	1
  2662  000EFA  50DB               	movf	plusw2,w,c
  2663  000EFC  E167               	bnz	l1646
  2664  000EFE  04DE               	decf	postinc2,w,c
  2665  000F00  B0D8               	btfsc	status,0,c
  2666  000F02  D064               	goto	l1646
  2667  000F04                     u46_20:
  2668                           
  2669                           ;semaphore.c: 38:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  2670                           ;stkvar	_s @ sp[(0)+-2]
  2671  000F04  0EFE               	movlw	-2
  2672  000F06  CFE3 F051          	movff	plusw1,btemp+10
  2673  000F0A  0EFF               	movlw	-1
  2674  000F0C  CFE3 F052          	movff	plusw1,btemp+11
  2675  000F10  0E0E               	movlw	14
  2676  000F12  2451               	addwf	btemp+10,w,c
  2677  000F14  6ED9               	movwf	fsr2l,c
  2678  000F16  0E00               	movlw	0
  2679  000F18  2052               	addwfc	btemp+11,w,c
  2680  000F1A  6EDA               	movwf	fsr2h,c
  2681  000F1C  CFDE F051          	movff	postinc2,btemp+10
  2682  000F20  CFDD F052          	movff	postdec2,btemp+11
  2683  000F24  90D8               	bcf	status,0,c
  2684  000F26  3451               	rlcf	btemp+10,w,c
  2685  000F28  6E4F               	movwf	btemp+8,c
  2686  000F2A  3452               	rlcf	btemp+11,w,c
  2687  000F2C  6E50               	movwf	btemp+9,c
  2688                           
  2689                           ;stkvar	_s @ sp[(0)+-2]
  2690  000F2E  0EFE               	movlw	-2
  2691  000F30  50E3               	movf	plusw1,w,c
  2692  000F32  264F               	addwf	btemp+8,f,c
  2693  000F34  0EFF               	movlw	-1
  2694  000F36  50E3               	movf	plusw1,w,c
  2695  000F38  2250               	addwfc	btemp+9,f,c
  2696  000F3A  0E02               	movlw	2
  2697  000F3C  244F               	addwf	btemp+8,w,c
  2698  000F3E  6ED9               	movwf	fsr2l,c
  2699  000F40  0E00               	movlw	0
  2700  000F42  2050               	addwfc	btemp+9,w,c
  2701  000F44  6EDA               	movwf	fsr2h,c
  2702  000F46  CFDE F051          	movff	postinc2,btemp+10
  2703  000F4A  CFDD F052          	movff	postdec2,btemp+11
  2704  000F4E  0E6E               	movlw	110
  2705  000F50  0251               	mulwf	btemp+10,c
  2706  000F52  CFF3 F04F          	movff	prodl,btemp+8
  2707  000F56  CFF4 F050          	movff	prodh,btemp+9
  2708  000F5A  0252               	mulwf	btemp+11,c
  2709  000F5C  50F3               	movf	prodl,w,c
  2710  000F5E  2650               	addwf	btemp+9,f,c
  2711  000F60  0EC8               	movlw	low (_ready_queue+8)
  2712  000F62  244F               	addwf	btemp+8,w,c
  2713  000F64  6ED9               	movwf	fsr2l,c
  2714  000F66  0E00               	movlw	high (_ready_queue+8)
  2715  000F68  2050               	addwfc	btemp+9,w,c
  2716  000F6A  6EDA               	movwf	fsr2h,c
  2717  000F6C  0E00               	movlw	0
  2718  000F6E  6EDF               	movwf	indf2,c
  2719                           
  2720                           ;semaphore.c: 39:     s->task_to_ready = (s->task_to_ready + 1) % 5;
  2721  000F70  0E05               	movlw	5
  2722  000F72  6EE6               	movwf	postinc1,c
  2723  000F74  0E00               	movlw	0
  2724  000F76  6EE6               	movwf	postinc1,c
  2725                           
  2726                           ;stkvar	_s @ sp[(-2)+-2]
  2727  000F78  0EFC               	movlw	-4
  2728  000F7A  CFE3 F051          	movff	plusw1,btemp+10
  2729  000F7E  0EFD               	movlw	-3
  2730  000F80  CFE3 F052          	movff	plusw1,btemp+11
  2731  000F84  0E0E               	movlw	14
  2732  000F86  2451               	addwf	btemp+10,w,c
  2733  000F88  6ED9               	movwf	fsr2l,c
  2734  000F8A  0E00               	movlw	0
  2735  000F8C  2052               	addwfc	btemp+11,w,c
  2736  000F8E  6EDA               	movwf	fsr2h,c
  2737  000F90  CFDE F051          	movff	postinc2,btemp+10
  2738  000F94  CFDD F052          	movff	postdec2,btemp+11
  2739  000F98  0E01               	movlw	1
  2740  000F9A  2651               	addwf	btemp+10,f,c
  2741  000F9C  0E00               	movlw	0
  2742  000F9E  2252               	addwfc	btemp+11,f,c
  2743  000FA0  C051  FFE6         	movff	btemp+10,postinc1
  2744  000FA4  C052  FFE6         	movff	btemp+11,postinc1
  2745  000FA8  EC94  F009         	call	___lwmod	;wreg free
  2746                           
  2747                           ;stkvar	_s @ sp[(0)+-2]
  2748  000FAC  0EFE               	movlw	-2
  2749  000FAE  CFE3 F051          	movff	plusw1,btemp+10
  2750  000FB2  0EFF               	movlw	-1
  2751  000FB4  CFE3 F052          	movff	plusw1,btemp+11
  2752  000FB8  0E0E               	movlw	14
  2753  000FBA  2451               	addwf	btemp+10,w,c
  2754  000FBC  6ED9               	movwf	fsr2l,c
  2755  000FBE  0E00               	movlw	0
  2756  000FC0  2052               	addwfc	btemp+11,w,c
  2757  000FC2  6EDA               	movwf	fsr2h,c
  2758  000FC4  C047  FFDE         	movff	btemp,postinc2
  2759  000FC8  C048  FFDD         	movff	btemp+1,postdec2
  2760  000FCC                     l1646:
  2761                           
  2762                           ;semaphore.c: 43:   INTCONbits.GIE = 1;
  2763  000FCC  8EF2               	bsf	4082,7,c	;volatile
  2764                           
  2765                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2766  000FCE  52E5               	movf	postdec1,f,c
  2767  000FD0  52E5               	movf	postdec1,f,c
  2768  000FD2  0012               	return		;funcret
  2769  000FD4                     __end_of_sem_post:
  2770                           	opt callstack 0
  2771                           
  2772 ;; *************** function _lunos_delayTask *****************
  2773 ;; Defined at:
  2774 ;;		line 31 in file "kernel.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  time            2  [STACK] unsigned int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1  [STACK] void 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2788 ;;      Params:         0       0       0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    7
  2795 ;; This function calls:
  2796 ;;		_dispatcher
  2797 ;; This function is called by:
  2798 ;;		_count_bottles
  2799 ;;		_fill_bottle
  2800 ;;		_check_level
  2801 ;;		_cover_bottle
  2802 ;;		_count_out
  2803 ;; This function uses a reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text17
  2807  00178A                     __ptext17:
  2808                           	opt callstack 0
  2809  00178A                     _lunos_delayTask:
  2810                           	opt callstack 18
  2811                           
  2812                           ;kernel.c: 32:   INTCONbits.GIE = 0;
  2813                           
  2814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2815                           ;incstack = 0
  2816  00178A  9EF2               	bcf	4082,7,c	;volatile
  2817                           
  2818                           ;kernel.c: 34:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  2819                           ;stkvar	_time @ sp[(0)+-2]
  2820  00178C  50E1               	movf	fsr1l,w,c
  2821  00178E  0FFE               	addlw	-2
  2822  001790  6ED9               	movwf	fsr2l,c
  2823  001792  50E2               	movf	fsr1h,w,c
  2824  001794  6EDA               	movwf	fsr2h,c
  2825  001796  0EFF               	movlw	255
  2826  001798  22DA               	addwfc	fsr2h,f,c
  2827  00179A  EE03  F056         	lfsr	0,_ready_queue+662
  2828  00179E  CFEE F051          	movff	postinc0,btemp+10
  2829  0017A2  CFED F052          	movff	postdec0,btemp+11
  2830  0017A6  0E6E               	movlw	110
  2831  0017A8  0251               	mulwf	btemp+10,c
  2832  0017AA  CFF3 F04F          	movff	prodl,btemp+8
  2833  0017AE  CFF4 F050          	movff	prodh,btemp+9
  2834  0017B2  0252               	mulwf	btemp+11,c
  2835  0017B4  50F3               	movf	prodl,w,c
  2836  0017B6  2650               	addwf	btemp+9,f,c
  2837  0017B8  0E2C               	movlw	low (_ready_queue+108)
  2838  0017BA  244F               	addwf	btemp+8,w,c
  2839  0017BC  6EE9               	movwf	fsr0l,c
  2840  0017BE  0E01               	movlw	high (_ready_queue+108)
  2841  0017C0  2050               	addwfc	btemp+9,w,c
  2842  0017C2  6EEA               	movwf	fsr0h,c
  2843  0017C4  CFDE FFEE          	movff	postinc2,postinc0
  2844  0017C8  CFDD FFED          	movff	postdec2,postdec0
  2845                           
  2846                           ;kernel.c: 35:   dispatcher(WAITING);
  2847  0017CC  0E02               	movlw	2
  2848  0017CE  6EE6               	movwf	postinc1,c
  2849  0017D0  EC6E  F002         	call	_dispatcher	;wreg free
  2850                           
  2851                           ;kernel.c: 37:   INTCONbits.GIE = 1;
  2852  0017D4  8EF2               	bsf	4082,7,c	;volatile
  2853                           
  2854                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2855  0017D6  52E5               	movf	postdec1,f,c
  2856  0017D8  52E5               	movf	postdec1,f,c
  2857  0017DA  0012               	return		;funcret
  2858  0017DC                     __end_of_lunos_delayTask:
  2859                           	opt callstack 0
  2860                           
  2861 ;; *************** function _fill_bottle *****************
  2862 ;; Defined at:
  2863 ;;		line 69 in file "tasks.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1  [STACK] void 
  2870 ;; Registers used:
  2871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2877 ;;      Params:         0       0       0       0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0
  2880 ;;      Totals:         0       0       0       0       0       0       0
  2881 ;;Total ram usage:        0 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    8
  2884 ;; This function calls:
  2885 ;;		_lunos_delayTask
  2886 ;;		_sem_post
  2887 ;;		_sem_wait
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text18
  2894  001826                     __ptext18:
  2895                           	opt callstack 0
  2896  001826                     _fill_bottle:
  2897                           	opt callstack 18
  2898                           
  2899                           ;tasks.c: 71:         sem_wait(&fill_sem);
  2900                           
  2901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2902                           ;incstack = 0
  2903                           ;tasks.c: 70:     while(1){
  2904  001826  0E1B               	movlw	low _fill_sem
  2905  001828  6EE6               	movwf	postinc1,c
  2906  00182A  0E00               	movlw	high _fill_sem
  2907  00182C  6EE6               	movwf	postinc1,c
  2908  00182E  ECEA  F007         	call	_sem_wait	;wreg free
  2909                           
  2910                           ;tasks.c: 72:         PORTDbits.RD5 = 0;
  2911  001832  9A83               	bcf	3971,5,c	;volatile
  2912                           
  2913                           ;tasks.c: 73:         PORTCbits.RC7 = 0;
  2914  001834  9E82               	bcf	3970,7,c	;volatile
  2915                           
  2916                           ;tasks.c: 74:         lunos_delayTask(500);
  2917  001836  0EF4               	movlw	244
  2918  001838  6EE6               	movwf	postinc1,c
  2919  00183A  0E01               	movlw	1
  2920  00183C  6EE6               	movwf	postinc1,c
  2921  00183E  ECC5  F00B         	call	_lunos_delayTask	;wreg free
  2922  001842                     l302:
  2923  001842  B082               	btfsc	3970,0,c	;volatile
  2924  001844  A282               	btfss	3970,1,c	;volatile
  2925  001846  D002               	goto	u66_20
  2926  001848  B482               	btfsc	3970,2,c	;volatile
  2927  00184A  D7FB               	goto	l302
  2928  00184C                     u66_20:
  2929                           
  2930                           ;tasks.c: 76:         lunos_delayTask(200);
  2931  00184C  0EC8               	movlw	200
  2932  00184E  6EE6               	movwf	postinc1,c
  2933  001850  0E00               	movlw	0
  2934  001852  6EE6               	movwf	postinc1,c
  2935  001854  ECC5  F00B         	call	_lunos_delayTask	;wreg free
  2936                           
  2937                           ;tasks.c: 77:         sem_post(&check_sem);
  2938  001858  0E0B               	movlw	low _check_sem
  2939  00185A  6EE6               	movwf	postinc1,c
  2940  00185C  0E00               	movlw	high _check_sem
  2941  00185E  6EE6               	movwf	postinc1,c
  2942  001860  EC69  F007         	call	_sem_post	;wreg free
  2943                           
  2944                           ;tasks.c: 78:         PORTCbits.RC7 = 1;
  2945  001864  8E82               	bsf	3970,7,c	;volatile
  2946                           
  2947                           ;tasks.c: 79:         PORTDbits.RD5 = 1;
  2948  001866  8A83               	bsf	3971,5,c	;volatile
  2949  001868  D7DE               	goto	_fill_bottle
  2950  00186A                     __end_of_fill_bottle:
  2951                           	opt callstack 0
  2952                           
  2953 ;; *************** function _check_level *****************
  2954 ;; Defined at:
  2955 ;;		line 83 in file "tasks.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1  [STACK] void 
  2962 ;; Registers used:
  2963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2969 ;;      Params:         0       0       0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    8
  2976 ;; This function calls:
  2977 ;;		_lunos_delayTask
  2978 ;;		_sem_post
  2979 ;;		_sem_wait
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text19
  2986  00171E                     __ptext19:
  2987                           	opt callstack 0
  2988  00171E                     _check_level:
  2989                           	opt callstack 18
  2990                           
  2991                           ;tasks.c: 85:         sem_wait(&check_sem);
  2992                           
  2993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2994                           ;incstack = 0
  2995                           ;tasks.c: 84:     while(1){
  2996  00171E  0E0B               	movlw	low _check_sem
  2997  001720  6EE6               	movwf	postinc1,c
  2998  001722  0E00               	movlw	high _check_sem
  2999  001724  6EE6               	movwf	postinc1,c
  3000  001726  ECEA  F007         	call	_sem_wait	;wreg free
  3001                           
  3002                           ;tasks.c: 86:         PORTDbits.RD6 = 0;
  3003  00172A  9C83               	bcf	3971,6,c	;volatile
  3004                           
  3005                           ;tasks.c: 87:         PORTCbits.RC7 = 0;
  3006  00172C  9E82               	bcf	3970,7,c	;volatile
  3007                           
  3008                           ;tasks.c: 88:         lunos_delayTask(500);
  3009  00172E  0EF4               	movlw	244
  3010  001730  6EE6               	movwf	postinc1,c
  3011  001732  0E01               	movlw	1
  3012  001734  6EE6               	movwf	postinc1,c
  3013  001736  ECC5  F00B         	call	_lunos_delayTask	;wreg free
  3014                           
  3015                           ;tasks.c: 89:         PORTCbits.RC7 = 1;
  3016  00173A  8E82               	bsf	3970,7,c	;volatile
  3017                           
  3018                           ;tasks.c: 90:         lunos_delayTask(500);
  3019  00173C  0EF4               	movlw	244
  3020  00173E  6EE6               	movwf	postinc1,c
  3021  001740  0E01               	movlw	1
  3022  001742  6EE6               	movwf	postinc1,c
  3023  001744  ECC5  F00B         	call	_lunos_delayTask	;wreg free
  3024  001748                     l313:
  3025  001748  B283               	btfsc	3971,1,c	;volatile
  3026  00174A  A483               	btfss	3971,2,c	;volatile
  3027  00174C  D002               	goto	u69_20
  3028  00174E  B683               	btfsc	3971,3,c	;volatile
  3029  001750  D7FB               	goto	l313
  3030  001752                     u69_20:
  3031                           
  3032                           ;tasks.c: 95:             global_buffer.bottles[0].bottle_state = FULL;
  3033  001752  0E01               	movlw	1
  3034  001754  6E03               	movwf	_global_buffer+2,c
  3035                           
  3036                           ;tasks.c: 98:         if (PORTDbits.RD2)
  3037  001756  A483               	btfss	3971,2,c	;volatile
  3038  001758  D002               	goto	l1902
  3039                           
  3040                           ;tasks.c: 99:             global_buffer.bottles[1].bottle_state = EMPTY;
  3041  00175A  6A04               	clrf	_global_buffer+3,c
  3042  00175C  D002               	goto	l1904
  3043  00175E                     l1902:
  3044                           
  3045                           ;tasks.c: 101:             global_buffer.bottles[1].bottle_state = FULL;
  3046  00175E  0E01               	movlw	1
  3047  001760  6E04               	movwf	_global_buffer+3,c
  3048  001762                     l1904:
  3049                           
  3050                           ;tasks.c: 104:         if (PORTDbits.RD3)
  3051  001762  A683               	btfss	3971,3,c	;volatile
  3052  001764  D002               	goto	l1908
  3053                           
  3054                           ;tasks.c: 105:             global_buffer.bottles[2].bottle_state = EMPTY;
  3055  001766  6A05               	clrf	_global_buffer+4,c
  3056  001768  D002               	goto	l1910
  3057  00176A                     l1908:
  3058                           
  3059                           ;tasks.c: 107:             global_buffer.bottles[2].bottle_state = FULL;
  3060  00176A  0E01               	movlw	1
  3061  00176C  6E05               	movwf	_global_buffer+4,c
  3062  00176E                     l1910:
  3063                           
  3064                           ;tasks.c: 109:         lunos_delayTask(200);
  3065  00176E  0EC8               	movlw	200
  3066  001770  6EE6               	movwf	postinc1,c
  3067  001772  0E00               	movlw	0
  3068  001774  6EE6               	movwf	postinc1,c
  3069  001776  ECC5  F00B         	call	_lunos_delayTask	;wreg free
  3070                           
  3071                           ;tasks.c: 110:         sem_post(&cover_sem);
  3072  00177A  0EB0               	movlw	low _cover_sem
  3073  00177C  6EE6               	movwf	postinc1,c
  3074  00177E  0E00               	movlw	high _cover_sem
  3075  001780  6EE6               	movwf	postinc1,c
  3076  001782  EC69  F007         	call	_sem_post	;wreg free
  3077                           
  3078                           ;tasks.c: 111:         PORTDbits.RD6 = 1;
  3079  001786  8C83               	bsf	3971,6,c	;volatile
  3080  001788  D7CA               	goto	_check_level
  3081  00178A                     __end_of_check_level:
  3082                           	opt callstack 0
  3083                           
  3084 ;; *************** function _cover_bottle *****************
  3085 ;; Defined at:
  3086 ;;		line 115 in file "tasks.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  i               2  [STACK] int 
  3091 ;;  count           2  [STACK] unsigned int 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1  [STACK] void 
  3094 ;; Registers used:
  3095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3101 ;;      Params:         0       0       0       0       0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0
  3104 ;;      Totals:         0       0       0       0       0       0       0
  3105 ;;Total ram usage:        0 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    9
  3108 ;; This function calls:
  3109 ;;		_lunos_delayTask
  3110 ;;		_pipe_write
  3111 ;;		_sem_post
  3112 ;;		_sem_wait
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text20
  3119  0010B4                     __ptext20:
  3120                           	opt callstack 0
  3121  0010B4                     _cover_bottle:
  3122                           	opt callstack 0
  3123                           
  3124                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3125  0010B4  52E6               	movf	postinc1,f,c
  3126  0010B6  52E6               	movf	postinc1,f,c
  3127  0010B8  52E6               	movf	postinc1,f,c
  3128  0010BA  52E6               	movf	postinc1,f,c
  3129  0010BC                     l327:
  3130                           
  3131                           ;tasks.c: 117:         sem_wait(&cover_sem);
  3132  0010BC  0EB0               	movlw	low _cover_sem
  3133  0010BE  6EE6               	movwf	postinc1,c
  3134  0010C0  0E00               	movlw	high _cover_sem
  3135  0010C2  6EE6               	movwf	postinc1,c
  3136  0010C4  ECEA  F007         	call	_sem_wait	;wreg free
  3137                           
  3138                           ;tasks.c: 118:         PORTDbits.RD7 = 0;
  3139  0010C8  9E83               	bcf	3971,7,c	;volatile
  3140                           
  3141                           ;tasks.c: 119:         PORTCbits.RC7 = 0;
  3142  0010CA  9E82               	bcf	3970,7,c	;volatile
  3143                           
  3144                           ;tasks.c: 120:         lunos_delayTask(500);
  3145  0010CC  0EF4               	movlw	244
  3146  0010CE  6EE6               	movwf	postinc1,c
  3147  0010D0  0E01               	movlw	1
  3148  0010D2  6EE6               	movwf	postinc1,c
  3149  0010D4  ECC5  F00B         	call	_lunos_delayTask	;wreg free
  3150  0010D8                     l328:
  3151  0010D8  B682               	btfsc	3970,3,c	;volatile
  3152  0010DA  A882               	btfss	3970,4,c	;volatile
  3153  0010DC  D002               	goto	u74_20
  3154  0010DE  BA82               	btfsc	3970,5,c	;volatile
  3155  0010E0  D7FB               	goto	l328
  3156  0010E2                     u74_20:
  3157                           
  3158                           ;tasks.c: 124:                 global_buffer.bottles[0].bottle_state = CLOSED;
  3159  0010E2  0E02               	movlw	2
  3160  0010E4  6E03               	movwf	_global_buffer+2,c
  3161                           
  3162                           ;tasks.c: 143:         unsigned int count = 0;
  3163                           ;stkvar	_count @ sp[(-4)+2]
  3164  0010E6  0EFE               	movlw	-2
  3165  0010E8  6AE3               	clrf	plusw1,c
  3166  0010EA  0EFF               	movlw	-1
  3167  0010EC  6AE3               	clrf	plusw1,c
  3168                           
  3169                           ;tasks.c: 144:         for (int i = 0; i < 3; i++){
  3170                           ;stkvar	_i @ sp[(-4)+0]
  3171  0010EE  0EFC               	movlw	-4
  3172  0010F0  6AE3               	clrf	plusw1,c
  3173  0010F2  0EFD               	movlw	-3
  3174  0010F4  6AE3               	clrf	plusw1,c
  3175  0010F6                     l1936:
  3176                           
  3177                           ;tasks.c: 145:             if (global_buffer.bottles[i].bottle_state == FULL) count++;
  3178                           ;stkvar	_i @ sp[(-4)+0]
  3179  0010F6  0EFC               	movlw	-4
  3180  0010F8  CFE3 F051          	movff	plusw1,btemp+10
  3181  0010FC  0EFD               	movlw	-3
  3182  0010FE  CFE3 F052          	movff	plusw1,btemp+11
  3183  001102  0E03               	movlw	low (_global_buffer+2)
  3184  001104  2451               	addwf	btemp+10,w,c
  3185  001106  6ED9               	movwf	fsr2l,c
  3186  001108  0E00               	movlw	high (_global_buffer+2)
  3187  00110A  2052               	addwfc	btemp+11,w,c
  3188  00110C  6EDA               	movwf	fsr2h,c
  3189  00110E  04DE               	decf	postinc2,w,c
  3190  001110  A4D8               	btfss	status,2,c
  3191  001112  D00F               	goto	l335
  3192                           
  3193                           ;stkvar	_count @ sp[(-4)+2]
  3194  001114  0EFE               	movlw	-2
  3195  001116  50E3               	movf	plusw1,w,c
  3196  001118  0F01               	addlw	1
  3197  00111A  6E47               	movwf	btemp,c
  3198  00111C  0EFE               	movlw	-2
  3199  00111E  C047  FFE3         	movff	btemp,plusw1
  3200  001122  6A47               	clrf	btemp,c
  3201  001124  0EFF               	movlw	-1
  3202  001126  50E3               	movf	plusw1,w,c
  3203  001128  2047               	addwfc	btemp,w,c
  3204  00112A  6E47               	movwf	btemp,c
  3205  00112C  0EFF               	movlw	-1
  3206  00112E  C047  FFE3         	movff	btemp,plusw1
  3207  001132                     l335:
  3208                           
  3209                           ;tasks.c: 146:         }
  3210                           ;stkvar	_i @ sp[(-4)+0]
  3211  001132  0EFC               	movlw	-4
  3212  001134  50E3               	movf	plusw1,w,c
  3213  001136  0F01               	addlw	1
  3214  001138  6E47               	movwf	btemp,c
  3215  00113A  0EFC               	movlw	-4
  3216  00113C  C047  FFE3         	movff	btemp,plusw1
  3217  001140  6A47               	clrf	btemp,c
  3218  001142  0EFD               	movlw	-3
  3219  001144  50E3               	movf	plusw1,w,c
  3220  001146  2047               	addwfc	btemp,w,c
  3221  001148  6E47               	movwf	btemp,c
  3222  00114A  0EFD               	movlw	-3
  3223  00114C  C047  FFE3         	movff	btemp,plusw1
  3224                           
  3225                           ;stkvar	_i @ sp[(-4)+0]
  3226  001150  0EFD               	movlw	-3
  3227  001152  BEE3               	btfsc	plusw1,7,c
  3228  001154  D7D0               	goto	l1936
  3229  001156  0EFD               	movlw	-3
  3230  001158  50E3               	movf	plusw1,w,c
  3231  00115A  E107               	bnz	u76_20
  3232  00115C  0EFC               	movlw	-4
  3233  00115E  CFE3 F047          	movff	plusw1,btemp
  3234  001162  0E03               	movlw	3
  3235  001164  5E47               	subwf	btemp,f,c
  3236  001166  A0D8               	btfss	status,0,c
  3237  001168  D7C6               	goto	l1936
  3238  00116A                     u76_20:
  3239                           
  3240                           ;tasks.c: 148:         pipe_write(&p, (unsigned int)count);
  3241                           ;stkvar	_count @ sp[(-4)+2]
  3242  00116A  0EFE               	movlw	-2
  3243  00116C  CFE3 FFE6          	movff	plusw1,postinc1
  3244  001170  CFE3 FFE6          	movff	plusw1,postinc1
  3245  001174  0E3B               	movlw	low _p
  3246  001176  6EE6               	movwf	postinc1,c
  3247  001178  0E00               	movlw	high _p
  3248  00117A  6EE6               	movwf	postinc1,c
  3249  00117C  EC60  F006         	call	_pipe_write	;wreg free
  3250                           
  3251                           ;tasks.c: 149:         sem_post(&out_sem);
  3252  001180  0EA0               	movlw	low _out_sem
  3253  001182  6EE6               	movwf	postinc1,c
  3254  001184  0E00               	movlw	high _out_sem
  3255  001186  6EE6               	movwf	postinc1,c
  3256  001188  EC69  F007         	call	_sem_post	;wreg free
  3257                           
  3258                           ;tasks.c: 150:         PORTCbits.RC7 = 1;
  3259  00118C  8E82               	bsf	3970,7,c	;volatile
  3260                           
  3261                           ;tasks.c: 151:         PORTDbits.RD7 = 1;
  3262  00118E  8E83               	bsf	3971,7,c	;volatile
  3263  001190  D795               	goto	l327
  3264  001192                     __end_of_cover_bottle:
  3265                           	opt callstack 0
  3266                           
  3267 ;; *************** function _pipe_write *****************
  3268 ;; Defined at:
  3269 ;;		line 18 in file "pipe.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  p               2  [STACK] PTR struct pipe
  3272 ;;		 -> p(12), 
  3273 ;;  data            2  [STACK] unsigned int 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1  [STACK] void 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3285 ;;      Params:         0       0       0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0
  3288 ;;      Totals:         0       0       0       0       0       0       0
  3289 ;;Total ram usage:        0 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    8
  3292 ;; This function calls:
  3293 ;;		_sem_post
  3294 ;;		_sem_wait
  3295 ;; This function is called by:
  3296 ;;		_cover_bottle
  3297 ;; This function uses a reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text21
  3301  000CC0                     __ptext21:
  3302                           	opt callstack 0
  3303  000CC0                     _pipe_write:
  3304                           	opt callstack 17
  3305                           
  3306                           ;pipe.c: 20:   sem_wait(p->w);
  3307                           ;stkvar	_p @ sp[(0)+-2]
  3308                           
  3309                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3310                           ;incstack = 0
  3311  000CC0  0EFE               	movlw	-2
  3312  000CC2  CFE3 F051          	movff	plusw1,btemp+10
  3313  000CC6  0EFF               	movlw	-1
  3314  000CC8  CFE3 F052          	movff	plusw1,btemp+11
  3315  000CCC  0E08               	movlw	8
  3316  000CCE  2451               	addwf	btemp+10,w,c
  3317  000CD0  6ED9               	movwf	fsr2l,c
  3318  000CD2  0E00               	movlw	0
  3319  000CD4  2052               	addwfc	btemp+11,w,c
  3320  000CD6  6EDA               	movwf	fsr2h,c
  3321  000CD8  CFDE F051          	movff	postinc2,btemp+10
  3322  000CDC  CFDD F052          	movff	postdec2,btemp+11
  3323  000CE0  C051  FFE6         	movff	btemp+10,postinc1
  3324  000CE4  C052  FFE6         	movff	btemp+11,postinc1
  3325  000CE8  ECEA  F007         	call	_sem_wait	;wreg free
  3326                           
  3327                           ;pipe.c: 21:   p->pipe_data[p->index_write] = data;
  3328                           ;stkvar	_data @ sp[(0)+-4]
  3329  000CEC  50E1               	movf	fsr1l,w,c
  3330  000CEE  0FFC               	addlw	-4
  3331  000CF0  6ED9               	movwf	fsr2l,c
  3332  000CF2  50E2               	movf	fsr1h,w,c
  3333  000CF4  6EDA               	movwf	fsr2h,c
  3334  000CF6  0EFF               	movlw	255
  3335  000CF8  22DA               	addwfc	fsr2h,f,c
  3336                           
  3337                           ;stkvar	_p @ sp[(0)+-2]
  3338  000CFA  0EFE               	movlw	-2
  3339  000CFC  CFE3 F051          	movff	plusw1,btemp+10
  3340  000D00  0EFF               	movlw	-1
  3341  000D02  CFE3 F052          	movff	plusw1,btemp+11
  3342  000D06  0E04               	movlw	4
  3343  000D08  2451               	addwf	btemp+10,w,c
  3344  000D0A  6EE9               	movwf	fsr0l,c
  3345  000D0C  0E00               	movlw	0
  3346  000D0E  2052               	addwfc	btemp+11,w,c
  3347  000D10  6EEA               	movwf	fsr0h,c
  3348  000D12  CFEE F051          	movff	postinc0,btemp+10
  3349  000D16  CFED F052          	movff	postdec0,btemp+11
  3350  000D1A  90D8               	bcf	status,0,c
  3351  000D1C  3451               	rlcf	btemp+10,w,c
  3352  000D1E  6E4F               	movwf	btemp+8,c
  3353  000D20  3452               	rlcf	btemp+11,w,c
  3354  000D22  6E50               	movwf	btemp+9,c
  3355                           
  3356                           ;stkvar	_p @ sp[(0)+-2]
  3357  000D24  0EFE               	movlw	-2
  3358  000D26  CFE3 F051          	movff	plusw1,btemp+10
  3359  000D2A  0EFF               	movlw	-1
  3360  000D2C  CFE3 F052          	movff	plusw1,btemp+11
  3361  000D30  504F               	movf	btemp+8,w,c
  3362  000D32  2451               	addwf	btemp+10,w,c
  3363  000D34  6EE9               	movwf	fsr0l,c
  3364  000D36  5050               	movf	btemp+9,w,c
  3365  000D38  2052               	addwfc	btemp+11,w,c
  3366  000D3A  6EEA               	movwf	fsr0h,c
  3367  000D3C  CFDE FFEE          	movff	postinc2,postinc0
  3368  000D40  CFDD FFED          	movff	postdec2,postdec0
  3369                           
  3370                           ;pipe.c: 22:   p->index_write = (p->index_write + 1) % 2;
  3371                           ;stkvar	_p @ sp[(0)+-2]
  3372  000D44  0EFE               	movlw	-2
  3373  000D46  CFE3 F051          	movff	plusw1,btemp+10
  3374  000D4A  0EFF               	movlw	-1
  3375  000D4C  CFE3 F052          	movff	plusw1,btemp+11
  3376  000D50  0E04               	movlw	4
  3377  000D52  2451               	addwf	btemp+10,w,c
  3378  000D54  6ED9               	movwf	fsr2l,c
  3379  000D56  0E00               	movlw	0
  3380  000D58  2052               	addwfc	btemp+11,w,c
  3381  000D5A  6EDA               	movwf	fsr2h,c
  3382  000D5C  CFDE F051          	movff	postinc2,btemp+10
  3383  000D60  CFDD F052          	movff	postdec2,btemp+11
  3384  000D64  0E01               	movlw	1
  3385  000D66  2651               	addwf	btemp+10,f,c
  3386  000D68  0E00               	movlw	0
  3387  000D6A  2252               	addwfc	btemp+11,f,c
  3388  000D6C  0E01               	movlw	1
  3389  000D6E  1651               	andwf	btemp+10,f,c
  3390  000D70  0E00               	movlw	0
  3391  000D72  1652               	andwf	btemp+11,f,c
  3392                           
  3393                           ;stkvar	_p @ sp[(0)+-2]
  3394  000D74  0EFE               	movlw	-2
  3395  000D76  CFE3 F04F          	movff	plusw1,btemp+8
  3396  000D7A  0EFF               	movlw	-1
  3397  000D7C  CFE3 F050          	movff	plusw1,btemp+9
  3398  000D80  0E04               	movlw	4
  3399  000D82  244F               	addwf	btemp+8,w,c
  3400  000D84  6ED9               	movwf	fsr2l,c
  3401  000D86  0E00               	movlw	0
  3402  000D88  2050               	addwfc	btemp+9,w,c
  3403  000D8A  6EDA               	movwf	fsr2h,c
  3404  000D8C  C051  FFDE         	movff	btemp+10,postinc2
  3405  000D90  C052  FFDD         	movff	btemp+11,postdec2
  3406                           
  3407                           ;pipe.c: 23:   sem_post(p->r);
  3408                           ;stkvar	_p @ sp[(0)+-2]
  3409  000D94  0EFE               	movlw	-2
  3410  000D96  CFE3 F051          	movff	plusw1,btemp+10
  3411  000D9A  0EFF               	movlw	-1
  3412  000D9C  CFE3 F052          	movff	plusw1,btemp+11
  3413  000DA0  0E0A               	movlw	10
  3414  000DA2  2451               	addwf	btemp+10,w,c
  3415  000DA4  6ED9               	movwf	fsr2l,c
  3416  000DA6  0E00               	movlw	0
  3417  000DA8  2052               	addwfc	btemp+11,w,c
  3418  000DAA  6EDA               	movwf	fsr2h,c
  3419  000DAC  CFDE F051          	movff	postinc2,btemp+10
  3420  000DB0  CFDD F052          	movff	postdec2,btemp+11
  3421  000DB4  C051  FFE6         	movff	btemp+10,postinc1
  3422  000DB8  C052  FFE6         	movff	btemp+11,postinc1
  3423  000DBC  EC69  F007         	call	_sem_post	;wreg free
  3424                           
  3425                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  3426  000DC0  52E5               	movf	postdec1,f,c
  3427  000DC2  52E5               	movf	postdec1,f,c
  3428  000DC4  52E5               	movf	postdec1,f,c
  3429  000DC6  52E5               	movf	postdec1,f,c
  3430  000DC8  0012               	return		;funcret
  3431  000DCA                     __end_of_pipe_write:
  3432                           	opt callstack 0
  3433                           
  3434 ;; *************** function _count_out *****************
  3435 ;; Defined at:
  3436 ;;		line 155 in file "tasks.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  n               2  [STACK] unsigned int 
  3441 ;;  count           2  [STACK] unsigned int 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1  [STACK] void 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3451 ;;      Params:         0       0       0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    9
  3458 ;; This function calls:
  3459 ;;		_lunos_delayTask
  3460 ;;		_pipe_read
  3461 ;;		_sem_post
  3462 ;;		_sem_wait
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;; This function uses a reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text22
  3469  001260                     __ptext22:
  3470                           	opt callstack 0
  3471  001260                     _count_out:
  3472                           	opt callstack 0
  3473                           
  3474                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3475  001260  52E6               	movf	postinc1,f,c
  3476  001262  52E6               	movf	postinc1,f,c
  3477  001264  52E6               	movf	postinc1,f,c
  3478  001266  52E6               	movf	postinc1,f,c
  3479  001268                     l341:
  3480                           
  3481                           ;tasks.c: 157:         unsigned int n;;tasks.c: 158:         unsigned int count = 0;
  3482                           ;stkvar	_count @ sp[(-4)+2]
  3483  001268  0EFE               	movlw	-2
  3484  00126A  6AE3               	clrf	plusw1,c
  3485  00126C  0EFF               	movlw	-1
  3486  00126E  6AE3               	clrf	plusw1,c
  3487                           
  3488                           ;tasks.c: 159:         sem_wait(&out_sem);
  3489  001270  0EA0               	movlw	low _out_sem
  3490  001272  6EE6               	movwf	postinc1,c
  3491  001274  0E00               	movlw	high _out_sem
  3492  001276  6EE6               	movwf	postinc1,c
  3493  001278  ECEA  F007         	call	_sem_wait	;wreg free
  3494                           
  3495                           ;tasks.c: 160:         PORTBbits.RB1 = 0;
  3496  00127C  9281               	bcf	3969,1,c	;volatile
  3497                           
  3498                           ;tasks.c: 161:         PORTCbits.RC7 = 0;
  3499  00127E  9E82               	bcf	3970,7,c	;volatile
  3500                           
  3501                           ;tasks.c: 162:         pipe_read(&p, &n);
  3502                           ;stkvar	_n @ sp[(-4)+0]
  3503  001280  0EFC               	movlw	252
  3504  001282  24E1               	addwf	fsr1l,w,c
  3505  001284  6E47               	movwf	btemp,c
  3506  001286  0EFF               	movlw	255
  3507  001288  20E2               	addwfc	fsr1h,w,c
  3508  00128A  6E48               	movwf	btemp+1,c
  3509  00128C  C047  FFE6         	movff	btemp,postinc1
  3510  001290  C048  FFE6         	movff	btemp+1,postinc1
  3511  001294  0E3B               	movlw	low _p
  3512  001296  6EE6               	movwf	postinc1,c
  3513  001298  0E00               	movlw	high _p
  3514  00129A  6EE6               	movwf	postinc1,c
  3515  00129C  ECE5  F006         	call	_pipe_read	;wreg free
  3516                           
  3517                           ;tasks.c: 163:         while (count < n){
  3518  0012A0  D017               	goto	l1962
  3519  0012A2                     l344:
  3520  0012A2  B481               	btfsc	3969,2,c	;volatile
  3521  0012A4  D7FE               	goto	l344
  3522                           
  3523                           ;tasks.c: 165:             lunos_delayTask(200);
  3524  0012A6  0EC8               	movlw	200
  3525  0012A8  6EE6               	movwf	postinc1,c
  3526  0012AA  0E00               	movlw	0
  3527  0012AC  6EE6               	movwf	postinc1,c
  3528  0012AE  ECC5  F00B         	call	_lunos_delayTask	;wreg free
  3529                           
  3530                           ;tasks.c: 166:             count++;
  3531                           ;stkvar	_count @ sp[(-4)+2]
  3532  0012B2  0EFE               	movlw	-2
  3533  0012B4  50E3               	movf	plusw1,w,c
  3534  0012B6  0F01               	addlw	1
  3535  0012B8  6E47               	movwf	btemp,c
  3536  0012BA  0EFE               	movlw	-2
  3537  0012BC  C047  FFE3         	movff	btemp,plusw1
  3538  0012C0  6A47               	clrf	btemp,c
  3539  0012C2  0EFF               	movlw	-1
  3540  0012C4  50E3               	movf	plusw1,w,c
  3541  0012C6  2047               	addwfc	btemp,w,c
  3542  0012C8  6E47               	movwf	btemp,c
  3543  0012CA  0EFF               	movlw	-1
  3544  0012CC  C047  FFE3         	movff	btemp,plusw1
  3545  0012D0                     l1962:
  3546                           
  3547                           ;tasks.c: 163:         while (count < n){
  3548                           ;stkvar	_n @ sp[(-4)+0]
  3549  0012D0  0EFC               	movlw	-4
  3550  0012D2  CFE3 F051          	movff	plusw1,btemp+10
  3551  0012D6  0EFD               	movlw	-3
  3552  0012D8  CFE3 F052          	movff	plusw1,btemp+11
  3553                           
  3554                           ;stkvar	_count @ sp[(-4)+2]
  3555  0012DC  0EFE               	movlw	-2
  3556  0012DE  CFE3 F04F          	movff	plusw1,btemp+8
  3557  0012E2  0EFF               	movlw	-1
  3558  0012E4  CFE3 F050          	movff	plusw1,btemp+9
  3559  0012E8  5051               	movf	btemp+10,w,c
  3560  0012EA  5C4F               	subwf	btemp+8,w,c
  3561  0012EC  5052               	movf	btemp+11,w,c
  3562  0012EE  5850               	subwfb	btemp+9,w,c
  3563  0012F0  A0D8               	btfss	status,0,c
  3564  0012F2  D7D7               	goto	l344
  3565                           
  3566                           ;tasks.c: 168:         PORTBbits.RB1 = 1;
  3567  0012F4  8281               	bsf	3969,1,c	;volatile
  3568                           
  3569                           ;tasks.c: 169:         lunos_delayTask(200);
  3570  0012F6  0EC8               	movlw	200
  3571  0012F8  6EE6               	movwf	postinc1,c
  3572  0012FA  0E00               	movlw	0
  3573  0012FC  6EE6               	movwf	postinc1,c
  3574  0012FE  ECC5  F00B         	call	_lunos_delayTask	;wreg free
  3575                           
  3576                           ;tasks.c: 170:         PORTCbits.RC7 = 1;
  3577  001302  8E82               	bsf	3970,7,c	;volatile
  3578                           
  3579                           ;tasks.c: 171:         PORTBbits.RB1 = 0;
  3580  001304  9281               	bcf	3969,1,c	;volatile
  3581                           
  3582                           ;tasks.c: 172:         lunos_delayTask(200);
  3583  001306  0EC8               	movlw	200
  3584  001308  6EE6               	movwf	postinc1,c
  3585  00130A  0E00               	movlw	0
  3586  00130C  6EE6               	movwf	postinc1,c
  3587  00130E  ECC5  F00B         	call	_lunos_delayTask	;wreg free
  3588                           
  3589                           ;tasks.c: 174:         sem_post(&count_sem);
  3590  001312  0E2B               	movlw	low _count_sem
  3591  001314  6EE6               	movwf	postinc1,c
  3592  001316  0E00               	movlw	high _count_sem
  3593  001318  6EE6               	movwf	postinc1,c
  3594  00131A  EC69  F007         	call	_sem_post	;wreg free
  3595                           
  3596                           ;tasks.c: 175:         global_buffer.p_state = FREE_;
  3597  00131E  6A06               	clrf	_global_buffer+5,c
  3598                           
  3599                           ;tasks.c: 176:         global_buffer.count = 0;
  3600  001320  6A01               	clrf	_global_buffer,c
  3601  001322  6A02               	clrf	_global_buffer+1,c
  3602                           
  3603                           ;tasks.c: 177:         PORTBbits.RB1 = 1;
  3604  001324  8281               	bsf	3969,1,c	;volatile
  3605  001326  D7A0               	goto	l341
  3606  001328                     __end_of_count_out:
  3607                           	opt callstack 0
  3608                           
  3609 ;; *************** function _pipe_read *****************
  3610 ;; Defined at:
  3611 ;;		line 27 in file "pipe.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  p               2  [STACK] PTR struct pipe
  3614 ;;		 -> p(12), 
  3615 ;;  data            2  [STACK] PTR unsigned int 
  3616 ;;		 -> n(2), 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1  [STACK] void 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3628 ;;      Params:         0       0       0       0       0       0       0
  3629 ;;      Locals:         0       0       0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0
  3631 ;;      Totals:         0       0       0       0       0       0       0
  3632 ;;Total ram usage:        0 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:    8
  3635 ;; This function calls:
  3636 ;;		_sem_post
  3637 ;;		_sem_wait
  3638 ;; This function is called by:
  3639 ;;		_count_out
  3640 ;; This function uses a reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text23
  3644  000DCA                     __ptext23:
  3645                           	opt callstack 0
  3646  000DCA                     _pipe_read:
  3647                           	opt callstack 17
  3648                           
  3649                           ;pipe.c: 29:   sem_wait(p->r);
  3650                           ;stkvar	_p @ sp[(0)+-2]
  3651                           
  3652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3653                           ;incstack = 0
  3654  000DCA  0EFE               	movlw	-2
  3655  000DCC  CFE3 F051          	movff	plusw1,btemp+10
  3656  000DD0  0EFF               	movlw	-1
  3657  000DD2  CFE3 F052          	movff	plusw1,btemp+11
  3658  000DD6  0E0A               	movlw	10
  3659  000DD8  2451               	addwf	btemp+10,w,c
  3660  000DDA  6ED9               	movwf	fsr2l,c
  3661  000DDC  0E00               	movlw	0
  3662  000DDE  2052               	addwfc	btemp+11,w,c
  3663  000DE0  6EDA               	movwf	fsr2h,c
  3664  000DE2  CFDE F051          	movff	postinc2,btemp+10
  3665  000DE6  CFDD F052          	movff	postdec2,btemp+11
  3666  000DEA  C051  FFE6         	movff	btemp+10,postinc1
  3667  000DEE  C052  FFE6         	movff	btemp+11,postinc1
  3668  000DF2  ECEA  F007         	call	_sem_wait	;wreg free
  3669                           
  3670                           ;pipe.c: 30:   *data = p->pipe_data[p->index_read];
  3671                           ;stkvar	_p @ sp[(0)+-2]
  3672  000DF6  0EFE               	movlw	-2
  3673  000DF8  CFE3 F051          	movff	plusw1,btemp+10
  3674  000DFC  0EFF               	movlw	-1
  3675  000DFE  CFE3 F052          	movff	plusw1,btemp+11
  3676  000E02  0E06               	movlw	6
  3677  000E04  2451               	addwf	btemp+10,w,c
  3678  000E06  6ED9               	movwf	fsr2l,c
  3679  000E08  0E00               	movlw	0
  3680  000E0A  2052               	addwfc	btemp+11,w,c
  3681  000E0C  6EDA               	movwf	fsr2h,c
  3682  000E0E  CFDE F051          	movff	postinc2,btemp+10
  3683  000E12  CFDD F052          	movff	postdec2,btemp+11
  3684  000E16  90D8               	bcf	status,0,c
  3685  000E18  3451               	rlcf	btemp+10,w,c
  3686  000E1A  6E4F               	movwf	btemp+8,c
  3687  000E1C  3452               	rlcf	btemp+11,w,c
  3688  000E1E  6E50               	movwf	btemp+9,c
  3689                           
  3690                           ;stkvar	_p @ sp[(0)+-2]
  3691  000E20  0EFE               	movlw	-2
  3692  000E22  CFE3 F051          	movff	plusw1,btemp+10
  3693  000E26  0EFF               	movlw	-1
  3694  000E28  CFE3 F052          	movff	plusw1,btemp+11
  3695  000E2C  504F               	movf	btemp+8,w,c
  3696  000E2E  2451               	addwf	btemp+10,w,c
  3697  000E30  6ED9               	movwf	fsr2l,c
  3698  000E32  5050               	movf	btemp+9,w,c
  3699  000E34  2052               	addwfc	btemp+11,w,c
  3700  000E36  6EDA               	movwf	fsr2h,c
  3701                           
  3702                           ;stkvar	_data @ sp[(0)+-4]
  3703  000E38  0EFC               	movlw	-4
  3704  000E3A  CFE3 FFE9          	movff	plusw1,fsr0l
  3705  000E3E  0EFD               	movlw	-3
  3706  000E40  CFE3 FFEA          	movff	plusw1,fsr0h
  3707  000E44  CFDE FFEE          	movff	postinc2,postinc0
  3708  000E48  CFDD FFED          	movff	postdec2,postdec0
  3709                           
  3710                           ;pipe.c: 31:   p->index_read = (p->index_read + 1) % 2;
  3711                           ;stkvar	_p @ sp[(0)+-2]
  3712  000E4C  0EFE               	movlw	-2
  3713  000E4E  CFE3 F051          	movff	plusw1,btemp+10
  3714  000E52  0EFF               	movlw	-1
  3715  000E54  CFE3 F052          	movff	plusw1,btemp+11
  3716  000E58  0E06               	movlw	6
  3717  000E5A  2451               	addwf	btemp+10,w,c
  3718  000E5C  6ED9               	movwf	fsr2l,c
  3719  000E5E  0E00               	movlw	0
  3720  000E60  2052               	addwfc	btemp+11,w,c
  3721  000E62  6EDA               	movwf	fsr2h,c
  3722  000E64  CFDE F051          	movff	postinc2,btemp+10
  3723  000E68  CFDD F052          	movff	postdec2,btemp+11
  3724  000E6C  0E01               	movlw	1
  3725  000E6E  2651               	addwf	btemp+10,f,c
  3726  000E70  0E00               	movlw	0
  3727  000E72  2252               	addwfc	btemp+11,f,c
  3728  000E74  0E01               	movlw	1
  3729  000E76  1651               	andwf	btemp+10,f,c
  3730  000E78  0E00               	movlw	0
  3731  000E7A  1652               	andwf	btemp+11,f,c
  3732                           
  3733                           ;stkvar	_p @ sp[(0)+-2]
  3734  000E7C  0EFE               	movlw	-2
  3735  000E7E  CFE3 F04F          	movff	plusw1,btemp+8
  3736  000E82  0EFF               	movlw	-1
  3737  000E84  CFE3 F050          	movff	plusw1,btemp+9
  3738  000E88  0E06               	movlw	6
  3739  000E8A  244F               	addwf	btemp+8,w,c
  3740  000E8C  6ED9               	movwf	fsr2l,c
  3741  000E8E  0E00               	movlw	0
  3742  000E90  2050               	addwfc	btemp+9,w,c
  3743  000E92  6EDA               	movwf	fsr2h,c
  3744  000E94  C051  FFDE         	movff	btemp+10,postinc2
  3745  000E98  C052  FFDD         	movff	btemp+11,postdec2
  3746                           
  3747                           ;pipe.c: 32:   sem_post(p->w);
  3748                           ;stkvar	_p @ sp[(0)+-2]
  3749  000E9C  0EFE               	movlw	-2
  3750  000E9E  CFE3 F051          	movff	plusw1,btemp+10
  3751  000EA2  0EFF               	movlw	-1
  3752  000EA4  CFE3 F052          	movff	plusw1,btemp+11
  3753  000EA8  0E08               	movlw	8
  3754  000EAA  2451               	addwf	btemp+10,w,c
  3755  000EAC  6ED9               	movwf	fsr2l,c
  3756  000EAE  0E00               	movlw	0
  3757  000EB0  2052               	addwfc	btemp+11,w,c
  3758  000EB2  6EDA               	movwf	fsr2h,c
  3759  000EB4  CFDE F051          	movff	postinc2,btemp+10
  3760  000EB8  CFDD F052          	movff	postdec2,btemp+11
  3761  000EBC  C051  FFE6         	movff	btemp+10,postinc1
  3762  000EC0  C052  FFE6         	movff	btemp+11,postinc1
  3763  000EC4  EC69  F007         	call	_sem_post	;wreg free
  3764                           
  3765                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3766  000EC8  52E5               	movf	postdec1,f,c
  3767  000ECA  52E5               	movf	postdec1,f,c
  3768  000ECC  52E5               	movf	postdec1,f,c
  3769  000ECE  52E5               	movf	postdec1,f,c
  3770  000ED0  0012               	return		;funcret
  3771  000ED2                     __end_of_pipe_read:
  3772                           	opt callstack 0
  3773                           
  3774 ;; *************** function _ISR_timer0 *****************
  3775 ;; Defined at:
  3776 ;;		line 56 in file "int0_test.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;		None
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3790 ;;      Params:         0       0       0       0       0       0       0
  3791 ;;      Locals:         0       0       0       0       0       0       0
  3792 ;;      Temps:         14       0       0       0       0       0       0
  3793 ;;      Totals:        14       0       0       0       0       0       0
  3794 ;;Total ram usage:       14 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    2
  3797 ;; This function calls:
  3798 ;;		___wmul
  3799 ;;		_delay_decrement
  3800 ;;		_round_robin
  3801 ;; This function is called by:
  3802 ;;		Interrupt level 2
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	intcode
  3807  000008                     __pintcode:
  3808                           	opt callstack 0
  3809  000008                     _ISR_timer0:
  3810                           	opt callstack 17
  3811                           
  3812                           ;incstack = 0
  3813  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  3814                           
  3815                           	psect	intcode_body
  3816  000014                     __pintcode_body:
  3817                           	opt callstack 17
  3818  000014                     int_func:
  3819                           	opt callstack 17
  3820  000014  0006               	pop		; remove dummy address from shadow register refresh
  3821  000016  CFE1 F069          	movff	fsr1l,??_ISR_timer0+2
  3822  00001A  CFE2 F06A          	movff	fsr1h,??_ISR_timer0+3
  3823  00001E  CFD9 F06B          	movff	fsr2l,??_ISR_timer0+4
  3824  000022  CFDA F06C          	movff	fsr2h,??_ISR_timer0+5
  3825  000026  CFF3 F06D          	movff	prodl,??_ISR_timer0+6
  3826  00002A  CFF4 F06E          	movff	prodh,??_ISR_timer0+7
  3827  00002E  C047  F06F         	movff	btemp,??_ISR_timer0+8
  3828  000032  C048  F070         	movff	btemp+1,??_ISR_timer0+9
  3829  000036  C04F  F071         	movff	btemp+8,??_ISR_timer0+10
  3830  00003A  C050  F072         	movff	btemp+9,??_ISR_timer0+11
  3831  00003E  C051  F073         	movff	btemp+10,??_ISR_timer0+12
  3832  000042  C052  F074         	movff	btemp+11,??_ISR_timer0+13
  3833  000046  EE15  F090         	lfsr	1,___inthi_sp
  3834                           
  3835                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  3836  00004A  9EF2               	bcf	4082,7,c	;volatile
  3837                           
  3838                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  3839  00004C  A4F2               	btfss	4082,2,c	;volatile
  3840  00004E  D22C               	goto	i2u60_40
  3841                           
  3842                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  3843  000050  94F2               	bcf	4082,2,c	;volatile
  3844                           
  3845                           ;int0_test.c: 61:     TMR0L = 252;
  3846  000052  0EFC               	movlw	252
  3847  000054  6ED6               	movwf	4054,c	;volatile
  3848                           
  3849                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  3850  000056  A083               	btfss	3971,0,c	;volatile
  3851  000058  D002               	goto	i2u56_40
  3852  00005A  0E01               	movlw	1
  3853  00005C  D001               	goto	i2u56_46
  3854  00005E                     i2u56_40:
  3855  00005E  0E00               	movlw	0
  3856  000060                     i2u56_46:
  3857  000060  0AFF               	xorlw	255
  3858  000062  6E67               	movwf	??_ISR_timer0& (0+255),c
  3859  000064  5083               	movf	3971,w,c	;volatile
  3860  000066  1867               	xorwf	??_ISR_timer0,w,c
  3861  000068  0BFE               	andlw	-2
  3862  00006A  1867               	xorwf	??_ISR_timer0,w,c
  3863  00006C  6E83               	movwf	3971,c	;volatile
  3864                           
  3865                           ;int0_test.c: 63:     delay_decrement();
  3866  00006E  ECCB  F004         	call	_delay_decrement	;wreg free
  3867                           
  3868                           ;int0_test.c: 65:     quantum--;
  3869  000072  0675               	decf	_quantum,f,c
  3870  000074  A0D8               	btfss	status,0,c
  3871  000076  0676               	decf	_quantum+1,f,c
  3872                           
  3873                           ;int0_test.c: 66:     if (quantum <= 0) {
  3874  000078  BE76               	btfsc	_quantum+1,7,c
  3875  00007A  D005               	goto	i2u57_40
  3876  00007C  5076               	movf	_quantum+1,w,c
  3877  00007E  E102               	bnz	i2u57_41
  3878  000080  0475               	decf	_quantum,w,c
  3879  000082  B0D8               	btfsc	status,0,c
  3880  000084                     i2u57_41:
  3881  000084  D211               	goto	i2u60_40
  3882  000086                     i2u57_40:
  3883                           
  3884                           ;int0_test.c: 67:       quantum = 10;
  3885  000086  0E00               	movlw	0
  3886  000088  6E76               	movwf	_quantum+1,c
  3887  00008A  0E0A               	movlw	10
  3888  00008C  6E75               	movwf	_quantum,c
  3889                           
  3890                           ;int0_test.c: 68:       { who = ready_queue.task_running; ready_queue.tasks[who].task_st
      +                          ate = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = ST
      +                          ATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks
      +                          [who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stac
      +                          k[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL
      +                          ; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size;};
  3891  00008E  C356  F009         	movff	_ready_queue+662,_who
  3892  000092  C357  F00A         	movff	_ready_queue+663,_who+1
  3893  000096  0E6E               	movlw	110
  3894  000098  6EE6               	movwf	postinc1,c
  3895  00009A  0E00               	movlw	0
  3896  00009C  6EE6               	movwf	postinc1,c
  3897  00009E  C009  FFE6         	movff	_who,postinc1
  3898  0000A2  C00A  FFE6         	movff	_who+1,postinc1
  3899  0000A6  EC42  F00A         	call	___wmul	;wreg free
  3900  0000AA  0EC8               	movlw	low (_ready_queue+8)
  3901  0000AC  2447               	addwf	btemp,w,c
  3902  0000AE  6ED9               	movwf	fsr2l,c
  3903  0000B0  0E00               	movlw	high (_ready_queue+8)
  3904  0000B2  2048               	addwfc	btemp+1,w,c
  3905  0000B4  6EDA               	movwf	fsr2h,c
  3906  0000B6  0E00               	movlw	0
  3907  0000B8  6EDF               	movwf	indf2,c
  3908  0000BA  0E6E               	movlw	110
  3909  0000BC  6EE6               	movwf	postinc1,c
  3910  0000BE  0E00               	movlw	0
  3911  0000C0  6EE6               	movwf	postinc1,c
  3912  0000C2  C009  FFE6         	movff	_who,postinc1
  3913  0000C6  C00A  FFE6         	movff	_who+1,postinc1
  3914  0000CA  EC42  F00A         	call	___wmul	;wreg free
  3915  0000CE  0EC5               	movlw	low (_ready_queue+5)
  3916  0000D0  2447               	addwf	btemp,w,c
  3917  0000D2  6ED9               	movwf	fsr2l,c
  3918  0000D4  0E00               	movlw	high (_ready_queue+5)
  3919  0000D6  2048               	addwfc	btemp+1,w,c
  3920  0000D8  6EDA               	movwf	fsr2h,c
  3921  0000DA  CFE8 FFDF          	movff	wreg,indf2	;volatile
  3922  0000DE  0E6E               	movlw	110
  3923  0000E0  6EE6               	movwf	postinc1,c
  3924  0000E2  0E00               	movlw	0
  3925  0000E4  6EE6               	movwf	postinc1,c
  3926  0000E6  C009  FFE6         	movff	_who,postinc1
  3927  0000EA  C00A  FFE6         	movff	_who+1,postinc1
  3928  0000EE  EC42  F00A         	call	___wmul	;wreg free
  3929  0000F2  0EC6               	movlw	low (_ready_queue+6)
  3930  0000F4  2447               	addwf	btemp,w,c
  3931  0000F6  6ED9               	movwf	fsr2l,c
  3932  0000F8  0E00               	movlw	high (_ready_queue+6)
  3933  0000FA  2048               	addwfc	btemp+1,w,c
  3934  0000FC  6EDA               	movwf	fsr2h,c
  3935  0000FE  CFD8 FFDF          	movff	status,indf2	;volatile
  3936  000102  0E6E               	movlw	110
  3937  000104  6EE6               	movwf	postinc1,c
  3938  000106  0E00               	movlw	0
  3939  000108  6EE6               	movwf	postinc1,c
  3940  00010A  C009  FFE6         	movff	_who,postinc1
  3941  00010E  C00A  FFE6         	movff	_who+1,postinc1
  3942  000112  EC42  F00A         	call	___wmul	;wreg free
  3943  000116  0EC7               	movlw	low (_ready_queue+7)
  3944  000118  2447               	addwf	btemp,w,c
  3945  00011A  6ED9               	movwf	fsr2l,c
  3946  00011C  0E00               	movlw	high (_ready_queue+7)
  3947  00011E  2048               	addwfc	btemp+1,w,c
  3948  000120  6EDA               	movwf	fsr2h,c
  3949  000122  CFE0 FFDF          	movff	bsr,indf2	;volatile
  3950  000126  6A07               	clrf	_size,c
  3951  000128  6A08               	clrf	_size+1,c
  3952  00012A  D07B               	goto	i2l1798
  3953  00012C                     i2l1794:
  3954  00012C  0E6E               	movlw	110
  3955  00012E  6EE6               	movwf	postinc1,c
  3956  000130  0E00               	movlw	0
  3957  000132  6EE6               	movwf	postinc1,c
  3958  000134  C009  FFE6         	movff	_who,postinc1
  3959  000138  C00A  FFE6         	movff	_who+1,postinc1
  3960  00013C  EC42  F00A         	call	___wmul	;wreg free
  3961  000140  0EC0               	movlw	low _ready_queue
  3962  000142  6E67               	movwf	??_ISR_timer0& (0+255),c
  3963  000144  0E00               	movlw	high _ready_queue
  3964  000146  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3965  000148  0E09               	movlw	9
  3966  00014A  2667               	addwf	??_ISR_timer0,f,c
  3967  00014C  0E00               	movlw	0
  3968  00014E  2268               	addwfc	??_ISR_timer0+1,f,c
  3969  000150  5047               	movf	btemp,w,c
  3970  000152  2667               	addwf	??_ISR_timer0,f,c
  3971  000154  5048               	movf	btemp+1,w,c
  3972  000156  2268               	addwfc	??_ISR_timer0+1,f,c
  3973  000158  0E03               	movlw	3
  3974  00015A  6EE6               	movwf	postinc1,c
  3975  00015C  0E00               	movlw	0
  3976  00015E  6EE6               	movwf	postinc1,c
  3977  000160  C007  FFE6         	movff	_size,postinc1
  3978  000164  C008  FFE6         	movff	_size+1,postinc1
  3979  000168  EC42  F00A         	call	___wmul	;wreg free
  3980  00016C  5047               	movf	btemp,w,c
  3981  00016E  2467               	addwf	??_ISR_timer0,w,c
  3982  000170  6ED9               	movwf	fsr2l,c
  3983  000172  5048               	movf	btemp+1,w,c
  3984  000174  2068               	addwfc	??_ISR_timer0+1,w,c
  3985  000176  6EDA               	movwf	fsr2h,c
  3986  000178  CFFF FFDF          	movff	tosu,indf2	;volatile
  3987  00017C  0E6E               	movlw	110
  3988  00017E  6EE6               	movwf	postinc1,c
  3989  000180  0E00               	movlw	0
  3990  000182  6EE6               	movwf	postinc1,c
  3991  000184  C009  FFE6         	movff	_who,postinc1
  3992  000188  C00A  FFE6         	movff	_who+1,postinc1
  3993  00018C  EC42  F00A         	call	___wmul	;wreg free
  3994  000190  0EC0               	movlw	low _ready_queue
  3995  000192  6E67               	movwf	??_ISR_timer0& (0+255),c
  3996  000194  0E00               	movlw	high _ready_queue
  3997  000196  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3998  000198  0E0B               	movlw	11
  3999  00019A  2667               	addwf	??_ISR_timer0,f,c
  4000  00019C  0E00               	movlw	0
  4001  00019E  2268               	addwfc	??_ISR_timer0+1,f,c
  4002  0001A0  5047               	movf	btemp,w,c
  4003  0001A2  2667               	addwf	??_ISR_timer0,f,c
  4004  0001A4  5048               	movf	btemp+1,w,c
  4005  0001A6  2268               	addwfc	??_ISR_timer0+1,f,c
  4006  0001A8  0E03               	movlw	3
  4007  0001AA  6EE6               	movwf	postinc1,c
  4008  0001AC  0E00               	movlw	0
  4009  0001AE  6EE6               	movwf	postinc1,c
  4010  0001B0  C007  FFE6         	movff	_size,postinc1
  4011  0001B4  C008  FFE6         	movff	_size+1,postinc1
  4012  0001B8  EC42  F00A         	call	___wmul	;wreg free
  4013  0001BC  5047               	movf	btemp,w,c
  4014  0001BE  2467               	addwf	??_ISR_timer0,w,c
  4015  0001C0  6ED9               	movwf	fsr2l,c
  4016  0001C2  5048               	movf	btemp+1,w,c
  4017  0001C4  2068               	addwfc	??_ISR_timer0+1,w,c
  4018  0001C6  6EDA               	movwf	fsr2h,c
  4019  0001C8  CFFE FFDF          	movff	tosh,indf2	;volatile
  4020  0001CC  0E6E               	movlw	110
  4021  0001CE  6EE6               	movwf	postinc1,c
  4022  0001D0  0E00               	movlw	0
  4023  0001D2  6EE6               	movwf	postinc1,c
  4024  0001D4  C009  FFE6         	movff	_who,postinc1
  4025  0001D8  C00A  FFE6         	movff	_who+1,postinc1
  4026  0001DC  EC42  F00A         	call	___wmul	;wreg free
  4027  0001E0  0EC0               	movlw	low _ready_queue
  4028  0001E2  6E67               	movwf	??_ISR_timer0& (0+255),c
  4029  0001E4  0E00               	movlw	high _ready_queue
  4030  0001E6  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  4031  0001E8  0E0A               	movlw	10
  4032  0001EA  2667               	addwf	??_ISR_timer0,f,c
  4033  0001EC  0E00               	movlw	0
  4034  0001EE  2268               	addwfc	??_ISR_timer0+1,f,c
  4035  0001F0  5047               	movf	btemp,w,c
  4036  0001F2  2667               	addwf	??_ISR_timer0,f,c
  4037  0001F4  5048               	movf	btemp+1,w,c
  4038  0001F6  2268               	addwfc	??_ISR_timer0+1,f,c
  4039  0001F8  0E03               	movlw	3
  4040  0001FA  6EE6               	movwf	postinc1,c
  4041  0001FC  0E00               	movlw	0
  4042  0001FE  6EE6               	movwf	postinc1,c
  4043  000200  C007  FFE6         	movff	_size,postinc1
  4044  000204  C008  FFE6         	movff	_size+1,postinc1
  4045  000208  EC42  F00A         	call	___wmul	;wreg free
  4046  00020C  5047               	movf	btemp,w,c
  4047  00020E  2467               	addwf	??_ISR_timer0,w,c
  4048  000210  6ED9               	movwf	fsr2l,c
  4049  000212  5048               	movf	btemp+1,w,c
  4050  000214  2068               	addwfc	??_ISR_timer0+1,w,c
  4051  000216  6EDA               	movwf	fsr2h,c
  4052  000218  CFFD FFDF          	movff	tosl,indf2	;volatile
  4053  00021C  4A07               	infsnz	_size,f,c
  4054  00021E  2A08               	incf	_size+1,f,c
  4055  000220  0006               	pop		;# 
  4056  000222                     i2l1798:
  4057  000222  50FC               	movf	stkptr,w,c	;volatile
  4058  000224  A4D8               	btfss	status,2,c
  4059  000226  D782               	goto	i2l1794
  4060  000228  0E6E               	movlw	110
  4061  00022A  6EE6               	movwf	postinc1,c
  4062  00022C  0E00               	movlw	0
  4063  00022E  6EE6               	movwf	postinc1,c
  4064  000230  C009  FFE6         	movff	_who,postinc1
  4065  000234  C00A  FFE6         	movff	_who+1,postinc1
  4066  000238  EC42  F00A         	call	___wmul	;wreg free
  4067  00023C  0E26               	movlw	low (_ready_queue+102)
  4068  00023E  2447               	addwf	btemp,w,c
  4069  000240  6ED9               	movwf	fsr2l,c
  4070  000242  0E01               	movlw	high (_ready_queue+102)
  4071  000244  2048               	addwfc	btemp+1,w,c
  4072  000246  6EDA               	movwf	fsr2h,c
  4073  000248  C007  FFDE         	movff	_size,postinc2
  4074  00024C  C008  FFDD         	movff	_size+1,postdec2
  4075                           
  4076                           ;int0_test.c: 69:       ready_queue.task_running = round_robin();
  4077  000250  EC8D  F00A         	call	_round_robin	;wreg free
  4078  000254  C047  F356         	movff	btemp,_ready_queue+662
  4079  000258  C048  F357         	movff	btemp+1,_ready_queue+663
  4080                           
  4081                           ;int0_test.c: 70:       { STKPTR = 0; who = ready_queue.task_running; if (ready_queue.ta
      +                          sks[who].task_installed == 0) { ready_queue.tasks[who].task_installed = 1; __asm("PUSH")
      +                          ; TOS = ready_queue.tasks[who].task_f; } else { ready_queue.tasks[who].task_state = RUNN
      +                          ING; WREG = ready_queue.tasks[who].W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BS
      +                          R = ready_queue.tasks[who].BSR_reg; size = ready_queue.tasks[who].task_stack.stack_level
      +                          ; while(size){ __asm("PUSH"); TOSL = ready_queue.tasks[who].task_stack.h_stack[size-1].T
      +                          OSL_reg; TOSH = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSH_reg; TOSU = ready
      +                          _queue.tasks[who].task_stack.h_stack[size-1].TOSU_reg; size--; } }};
  4082  00025C  6AFC               	clrf	stkptr,c	;volatile
  4083  00025E  C356  F009         	movff	_ready_queue+662,_who
  4084  000262  C357  F00A         	movff	_ready_queue+663,_who+1
  4085  000266  0E6E               	movlw	110
  4086  000268  6EE6               	movwf	postinc1,c
  4087  00026A  0E00               	movlw	0
  4088  00026C  6EE6               	movwf	postinc1,c
  4089  00026E  C009  FFE6         	movff	_who,postinc1
  4090  000272  C00A  FFE6         	movff	_who+1,postinc1
  4091  000276  EC42  F00A         	call	___wmul	;wreg free
  4092  00027A  0E28               	movlw	low (_ready_queue+104)
  4093  00027C  2447               	addwf	btemp,w,c
  4094  00027E  6ED9               	movwf	fsr2l,c
  4095  000280  0E01               	movlw	high (_ready_queue+104)
  4096  000282  2048               	addwfc	btemp+1,w,c
  4097  000284  6EDA               	movwf	fsr2h,c
  4098  000286  50DE               	movf	postinc2,w,c
  4099  000288  10DE               	iorwf	postinc2,w,c
  4100  00028A  A4D8               	btfss	status,2,c
  4101  00028C  D02F               	goto	i2l1812
  4102  00028E  0E6E               	movlw	110
  4103  000290  6EE6               	movwf	postinc1,c
  4104  000292  0E00               	movlw	0
  4105  000294  6EE6               	movwf	postinc1,c
  4106  000296  C009  FFE6         	movff	_who,postinc1
  4107  00029A  C00A  FFE6         	movff	_who+1,postinc1
  4108  00029E  EC42  F00A         	call	___wmul	;wreg free
  4109  0002A2  0E28               	movlw	low (_ready_queue+104)
  4110  0002A4  2447               	addwf	btemp,w,c
  4111  0002A6  6ED9               	movwf	fsr2l,c
  4112  0002A8  0E01               	movlw	high (_ready_queue+104)
  4113  0002AA  2048               	addwfc	btemp+1,w,c
  4114  0002AC  6EDA               	movwf	fsr2h,c
  4115  0002AE  0E01               	movlw	1
  4116  0002B0  6EDE               	movwf	postinc2,c
  4117  0002B2  0E00               	movlw	0
  4118  0002B4  6EDD               	movwf	postdec2,c
  4119  0002B6  0005               	push		;# 
  4120  0002B8  0E6E               	movlw	110
  4121  0002BA  6EE6               	movwf	postinc1,c
  4122  0002BC  0E00               	movlw	0
  4123  0002BE  6EE6               	movwf	postinc1,c
  4124  0002C0  C009  FFE6         	movff	_who,postinc1
  4125  0002C4  C00A  FFE6         	movff	_who+1,postinc1
  4126  0002C8  EC42  F00A         	call	___wmul	;wreg free
  4127  0002CC  0E2A               	movlw	low (_ready_queue+106)
  4128  0002CE  2447               	addwf	btemp,w,c
  4129  0002D0  6ED9               	movwf	fsr2l,c
  4130  0002D2  0E01               	movlw	high (_ready_queue+106)
  4131  0002D4  2048               	addwfc	btemp+1,w,c
  4132  0002D6  6EDA               	movwf	fsr2h,c
  4133  0002D8  CFDE F067          	movff	postinc2,??_ISR_timer0
  4134  0002DC  CFDD F068          	movff	postdec2,??_ISR_timer0+1
  4135  0002E0  C067  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  4136  0002E4  C068  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  4137  0002E8  6AFF               	clrf	tosu,c	;volatile
  4138  0002EA  D0DE               	goto	i2u60_40
  4139  0002EC                     i2l1812:
  4140  0002EC  0E6E               	movlw	110
  4141  0002EE  6EE6               	movwf	postinc1,c
  4142  0002F0  0E00               	movlw	0
  4143  0002F2  6EE6               	movwf	postinc1,c
  4144  0002F4  C009  FFE6         	movff	_who,postinc1
  4145  0002F8  C00A  FFE6         	movff	_who+1,postinc1
  4146  0002FC  EC42  F00A         	call	___wmul	;wreg free
  4147  000300  0EC8               	movlw	low (_ready_queue+8)
  4148  000302  2447               	addwf	btemp,w,c
  4149  000304  6ED9               	movwf	fsr2l,c
  4150  000306  0E00               	movlw	high (_ready_queue+8)
  4151  000308  2048               	addwfc	btemp+1,w,c
  4152  00030A  6EDA               	movwf	fsr2h,c
  4153  00030C  0E01               	movlw	1
  4154  00030E  6EDF               	movwf	indf2,c
  4155  000310  0E6E               	movlw	110
  4156  000312  6EE6               	movwf	postinc1,c
  4157  000314  0E00               	movlw	0
  4158  000316  6EE6               	movwf	postinc1,c
  4159  000318  C009  FFE6         	movff	_who,postinc1
  4160  00031C  C00A  FFE6         	movff	_who+1,postinc1
  4161  000320  EC42  F00A         	call	___wmul	;wreg free
  4162  000324  0EC5               	movlw	low (_ready_queue+5)
  4163  000326  2447               	addwf	btemp,w,c
  4164  000328  6ED9               	movwf	fsr2l,c
  4165  00032A  0E00               	movlw	high (_ready_queue+5)
  4166  00032C  2048               	addwfc	btemp+1,w,c
  4167  00032E  6EDA               	movwf	fsr2h,c
  4168  000330  50DF               	movf	indf2,w,c
  4169  000332  6E67               	movwf	??_ISR_timer0& (0+255),c
  4170  000334  5067               	movf	??_ISR_timer0,w,c
  4171  000336  0E6E               	movlw	110
  4172  000338  6EE6               	movwf	postinc1,c
  4173  00033A  0E00               	movlw	0
  4174  00033C  6EE6               	movwf	postinc1,c
  4175  00033E  C009  FFE6         	movff	_who,postinc1
  4176  000342  C00A  FFE6         	movff	_who+1,postinc1
  4177  000346  EC42  F00A         	call	___wmul	;wreg free
  4178  00034A  0EC6               	movlw	low (_ready_queue+6)
  4179  00034C  2447               	addwf	btemp,w,c
  4180  00034E  6ED9               	movwf	fsr2l,c
  4181  000350  0E00               	movlw	high (_ready_queue+6)
  4182  000352  2048               	addwfc	btemp+1,w,c
  4183  000354  6EDA               	movwf	fsr2h,c
  4184  000356  50DF               	movf	indf2,w,c
  4185  000358  6ED8               	movwf	status,c	;volatile
  4186  00035A  0E6E               	movlw	110
  4187  00035C  6EE6               	movwf	postinc1,c
  4188  00035E  0E00               	movlw	0
  4189  000360  6EE6               	movwf	postinc1,c
  4190  000362  C009  FFE6         	movff	_who,postinc1
  4191  000366  C00A  FFE6         	movff	_who+1,postinc1
  4192  00036A  EC42  F00A         	call	___wmul	;wreg free
  4193  00036E  0EC7               	movlw	low (_ready_queue+7)
  4194  000370  2447               	addwf	btemp,w,c
  4195  000372  6ED9               	movwf	fsr2l,c
  4196  000374  0E00               	movlw	high (_ready_queue+7)
  4197  000376  2048               	addwfc	btemp+1,w,c
  4198  000378  6EDA               	movwf	fsr2h,c
  4199  00037A  50DF               	movf	indf2,w,c
  4200  00037C  6EE0               	movwf	bsr,c	;volatile
  4201  00037E  0E6E               	movlw	110
  4202  000380  6EE6               	movwf	postinc1,c
  4203  000382  0E00               	movlw	0
  4204  000384  6EE6               	movwf	postinc1,c
  4205  000386  C009  FFE6         	movff	_who,postinc1
  4206  00038A  C00A  FFE6         	movff	_who+1,postinc1
  4207  00038E  EC42  F00A         	call	___wmul	;wreg free
  4208  000392  0E26               	movlw	low (_ready_queue+102)
  4209  000394  2447               	addwf	btemp,w,c
  4210  000396  6ED9               	movwf	fsr2l,c
  4211  000398  0E01               	movlw	high (_ready_queue+102)
  4212  00039A  2048               	addwfc	btemp+1,w,c
  4213  00039C  6EDA               	movwf	fsr2h,c
  4214  00039E  CFDE F007          	movff	postinc2,_size
  4215  0003A2  CFDD F008          	movff	postdec2,_size+1
  4216  0003A6  D07C               	goto	i2l1818
  4217  0003A8                     i2l59:
  4218  0003A8  0005               	push		;# 
  4219  0003AA  0E6E               	movlw	110
  4220  0003AC  6EE6               	movwf	postinc1,c
  4221  0003AE  0E00               	movlw	0
  4222  0003B0  6EE6               	movwf	postinc1,c
  4223  0003B2  C009  FFE6         	movff	_who,postinc1
  4224  0003B6  C00A  FFE6         	movff	_who+1,postinc1
  4225  0003BA  EC42  F00A         	call	___wmul	;wreg free
  4226  0003BE  0EC0               	movlw	low _ready_queue
  4227  0003C0  6E67               	movwf	??_ISR_timer0& (0+255),c
  4228  0003C2  0E00               	movlw	high _ready_queue
  4229  0003C4  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  4230  0003C6  0E07               	movlw	7
  4231  0003C8  2667               	addwf	??_ISR_timer0,f,c
  4232  0003CA  0E00               	movlw	0
  4233  0003CC  2268               	addwfc	??_ISR_timer0+1,f,c
  4234  0003CE  5047               	movf	btemp,w,c
  4235  0003D0  2667               	addwf	??_ISR_timer0,f,c
  4236  0003D2  5048               	movf	btemp+1,w,c
  4237  0003D4  2268               	addwfc	??_ISR_timer0+1,f,c
  4238  0003D6  0E03               	movlw	3
  4239  0003D8  6EE6               	movwf	postinc1,c
  4240  0003DA  0E00               	movlw	0
  4241  0003DC  6EE6               	movwf	postinc1,c
  4242  0003DE  C007  FFE6         	movff	_size,postinc1
  4243  0003E2  C008  FFE6         	movff	_size+1,postinc1
  4244  0003E6  EC42  F00A         	call	___wmul	;wreg free
  4245  0003EA  5047               	movf	btemp,w,c
  4246  0003EC  2467               	addwf	??_ISR_timer0,w,c
  4247  0003EE  6ED9               	movwf	fsr2l,c
  4248  0003F0  5048               	movf	btemp+1,w,c
  4249  0003F2  2068               	addwfc	??_ISR_timer0+1,w,c
  4250  0003F4  6EDA               	movwf	fsr2h,c
  4251  0003F6  50DF               	movf	indf2,w,c
  4252  0003F8  6EFD               	movwf	tosl,c	;volatile
  4253  0003FA  0E6E               	movlw	110
  4254  0003FC  6EE6               	movwf	postinc1,c
  4255  0003FE  0E00               	movlw	0
  4256  000400  6EE6               	movwf	postinc1,c
  4257  000402  C009  FFE6         	movff	_who,postinc1
  4258  000406  C00A  FFE6         	movff	_who+1,postinc1
  4259  00040A  EC42  F00A         	call	___wmul	;wreg free
  4260  00040E  0EC0               	movlw	low _ready_queue
  4261  000410  6E67               	movwf	??_ISR_timer0& (0+255),c
  4262  000412  0E00               	movlw	high _ready_queue
  4263  000414  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  4264  000416  0E08               	movlw	8
  4265  000418  2667               	addwf	??_ISR_timer0,f,c
  4266  00041A  0E00               	movlw	0
  4267  00041C  2268               	addwfc	??_ISR_timer0+1,f,c
  4268  00041E  5047               	movf	btemp,w,c
  4269  000420  2667               	addwf	??_ISR_timer0,f,c
  4270  000422  5048               	movf	btemp+1,w,c
  4271  000424  2268               	addwfc	??_ISR_timer0+1,f,c
  4272  000426  0E03               	movlw	3
  4273  000428  6EE6               	movwf	postinc1,c
  4274  00042A  0E00               	movlw	0
  4275  00042C  6EE6               	movwf	postinc1,c
  4276  00042E  C007  FFE6         	movff	_size,postinc1
  4277  000432  C008  FFE6         	movff	_size+1,postinc1
  4278  000436  EC42  F00A         	call	___wmul	;wreg free
  4279  00043A  5047               	movf	btemp,w,c
  4280  00043C  2467               	addwf	??_ISR_timer0,w,c
  4281  00043E  6ED9               	movwf	fsr2l,c
  4282  000440  5048               	movf	btemp+1,w,c
  4283  000442  2068               	addwfc	??_ISR_timer0+1,w,c
  4284  000444  6EDA               	movwf	fsr2h,c
  4285  000446  50DF               	movf	indf2,w,c
  4286  000448  6EFE               	movwf	tosh,c	;volatile
  4287  00044A  0E6E               	movlw	110
  4288  00044C  6EE6               	movwf	postinc1,c
  4289  00044E  0E00               	movlw	0
  4290  000450  6EE6               	movwf	postinc1,c
  4291  000452  C009  FFE6         	movff	_who,postinc1
  4292  000456  C00A  FFE6         	movff	_who+1,postinc1
  4293  00045A  EC42  F00A         	call	___wmul	;wreg free
  4294  00045E  0EC0               	movlw	low _ready_queue
  4295  000460  6E67               	movwf	??_ISR_timer0& (0+255),c
  4296  000462  0E00               	movlw	high _ready_queue
  4297  000464  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  4298  000466  0E06               	movlw	6
  4299  000468  2667               	addwf	??_ISR_timer0,f,c
  4300  00046A  0E00               	movlw	0
  4301  00046C  2268               	addwfc	??_ISR_timer0+1,f,c
  4302  00046E  5047               	movf	btemp,w,c
  4303  000470  2667               	addwf	??_ISR_timer0,f,c
  4304  000472  5048               	movf	btemp+1,w,c
  4305  000474  2268               	addwfc	??_ISR_timer0+1,f,c
  4306  000476  0E03               	movlw	3
  4307  000478  6EE6               	movwf	postinc1,c
  4308  00047A  0E00               	movlw	0
  4309  00047C  6EE6               	movwf	postinc1,c
  4310  00047E  C007  FFE6         	movff	_size,postinc1
  4311  000482  C008  FFE6         	movff	_size+1,postinc1
  4312  000486  EC42  F00A         	call	___wmul	;wreg free
  4313  00048A  5047               	movf	btemp,w,c
  4314  00048C  2467               	addwf	??_ISR_timer0,w,c
  4315  00048E  6ED9               	movwf	fsr2l,c
  4316  000490  5048               	movf	btemp+1,w,c
  4317  000492  2068               	addwfc	??_ISR_timer0+1,w,c
  4318  000494  6EDA               	movwf	fsr2h,c
  4319  000496  50DF               	movf	indf2,w,c
  4320  000498  6EFF               	movwf	tosu,c	;volatile
  4321  00049A  0607               	decf	_size,f,c
  4322  00049C  A0D8               	btfss	status,0,c
  4323  00049E  0608               	decf	_size+1,f,c
  4324  0004A0                     i2l1818:
  4325  0004A0  5007               	movf	_size,w,c
  4326  0004A2  1008               	iorwf	_size+1,w,c
  4327  0004A4  A4D8               	btfss	status,2,c
  4328  0004A6  D780               	goto	i2l59
  4329  0004A8                     i2u60_40:
  4330                           
  4331                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  4332                           
  4333                           ;int0_test.c: 73:   }
  4334  0004A8  8EF2               	bsf	4082,7,c	;volatile
  4335  0004AA  C074  F052         	movff	??_ISR_timer0+13,btemp+11
  4336  0004AE  C073  F051         	movff	??_ISR_timer0+12,btemp+10
  4337  0004B2  C072  F050         	movff	??_ISR_timer0+11,btemp+9
  4338  0004B6  C071  F04F         	movff	??_ISR_timer0+10,btemp+8
  4339  0004BA  C070  F048         	movff	??_ISR_timer0+9,btemp+1
  4340  0004BE  C06F  F047         	movff	??_ISR_timer0+8,btemp
  4341  0004C2  C06E  FFF4         	movff	??_ISR_timer0+7,prodh
  4342  0004C6  C06D  FFF3         	movff	??_ISR_timer0+6,prodl
  4343  0004CA  C06C  FFDA         	movff	??_ISR_timer0+5,fsr2h
  4344  0004CE  C06B  FFD9         	movff	??_ISR_timer0+4,fsr2l
  4345  0004D2  C06A  FFE2         	movff	??_ISR_timer0+3,fsr1h
  4346  0004D6  C069  FFE1         	movff	??_ISR_timer0+2,fsr1l
  4347  0004DA  0011               	retfie		f
  4348  0004DC                     __end_of_ISR_timer0:
  4349                           	opt callstack 0
  4350                           
  4351 ;; *************** function _delay_decrement *****************
  4352 ;; Defined at:
  4353 ;;		line 101 in file "kernel.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  i               2  [STACK] int 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1  [STACK] void 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4367 ;;      Params:         0       0       0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0       0       0
  4370 ;;      Totals:         0       0       0       0       0       0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_ISR_timer0
  4377 ;; This function uses a reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text25
  4381  000996                     __ptext25:
  4382                           	opt callstack 0
  4383  000996                     _delay_decrement:
  4384                           	opt callstack 0
  4385                           
  4386                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4387  000996  52E6               	movf	postinc1,f,c
  4388  000998  52E6               	movf	postinc1,f,c
  4389                           
  4390                           ;kernel.c: 102:   int i;;kernel.c: 104:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  4391                           ;stkvar	_i @ sp[(-2)+0]
  4392                           
  4393                           ;incstack = 0
  4394  00099A  0EFE               	movlw	-2
  4395  00099C  6AE3               	clrf	plusw1,c
  4396  00099E  0EFF               	movlw	-1
  4397  0009A0  6AE3               	clrf	plusw1,c
  4398  0009A2  D070               	goto	l1682
  4399  0009A4                     l1672:
  4400                           
  4401                           ;kernel.c: 105:     if (ready_queue.tasks[i].task_state == WAITING) {
  4402                           ;stkvar	_i @ sp[(-2)+0]
  4403  0009A4  0EFE               	movlw	-2
  4404  0009A6  CFE3 F051          	movff	plusw1,btemp+10
  4405  0009AA  0EFF               	movlw	-1
  4406  0009AC  CFE3 F052          	movff	plusw1,btemp+11
  4407  0009B0  0E6E               	movlw	110
  4408  0009B2  0251               	mulwf	btemp+10,c
  4409  0009B4  CFF3 F04F          	movff	prodl,btemp+8
  4410  0009B8  CFF4 F050          	movff	prodh,btemp+9
  4411  0009BC  0252               	mulwf	btemp+11,c
  4412  0009BE  50F3               	movf	prodl,w,c
  4413  0009C0  2650               	addwf	btemp+9,f,c
  4414  0009C2  0EC8               	movlw	low (_ready_queue+8)
  4415  0009C4  244F               	addwf	btemp+8,w,c
  4416  0009C6  6ED9               	movwf	fsr2l,c
  4417  0009C8  0E00               	movlw	high (_ready_queue+8)
  4418  0009CA  2050               	addwfc	btemp+9,w,c
  4419  0009CC  6EDA               	movwf	fsr2h,c
  4420  0009CE  0E02               	movlw	2
  4421  0009D0  18DE               	xorwf	postinc2,w,c
  4422  0009D2  A4D8               	btfss	status,2,c
  4423  0009D4  D048               	goto	l1680
  4424                           
  4425                           ;kernel.c: 106:       ready_queue.tasks[i].task_delay_time--;
  4426                           ;stkvar	_i @ sp[(-2)+0]
  4427  0009D6  0EFE               	movlw	-2
  4428  0009D8  CFE3 F051          	movff	plusw1,btemp+10
  4429  0009DC  0EFF               	movlw	-1
  4430  0009DE  CFE3 F052          	movff	plusw1,btemp+11
  4431  0009E2  0E6E               	movlw	110
  4432  0009E4  0251               	mulwf	btemp+10,c
  4433  0009E6  CFF3 F04F          	movff	prodl,btemp+8
  4434  0009EA  CFF4 F050          	movff	prodh,btemp+9
  4435  0009EE  0252               	mulwf	btemp+11,c
  4436  0009F0  50F3               	movf	prodl,w,c
  4437  0009F2  2650               	addwf	btemp+9,f,c
  4438  0009F4  0E2C               	movlw	low (_ready_queue+108)
  4439  0009F6  244F               	addwf	btemp+8,w,c
  4440  0009F8  6ED9               	movwf	fsr2l,c
  4441  0009FA  0E01               	movlw	high (_ready_queue+108)
  4442  0009FC  2050               	addwfc	btemp+9,w,c
  4443  0009FE  6EDA               	movwf	fsr2h,c
  4444  000A00  06DE               	decf	postinc2,f,c
  4445  000A02  0E00               	movlw	0
  4446  000A04  5ADD               	subwfb	postdec2,f,c
  4447                           
  4448                           ;kernel.c: 107:       if (ready_queue.tasks[i].task_delay_time == 0) {
  4449                           ;stkvar	_i @ sp[(-2)+0]
  4450  000A06  0EFE               	movlw	-2
  4451  000A08  CFE3 F051          	movff	plusw1,btemp+10
  4452  000A0C  0EFF               	movlw	-1
  4453  000A0E  CFE3 F052          	movff	plusw1,btemp+11
  4454  000A12  0E6E               	movlw	110
  4455  000A14  0251               	mulwf	btemp+10,c
  4456  000A16  CFF3 F04F          	movff	prodl,btemp+8
  4457  000A1A  CFF4 F050          	movff	prodh,btemp+9
  4458  000A1E  0252               	mulwf	btemp+11,c
  4459  000A20  50F3               	movf	prodl,w,c
  4460  000A22  2650               	addwf	btemp+9,f,c
  4461  000A24  0E2C               	movlw	low (_ready_queue+108)
  4462  000A26  244F               	addwf	btemp+8,w,c
  4463  000A28  6ED9               	movwf	fsr2l,c
  4464  000A2A  0E01               	movlw	high (_ready_queue+108)
  4465  000A2C  2050               	addwfc	btemp+9,w,c
  4466  000A2E  6EDA               	movwf	fsr2h,c
  4467  000A30  50DE               	movf	postinc2,w,c
  4468  000A32  10DE               	iorwf	postinc2,w,c
  4469  000A34  A4D8               	btfss	status,2,c
  4470  000A36  D017               	goto	l1680
  4471                           
  4472                           ;kernel.c: 108:         ready_queue.tasks[i].task_state = READY;
  4473                           ;stkvar	_i @ sp[(-2)+0]
  4474  000A38  0EFE               	movlw	-2
  4475  000A3A  CFE3 F051          	movff	plusw1,btemp+10
  4476  000A3E  0EFF               	movlw	-1
  4477  000A40  CFE3 F052          	movff	plusw1,btemp+11
  4478  000A44  0E6E               	movlw	110
  4479  000A46  0251               	mulwf	btemp+10,c
  4480  000A48  CFF3 F04F          	movff	prodl,btemp+8
  4481  000A4C  CFF4 F050          	movff	prodh,btemp+9
  4482  000A50  0252               	mulwf	btemp+11,c
  4483  000A52  50F3               	movf	prodl,w,c
  4484  000A54  2650               	addwf	btemp+9,f,c
  4485  000A56  0EC8               	movlw	low (_ready_queue+8)
  4486  000A58  244F               	addwf	btemp+8,w,c
  4487  000A5A  6ED9               	movwf	fsr2l,c
  4488  000A5C  0E00               	movlw	high (_ready_queue+8)
  4489  000A5E  2050               	addwfc	btemp+9,w,c
  4490  000A60  6EDA               	movwf	fsr2h,c
  4491  000A62  0E00               	movlw	0
  4492  000A64  6EDF               	movwf	indf2,c
  4493  000A66                     l1680:
  4494                           
  4495                           ;kernel.c: 114:   }
  4496                           ;stkvar	_i @ sp[(-2)+0]
  4497  000A66  0EFE               	movlw	-2
  4498  000A68  50E3               	movf	plusw1,w,c
  4499  000A6A  0F01               	addlw	1
  4500  000A6C  6E47               	movwf	btemp,c
  4501  000A6E  0EFE               	movlw	-2
  4502  000A70  C047  FFE3         	movff	btemp,plusw1
  4503  000A74  6A47               	clrf	btemp,c
  4504  000A76  0EFF               	movlw	-1
  4505  000A78  50E3               	movf	plusw1,w,c
  4506  000A7A  2047               	addwfc	btemp,w,c
  4507  000A7C  6E47               	movwf	btemp,c
  4508  000A7E  0EFF               	movlw	-1
  4509  000A80  C047  FFE3         	movff	btemp,plusw1
  4510  000A84                     l1682:
  4511  000A84  EE23  F054         	lfsr	2,_ready_queue+660
  4512                           
  4513                           ;stkvar	_i @ sp[(-2)+0]
  4514  000A88  0EFE               	movlw	-2
  4515  000A8A  CFE3 F047          	movff	plusw1,btemp
  4516  000A8E  50DE               	movf	postinc2,w,c
  4517  000A90  5C47               	subwf	btemp,w,c
  4518  000A92  0EFF               	movlw	-1
  4519  000A94  CFE3 F047          	movff	plusw1,btemp
  4520  000A98  50DE               	movf	postinc2,w,c
  4521  000A9A  5847               	subwfb	btemp,w,c
  4522  000A9C  A0D8               	btfss	status,0,c
  4523  000A9E  D782               	goto	l1672
  4524                           
  4525                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  4526  000AA0  52E5               	movf	postdec1,f,c
  4527  000AA2  52E5               	movf	postdec1,f,c
  4528  000AA4  0012               	return		;funcret
  4529  000AA6                     __end_of_delay_decrement:
  4530                           	opt callstack 0
  4531                           
  4532 ;; *************** function ___wmul *****************
  4533 ;; Defined at:
  4534 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  multiplier      2  [STACK] unsigned int 
  4537 ;;  multiplicand    2  [STACK] unsigned int 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  product         2  [STACK] unsigned int 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  2  [STACK] unsigned int 
  4542 ;; Registers used:
  4543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4549 ;;      Params:         0       0       0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0
  4552 ;;      Totals:         0       0       0       0       0       0       0
  4553 ;;Total ram usage:        0 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_ISR_timer0
  4559 ;; This function uses a reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text26
  4563  001484                     __ptext26:
  4564                           	opt callstack 0
  4565  001484                     ___wmul:
  4566                           	opt callstack 0
  4567                           
  4568                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4569  001484  52E6               	movf	postinc1,f,c
  4570  001486  52E6               	movf	postinc1,f,c
  4571                           
  4572                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4573                           
  4574                           ;incstack = 0
  4575  001488  0EFA               	movlw	-6
  4576  00148A  CFE3 F052          	movff	plusw1,btemp+11
  4577                           
  4578                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4579  00148E  0EFC               	movlw	-4
  4580  001490  50E3               	movf	plusw1,w,c
  4581  001492  0252               	mulwf	btemp+11,c
  4582                           
  4583                           ;stkvar	_product @ sp[(-2)+0]
  4584  001494  0EFE               	movlw	-2
  4585  001496  CFF3 FFE3          	movff	prodl,plusw1
  4586  00149A  0EFF               	movlw	-1
  4587  00149C  CFF4 FFE3          	movff	prodh,plusw1
  4588                           
  4589                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4590  0014A0  0EFB               	movlw	251
  4591  0014A2  24E1               	addwf	fsr1l,w,c
  4592  0014A4  6ED9               	movwf	fsr2l,c
  4593  0014A6  0EFF               	movlw	255
  4594  0014A8  20E2               	addwfc	fsr1h,w,c
  4595  0014AA  6EDA               	movwf	fsr2h,c
  4596  0014AC  50DF               	movf	indf2,w,c
  4597  0014AE  6E52               	movwf	btemp+11,c
  4598                           
  4599                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4600  0014B0  0EFC               	movlw	-4
  4601  0014B2  50E3               	movf	plusw1,w,c
  4602  0014B4  0252               	mulwf	btemp+11,c
  4603  0014B6  CFF3 FFF4          	movff	prodl,prodh
  4604  0014BA  6AF3               	clrf	prodl,c
  4605                           
  4606                           ;stkvar	_product @ sp[(-2)+0]
  4607  0014BC  50E1               	movf	fsr1l,w,c
  4608  0014BE  0FFE               	addlw	-2
  4609  0014C0  6ED9               	movwf	fsr2l,c
  4610  0014C2  50E2               	movf	fsr1h,w,c
  4611  0014C4  6EDA               	movwf	fsr2h,c
  4612  0014C6  0EFF               	movlw	255
  4613  0014C8  22DA               	addwfc	fsr2h,f,c
  4614  0014CA  50F3               	movf	prodl,w,c
  4615  0014CC  26DE               	addwf	postinc2,f,c
  4616  0014CE  50F4               	movf	prodh,w,c
  4617  0014D0  22DD               	addwfc	postdec2,f,c
  4618                           
  4619                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4620  0014D2  0EFA               	movlw	-6
  4621  0014D4  CFE3 F052          	movff	plusw1,btemp+11
  4622                           
  4623                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4624  0014D8  0EFD               	movlw	253
  4625  0014DA  24E1               	addwf	fsr1l,w,c
  4626  0014DC  6ED9               	movwf	fsr2l,c
  4627  0014DE  0EFF               	movlw	255
  4628  0014E0  20E2               	addwfc	fsr1h,w,c
  4629  0014E2  6EDA               	movwf	fsr2h,c
  4630  0014E4  50DF               	movf	indf2,w,c
  4631  0014E6  0252               	mulwf	btemp+11,c
  4632  0014E8  CFF3 FFF4          	movff	prodl,prodh
  4633  0014EC  6AF3               	clrf	prodl,c
  4634                           
  4635                           ;stkvar	_product @ sp[(-2)+0]
  4636  0014EE  50E1               	movf	fsr1l,w,c
  4637  0014F0  0FFE               	addlw	-2
  4638  0014F2  6ED9               	movwf	fsr2l,c
  4639  0014F4  50E2               	movf	fsr1h,w,c
  4640  0014F6  6EDA               	movwf	fsr2h,c
  4641  0014F8  0EFF               	movlw	255
  4642  0014FA  22DA               	addwfc	fsr2h,f,c
  4643  0014FC  50F3               	movf	prodl,w,c
  4644  0014FE  26DE               	addwf	postinc2,f,c
  4645  001500  50F4               	movf	prodh,w,c
  4646  001502  22DD               	addwfc	postdec2,f,c
  4647                           
  4648                           ;stkvar	_product @ sp[(-2)+0]
  4649  001504  0EFE               	movlw	-2
  4650  001506  CFE3 F047          	movff	plusw1,btemp
  4651  00150A  0EFF               	movlw	-1
  4652  00150C  CFE3 F048          	movff	plusw1,btemp+1
  4653                           
  4654                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  4655  001510  0EFA               	movlw	250
  4656  001512  26E1               	addwf	fsr1l,f,c
  4657  001514  0EFF               	movlw	255
  4658  001516  22E2               	addwfc	fsr1h,f,c
  4659  001518  0012               	return		;funcret
  4660  00151A                     __end_of___wmul:
  4661                           	opt callstack 0
  4662  0000                     
  4663                           	psect	text27
  4664  000000                     __ptext27:
  4665                           	opt callstack 0
  4666                           
  4667                           	psect	rparam
  4668  0000                     
  4669                           	psect	temp
  4670  000047                     btemp:
  4671                           	opt callstack 0
  4672  000047                     	ds	32
  4673  0000                     wtemp0	set	btemp
  4674  0000                     wtemp1	set	btemp+2
  4675  0000                     wtemp2	set	btemp+4
  4676  0000                     wtemp3	set	btemp+6
  4677  0000                     wtemp4	set	btemp+8
  4678  0000                     wtemp5	set	btemp+10
  4679  0000                     wtemp8	set	btemp+1
  4680  0000                     ttemp0	set	btemp
  4681  0000                     ttemp1	set	btemp+3
  4682  0000                     ttemp2	set	btemp+6
  4683  0000                     ttemp3	set	btemp+9
  4684  0000                     ttemp5	set	btemp+1
  4685  0000                     ttemp6	set	btemp+4
  4686  0000                     ttemp7	set	btemp+8
  4687  0000                     ltemp0	set	btemp
  4688  0000                     ltemp1	set	btemp+4
  4689  0000                     ltemp2	set	btemp+8
  4690  0000                     lltemp0	set	btemp
  4691  0000                     lltemp1	set	btemp+8
  4692  0000                     lltemp2	set	btemp+16
  4693  0000                     lltemp3	set	btemp+24
  4694                           tosu	equ	0xFFF
  4695                           tosh	equ	0xFFE
  4696                           tosl	equ	0xFFD
  4697                           stkptr	equ	0xFFC
  4698                           pclatu	equ	0xFFB
  4699                           pclath	equ	0xFFA
  4700                           pcl	equ	0xFF9
  4701                           tblptru	equ	0xFF8
  4702                           tblptrh	equ	0xFF7
  4703                           tblptrl	equ	0xFF6
  4704                           tablat	equ	0xFF5
  4705                           prodh	equ	0xFF4
  4706                           prodl	equ	0xFF3
  4707                           indf0	equ	0xFEF
  4708                           postinc0	equ	0xFEE
  4709                           postdec0	equ	0xFED
  4710                           preinc0	equ	0xFEC
  4711                           plusw0	equ	0xFEB
  4712                           fsr0h	equ	0xFEA
  4713                           fsr0l	equ	0xFE9
  4714                           wreg	equ	0xFE8
  4715                           indf1	equ	0xFE7
  4716                           postinc1	equ	0xFE6
  4717                           postdec1	equ	0xFE5
  4718                           preinc1	equ	0xFE4
  4719                           plusw1	equ	0xFE3
  4720                           fsr1h	equ	0xFE2
  4721                           fsr1l	equ	0xFE1
  4722                           bsr	equ	0xFE0
  4723                           indf2	equ	0xFDF
  4724                           postinc2	equ	0xFDE
  4725                           postdec2	equ	0xFDD
  4726                           preinc2	equ	0xFDC
  4727                           plusw2	equ	0xFDB
  4728                           fsr2h	equ	0xFDA
  4729                           fsr2l	equ	0xFD9
  4730                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1310
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      86
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    mem	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), w_pipe(BANK0[16]), out_sem(BANK0[16]), cover_sem(BANK0[16]), 
		 -> check_sem(COMRAM[16]), fill_sem(COMRAM[16]), count_sem(COMRAM[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), w_pipe(BANK0[16]), out_sem(BANK0[16]), cover_sem(BANK0[16]), 
		 -> check_sem(COMRAM[16]), fill_sem(COMRAM[16]), count_sem(COMRAM[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), w_pipe(BANK0[16]), out_sem(BANK0[16]), cover_sem(BANK0[16]), 
		 -> check_sem(COMRAM[16]), fill_sem(COMRAM[16]), count_sem(COMRAM[16]), 

    data	PTR unsigned int  size(2) Largest target is 2
		 -> n(STACK[2]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    S545pipe$r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    S545pipe$w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    S258pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1159
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0     352
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _pipe_create                                          6     0      6     264
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     347
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   114   110      4     211
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0    1124
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         4     4      0    2179
                    _lunos_delayTask
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            4     4      0    2157
                    _lunos_delayTask
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0    1124
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         4     4      0    2179
                    _lunos_delayTask
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            4     4      0    2157
                    _lunos_delayTask
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer0                                         14    14      0     498
                                              0 COMRAM    14    14      0
                             ___wmul
                    _delay_decrement
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (13) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _user_conf
     _pipe_create
       _sem_init
     _sem_init

 _task_idle (ROOT)

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   _delay_decrement
   _round_robin
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     498      17       76.6%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      56       1       90.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96      15        0.0%
DATA                 0      0     52E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jun 06 03:32:30 2019

                        _p 003B   __end_of_lunos_createTask 0CC0                        l302 1842  
                      l127 086C                        l313 1748                        l341 1268  
                      l335 1132                        l327 10BC                        l344 12A2  
                      l328 10D8                        l186 16AC                        l292 15C2  
                      l288 15AC                        _BSR 000FE0                        u500 13CE  
                      u420 0990                        u431 0CA4                        u440 11D6  
                      u480 1368                        _TOS 000FFD                        _who 0009  
              _round_robin 151A                        wreg 000FE8               __CFG_WDT$OFF 000000  
                     l1540 0596                       l1606 121C                       l1544 06B0  
                     l1634 10AC                       l1652 1340                       l1564 0988  
                     l1910 176E                       l1902 175E                       l1646 0FCC  
                     l1662 13B0                       l1558 0792                       l1680 0A66  
                     l1672 09A4                       l1904 1762                       l1682 0A84  
                     l1908 176A                       l1686 152A                       l1598 11C2  
                     l1936 10F6                       l1962 12D0                       l1858 160C  
                     i2l59 03A8                       _TOSH 000FFE                       _TOSL 000FFD  
                     _WREG 000FE8                       _TOSU 000FFF                       _main 1630  
            _global_buffer 0001     __size_of_count_bottles 0086                       _size 0007  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr2h 000FDA  
                     fsr0l 000FE9                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 0047                       prodh 000FF4  
                     prodl 000FF3                       start 000C               ___param_bank 000000  
          __end_of___lwmod 13E4                      _TMR0L 000FD6                      u46_20 0F04  
                    u63_20 161C                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      u74_20 10E2                      u66_20 184C  
                    u76_20 116A                      u69_20 1752                ?_ISR_timer0 0067  
     __size_of_check_level 006C                      tablat 000FF5                      ltemp0 0047  
                    ltemp1 004B                      ltemp2 004F                      plusw0 000FEB  
                    plusw1 000FE3                      plusw2 000FDB                      ttemp0 0047  
                    ttemp1 004A                      ttemp2 004D                      ttemp3 0050  
                    ttemp5 0048                      ttemp6 004B                      ttemp7 004F  
                    status 000FD8                      wtemp0 0047                      wtemp1 0049  
                    wtemp2 004B                      wtemp3 004D                      wtemp4 004F  
                    wtemp5 0051                      wtemp8 0048   __size_of_delay_decrement 0110  
          __initialization 17DC               __end_of_main 16AE              _count_bottles 15AA  
            __activetblptr 000000                     i2l1812 02EC                     i2l1818 04A0  
                   i2l1794 012C                     i2l1798 0222                     _STATUS 000FD8  
                   _STKPTR 000FFC       __size_of_config_INT0 0010       __size_of_fill_bottle 0044  
      __size_of_ISR_timer0 04D4                     ___wmul 1484                     clear_0 17FC  
                   clear_1 180E                     clear_2 181A                     _r_pipe 0080  
                   _w_pipe 0090           __end_of_sem_init 171E           __end_of_sem_wait 10B4  
         __end_of_sem_post 0FD4               __pdataCOMRAM 0075                     lltemp0 0047  
                   lltemp1 004F                     lltemp2 0057                     lltemp3 005F  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0080    __end_of__initialization 1820            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001             __pcstackCOMRAM 0067                 ___inthi_sp 0590  
     __end_of_cover_bottle 1192                 __pbssBANK0 0080         __size_of_count_out 00C8  
            __uDynamicHeap 0358         __size_of_scheduler 0006         __size_of_pipe_read 0108  
       __size_of_task_idle 0004               ??_ISR_timer0 0067                    i2u60_40 04A8  
                  i2u56_40 005E                    i2u56_46 0060                    i2u57_40 0086  
                  i2u57_41 0084                 _dispatcher 04DC            _lunos_delayTask 178A  
     __size_of_pipe_create 010E         __size_of_user_conf 00A0                    __Hparam 0000  
                  __Lparam 0000            __size_of___wmul 0096         __end_of_ISR_timer0 04DC  
                  ___lwmod 1328                    __pcinit 17DC                    __ramtop 0600  
        __end_of_count_out 1328                    __ptext0 1630                    __ptext1 13E4  
                  __ptext2 0AA6                    __ptext3 16AE                    __ptext4 186A  
                  __ptext5 0BB4                    __ptext6 1192                    __ptext7 04DC  
                  __ptext8 18BE                    __ptext9 151A                  _T0CONbits 000FD5  
                  _quantum 0075                    _out_sem 00A0          __end_of_scheduler 18C4  
           __pintcode_body 0014       end_of_initialization 1820          __end_of_pipe_read 0ED2  
        __end_of_task_idle 18C8                    int_func 0014                 _pipe_write 0CC0  
    __end_of_config_timer0 18AE                    postdec0 000FED                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 _lunos_init 186A          __end_of_user_conf 1484  
                _PORTBbits 000F81                  _PORTCbits 000F82                  _PORTDbits 000F83  
  __end_of_lunos_delayTask 17DC      __size_of_cover_bottle 00DE                  _TRISDbits 000F95  
     __size_of_round_robin 0090        __end_of_check_level 178A            _delay_decrement 0996  
             _cover_bottle 10B4             __end_of___wmul 151A              __pidataCOMRAM 18C8  
      start_initialization 17DC  __size_of_lunos_createTask 010C        __end_of_config_INT0 18BE  
      __size_of_dispatcher 04BA        __end_of_fill_bottle 186A                __pbssBIGRAM 00C0  
              __pbssCOMRAM 0001                _check_level 171E    __end_of_delay_decrement 0AA6  
     __end_of_SRAMInitHeap 1260                  _check_sem 000B                  __pintcode 0008  
        __size_of_sem_init 0070          __size_of_sem_wait 00E0          __size_of_sem_post 0102  
    __end_of_count_bottles 1630        __size_of_pipe_write 010A                  _cover_sem 00B0  
                _count_sem 002B                  _count_out 1260        __size_of_lunos_init 0032  
                _scheduler 18BE                _config_INT0 18AE                  _pipe_read 0DCA  
              _fill_bottle 1826                  _task_idle 18C4                  _user_conf 13E4  
         _lunos_createTask 0BB4                _INTCON2bits 000FF1        __end_of_pipe_create 0BB4  
                 __Hrparam 0000                   __Lrparam 0000         __end_of_dispatcher 0996  
         __size_of___lwmod 00BC     __size_of_config_timer0 0012      __size_of_SRAMInitHeap 00CE  
                 __ptext10 1328                   __ptext11 189C                   __ptext20 10B4  
                 __ptext12 18AE                   __ptext21 0CC0                   __ptext13 18C4  
                 __ptext22 1260                   __ptext14 15AA                   __ptext23 0DCA  
                 __ptext15 0FD4                   __ptext16 0ED2                   __ptext25 0996  
                 __ptext17 178A                   __ptext26 1484                   __ptext18 1826  
                 __ptext27 0000                   __ptext19 171E                   _fill_sem 001B  
            __size_of_main 007E                _ready_queue 00C0                   _sem_init 16AE  
                 _sem_wait 0FD4                   _sem_post 0ED2               _SRAMInitHeap 1192  
               _INTCONbits 000FF2         __end_of_pipe_write 0DCA                _pipe_create 0AA6  
      __end_of_round_robin 15AA                   intlevel1 0000                   intlevel2 0000  
       __end_of_lunos_init 189C              _config_timer0 189C                 _ISR_timer0 0008  
 __size_of_lunos_delayTask 0052  
