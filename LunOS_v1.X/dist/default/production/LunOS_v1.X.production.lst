

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun 10 14:51:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80 ;;_p	offset=-2 (param)
    81 ;;_w	offset=-4 (param)
    82 ;;_r	offset=-6 (param)
    83 ;;_s	offset=-2 (param)
    84 ;;_valor	offset=-4 (param)
    85 ;;_new_task	offset	0
    86 ;;_prior	offset=-2 (param)
    87 ;;_f	offset=-4 (param)
    88 ;;_count	offset	0
    89 ;;_pHeap	offset	2
    90 ;;_state	offset=-1 (param)
    91 ;;_next_task_to_run	offset	0
    92 ;;_counter	offset	0
    93 ;;_dividend	offset=-2 (param)
    94 ;;_divisor	offset=-4 (param)
    95 ;;_bottle	offset	0
    96 ;;_s	offset=-2 (param)
    97 ;;_s	offset=-2 (param)
    98 ;;_time	offset=-2 (param)
    99 ;;_state	offset=-1 (param)
   100 ;;_next_task_to_run	offset	0
   101 ;;_counter	offset	0
   102 ;;_dividend	offset=-2 (param)
   103 ;;_divisor	offset=-4 (param)
   104 ;;_i	offset	0
   105 ;;_p	offset=-2 (param)
   106 ;;_data	offset=-4 (param)
   107 ;;_data	offset	0
   108 ;;_n	offset	2
   109 ;;_p	offset=-2 (param)
   110 ;;_data	offset=-4 (param)
   111 ;;_next_task_to_run	offset	0
   112 ;;_counter	offset	0
   113 ;;_dividend	offset=-2 (param)
   114 ;;_divisor	offset=-4 (param)
   115 ;;_i	offset	0
   116 ;;_product	offset	0
   117 ;;_multiplier	offset=-2 (param)
   118 ;;_multiplicand	offset=-4 (param)
   119                           
   120                           	psect	idataCOMRAM
   121  00192C                     __pidataCOMRAM:
   122                           	opt callstack 0
   123                           
   124                           ;initializer for _quantum
   125  00192C  000A               	dw	10
   126  0000                     _TOS	set	4093
   127  0000                     _LATDbits	set	3980
   128  0000                     _PORTCbits	set	3970
   129  0000                     _PORTBbits	set	3969
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISB	set	3987
   133  0000                     _STKPTR	set	4092
   134  0000                     _TOSL	set	4093
   135  0000                     _TOSH	set	4094
   136  0000                     _TOSU	set	4095
   137  0000                     _BSR	set	4064
   138  0000                     _STATUS	set	4056
   139  0000                     _WREG	set	4072
   140  0000                     _PORTDbits	set	3971
   141  0000                     _TMR0L	set	4054
   142  0000                     _T0CONbits	set	4053
   143  0000                     _INTCON2bits	set	4081
   144  0000                     _INTCONbits	set	4082
   145  0000                     _TRISDbits	set	3989
   146                           
   147                           ; #config settings
   148  0000                     
   149                           	psect	cinit
   150  001884                     __pcinit:
   151                           	opt callstack 0
   152  001884                     start_initialization:
   153                           	opt callstack 0
   154  001884                     __initialization:
   155                           	opt callstack 0
   156                           
   157                           ; Initialize objects allocated to COMRAM (2 bytes)
   158                           ; load TBLPTR registers with __pidataCOMRAM
   159  001884  0E2C               	movlw	low __pidataCOMRAM
   160  001886  6EF6               	movwf	tblptrl,c
   161  001888  0E19               	movlw	high __pidataCOMRAM
   162  00188A  6EF7               	movwf	tblptrh,c
   163  00188C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   164  00188E  6EF8               	movwf	tblptru,c
   165  001890  0009               	tblrd		*+	;fetch initializer
   166  001892  CFF5 F077          	movff	tablat,__pdataCOMRAM
   167  001896  0009               	tblrd		*+	;fetch initializer
   168  001898  CFF5 F078          	movff	tablat,__pdataCOMRAM+1
   169                           
   170                           ; Clear objects allocated to BIGRAM (1176 bytes)
   171  00189C  EE00  F0C0         	lfsr	0,__pbssBIGRAM
   172  0018A0  EE24 F098          	lfsr	2,1176
   173  0018A4                     clear_0:
   174  0018A4  6AEE               	clrf	postinc0,c
   175  0018A6  50DD               	movf	postdec2,w,c
   176  0018A8  50D9               	movf	fsr2l,w,c
   177  0018AA  E1FC               	bnz	clear_0
   178  0018AC  50DA               	movf	fsr2h,w,c
   179  0018AE  E1FA               	bnz	clear_0
   180                           
   181                           ; Clear objects allocated to BANK0 (64 bytes)
   182  0018B0  EE00  F080         	lfsr	0,__pbssBANK0
   183  0018B4  0E40               	movlw	64
   184  0018B6                     clear_1:
   185  0018B6  6AEE               	clrf	postinc0,c
   186  0018B8  06E8               	decf	wreg,f,c
   187  0018BA  E1FD               	bnz	clear_1
   188                           
   189                           ; Clear objects allocated to COMRAM (72 bytes)
   190  0018BC  EE00  F001         	lfsr	0,__pbssCOMRAM
   191  0018C0  0E48               	movlw	72
   192  0018C2                     clear_2:
   193  0018C2  6AEE               	clrf	postinc0,c
   194  0018C4  06E8               	decf	wreg,f,c
   195  0018C6  E1FD               	bnz	clear_2
   196  0018C8                     end_of_initialization:
   197                           	opt callstack 0
   198  0018C8                     __end_of__initialization:
   199                           	opt callstack 0
   200  0018C8  0100               	movlb	0
   201  0018CA  EF7A  F00B         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMRAM
   204  000001                     __pbssCOMRAM:
   205                           	opt callstack 0
   206  000001                     _global_buffer:
   207                           	opt callstack 0
   208  000001                     	ds	6
   209  000007                     _count:
   210                           	opt callstack 0
   211  000007                     	ds	2
   212  000009                     _size:
   213                           	opt callstack 0
   214  000009                     	ds	2
   215  00000B                     _who:
   216                           	opt callstack 0
   217  00000B                     	ds	2
   218  00000D                     _check_sem:
   219                           	opt callstack 0
   220  00000D                     	ds	16
   221  00001D                     _fill_sem:
   222                           	opt callstack 0
   223  00001D                     	ds	16
   224  00002D                     _count_sem:
   225                           	opt callstack 0
   226  00002D                     	ds	16
   227  00003D                     _p:
   228                           	opt callstack 0
   229  00003D                     	ds	12
   230                           
   231                           	psect	dataCOMRAM
   232  000077                     __pdataCOMRAM:
   233                           	opt callstack 0
   234  000077                     _quantum:
   235                           	opt callstack 0
   236  000077                     	ds	2
   237                           
   238                           	psect	bssBANK0
   239  000080                     __pbssBANK0:
   240                           	opt callstack 0
   241  000080                     _r_pipe:
   242                           	opt callstack 0
   243  000080                     	ds	16
   244  000090                     _w_pipe:
   245                           	opt callstack 0
   246  000090                     	ds	16
   247  0000A0                     _out_sem:
   248                           	opt callstack 0
   249  0000A0                     	ds	16
   250  0000B0                     _cover_sem:
   251                           	opt callstack 0
   252  0000B0                     	ds	16
   253                           
   254                           	psect	bssBIGRAM
   255  0000C0                     __pbssBIGRAM:
   256                           	opt callstack 0
   257  0000C0                     _ready_queue:
   258                           	opt callstack 0
   259  0000C0                     	ds	664
   260  000358                     __uDynamicHeap:
   261                           	opt callstack 0
   262  000358                     	ds	512
   263                           
   264                           	psect	cstackCOMRAM
   265  000069                     __pcstackCOMRAM:
   266                           	opt callstack 0
   267  000069                     ??_ISR_timer0:
   268                           
   269                           ; 1 bytes @ 0x0
   270  000069                     	ds	14
   271                           
   272 ;;
   273 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   274 ;;
   275 ;; *************** function _main *****************
   276 ;; Defined at:
   277 ;;		line 16 in file "main.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1  [STACK] void 
   284 ;; Registers used:
   285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   291 ;;      Params:         0       0       0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0       0       0
   293 ;;      Temps:          0       0       0       0       0       0       0
   294 ;;      Totals:         0       0       0       0       0       0       0
   295 ;;Total ram usage:        0 bytes
   296 ;; Hardware stack levels required when called:   14
   297 ;; This function calls:
   298 ;;		_config_INT0
   299 ;;		_config_timer0
   300 ;;		_dispatcher
   301 ;;		_lunos_createTask
   302 ;;		_lunos_init
   303 ;;		_user_conf
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a reentrant model
   307 ;;
   308                           
   309                           	psect	text0
   310  0016F4                     __ptext0:
   311                           	opt callstack 0
   312  0016F4                     _main:
   313                           	opt callstack 17
   314                           
   315                           ;main.c: 18:   dispatcher(READY);
   316                           
   317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   318                           ;incstack = 0
   319  0016F4  EC67  F00C         	call	_lunos_init	;wreg free
   320                           
   321                           ;main.c: 20:   while (1);
   322  0016F8  EC3E  F009         	call	_user_conf	;wreg free
   323                           
   324                           ;main.c: 21: 
   325  0016FC  EC89  F00C         	call	_config_INT0	;wreg free
   326                           
   327                           ;main.c: 22:   return;
   328  001700  EC80  F00C         	call	_config_timer0	;wreg free
   329  001704  0EEE               	movlw	low _count_bottles
   330  001706  6EE6               	movwf	postinc1,c
   331  001708  0E15               	movlw	high _count_bottles
   332  00170A  6EE6               	movwf	postinc1,c
   333  00170C  0E05               	movlw	5
   334  00170E  6EE6               	movwf	postinc1,c
   335  001710  0E00               	movlw	0
   336  001712  6EE6               	movwf	postinc1,c
   337  001714  ECDA  F005         	call	_lunos_createTask	;wreg free
   338  001718  0E34               	movlw	low _fill_bottle
   339  00171A  6EE6               	movwf	postinc1,c
   340  00171C  0E18               	movlw	high _fill_bottle
   341  00171E  6EE6               	movwf	postinc1,c
   342  001720  0E04               	movlw	4
   343  001722  6EE6               	movwf	postinc1,c
   344  001724  0E00               	movlw	0
   345  001726  6EE6               	movwf	postinc1,c
   346  001728  ECDA  F005         	call	_lunos_createTask	;wreg free
   347  00172C  0E74               	movlw	low _check_level
   348  00172E  6EE6               	movwf	postinc1,c
   349  001730  0E16               	movlw	high _check_level
   350  001732  6EE6               	movwf	postinc1,c
   351  001734  0E05               	movlw	5
   352  001736  6EE6               	movwf	postinc1,c
   353  001738  0E00               	movlw	0
   354  00173A  6EE6               	movwf	postinc1,c
   355  00173C  ECDA  F005         	call	_lunos_createTask	;wreg free
   356  001740  0ED4               	movlw	low _cover_bottle
   357  001742  6EE6               	movwf	postinc1,c
   358  001744  0E0F               	movlw	high _cover_bottle
   359  001746  6EE6               	movwf	postinc1,c
   360  001748  0E05               	movlw	5
   361  00174A  6EE6               	movwf	postinc1,c
   362  00174C  0E00               	movlw	0
   363  00174E  6EE6               	movwf	postinc1,c
   364  001750  ECDA  F005         	call	_lunos_createTask	;wreg free
   365  001754  0E44               	movlw	low _count_out
   366  001756  6EE6               	movwf	postinc1,c
   367  001758  0E13               	movlw	high _count_out
   368  00175A  6EE6               	movwf	postinc1,c
   369  00175C  0E04               	movlw	4
   370  00175E  6EE6               	movwf	postinc1,c
   371  001760  0E00               	movlw	0
   372  001762  6EE6               	movwf	postinc1,c
   373  001764  ECDA  F005         	call	_lunos_createTask	;wreg free
   374  001768  0E00               	movlw	0
   375  00176A  6EE6               	movwf	postinc1,c
   376  00176C  EC6E  F002         	call	_dispatcher	;wreg free
   377  001770                     l186:
   378  001770  D7FF               	goto	l186
   379  001772                     __end_of_main:
   380                           	opt callstack 0
   381                           
   382 ;; *************** function _user_conf *****************
   383 ;; Defined at:
   384 ;;		line 23 in file "tasks.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1  [STACK] void 
   391 ;; Registers used:
   392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   398 ;;      Params:         0       0       0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0       0       0
   401 ;;      Totals:         0       0       0       0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; Hardware stack levels required when called:   12
   405 ;; This function calls:
   406 ;;		_pipe_create
   407 ;;		_sem_init
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a reentrant model
   411 ;;
   412                           
   413                           	psect	text1
   414  00127C                     __ptext1:
   415                           	opt callstack 0
   416  00127C                     _user_conf:
   417                           	opt callstack 18
   418                           
   419                           ;tasks.c: 25:     TRISB = 0b00000101;
   420                           
   421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   422                           ;incstack = 0
   423  00127C  0E05               	movlw	5
   424  00127E  6E93               	movwf	3987,c	;volatile
   425                           
   426                           ;tasks.c: 26:     TRISC = 0b01111111;
   427  001280  0E7F               	movlw	127
   428  001282  6E94               	movwf	3988,c	;volatile
   429                           
   430                           ;tasks.c: 27:     TRISD = 0b00001110;
   431  001284  0E0E               	movlw	14
   432  001286  6E95               	movwf	3989,c	;volatile
   433                           
   434                           ;tasks.c: 29:     PORTBbits.RB1 = 1;
   435  001288  8281               	bsf	3969,1,c	;volatile
   436                           
   437                           ;tasks.c: 31:     PORTCbits.RC7 = 1;
   438  00128A  8E82               	bsf	3970,7,c	;volatile
   439                           
   440                           ;tasks.c: 33:     PORTDbits.RD4 = 1;
   441  00128C  8883               	bsf	3971,4,c	;volatile
   442                           
   443                           ;tasks.c: 34:     PORTDbits.RD5 = 1;
   444  00128E  8A83               	bsf	3971,5,c	;volatile
   445                           
   446                           ;tasks.c: 35:     PORTDbits.RD6 = 1;
   447  001290  8C83               	bsf	3971,6,c	;volatile
   448                           
   449                           ;tasks.c: 36:     PORTDbits.RD7 = 1;
   450  001292  8E83               	bsf	3971,7,c	;volatile
   451                           
   452                           ;tasks.c: 38:     sem_init(&w_pipe, 1);
   453  001294  0E01               	movlw	1
   454  001296  6EE6               	movwf	postinc1,c
   455  001298  0E00               	movlw	0
   456  00129A  6EE6               	movwf	postinc1,c
   457  00129C  0E90               	movlw	low _w_pipe
   458  00129E  6EE6               	movwf	postinc1,c
   459  0012A0  0E00               	movlw	high _w_pipe
   460  0012A2  6EE6               	movwf	postinc1,c
   461  0012A4  ECB9  F00B         	call	_sem_init	;wreg free
   462                           
   463                           ;tasks.c: 39:     sem_init(&r_pipe, 0);
   464  0012A8  0E00               	movlw	0
   465  0012AA  6EE6               	movwf	postinc1,c
   466  0012AC  0E00               	movlw	0
   467  0012AE  6EE6               	movwf	postinc1,c
   468  0012B0  0E80               	movlw	low _r_pipe
   469  0012B2  6EE6               	movwf	postinc1,c
   470  0012B4  0E00               	movlw	high _r_pipe
   471  0012B6  6EE6               	movwf	postinc1,c
   472  0012B8  ECB9  F00B         	call	_sem_init	;wreg free
   473                           
   474                           ;tasks.c: 41:     sem_init(&count_sem, 1);
   475  0012BC  0E01               	movlw	1
   476  0012BE  6EE6               	movwf	postinc1,c
   477  0012C0  0E00               	movlw	0
   478  0012C2  6EE6               	movwf	postinc1,c
   479  0012C4  0E2D               	movlw	low _count_sem
   480  0012C6  6EE6               	movwf	postinc1,c
   481  0012C8  0E00               	movlw	high _count_sem
   482  0012CA  6EE6               	movwf	postinc1,c
   483  0012CC  ECB9  F00B         	call	_sem_init	;wreg free
   484                           
   485                           ;tasks.c: 42:     sem_init(&fill_sem, 0);
   486  0012D0  0E00               	movlw	0
   487  0012D2  6EE6               	movwf	postinc1,c
   488  0012D4  0E00               	movlw	0
   489  0012D6  6EE6               	movwf	postinc1,c
   490  0012D8  0E1D               	movlw	low _fill_sem
   491  0012DA  6EE6               	movwf	postinc1,c
   492  0012DC  0E00               	movlw	high _fill_sem
   493  0012DE  6EE6               	movwf	postinc1,c
   494  0012E0  ECB9  F00B         	call	_sem_init	;wreg free
   495                           
   496                           ;tasks.c: 43:     sem_init(&check_sem, 0);
   497  0012E4  0E00               	movlw	0
   498  0012E6  6EE6               	movwf	postinc1,c
   499  0012E8  0E00               	movlw	0
   500  0012EA  6EE6               	movwf	postinc1,c
   501  0012EC  0E0D               	movlw	low _check_sem
   502  0012EE  6EE6               	movwf	postinc1,c
   503  0012F0  0E00               	movlw	high _check_sem
   504  0012F2  6EE6               	movwf	postinc1,c
   505  0012F4  ECB9  F00B         	call	_sem_init	;wreg free
   506                           
   507                           ;tasks.c: 44:     sem_init(&cover_sem, 0);
   508  0012F8  0E00               	movlw	0
   509  0012FA  6EE6               	movwf	postinc1,c
   510  0012FC  0E00               	movlw	0
   511  0012FE  6EE6               	movwf	postinc1,c
   512  001300  0EB0               	movlw	low _cover_sem
   513  001302  6EE6               	movwf	postinc1,c
   514  001304  0E00               	movlw	high _cover_sem
   515  001306  6EE6               	movwf	postinc1,c
   516  001308  ECB9  F00B         	call	_sem_init	;wreg free
   517                           
   518                           ;tasks.c: 45:     sem_init(&out_sem, 0);
   519  00130C  0E00               	movlw	0
   520  00130E  6EE6               	movwf	postinc1,c
   521  001310  0E00               	movlw	0
   522  001312  6EE6               	movwf	postinc1,c
   523  001314  0EA0               	movlw	low _out_sem
   524  001316  6EE6               	movwf	postinc1,c
   525  001318  0E00               	movlw	high _out_sem
   526  00131A  6EE6               	movwf	postinc1,c
   527  00131C  ECB9  F00B         	call	_sem_init	;wreg free
   528                           
   529                           ;tasks.c: 46:     pipe_create(&p, &w_pipe, &r_pipe);
   530  001320  0E80               	movlw	low _r_pipe
   531  001322  6EE6               	movwf	postinc1,c
   532  001324  0E00               	movlw	high _r_pipe
   533  001326  6EE6               	movwf	postinc1,c
   534  001328  0E90               	movlw	low _w_pipe
   535  00132A  6EE6               	movwf	postinc1,c
   536  00132C  0E00               	movlw	high _w_pipe
   537  00132E  6EE6               	movwf	postinc1,c
   538  001330  0E3D               	movlw	low _p
   539  001332  6EE6               	movwf	postinc1,c
   540  001334  0E00               	movlw	high _p
   541  001336  6EE6               	movwf	postinc1,c
   542  001338  EC53  F005         	call	_pipe_create	;wreg free
   543                           
   544                           ;tasks.c: 49:     global_buffer.count = 0;
   545  00133C  6A01               	clrf	_global_buffer,c
   546  00133E  6A02               	clrf	_global_buffer+1,c
   547                           
   548                           ;tasks.c: 50:     global_buffer.p_state = FREE_;
   549  001340  6A06               	clrf	_global_buffer+5,c
   550                           
   551                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   552  001342  0012               	return		;funcret
   553  001344                     __end_of_user_conf:
   554                           	opt callstack 0
   555                           
   556 ;; *************** function _pipe_create *****************
   557 ;; Defined at:
   558 ;;		line 9 in file "pipe.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  p               2  [STACK] PTR struct pipe
   561 ;;		 -> p(12), 
   562 ;;  w               2  [STACK] PTR struct semaphore
   563 ;;		 -> w_pipe(16), 
   564 ;;  r               2  [STACK] PTR struct semaphore
   565 ;;		 -> r_pipe(16), 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1  [STACK] void 
   570 ;; Registers used:
   571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   577 ;;      Params:         0       0       0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:   11
   584 ;; This function calls:
   585 ;;		_sem_init
   586 ;; This function is called by:
   587 ;;		_user_conf
   588 ;; This function uses a reentrant model
   589 ;;
   590                           
   591                           	psect	text2
   592  000AA6                     __ptext2:
   593                           	opt callstack 0
   594  000AA6                     _pipe_create:
   595                           	opt callstack 18
   596                           
   597                           ;pipe.c: 10:   p->index_write = 0;
   598                           ;stkvar	_p @ sp[(0)+-2]
   599                           
   600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   601                           ;incstack = 0
   602  000AA6  0EFE               	movlw	-2
   603  000AA8  CFE3 F053          	movff	plusw1,btemp+10
   604  000AAC  0EFF               	movlw	-1
   605  000AAE  CFE3 F054          	movff	plusw1,btemp+11
   606  000AB2  0E04               	movlw	4
   607  000AB4  2453               	addwf	btemp+10,w,c
   608  000AB6  6ED9               	movwf	fsr2l,c
   609  000AB8  0E00               	movlw	0
   610  000ABA  2054               	addwfc	btemp+11,w,c
   611  000ABC  6EDA               	movwf	fsr2h,c
   612  000ABE  0E00               	movlw	0
   613  000AC0  6EDE               	movwf	postinc2,c
   614  000AC2  0E00               	movlw	0
   615  000AC4  6EDD               	movwf	postdec2,c
   616                           
   617                           ;pipe.c: 11:   p->index_read = 0;
   618                           ;stkvar	_p @ sp[(0)+-2]
   619  000AC6  0EFE               	movlw	-2
   620  000AC8  CFE3 F053          	movff	plusw1,btemp+10
   621  000ACC  0EFF               	movlw	-1
   622  000ACE  CFE3 F054          	movff	plusw1,btemp+11
   623  000AD2  0E06               	movlw	6
   624  000AD4  2453               	addwf	btemp+10,w,c
   625  000AD6  6ED9               	movwf	fsr2l,c
   626  000AD8  0E00               	movlw	0
   627  000ADA  2054               	addwfc	btemp+11,w,c
   628  000ADC  6EDA               	movwf	fsr2h,c
   629  000ADE  0E00               	movlw	0
   630  000AE0  6EDE               	movwf	postinc2,c
   631  000AE2  0E00               	movlw	0
   632  000AE4  6EDD               	movwf	postdec2,c
   633                           
   634                           ;pipe.c: 12:   p->w = w;
   635                           ;stkvar	_w @ sp[(0)+-4]
   636  000AE6  50E1               	movf	fsr1l,w,c
   637  000AE8  0FFC               	addlw	-4
   638  000AEA  6ED9               	movwf	fsr2l,c
   639  000AEC  50E2               	movf	fsr1h,w,c
   640  000AEE  6EDA               	movwf	fsr2h,c
   641  000AF0  0EFF               	movlw	255
   642  000AF2  22DA               	addwfc	fsr2h,f,c
   643                           
   644                           ;stkvar	_p @ sp[(0)+-2]
   645  000AF4  0EFE               	movlw	-2
   646  000AF6  CFE3 F053          	movff	plusw1,btemp+10
   647  000AFA  0EFF               	movlw	-1
   648  000AFC  CFE3 F054          	movff	plusw1,btemp+11
   649  000B00  0E08               	movlw	8
   650  000B02  2453               	addwf	btemp+10,w,c
   651  000B04  6EE9               	movwf	fsr0l,c
   652  000B06  0E00               	movlw	0
   653  000B08  2054               	addwfc	btemp+11,w,c
   654  000B0A  6EEA               	movwf	fsr0h,c
   655  000B0C  CFDE FFEE          	movff	postinc2,postinc0
   656  000B10  CFDD FFED          	movff	postdec2,postdec0
   657                           
   658                           ;pipe.c: 13:   p->r = r;
   659                           ;stkvar	_r @ sp[(0)+-6]
   660  000B14  50E1               	movf	fsr1l,w,c
   661  000B16  0FFA               	addlw	-6
   662  000B18  6ED9               	movwf	fsr2l,c
   663  000B1A  50E2               	movf	fsr1h,w,c
   664  000B1C  6EDA               	movwf	fsr2h,c
   665  000B1E  0EFF               	movlw	255
   666  000B20  22DA               	addwfc	fsr2h,f,c
   667                           
   668                           ;stkvar	_p @ sp[(0)+-2]
   669  000B22  0EFE               	movlw	-2
   670  000B24  CFE3 F053          	movff	plusw1,btemp+10
   671  000B28  0EFF               	movlw	-1
   672  000B2A  CFE3 F054          	movff	plusw1,btemp+11
   673  000B2E  0E0A               	movlw	10
   674  000B30  2453               	addwf	btemp+10,w,c
   675  000B32  6EE9               	movwf	fsr0l,c
   676  000B34  0E00               	movlw	0
   677  000B36  2054               	addwfc	btemp+11,w,c
   678  000B38  6EEA               	movwf	fsr0h,c
   679  000B3A  CFDE FFEE          	movff	postinc2,postinc0
   680  000B3E  CFDD FFED          	movff	postdec2,postdec0
   681                           
   682                           ;pipe.c: 14:   sem_init(p->w, 2);
   683  000B42  0E02               	movlw	2
   684  000B44  6EE6               	movwf	postinc1,c
   685  000B46  0E00               	movlw	0
   686  000B48  6EE6               	movwf	postinc1,c
   687                           
   688                           ;stkvar	_p @ sp[(-2)+-2]
   689  000B4A  0EFC               	movlw	-4
   690  000B4C  CFE3 F053          	movff	plusw1,btemp+10
   691  000B50  0EFD               	movlw	-3
   692  000B52  CFE3 F054          	movff	plusw1,btemp+11
   693  000B56  0E08               	movlw	8
   694  000B58  2453               	addwf	btemp+10,w,c
   695  000B5A  6ED9               	movwf	fsr2l,c
   696  000B5C  0E00               	movlw	0
   697  000B5E  2054               	addwfc	btemp+11,w,c
   698  000B60  6EDA               	movwf	fsr2h,c
   699  000B62  CFDE F053          	movff	postinc2,btemp+10
   700  000B66  CFDD F054          	movff	postdec2,btemp+11
   701  000B6A  C053  FFE6         	movff	btemp+10,postinc1
   702  000B6E  C054  FFE6         	movff	btemp+11,postinc1
   703  000B72  ECB9  F00B         	call	_sem_init	;wreg free
   704                           
   705                           ;pipe.c: 15:   sem_init(p->r, 0);
   706  000B76  0E00               	movlw	0
   707  000B78  6EE6               	movwf	postinc1,c
   708  000B7A  0E00               	movlw	0
   709  000B7C  6EE6               	movwf	postinc1,c
   710                           
   711                           ;stkvar	_p @ sp[(-2)+-2]
   712  000B7E  0EFC               	movlw	-4
   713  000B80  CFE3 F053          	movff	plusw1,btemp+10
   714  000B84  0EFD               	movlw	-3
   715  000B86  CFE3 F054          	movff	plusw1,btemp+11
   716  000B8A  0E0A               	movlw	10
   717  000B8C  2453               	addwf	btemp+10,w,c
   718  000B8E  6ED9               	movwf	fsr2l,c
   719  000B90  0E00               	movlw	0
   720  000B92  2054               	addwfc	btemp+11,w,c
   721  000B94  6EDA               	movwf	fsr2h,c
   722  000B96  CFDE F053          	movff	postinc2,btemp+10
   723  000B9A  CFDD F054          	movff	postdec2,btemp+11
   724  000B9E  C053  FFE6         	movff	btemp+10,postinc1
   725  000BA2  C054  FFE6         	movff	btemp+11,postinc1
   726  000BA6  ECB9  F00B         	call	_sem_init	;wreg free
   727                           
   728                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
   729  000BAA  0EFA               	movlw	250
   730  000BAC  26E1               	addwf	fsr1l,f,c
   731  000BAE  0EFF               	movlw	255
   732  000BB0  22E2               	addwfc	fsr1h,f,c
   733  000BB2  0012               	return		;funcret
   734  000BB4                     __end_of_pipe_create:
   735                           	opt callstack 0
   736                           
   737 ;; *************** function _sem_init *****************
   738 ;; Defined at:
   739 ;;		line 10 in file "semaphore.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  s               2  [STACK] PTR struct semaphore
   742 ;;		 -> out_sem(16), cover_sem(16), check_sem(16), fill_sem(16), 
   743 ;;		 -> count_sem(16), r_pipe(16), w_pipe(16), 
   744 ;;  valor           2  [STACK] int 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1  [STACK] void 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   756 ;;      Params:         0       0       0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0
   759 ;;      Totals:         0       0       0       0       0       0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:   10
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_pipe_create
   767 ;;		_user_conf
   768 ;; This function uses a reentrant model
   769 ;;
   770                           
   771                           	psect	text3
   772  001772                     __ptext3:
   773                           	opt callstack 0
   774  001772                     _sem_init:
   775                           	opt callstack 19
   776                           
   777                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   778                           
   779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   780                           ;incstack = 0
   781  001772  9EF2               	bcf	4082,7,c	;volatile
   782                           
   783                           ;semaphore.c: 13:   s->contador = valor;
   784                           ;stkvar	_valor @ sp[(0)+-4]
   785  001774  50E1               	movf	fsr1l,w,c
   786  001776  0FFC               	addlw	-4
   787  001778  6ED9               	movwf	fsr2l,c
   788  00177A  50E2               	movf	fsr1h,w,c
   789  00177C  6EDA               	movwf	fsr2h,c
   790  00177E  0EFF               	movlw	255
   791  001780  22DA               	addwfc	fsr2h,f,c
   792                           
   793                           ;stkvar	_s @ sp[(0)+-2]
   794  001782  0EFE               	movlw	-2
   795  001784  CFE3 FFE9          	movff	plusw1,fsr0l
   796  001788  0EFF               	movlw	-1
   797  00178A  CFE3 FFEA          	movff	plusw1,fsr0h
   798  00178E  CFDE FFEE          	movff	postinc2,postinc0
   799  001792  CFDD FFED          	movff	postdec2,postdec0
   800                           
   801                           ;semaphore.c: 14:   s->bloqued_size = 0;
   802                           ;stkvar	_s @ sp[(0)+-2]
   803  001796  0EFE               	movlw	-2
   804  001798  CFE3 F053          	movff	plusw1,btemp+10
   805  00179C  0EFF               	movlw	-1
   806  00179E  CFE3 F054          	movff	plusw1,btemp+11
   807  0017A2  0E0C               	movlw	12
   808  0017A4  2453               	addwf	btemp+10,w,c
   809  0017A6  6ED9               	movwf	fsr2l,c
   810  0017A8  0E00               	movlw	0
   811  0017AA  2054               	addwfc	btemp+11,w,c
   812  0017AC  6EDA               	movwf	fsr2h,c
   813  0017AE  0E00               	movlw	0
   814  0017B0  6EDE               	movwf	postinc2,c
   815  0017B2  0E00               	movlw	0
   816  0017B4  6EDD               	movwf	postdec2,c
   817                           
   818                           ;semaphore.c: 15:   s->task_to_ready = 0;
   819                           ;stkvar	_s @ sp[(0)+-2]
   820  0017B6  0EFE               	movlw	-2
   821  0017B8  CFE3 F053          	movff	plusw1,btemp+10
   822  0017BC  0EFF               	movlw	-1
   823  0017BE  CFE3 F054          	movff	plusw1,btemp+11
   824  0017C2  0E0E               	movlw	14
   825  0017C4  2453               	addwf	btemp+10,w,c
   826  0017C6  6ED9               	movwf	fsr2l,c
   827  0017C8  0E00               	movlw	0
   828  0017CA  2054               	addwfc	btemp+11,w,c
   829  0017CC  6EDA               	movwf	fsr2h,c
   830  0017CE  0E00               	movlw	0
   831  0017D0  6EDE               	movwf	postinc2,c
   832  0017D2  0E00               	movlw	0
   833  0017D4  6EDD               	movwf	postdec2,c
   834                           
   835                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   836  0017D6  8EF2               	bsf	4082,7,c	;volatile
   837                           
   838                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   839  0017D8  52E5               	movf	postdec1,f,c
   840  0017DA  52E5               	movf	postdec1,f,c
   841  0017DC  52E5               	movf	postdec1,f,c
   842  0017DE  52E5               	movf	postdec1,f,c
   843  0017E0  0012               	return		;funcret
   844  0017E2                     __end_of_sem_init:
   845                           	opt callstack 0
   846                           
   847 ;; *************** function _lunos_init *****************
   848 ;; Defined at:
   849 ;;		line 51 in file "kernel.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1  [STACK] void 
   856 ;; Registers used:
   857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   863 ;;      Params:         0       0       0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:   11
   870 ;; This function calls:
   871 ;;		_SRAMInitHeap
   872 ;;		_lunos_createTask
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a reentrant model
   876 ;;
   877                           
   878                           	psect	text4
   879  0018CE                     __ptext4:
   880                           	opt callstack 0
   881  0018CE                     _lunos_init:
   882                           	opt callstack 19
   883                           
   884                           ;kernel.c: 52:   SRAMInitHeap();
   885                           
   886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   887                           ;incstack = 0
   888  0018CE  ECD7  F008         	call	_SRAMInitHeap	;wreg free
   889                           
   890                           ;kernel.c: 53:   ready_queue.task_running = 0;
   891  0018D2  0E00               	movlw	0
   892  0018D4  CFE8 F356          	movff	wreg,_ready_queue+662
   893  0018D8  0E00               	movlw	0
   894  0018DA  CFE8 F357          	movff	wreg,_ready_queue+663
   895                           
   896                           ;kernel.c: 54:   ready_queue.tasks_installed = 0;
   897  0018DE  0E00               	movlw	0
   898  0018E0  CFE8 F354          	movff	wreg,_ready_queue+660
   899  0018E4  0E00               	movlw	0
   900  0018E6  CFE8 F355          	movff	wreg,_ready_queue+661
   901                           
   902                           ;kernel.c: 55:   lunos_createTask(0, &task_idle);
   903  0018EA  0E28               	movlw	low _task_idle
   904  0018EC  6EE6               	movwf	postinc1,c
   905  0018EE  0E19               	movlw	high _task_idle
   906  0018F0  6EE6               	movwf	postinc1,c
   907  0018F2  0E00               	movlw	0
   908  0018F4  6EE6               	movwf	postinc1,c
   909  0018F6  0E00               	movlw	0
   910  0018F8  6EE6               	movwf	postinc1,c
   911  0018FA  ECDA  F005         	call	_lunos_createTask	;wreg free
   912                           
   913                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
   914  0018FE  0012               	return		;funcret
   915  001900                     __end_of_lunos_init:
   916                           	opt callstack 0
   917                           
   918 ;; *************** function _lunos_createTask *****************
   919 ;; Defined at:
   920 ;;		line 14 in file "kernel.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  prior           2  [STACK] unsigned int 
   923 ;;  f               2  [STACK] PTR FTN()void 
   924 ;;		 -> count_out(1), cover_bottle(1), check_level(1), fill_bottle(1), 
   925 ;;		 -> count_bottles(1), task_idle(1), 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  new_task      110  [STACK] struct pcb
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1  [STACK] void 
   930 ;; Registers used:
   931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   937 ;;      Params:         0       0       0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:   10
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_lunos_init
   948 ;;		_main
   949 ;; This function uses a reentrant model
   950 ;;
   951                           
   952                           	psect	text5
   953  000BB4                     __ptext5:
   954                           	opt callstack 0
   955  000BB4                     _lunos_createTask:
   956                           	opt callstack 0
   957                           
   958                           ; autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
   959  000BB4  0E6E               	movlw	110
   960  000BB6  26E1               	addwf	fsr1l,f,c
   961  000BB8  0E00               	movlw	0
   962  000BBA  22E2               	addwfc	fsr1h,f,c
   963                           
   964                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
   965                           
   966                           ;incstack = 0
   967  000BBC  EE23  F054         	lfsr	2,_ready_queue+660
   968  000BC0  CFDE F053          	movff	postinc2,btemp+10
   969  000BC4  CFDD F054          	movff	postdec2,btemp+11
   970  000BC8  0E01               	movlw	1
   971  000BCA  2653               	addwf	btemp+10,f,c
   972  000BCC  0E00               	movlw	0
   973  000BCE  2254               	addwfc	btemp+11,f,c
   974                           
   975                           ;stkvar	_new_task @ sp[(-110)+0]
   976  000BD0  0E92               	movlw	-110
   977  000BD2  C053  FFE3         	movff	btemp+10,plusw1
   978  000BD6  0E93               	movlw	-109
   979  000BD8  C054  FFE3         	movff	btemp+11,plusw1
   980                           
   981                           ;kernel.c: 19:   new_task.task_prior = prior;
   982                           ;stkvar	_prior @ sp[(-110)+-2]
   983  000BDC  50E1               	movf	fsr1l,w,c
   984  000BDE  0F90               	addlw	-112
   985  000BE0  6ED9               	movwf	fsr2l,c
   986  000BE2  50E2               	movf	fsr1h,w,c
   987  000BE4  6EDA               	movwf	fsr2h,c
   988  000BE6  0EFF               	movlw	255
   989  000BE8  22DA               	addwfc	fsr2h,f,c
   990                           
   991                           ;stkvar	_new_task @ sp[(-110)+0]
   992  000BEA  0E94               	movlw	148
   993  000BEC  24E1               	addwf	fsr1l,w,c
   994  000BEE  6EE9               	movwf	fsr0l,c
   995  000BF0  0EFF               	movlw	255
   996  000BF2  20E2               	addwfc	fsr1h,w,c
   997  000BF4  6EEA               	movwf	fsr0h,c
   998  000BF6  CFDE FFEE          	movff	postinc2,postinc0
   999  000BFA  CFDD FFED          	movff	postdec2,postdec0
  1000                           
  1001                           ;kernel.c: 20:   new_task.task_state = READY;
  1002                           ;stkvar	_new_task @ sp[(-110)+0]
  1003  000BFE  0E9A               	movlw	154
  1004  000C00  24E1               	addwf	fsr1l,w,c
  1005  000C02  6ED9               	movwf	fsr2l,c
  1006  000C04  0EFF               	movlw	255
  1007  000C06  20E2               	addwfc	fsr1h,w,c
  1008  000C08  6EDA               	movwf	fsr2h,c
  1009  000C0A  0E00               	movlw	0
  1010  000C0C  6EDF               	movwf	indf2,c
  1011                           
  1012                           ;kernel.c: 21:   new_task.task_f = f;
  1013                           ;stkvar	_f @ sp[(-110)+-4]
  1014  000C0E  50E1               	movf	fsr1l,w,c
  1015  000C10  0F8E               	addlw	-114
  1016  000C12  6ED9               	movwf	fsr2l,c
  1017  000C14  50E2               	movf	fsr1h,w,c
  1018  000C16  6EDA               	movwf	fsr2h,c
  1019  000C18  0EFF               	movlw	255
  1020  000C1A  22DA               	addwfc	fsr2h,f,c
  1021                           
  1022                           ;stkvar	_new_task @ sp[(-110)+0]
  1023  000C1C  0EFC               	movlw	252
  1024  000C1E  24E1               	addwf	fsr1l,w,c
  1025  000C20  6EE9               	movwf	fsr0l,c
  1026  000C22  0EFF               	movlw	255
  1027  000C24  20E2               	addwfc	fsr1h,w,c
  1028  000C26  6EEA               	movwf	fsr0h,c
  1029  000C28  CFDE FFEE          	movff	postinc2,postinc0
  1030  000C2C  CFDD FFED          	movff	postdec2,postdec0
  1031                           
  1032                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
  1033                           ;stkvar	_new_task @ sp[(-110)+0]
  1034  000C30  0EF8               	movlw	248
  1035  000C32  24E1               	addwf	fsr1l,w,c
  1036  000C34  6ED9               	movwf	fsr2l,c
  1037  000C36  0EFF               	movlw	255
  1038  000C38  20E2               	addwfc	fsr1h,w,c
  1039  000C3A  6EDA               	movwf	fsr2h,c
  1040  000C3C  0E00               	movlw	0
  1041  000C3E  6EDE               	movwf	postinc2,c
  1042  000C40  0E00               	movlw	0
  1043  000C42  6EDD               	movwf	postdec2,c
  1044                           
  1045                           ;kernel.c: 23:   new_task.task_delay_time = 0;
  1046                           ;stkvar	_new_task @ sp[(-110)+0]
  1047  000C44  0EFE               	movlw	254
  1048  000C46  24E1               	addwf	fsr1l,w,c
  1049  000C48  6ED9               	movwf	fsr2l,c
  1050  000C4A  0EFF               	movlw	255
  1051  000C4C  20E2               	addwfc	fsr1h,w,c
  1052  000C4E  6EDA               	movwf	fsr2h,c
  1053  000C50  0E00               	movlw	0
  1054  000C52  6EDE               	movwf	postinc2,c
  1055  000C54  0E00               	movlw	0
  1056  000C56  6EDD               	movwf	postdec2,c
  1057                           
  1058                           ;kernel.c: 24:   new_task.task_installed = 0;
  1059                           ;stkvar	_new_task @ sp[(-110)+0]
  1060  000C58  0EFA               	movlw	250
  1061  000C5A  24E1               	addwf	fsr1l,w,c
  1062  000C5C  6ED9               	movwf	fsr2l,c
  1063  000C5E  0EFF               	movlw	255
  1064  000C60  20E2               	addwfc	fsr1h,w,c
  1065  000C62  6EDA               	movwf	fsr2h,c
  1066  000C64  0E00               	movlw	0
  1067  000C66  6EDE               	movwf	postinc2,c
  1068  000C68  0E00               	movlw	0
  1069  000C6A  6EDD               	movwf	postdec2,c
  1070                           
  1071                           ;kernel.c: 27:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
  1072                           ;stkvar	_new_task @ sp[(-110)+0]
  1073  000C6C  0E92               	movlw	146
  1074  000C6E  24E1               	addwf	fsr1l,w,c
  1075  000C70  6ED9               	movwf	fsr2l,c
  1076  000C72  0EFF               	movlw	255
  1077  000C74  20E2               	addwfc	fsr1h,w,c
  1078  000C76  6EDA               	movwf	fsr2h,c
  1079  000C78  EE03  F054         	lfsr	0,_ready_queue+660
  1080  000C7C  CFEE F053          	movff	postinc0,btemp+10
  1081  000C80  CFED F054          	movff	postdec0,btemp+11
  1082  000C84  0E6E               	movlw	110
  1083  000C86  0253               	mulwf	btemp+10,c
  1084  000C88  CFF3 F051          	movff	prodl,btemp+8
  1085  000C8C  CFF4 F052          	movff	prodh,btemp+9
  1086  000C90  0254               	mulwf	btemp+11,c
  1087  000C92  50F3               	movf	prodl,w,c
  1088  000C94  2652               	addwf	btemp+9,f,c
  1089  000C96  0EC0               	movlw	low _ready_queue
  1090  000C98  2451               	addwf	btemp+8,w,c
  1091  000C9A  6EE9               	movwf	fsr0l,c
  1092  000C9C  0E00               	movlw	high _ready_queue
  1093  000C9E  2052               	addwfc	btemp+9,w,c
  1094  000CA0  6EEA               	movwf	fsr0h,c
  1095  000CA2  0E6D               	movlw	109
  1096  000CA4                     u501:
  1097  000CA4  CFDB FFEB          	movff	plusw2,plusw0
  1098  000CA8  06E8               	decf	wreg,f,c
  1099  000CAA  E2FC               	bc	u501
  1100                           
  1101                           ;kernel.c: 28:   ready_queue.tasks_installed++;
  1102  000CAC  EE23  F054         	lfsr	2,_ready_queue+660
  1103  000CB0  2ADE               	incf	postinc2,f,c
  1104  000CB2  0E00               	movlw	0
  1105  000CB4  22DD               	addwfc	postdec2,f,c
  1106                           
  1107                           ; _lunos_createTask: autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
  1108  000CB6  0E8E               	movlw	142
  1109  000CB8  26E1               	addwf	fsr1l,f,c
  1110  000CBA  0EFF               	movlw	255
  1111  000CBC  22E2               	addwfc	fsr1h,f,c
  1112  000CBE  0012               	return		;funcret
  1113  000CC0                     __end_of_lunos_createTask:
  1114                           	opt callstack 0
  1115                           
  1116 ;; *************** function _SRAMInitHeap *****************
  1117 ;; Defined at:
  1118 ;;		line 313 in file "sralloc.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  count           2  [STACK] unsigned int 
  1123 ;;  pHeap           2  [STACK] PTR unsigned char 
  1124 ;;		 -> _uDynamicHeap(512), 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1  [STACK] void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1134 ;;      Params:         0       0       0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:   10
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_lunos_init
  1145 ;; This function uses a reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text6
  1149  0011AE                     __ptext6:
  1150                           	opt callstack 0
  1151  0011AE                     _SRAMInitHeap:
  1152                           	opt callstack 0
  1153                           
  1154                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1155  0011AE  52E6               	movf	postinc1,f,c
  1156  0011B0  52E6               	movf	postinc1,f,c
  1157  0011B2  52E6               	movf	postinc1,f,c
  1158  0011B4  52E6               	movf	postinc1,f,c
  1159                           
  1160                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
  1161                           ;stkvar	_pHeap @ sp[(-4)+2]
  1162                           
  1163                           ;incstack = 0
  1164  0011B6  0E03               	movlw	high __uDynamicHeap
  1165  0011B8  6E49               	movwf	btemp,c
  1166  0011BA  0EFF               	movlw	-1
  1167  0011BC  C049  FFE3         	movff	btemp,plusw1
  1168  0011C0  0E58               	movlw	low __uDynamicHeap
  1169  0011C2  6E49               	movwf	btemp,c
  1170  0011C4  0EFE               	movlw	-2
  1171  0011C6  C049  FFE3         	movff	btemp,plusw1
  1172                           
  1173                           ;sralloc.c: 319:  count = 0x200 -1;
  1174  0011CA  0EFF               	movlw	255
  1175  0011CC  6E53               	movwf	btemp+10,c
  1176  0011CE  0E01               	movlw	1
  1177  0011D0  6E54               	movwf	btemp+11,c
  1178                           
  1179                           ;stkvar	_count @ sp[(-4)+0]
  1180  0011D2  0EFC               	movlw	-4
  1181  0011D4  C053  FFE3         	movff	btemp+10,plusw1
  1182  0011D8  0EFD               	movlw	-3
  1183  0011DA  C054  FFE3         	movff	btemp+11,plusw1
  1184  0011DE                     l1647:
  1185                           
  1186                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
  1187                           ;stkvar	_count @ sp[(-4)+0]
  1188  0011DE  0EFD               	movlw	-3
  1189  0011E0  50E3               	movf	plusw1,w,c
  1190  0011E2  E107               	bnz	u510
  1191  0011E4  0EFC               	movlw	-4
  1192  0011E6  CFE3 F049          	movff	plusw1,btemp
  1193  0011EA  0E80               	movlw	128
  1194  0011EC  5E49               	subwf	btemp,f,c
  1195  0011EE  A0D8               	btfss	status,0,c
  1196  0011F0  D023               	goto	l1655
  1197  0011F2                     u510:
  1198                           
  1199                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
  1200                           ;stkvar	_pHeap @ sp[(-4)+2]
  1201  0011F2  0EFE               	movlw	-2
  1202  0011F4  CFE3 FFD9          	movff	plusw1,fsr2l
  1203  0011F8  0EFF               	movlw	-1
  1204  0011FA  CFE3 FFDA          	movff	plusw1,fsr2h
  1205  0011FE  0E7F               	movlw	127
  1206  001200  6EDF               	movwf	indf2,c
  1207                           
  1208                           ;sralloc.c: 326:    pHeap += 0x7F;
  1209                           ;stkvar	_pHeap @ sp[(-4)+2]
  1210  001202  0EFE               	movlw	-2
  1211  001204  50E3               	movf	plusw1,w,c
  1212  001206  0F7F               	addlw	127
  1213  001208  6E49               	movwf	btemp,c
  1214  00120A  0EFE               	movlw	-2
  1215  00120C  C049  FFE3         	movff	btemp,plusw1
  1216  001210  6A49               	clrf	btemp,c
  1217  001212  0EFF               	movlw	-1
  1218  001214  50E3               	movf	plusw1,w,c
  1219  001216  2049               	addwfc	btemp,w,c
  1220  001218  6E49               	movwf	btemp,c
  1221  00121A  0EFF               	movlw	-1
  1222  00121C  C049  FFE3         	movff	btemp,plusw1
  1223                           
  1224                           ;sralloc.c: 327:    count = count - 0x7F;
  1225                           ;stkvar	_count @ sp[(-4)+0]
  1226  001220  50E1               	movf	fsr1l,w,c
  1227  001222  0FFC               	addlw	-4
  1228  001224  6ED9               	movwf	fsr2l,c
  1229  001226  50E2               	movf	fsr1h,w,c
  1230  001228  6EDA               	movwf	fsr2h,c
  1231  00122A  0EFF               	movlw	255
  1232  00122C  22DA               	addwfc	fsr2h,f,c
  1233  00122E  0E81               	movlw	129
  1234  001230  26DE               	addwf	postinc2,f,c
  1235  001232  0EFF               	movlw	255
  1236  001234  22DD               	addwfc	postdec2,f,c
  1237                           
  1238                           ;sralloc.c: 328:   }
  1239  001236  D7D3               	goto	l1647
  1240  001238                     l1655:
  1241                           
  1242                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1243                           ;stkvar	_count @ sp[(-4)+0]
  1244                           ;stkvar	_pHeap @ sp[(-4)+2]
  1245  001238  0EFE               	movlw	-2
  1246  00123A  CFE3 FFD9          	movff	plusw1,fsr2l
  1247  00123E  0EFF               	movlw	-1
  1248  001240  CFE3 FFDA          	movff	plusw1,fsr2h
  1249  001244  0EFC               	movlw	-4
  1250  001246  CFE3 FFDF          	movff	plusw1,indf2
  1251                           
  1252                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1253                           ;stkvar	_count @ sp[(-4)+0]
  1254  00124A  0EFC               	movlw	-4
  1255  00124C  CFE3 F053          	movff	plusw1,btemp+10
  1256  001250  0EFD               	movlw	-3
  1257  001252  CFE3 F054          	movff	plusw1,btemp+11
  1258                           
  1259                           ;stkvar	_pHeap @ sp[(-4)+2]
  1260  001256  0EFE               	movlw	-2
  1261  001258  CFE3 F051          	movff	plusw1,btemp+8
  1262  00125C  0EFF               	movlw	-1
  1263  00125E  CFE3 F052          	movff	plusw1,btemp+9
  1264  001262  5053               	movf	btemp+10,w,c
  1265  001264  2451               	addwf	btemp+8,w,c
  1266  001266  6ED9               	movwf	fsr2l,c
  1267  001268  5054               	movf	btemp+11,w,c
  1268  00126A  2052               	addwfc	btemp+9,w,c
  1269  00126C  6EDA               	movwf	fsr2h,c
  1270  00126E  0E00               	movlw	0
  1271  001270  6EDF               	movwf	indf2,c
  1272                           
  1273                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1274  001272  52E5               	movf	postdec1,f,c
  1275  001274  52E5               	movf	postdec1,f,c
  1276  001276  52E5               	movf	postdec1,f,c
  1277  001278  52E5               	movf	postdec1,f,c
  1278  00127A  0012               	return		;funcret
  1279  00127C                     __end_of_SRAMInitHeap:
  1280                           	opt callstack 0
  1281                           
  1282 ;; *************** function _dispatcher *****************
  1283 ;; Defined at:
  1284 ;;		line 66 in file "kernel.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  state           1  [STACK] enum E4
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1  [STACK] void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1298 ;;      Params:         0       0       0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0       0       0
  1301 ;;      Totals:         0       0       0       0       0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:   13
  1305 ;; This function calls:
  1306 ;;		_scheduler
  1307 ;; This function is called by:
  1308 ;;		_lunos_delayTask
  1309 ;;		_main
  1310 ;;		_sem_wait
  1311 ;; This function uses a reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text7
  1315  0004DC                     __ptext7:
  1316                           	opt callstack 0
  1317  0004DC                     _dispatcher:
  1318                           	opt callstack 11
  1319                           
  1320                           ;kernel.c: 67:   INTCONbits.GIE = 0;
  1321                           
  1322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1323                           ;incstack = 0
  1324  0004DC  9EF2               	bcf	4082,7,c	;volatile
  1325                           
  1326                           ;kernel.c: 69:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size;};
  1327  0004DE  C356  F00B         	movff	_ready_queue+662,_who
  1328  0004E2  C357  F00C         	movff	_ready_queue+663,_who+1
  1329                           
  1330                           ;stkvar	_state @ sp[(0)+-1]
  1331  0004E6  C00B  F053         	movff	_who,btemp+10
  1332  0004EA  C00C  F054         	movff	_who+1,btemp+11
  1333  0004EE  0E6E               	movlw	110
  1334  0004F0  0253               	mulwf	btemp+10,c
  1335  0004F2  CFF3 F051          	movff	prodl,btemp+8
  1336  0004F6  CFF4 F052          	movff	prodh,btemp+9
  1337  0004FA  0254               	mulwf	btemp+11,c
  1338  0004FC  50F3               	movf	prodl,w,c
  1339  0004FE  2652               	addwf	btemp+9,f,c
  1340  000500  0EC8               	movlw	low (_ready_queue+8)
  1341  000502  2451               	addwf	btemp+8,w,c
  1342  000504  6ED9               	movwf	fsr2l,c
  1343  000506  0E00               	movlw	high (_ready_queue+8)
  1344  000508  2052               	addwfc	btemp+9,w,c
  1345  00050A  6EDA               	movwf	fsr2h,c
  1346  00050C  0EFF               	movlw	-1
  1347  00050E  CFE3 FFDF          	movff	plusw1,indf2
  1348  000512  C00B  F053         	movff	_who,btemp+10
  1349  000516  C00C  F054         	movff	_who+1,btemp+11
  1350  00051A  0E6E               	movlw	110
  1351  00051C  0253               	mulwf	btemp+10,c
  1352  00051E  CFF3 F051          	movff	prodl,btemp+8
  1353  000522  CFF4 F052          	movff	prodh,btemp+9
  1354  000526  0254               	mulwf	btemp+11,c
  1355  000528  50F3               	movf	prodl,w,c
  1356  00052A  2652               	addwf	btemp+9,f,c
  1357  00052C  0EC5               	movlw	low (_ready_queue+5)
  1358  00052E  2451               	addwf	btemp+8,w,c
  1359  000530  6ED9               	movwf	fsr2l,c
  1360  000532  0E00               	movlw	high (_ready_queue+5)
  1361  000534  2052               	addwfc	btemp+9,w,c
  1362  000536  6EDA               	movwf	fsr2h,c
  1363  000538  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1364  00053C  C00B  F053         	movff	_who,btemp+10
  1365  000540  C00C  F054         	movff	_who+1,btemp+11
  1366  000544  0E6E               	movlw	110
  1367  000546  0253               	mulwf	btemp+10,c
  1368  000548  CFF3 F051          	movff	prodl,btemp+8
  1369  00054C  CFF4 F052          	movff	prodh,btemp+9
  1370  000550  0254               	mulwf	btemp+11,c
  1371  000552  50F3               	movf	prodl,w,c
  1372  000554  2652               	addwf	btemp+9,f,c
  1373  000556  0EC6               	movlw	low (_ready_queue+6)
  1374  000558  2451               	addwf	btemp+8,w,c
  1375  00055A  6ED9               	movwf	fsr2l,c
  1376  00055C  0E00               	movlw	high (_ready_queue+6)
  1377  00055E  2052               	addwfc	btemp+9,w,c
  1378  000560  6EDA               	movwf	fsr2h,c
  1379  000562  CFD8 FFDF          	movff	status,indf2	;volatile
  1380  000566  C00B  F053         	movff	_who,btemp+10
  1381  00056A  C00C  F054         	movff	_who+1,btemp+11
  1382  00056E  0E6E               	movlw	110
  1383  000570  0253               	mulwf	btemp+10,c
  1384  000572  CFF3 F051          	movff	prodl,btemp+8
  1385  000576  CFF4 F052          	movff	prodh,btemp+9
  1386  00057A  0254               	mulwf	btemp+11,c
  1387  00057C  50F3               	movf	prodl,w,c
  1388  00057E  2652               	addwf	btemp+9,f,c
  1389  000580  0EC7               	movlw	low (_ready_queue+7)
  1390  000582  2451               	addwf	btemp+8,w,c
  1391  000584  6ED9               	movwf	fsr2l,c
  1392  000586  0E00               	movlw	high (_ready_queue+7)
  1393  000588  2052               	addwfc	btemp+9,w,c
  1394  00058A  6EDA               	movwf	fsr2h,c
  1395  00058C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1396  000590  6A09               	clrf	_size,c
  1397  000592  6A0A               	clrf	_size+1,c
  1398  000594  D08D               	goto	l1593
  1399  000596                     l1589:
  1400  000596  C009  F053         	movff	_size,btemp+10
  1401  00059A  C00A  F054         	movff	_size+1,btemp+11
  1402  00059E  0E03               	movlw	3
  1403  0005A0  0253               	mulwf	btemp+10,c
  1404  0005A2  CFF3 F051          	movff	prodl,btemp+8
  1405  0005A6  CFF4 F052          	movff	prodh,btemp+9
  1406  0005AA  0254               	mulwf	btemp+11,c
  1407  0005AC  50F3               	movf	prodl,w,c
  1408  0005AE  2652               	addwf	btemp+9,f,c
  1409  0005B0  C00B  F053         	movff	_who,btemp+10
  1410  0005B4  C00C  F054         	movff	_who+1,btemp+11
  1411  0005B8  0E6E               	movlw	110
  1412  0005BA  0253               	mulwf	btemp+10,c
  1413  0005BC  CFF3 F04F          	movff	prodl,btemp+6
  1414  0005C0  CFF4 F050          	movff	prodh,btemp+7
  1415  0005C4  0254               	mulwf	btemp+11,c
  1416  0005C6  50F3               	movf	prodl,w,c
  1417  0005C8  2650               	addwf	btemp+7,f,c
  1418  0005CA  0EC0               	movlw	low _ready_queue
  1419  0005CC  6E53               	movwf	btemp+10,c
  1420  0005CE  0E00               	movlw	high _ready_queue
  1421  0005D0  6E54               	movwf	btemp+11,c
  1422  0005D2  0E09               	movlw	9
  1423  0005D4  2653               	addwf	btemp+10,f,c
  1424  0005D6  0E00               	movlw	0
  1425  0005D8  2254               	addwfc	btemp+11,f,c
  1426  0005DA  504F               	movf	btemp+6,w,c
  1427  0005DC  2653               	addwf	btemp+10,f,c
  1428  0005DE  5050               	movf	btemp+7,w,c
  1429  0005E0  2254               	addwfc	btemp+11,f,c
  1430  0005E2  5051               	movf	btemp+8,w,c
  1431  0005E4  2453               	addwf	btemp+10,w,c
  1432  0005E6  6ED9               	movwf	fsr2l,c
  1433  0005E8  5052               	movf	btemp+9,w,c
  1434  0005EA  2054               	addwfc	btemp+11,w,c
  1435  0005EC  6EDA               	movwf	fsr2h,c
  1436  0005EE  CFFF FFDF          	movff	tosu,indf2	;volatile
  1437  0005F2  C009  F053         	movff	_size,btemp+10
  1438  0005F6  C00A  F054         	movff	_size+1,btemp+11
  1439  0005FA  0E03               	movlw	3
  1440  0005FC  0253               	mulwf	btemp+10,c
  1441  0005FE  CFF3 F051          	movff	prodl,btemp+8
  1442  000602  CFF4 F052          	movff	prodh,btemp+9
  1443  000606  0254               	mulwf	btemp+11,c
  1444  000608  50F3               	movf	prodl,w,c
  1445  00060A  2652               	addwf	btemp+9,f,c
  1446  00060C  C00B  F053         	movff	_who,btemp+10
  1447  000610  C00C  F054         	movff	_who+1,btemp+11
  1448  000614  0E6E               	movlw	110
  1449  000616  0253               	mulwf	btemp+10,c
  1450  000618  CFF3 F04F          	movff	prodl,btemp+6
  1451  00061C  CFF4 F050          	movff	prodh,btemp+7
  1452  000620  0254               	mulwf	btemp+11,c
  1453  000622  50F3               	movf	prodl,w,c
  1454  000624  2650               	addwf	btemp+7,f,c
  1455  000626  0EC0               	movlw	low _ready_queue
  1456  000628  6E53               	movwf	btemp+10,c
  1457  00062A  0E00               	movlw	high _ready_queue
  1458  00062C  6E54               	movwf	btemp+11,c
  1459  00062E  0E0B               	movlw	11
  1460  000630  2653               	addwf	btemp+10,f,c
  1461  000632  0E00               	movlw	0
  1462  000634  2254               	addwfc	btemp+11,f,c
  1463  000636  504F               	movf	btemp+6,w,c
  1464  000638  2653               	addwf	btemp+10,f,c
  1465  00063A  5050               	movf	btemp+7,w,c
  1466  00063C  2254               	addwfc	btemp+11,f,c
  1467  00063E  5051               	movf	btemp+8,w,c
  1468  000640  2453               	addwf	btemp+10,w,c
  1469  000642  6ED9               	movwf	fsr2l,c
  1470  000644  5052               	movf	btemp+9,w,c
  1471  000646  2054               	addwfc	btemp+11,w,c
  1472  000648  6EDA               	movwf	fsr2h,c
  1473  00064A  CFFE FFDF          	movff	tosh,indf2	;volatile
  1474  00064E  C009  F053         	movff	_size,btemp+10
  1475  000652  C00A  F054         	movff	_size+1,btemp+11
  1476  000656  0E03               	movlw	3
  1477  000658  0253               	mulwf	btemp+10,c
  1478  00065A  CFF3 F051          	movff	prodl,btemp+8
  1479  00065E  CFF4 F052          	movff	prodh,btemp+9
  1480  000662  0254               	mulwf	btemp+11,c
  1481  000664  50F3               	movf	prodl,w,c
  1482  000666  2652               	addwf	btemp+9,f,c
  1483  000668  C00B  F053         	movff	_who,btemp+10
  1484  00066C  C00C  F054         	movff	_who+1,btemp+11
  1485  000670  0E6E               	movlw	110
  1486  000672  0253               	mulwf	btemp+10,c
  1487  000674  CFF3 F04F          	movff	prodl,btemp+6
  1488  000678  CFF4 F050          	movff	prodh,btemp+7
  1489  00067C  0254               	mulwf	btemp+11,c
  1490  00067E  50F3               	movf	prodl,w,c
  1491  000680  2650               	addwf	btemp+7,f,c
  1492  000682  0EC0               	movlw	low _ready_queue
  1493  000684  6E53               	movwf	btemp+10,c
  1494  000686  0E00               	movlw	high _ready_queue
  1495  000688  6E54               	movwf	btemp+11,c
  1496  00068A  0E0A               	movlw	10
  1497  00068C  2653               	addwf	btemp+10,f,c
  1498  00068E  0E00               	movlw	0
  1499  000690  2254               	addwfc	btemp+11,f,c
  1500  000692  504F               	movf	btemp+6,w,c
  1501  000694  2653               	addwf	btemp+10,f,c
  1502  000696  5050               	movf	btemp+7,w,c
  1503  000698  2254               	addwfc	btemp+11,f,c
  1504  00069A  5051               	movf	btemp+8,w,c
  1505  00069C  2453               	addwf	btemp+10,w,c
  1506  00069E  6ED9               	movwf	fsr2l,c
  1507  0006A0  5052               	movf	btemp+9,w,c
  1508  0006A2  2054               	addwfc	btemp+11,w,c
  1509  0006A4  6EDA               	movwf	fsr2h,c
  1510  0006A6  CFFD FFDF          	movff	tosl,indf2	;volatile
  1511  0006AA  4A09               	infsnz	_size,f,c
  1512  0006AC  2A0A               	incf	_size+1,f,c
  1513  0006AE  0006               	pop		;# 
  1514  0006B0                     l1593:
  1515  0006B0  50FC               	movf	stkptr,w,c	;volatile
  1516  0006B2  A4D8               	btfss	status,2,c
  1517  0006B4  D770               	goto	l1589
  1518  0006B6  C00B  F053         	movff	_who,btemp+10
  1519  0006BA  C00C  F054         	movff	_who+1,btemp+11
  1520  0006BE  0E6E               	movlw	110
  1521  0006C0  0253               	mulwf	btemp+10,c
  1522  0006C2  CFF3 F051          	movff	prodl,btemp+8
  1523  0006C6  CFF4 F052          	movff	prodh,btemp+9
  1524  0006CA  0254               	mulwf	btemp+11,c
  1525  0006CC  50F3               	movf	prodl,w,c
  1526  0006CE  2652               	addwf	btemp+9,f,c
  1527  0006D0  0E26               	movlw	low (_ready_queue+102)
  1528  0006D2  2451               	addwf	btemp+8,w,c
  1529  0006D4  6ED9               	movwf	fsr2l,c
  1530  0006D6  0E01               	movlw	high (_ready_queue+102)
  1531  0006D8  2052               	addwfc	btemp+9,w,c
  1532  0006DA  6EDA               	movwf	fsr2h,c
  1533  0006DC  C009  FFDE         	movff	_size,postinc2
  1534  0006E0  C00A  FFDD         	movff	_size+1,postdec2
  1535                           
  1536                           ;kernel.c: 71:   ready_queue.task_running = scheduler();
  1537  0006E4  EC91  F00C         	call	_scheduler	;wreg free
  1538  0006E8  C049  F356         	movff	btemp,_ready_queue+662
  1539  0006EC  C04A  F357         	movff	btemp+1,_ready_queue+663
  1540                           
  1541                           ;kernel.c: 73:   { STKPTR = 0; who = ready_queue.task_running; if (ready_queue.tasks[who
      +                          ].task_installed == 0) { ready_queue.tasks[who].task_installed = 1; __asm("PUSH"); TOS =
      +                           ready_queue.tasks[who].task_f; } else { ready_queue.tasks[who].task_state = RUNNING; WR
      +                          EG = ready_queue.tasks[who].W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = rea
      +                          dy_queue.tasks[who].BSR_reg; size = ready_queue.tasks[who].task_stack.stack_level; while
      +                          (size){ __asm("PUSH"); TOSL = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSL_reg
      +                          ; TOSH = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSH_reg; TOSU = ready_queue.
      +                          tasks[who].task_stack.h_stack[size-1].TOSU_reg; size--; } }};
  1542  0006F0  6AFC               	clrf	stkptr,c	;volatile
  1543  0006F2  C356  F00B         	movff	_ready_queue+662,_who
  1544  0006F6  C357  F00C         	movff	_ready_queue+663,_who+1
  1545  0006FA  C00B  F053         	movff	_who,btemp+10
  1546  0006FE  C00C  F054         	movff	_who+1,btemp+11
  1547  000702  0E6E               	movlw	110
  1548  000704  0253               	mulwf	btemp+10,c
  1549  000706  CFF3 F051          	movff	prodl,btemp+8
  1550  00070A  CFF4 F052          	movff	prodh,btemp+9
  1551  00070E  0254               	mulwf	btemp+11,c
  1552  000710  50F3               	movf	prodl,w,c
  1553  000712  2652               	addwf	btemp+9,f,c
  1554  000714  0E28               	movlw	low (_ready_queue+104)
  1555  000716  2451               	addwf	btemp+8,w,c
  1556  000718  6ED9               	movwf	fsr2l,c
  1557  00071A  0E01               	movlw	high (_ready_queue+104)
  1558  00071C  2052               	addwfc	btemp+9,w,c
  1559  00071E  6EDA               	movwf	fsr2h,c
  1560  000720  50DE               	movf	postinc2,w,c
  1561  000722  10DE               	iorwf	postinc2,w,c
  1562  000724  A4D8               	btfss	status,2,c
  1563  000726  D035               	goto	l1607
  1564  000728  C00B  F053         	movff	_who,btemp+10
  1565  00072C  C00C  F054         	movff	_who+1,btemp+11
  1566  000730  0E6E               	movlw	110
  1567  000732  0253               	mulwf	btemp+10,c
  1568  000734  CFF3 F051          	movff	prodl,btemp+8
  1569  000738  CFF4 F052          	movff	prodh,btemp+9
  1570  00073C  0254               	mulwf	btemp+11,c
  1571  00073E  50F3               	movf	prodl,w,c
  1572  000740  2652               	addwf	btemp+9,f,c
  1573  000742  0E28               	movlw	low (_ready_queue+104)
  1574  000744  2451               	addwf	btemp+8,w,c
  1575  000746  6ED9               	movwf	fsr2l,c
  1576  000748  0E01               	movlw	high (_ready_queue+104)
  1577  00074A  2052               	addwfc	btemp+9,w,c
  1578  00074C  6EDA               	movwf	fsr2h,c
  1579  00074E  0E01               	movlw	1
  1580  000750  6EDE               	movwf	postinc2,c
  1581  000752  0E00               	movlw	0
  1582  000754  6EDD               	movwf	postdec2,c
  1583  000756  0005               	push		;# 
  1584  000758  C00B  F053         	movff	_who,btemp+10
  1585  00075C  C00C  F054         	movff	_who+1,btemp+11
  1586  000760  0E6E               	movlw	110
  1587  000762  0253               	mulwf	btemp+10,c
  1588  000764  CFF3 F051          	movff	prodl,btemp+8
  1589  000768  CFF4 F052          	movff	prodh,btemp+9
  1590  00076C  0254               	mulwf	btemp+11,c
  1591  00076E  50F3               	movf	prodl,w,c
  1592  000770  2652               	addwf	btemp+9,f,c
  1593  000772  0E2A               	movlw	low (_ready_queue+106)
  1594  000774  2451               	addwf	btemp+8,w,c
  1595  000776  6ED9               	movwf	fsr2l,c
  1596  000778  0E01               	movlw	high (_ready_queue+106)
  1597  00077A  2052               	addwfc	btemp+9,w,c
  1598  00077C  6EDA               	movwf	fsr2h,c
  1599  00077E  CFDE F053          	movff	postinc2,btemp+10
  1600  000782  CFDD F054          	movff	postdec2,btemp+11
  1601  000786  C053  FFFD         	movff	btemp+10,tosl	;volatile
  1602  00078A  C054  FFFE         	movff	btemp+11,tosh	;volatile
  1603  00078E  6AFF               	clrf	tosu,c	;volatile
  1604  000790  D0FF               	goto	u490
  1605  000792                     l1607:
  1606  000792  C00B  F053         	movff	_who,btemp+10
  1607  000796  C00C  F054         	movff	_who+1,btemp+11
  1608  00079A  0E6E               	movlw	110
  1609  00079C  0253               	mulwf	btemp+10,c
  1610  00079E  CFF3 F051          	movff	prodl,btemp+8
  1611  0007A2  CFF4 F052          	movff	prodh,btemp+9
  1612  0007A6  0254               	mulwf	btemp+11,c
  1613  0007A8  50F3               	movf	prodl,w,c
  1614  0007AA  2652               	addwf	btemp+9,f,c
  1615  0007AC  0EC8               	movlw	low (_ready_queue+8)
  1616  0007AE  2451               	addwf	btemp+8,w,c
  1617  0007B0  6ED9               	movwf	fsr2l,c
  1618  0007B2  0E00               	movlw	high (_ready_queue+8)
  1619  0007B4  2052               	addwfc	btemp+9,w,c
  1620  0007B6  6EDA               	movwf	fsr2h,c
  1621  0007B8  0E01               	movlw	1
  1622  0007BA  6EDF               	movwf	indf2,c
  1623  0007BC  C00B  F053         	movff	_who,btemp+10
  1624  0007C0  C00C  F054         	movff	_who+1,btemp+11
  1625  0007C4  0E6E               	movlw	110
  1626  0007C6  0253               	mulwf	btemp+10,c
  1627  0007C8  CFF3 F051          	movff	prodl,btemp+8
  1628  0007CC  CFF4 F052          	movff	prodh,btemp+9
  1629  0007D0  0254               	mulwf	btemp+11,c
  1630  0007D2  50F3               	movf	prodl,w,c
  1631  0007D4  2652               	addwf	btemp+9,f,c
  1632  0007D6  0EC5               	movlw	low (_ready_queue+5)
  1633  0007D8  2451               	addwf	btemp+8,w,c
  1634  0007DA  6ED9               	movwf	fsr2l,c
  1635  0007DC  0E00               	movlw	high (_ready_queue+5)
  1636  0007DE  2052               	addwfc	btemp+9,w,c
  1637  0007E0  6EDA               	movwf	fsr2h,c
  1638  0007E2  50DF               	movf	indf2,w,c
  1639  0007E4  6E54               	movwf	btemp+11,c
  1640  0007E6  5054               	movf	btemp+11,w,c
  1641  0007E8  C00B  F053         	movff	_who,btemp+10
  1642  0007EC  C00C  F054         	movff	_who+1,btemp+11
  1643  0007F0  0E6E               	movlw	110
  1644  0007F2  0253               	mulwf	btemp+10,c
  1645  0007F4  CFF3 F051          	movff	prodl,btemp+8
  1646  0007F8  CFF4 F052          	movff	prodh,btemp+9
  1647  0007FC  0254               	mulwf	btemp+11,c
  1648  0007FE  50F3               	movf	prodl,w,c
  1649  000800  2652               	addwf	btemp+9,f,c
  1650  000802  0EC6               	movlw	low (_ready_queue+6)
  1651  000804  2451               	addwf	btemp+8,w,c
  1652  000806  6ED9               	movwf	fsr2l,c
  1653  000808  0E00               	movlw	high (_ready_queue+6)
  1654  00080A  2052               	addwfc	btemp+9,w,c
  1655  00080C  6EDA               	movwf	fsr2h,c
  1656  00080E  50DF               	movf	indf2,w,c
  1657  000810  6ED8               	movwf	status,c	;volatile
  1658  000812  C00B  F053         	movff	_who,btemp+10
  1659  000816  C00C  F054         	movff	_who+1,btemp+11
  1660  00081A  0E6E               	movlw	110
  1661  00081C  0253               	mulwf	btemp+10,c
  1662  00081E  CFF3 F051          	movff	prodl,btemp+8
  1663  000822  CFF4 F052          	movff	prodh,btemp+9
  1664  000826  0254               	mulwf	btemp+11,c
  1665  000828  50F3               	movf	prodl,w,c
  1666  00082A  2652               	addwf	btemp+9,f,c
  1667  00082C  0EC7               	movlw	low (_ready_queue+7)
  1668  00082E  2451               	addwf	btemp+8,w,c
  1669  000830  6ED9               	movwf	fsr2l,c
  1670  000832  0E00               	movlw	high (_ready_queue+7)
  1671  000834  2052               	addwfc	btemp+9,w,c
  1672  000836  6EDA               	movwf	fsr2h,c
  1673  000838  50DF               	movf	indf2,w,c
  1674  00083A  6EE0               	movwf	bsr,c	;volatile
  1675  00083C  C00B  F053         	movff	_who,btemp+10
  1676  000840  C00C  F054         	movff	_who+1,btemp+11
  1677  000844  0E6E               	movlw	110
  1678  000846  0253               	mulwf	btemp+10,c
  1679  000848  CFF3 F051          	movff	prodl,btemp+8
  1680  00084C  CFF4 F052          	movff	prodh,btemp+9
  1681  000850  0254               	mulwf	btemp+11,c
  1682  000852  50F3               	movf	prodl,w,c
  1683  000854  2652               	addwf	btemp+9,f,c
  1684  000856  0E26               	movlw	low (_ready_queue+102)
  1685  000858  2451               	addwf	btemp+8,w,c
  1686  00085A  6ED9               	movwf	fsr2l,c
  1687  00085C  0E01               	movlw	high (_ready_queue+102)
  1688  00085E  2052               	addwfc	btemp+9,w,c
  1689  000860  6EDA               	movwf	fsr2h,c
  1690  000862  CFDE F009          	movff	postinc2,_size
  1691  000866  CFDD F00A          	movff	postdec2,_size+1
  1692  00086A  D08E               	goto	l1613
  1693  00086C                     l127:
  1694  00086C  0005               	push		;# 
  1695  00086E  C009  F053         	movff	_size,btemp+10
  1696  000872  C00A  F054         	movff	_size+1,btemp+11
  1697  000876  0E03               	movlw	3
  1698  000878  0253               	mulwf	btemp+10,c
  1699  00087A  CFF3 F051          	movff	prodl,btemp+8
  1700  00087E  CFF4 F052          	movff	prodh,btemp+9
  1701  000882  0254               	mulwf	btemp+11,c
  1702  000884  50F3               	movf	prodl,w,c
  1703  000886  2652               	addwf	btemp+9,f,c
  1704  000888  C00B  F053         	movff	_who,btemp+10
  1705  00088C  C00C  F054         	movff	_who+1,btemp+11
  1706  000890  0E6E               	movlw	110
  1707  000892  0253               	mulwf	btemp+10,c
  1708  000894  CFF3 F04F          	movff	prodl,btemp+6
  1709  000898  CFF4 F050          	movff	prodh,btemp+7
  1710  00089C  0254               	mulwf	btemp+11,c
  1711  00089E  50F3               	movf	prodl,w,c
  1712  0008A0  2650               	addwf	btemp+7,f,c
  1713  0008A2  0EC0               	movlw	low _ready_queue
  1714  0008A4  6E53               	movwf	btemp+10,c
  1715  0008A6  0E00               	movlw	high _ready_queue
  1716  0008A8  6E54               	movwf	btemp+11,c
  1717  0008AA  0E07               	movlw	7
  1718  0008AC  2653               	addwf	btemp+10,f,c
  1719  0008AE  0E00               	movlw	0
  1720  0008B0  2254               	addwfc	btemp+11,f,c
  1721  0008B2  504F               	movf	btemp+6,w,c
  1722  0008B4  2653               	addwf	btemp+10,f,c
  1723  0008B6  5050               	movf	btemp+7,w,c
  1724  0008B8  2254               	addwfc	btemp+11,f,c
  1725  0008BA  5051               	movf	btemp+8,w,c
  1726  0008BC  2453               	addwf	btemp+10,w,c
  1727  0008BE  6ED9               	movwf	fsr2l,c
  1728  0008C0  5052               	movf	btemp+9,w,c
  1729  0008C2  2054               	addwfc	btemp+11,w,c
  1730  0008C4  6EDA               	movwf	fsr2h,c
  1731  0008C6  50DF               	movf	indf2,w,c
  1732  0008C8  6EFD               	movwf	tosl,c	;volatile
  1733  0008CA  C009  F053         	movff	_size,btemp+10
  1734  0008CE  C00A  F054         	movff	_size+1,btemp+11
  1735  0008D2  0E03               	movlw	3
  1736  0008D4  0253               	mulwf	btemp+10,c
  1737  0008D6  CFF3 F051          	movff	prodl,btemp+8
  1738  0008DA  CFF4 F052          	movff	prodh,btemp+9
  1739  0008DE  0254               	mulwf	btemp+11,c
  1740  0008E0  50F3               	movf	prodl,w,c
  1741  0008E2  2652               	addwf	btemp+9,f,c
  1742  0008E4  C00B  F053         	movff	_who,btemp+10
  1743  0008E8  C00C  F054         	movff	_who+1,btemp+11
  1744  0008EC  0E6E               	movlw	110
  1745  0008EE  0253               	mulwf	btemp+10,c
  1746  0008F0  CFF3 F04F          	movff	prodl,btemp+6
  1747  0008F4  CFF4 F050          	movff	prodh,btemp+7
  1748  0008F8  0254               	mulwf	btemp+11,c
  1749  0008FA  50F3               	movf	prodl,w,c
  1750  0008FC  2650               	addwf	btemp+7,f,c
  1751  0008FE  0EC0               	movlw	low _ready_queue
  1752  000900  6E53               	movwf	btemp+10,c
  1753  000902  0E00               	movlw	high _ready_queue
  1754  000904  6E54               	movwf	btemp+11,c
  1755  000906  0E08               	movlw	8
  1756  000908  2653               	addwf	btemp+10,f,c
  1757  00090A  0E00               	movlw	0
  1758  00090C  2254               	addwfc	btemp+11,f,c
  1759  00090E  504F               	movf	btemp+6,w,c
  1760  000910  2653               	addwf	btemp+10,f,c
  1761  000912  5050               	movf	btemp+7,w,c
  1762  000914  2254               	addwfc	btemp+11,f,c
  1763  000916  5051               	movf	btemp+8,w,c
  1764  000918  2453               	addwf	btemp+10,w,c
  1765  00091A  6ED9               	movwf	fsr2l,c
  1766  00091C  5052               	movf	btemp+9,w,c
  1767  00091E  2054               	addwfc	btemp+11,w,c
  1768  000920  6EDA               	movwf	fsr2h,c
  1769  000922  50DF               	movf	indf2,w,c
  1770  000924  6EFE               	movwf	tosh,c	;volatile
  1771  000926  C009  F053         	movff	_size,btemp+10
  1772  00092A  C00A  F054         	movff	_size+1,btemp+11
  1773  00092E  0E03               	movlw	3
  1774  000930  0253               	mulwf	btemp+10,c
  1775  000932  CFF3 F051          	movff	prodl,btemp+8
  1776  000936  CFF4 F052          	movff	prodh,btemp+9
  1777  00093A  0254               	mulwf	btemp+11,c
  1778  00093C  50F3               	movf	prodl,w,c
  1779  00093E  2652               	addwf	btemp+9,f,c
  1780  000940  C00B  F053         	movff	_who,btemp+10
  1781  000944  C00C  F054         	movff	_who+1,btemp+11
  1782  000948  0E6E               	movlw	110
  1783  00094A  0253               	mulwf	btemp+10,c
  1784  00094C  CFF3 F04F          	movff	prodl,btemp+6
  1785  000950  CFF4 F050          	movff	prodh,btemp+7
  1786  000954  0254               	mulwf	btemp+11,c
  1787  000956  50F3               	movf	prodl,w,c
  1788  000958  2650               	addwf	btemp+7,f,c
  1789  00095A  0EC0               	movlw	low _ready_queue
  1790  00095C  6E53               	movwf	btemp+10,c
  1791  00095E  0E00               	movlw	high _ready_queue
  1792  000960  6E54               	movwf	btemp+11,c
  1793  000962  0E06               	movlw	6
  1794  000964  2653               	addwf	btemp+10,f,c
  1795  000966  0E00               	movlw	0
  1796  000968  2254               	addwfc	btemp+11,f,c
  1797  00096A  504F               	movf	btemp+6,w,c
  1798  00096C  2653               	addwf	btemp+10,f,c
  1799  00096E  5050               	movf	btemp+7,w,c
  1800  000970  2254               	addwfc	btemp+11,f,c
  1801  000972  5051               	movf	btemp+8,w,c
  1802  000974  2453               	addwf	btemp+10,w,c
  1803  000976  6ED9               	movwf	fsr2l,c
  1804  000978  5052               	movf	btemp+9,w,c
  1805  00097A  2054               	addwfc	btemp+11,w,c
  1806  00097C  6EDA               	movwf	fsr2h,c
  1807  00097E  50DF               	movf	indf2,w,c
  1808  000980  6EFF               	movwf	tosu,c	;volatile
  1809  000982  0609               	decf	_size,f,c
  1810  000984  A0D8               	btfss	status,0,c
  1811  000986  060A               	decf	_size+1,f,c
  1812  000988                     l1613:
  1813  000988  5009               	movf	_size,w,c
  1814  00098A  100A               	iorwf	_size+1,w,c
  1815  00098C  A4D8               	btfss	status,2,c
  1816  00098E  D76E               	goto	l127
  1817  000990                     u490:
  1818                           
  1819                           ;kernel.c: 75:   INTCONbits.GIE = 1;
  1820  000990  8EF2               	bsf	4082,7,c	;volatile
  1821                           
  1822                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  1823  000992  52E5               	movf	postdec1,f,c
  1824  000994  0012               	return		;funcret
  1825  000996                     __end_of_dispatcher:
  1826                           	opt callstack 0
  1827                           
  1828 ;; *************** function _scheduler *****************
  1829 ;; Defined at:
  1830 ;;		line 58 in file "kernel.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  2  [STACK] unsigned int 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1844 ;;      Params:         0       0       0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:   12
  1851 ;; This function calls:
  1852 ;;		_round_robin
  1853 ;; This function is called by:
  1854 ;;		_dispatcher
  1855 ;; This function uses a reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text8
  1859  001922                     __ptext8:
  1860                           	opt callstack 0
  1861  001922                     _scheduler:
  1862                           	opt callstack 11
  1863                           
  1864                           ;kernel.c: 60:   return round_robin();
  1865                           
  1866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1867                           ;incstack = 0
  1868  001922  ECAF  F00A         	call	_round_robin	;wreg free
  1869                           
  1870                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  1871  001926  0012               	return		;funcret
  1872  001928                     __end_of_scheduler:
  1873                           	opt callstack 0
  1874                           
  1875 ;; *************** function _round_robin *****************
  1876 ;; Defined at:
  1877 ;;		line 78 in file "kernel.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  next_task_to    2  [STACK] int 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  2  [STACK] unsigned int 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1891 ;;      Params:         0       0       0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:   11
  1898 ;; This function calls:
  1899 ;;		___lwmod
  1900 ;; This function is called by:
  1901 ;;		_ISR_timer0
  1902 ;;		_scheduler
  1903 ;; This function uses a reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text9
  1907  00155E                     __ptext9:
  1908                           	opt callstack 0
  1909  00155E                     _round_robin:
  1910                           	opt callstack 0
  1911                           
  1912                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1913  00155E  52E6               	movf	postinc1,f,c
  1914  001560  52E6               	movf	postinc1,f,c
  1915                           
  1916                           ;kernel.c: 79:   int next_task_to_run = ready_queue.task_running;
  1917                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1918                           
  1919                           ;incstack = 0
  1920  001562  0EFE               	movlw	-2
  1921  001564  C356  FFE3         	movff	_ready_queue+662,plusw1
  1922  001568  0EFF               	movlw	-1
  1923  00156A  C357  FFE3         	movff	_ready_queue+663,plusw1
  1924  00156E                     l1735:
  1925                           
  1926                           ;kernel.c: 82:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  1927  00156E  EE23  F054         	lfsr	2,_ready_queue+660
  1928  001572  CFDE F053          	movff	postinc2,btemp+10
  1929  001576  CFDD F054          	movff	postdec2,btemp+11
  1930  00157A  C053  FFE6         	movff	btemp+10,postinc1
  1931  00157E  C054  FFE6         	movff	btemp+11,postinc1
  1932                           
  1933                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  1934  001582  0EFC               	movlw	-4
  1935  001584  50E3               	movf	plusw1,w,c
  1936  001586  0F01               	addlw	1
  1937  001588  6E53               	movwf	btemp+10,c
  1938  00158A  0EFD               	movlw	-3
  1939  00158C  CFE3 F054          	movff	plusw1,btemp+11
  1940  001590  0E00               	movlw	0
  1941  001592  2254               	addwfc	btemp+11,f,c
  1942  001594  C053  FFE6         	movff	btemp+10,postinc1
  1943  001598  C054  FFE6         	movff	btemp+11,postinc1
  1944  00159C  EC06  F00A         	call	___lwmod	;wreg free
  1945                           
  1946                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1947  0015A0  0EFE               	movlw	-2
  1948  0015A2  C049  FFE3         	movff	btemp,plusw1
  1949  0015A6  0EFF               	movlw	-1
  1950  0015A8  C04A  FFE3         	movff	btemp+1,plusw1
  1951                           
  1952                           ;kernel.c: 83:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  1953                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1954  0015AC  0EFE               	movlw	-2
  1955  0015AE  CFE3 F053          	movff	plusw1,btemp+10
  1956  0015B2  0EFF               	movlw	-1
  1957  0015B4  CFE3 F054          	movff	plusw1,btemp+11
  1958  0015B8  0E6E               	movlw	110
  1959  0015BA  0253               	mulwf	btemp+10,c
  1960  0015BC  CFF3 F051          	movff	prodl,btemp+8
  1961  0015C0  CFF4 F052          	movff	prodh,btemp+9
  1962  0015C4  0254               	mulwf	btemp+11,c
  1963  0015C6  50F3               	movf	prodl,w,c
  1964  0015C8  2652               	addwf	btemp+9,f,c
  1965  0015CA  0EC8               	movlw	low (_ready_queue+8)
  1966  0015CC  2451               	addwf	btemp+8,w,c
  1967  0015CE  6ED9               	movwf	fsr2l,c
  1968  0015D0  0E00               	movlw	high (_ready_queue+8)
  1969  0015D2  2052               	addwfc	btemp+9,w,c
  1970  0015D4  6EDA               	movwf	fsr2h,c
  1971  0015D6  50DF               	movf	indf2,w,c
  1972  0015D8  A4D8               	btfss	status,2,c
  1973  0015DA  D7C9               	goto	l1735
  1974                           
  1975                           ;kernel.c: 85:   return next_task_to_run;
  1976                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1977  0015DC  0EFE               	movlw	-2
  1978  0015DE  CFE3 F049          	movff	plusw1,btemp
  1979  0015E2  0EFF               	movlw	-1
  1980  0015E4  CFE3 F04A          	movff	plusw1,btemp+1
  1981                           
  1982                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  1983  0015E8  52E5               	movf	postdec1,f,c
  1984  0015EA  52E5               	movf	postdec1,f,c
  1985  0015EC  0012               	return		;funcret
  1986  0015EE                     __end_of_round_robin:
  1987                           	opt callstack 0
  1988                           
  1989 ;; *************** function ___lwmod *****************
  1990 ;; Defined at:
  1991 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  dividend        2  [STACK] unsigned int 
  1994 ;;  divisor         2  [STACK] unsigned int 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  counter         1  [STACK] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  2  [STACK] unsigned int 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2006 ;;      Params:         0       0       0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:   10
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_round_robin
  2017 ;;		_sem_wait
  2018 ;;		_sem_post
  2019 ;; This function uses a reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text10
  2023  00140C                     __ptext10:
  2024                           	opt callstack 0
  2025  00140C                     ___lwmod:
  2026                           	opt callstack 0
  2027                           
  2028                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2029  00140C  52E6               	movf	postinc1,f,c
  2030                           
  2031                           ;stkvar	_divisor @ sp[(-1)+-4]
  2032                           
  2033                           ;incstack = 0
  2034  00140E  0EFB               	movlw	-5
  2035  001410  CFE3 F049          	movff	plusw1,btemp
  2036  001414  0EFC               	movlw	-4
  2037  001416  50E3               	movf	plusw1,w,c
  2038  001418  1049               	iorwf	btemp,w,c
  2039  00141A  B4D8               	btfsc	status,2,c
  2040  00141C  D04A               	goto	u570
  2041                           
  2042                           ;stkvar	_counter @ sp[(-1)+0]
  2043  00141E  0EFF               	movlw	-1
  2044  001420  6AE3               	clrf	plusw1,c
  2045  001422  D010               	goto	L1
  2046  001424                     l1701:
  2047                           
  2048                           ;stkvar	_divisor @ sp[(-1)+-4]
  2049  001424  0EFB               	movlw	-5
  2050  001426  50E3               	movf	plusw1,w,c
  2051  001428  90D8               	bcf	status,0,c
  2052  00142A  34E8               	rlcf	wreg,w,c
  2053  00142C  6E49               	movwf	btemp,c
  2054  00142E  0EFB               	movlw	-5
  2055  001430  C049  FFE3         	movff	btemp,plusw1
  2056  001434  0EFC               	movlw	-4
  2057  001436  50E3               	movf	plusw1,w,c
  2058  001438  34E8               	rlcf	wreg,w,c
  2059  00143A  6E49               	movwf	btemp,c
  2060  00143C  0EFC               	movlw	-4
  2061  00143E  C049  FFE3         	movff	btemp,plusw1
  2062                           
  2063                           ;stkvar	_counter @ sp[(-1)+0]
  2064  001442  0EFF               	movlw	-1
  2065  001444                     L1:
  2066  001444  2AE3               	incf	plusw1,f,c
  2067                           
  2068                           ;stkvar	_divisor @ sp[(-1)+-4]
  2069  001446  0EFC               	movlw	-4
  2070  001448  AEE3               	btfss	plusw1,7,c
  2071  00144A  D7EC               	goto	l1701
  2072  00144C                     u550:
  2073                           
  2074                           ;stkvar	_divisor @ sp[(-1)+-4]
  2075  00144C  0EFB               	movlw	-5
  2076  00144E  CFE3 F053          	movff	plusw1,btemp+10
  2077  001452  0EFC               	movlw	-4
  2078  001454  CFE3 F054          	movff	plusw1,btemp+11
  2079                           
  2080                           ;stkvar	_dividend @ sp[(-1)+-2]
  2081  001458  0EFD               	movlw	-3
  2082  00145A  CFE3 F051          	movff	plusw1,btemp+8
  2083  00145E  0EFE               	movlw	-2
  2084  001460  CFE3 F052          	movff	plusw1,btemp+9
  2085  001464  5053               	movf	btemp+10,w,c
  2086  001466  5C51               	subwf	btemp+8,w,c
  2087  001468  5054               	movf	btemp+11,w,c
  2088  00146A  5852               	subwfb	btemp+9,w,c
  2089  00146C  A0D8               	btfss	status,0,c
  2090  00146E  D012               	goto	l1711
  2091                           
  2092                           ;stkvar	_divisor @ sp[(-1)+-4]
  2093                           ;stkvar	_dividend @ sp[(-1)+-2]
  2094  001470  0EFD               	movlw	-3
  2095  001472  50E3               	movf	plusw1,w,c
  2096  001474  6E49               	movwf	btemp,c
  2097  001476  0EFB               	movlw	-5
  2098  001478  50E3               	movf	plusw1,w,c
  2099  00147A  5E49               	subwf	btemp,f,c
  2100  00147C  0EFD               	movlw	-3
  2101  00147E  C049  FFE3         	movff	btemp,plusw1
  2102  001482  0EFE               	movlw	-2
  2103  001484  50E3               	movf	plusw1,w,c
  2104  001486  6E49               	movwf	btemp,c
  2105  001488  0EFC               	movlw	-4
  2106  00148A  50E3               	movf	plusw1,w,c
  2107  00148C  5A49               	subwfb	btemp,f,c
  2108  00148E  0EFE               	movlw	-2
  2109  001490  C049  FFE3         	movff	btemp,plusw1
  2110  001494                     l1711:
  2111                           
  2112                           ;stkvar	_divisor @ sp[(-1)+-4]
  2113  001494  90D8               	bcf	status,0,c
  2114  001496  0EFC               	movlw	-4
  2115  001498  32E3               	rrcf	plusw1,f,c
  2116  00149A  0EFB               	movlw	-5
  2117  00149C  32E3               	rrcf	plusw1,f,c
  2118                           
  2119                           ;stkvar	_counter @ sp[(-1)+0]
  2120  00149E  0EFF               	movlw	-1
  2121  0014A0  50E3               	movf	plusw1,w,c
  2122  0014A2  6E49               	movwf	btemp,c
  2123  0014A4  0E01               	movlw	1
  2124  0014A6  5E49               	subwf	btemp,f,c
  2125  0014A8  0EFF               	movlw	-1
  2126  0014AA  C049  FFE3         	movff	btemp,plusw1
  2127  0014AE  A4D8               	btfss	status,2,c
  2128  0014B0  D7CD               	goto	u550
  2129  0014B2                     u570:
  2130                           
  2131                           ;stkvar	_dividend @ sp[(-1)+-2]
  2132  0014B2  0EFD               	movlw	-3
  2133  0014B4  CFE3 F049          	movff	plusw1,btemp
  2134  0014B8  0EFE               	movlw	-2
  2135  0014BA  CFE3 F04A          	movff	plusw1,btemp+1
  2136                           
  2137                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2138  0014BE  0EFB               	movlw	251
  2139  0014C0  26E1               	addwf	fsr1l,f,c
  2140  0014C2  0EFF               	movlw	255
  2141  0014C4  22E2               	addwfc	fsr1h,f,c
  2142  0014C6  0012               	return		;funcret
  2143  0014C8                     __end_of___lwmod:
  2144                           	opt callstack 0
  2145                           
  2146 ;; *************** function _config_timer0 *****************
  2147 ;; Defined at:
  2148 ;;		line 23 in file "int0_test.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1  [STACK] void 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2162 ;;      Params:         0       0       0       0       0       0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0
  2164 ;;      Temps:          0       0       0       0       0       0       0
  2165 ;;      Totals:         0       0       0       0       0       0       0
  2166 ;;Total ram usage:        0 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:   10
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_main
  2173 ;; This function uses a reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text11
  2177  001900                     __ptext11:
  2178                           	opt callstack 0
  2179  001900                     _config_timer0:
  2180                           	opt callstack 20
  2181                           
  2182                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  2183                           
  2184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2185                           ;incstack = 0
  2186  001900  9AD5               	bcf	4053,5,c	;volatile
  2187                           
  2188                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  2189  001902  96D5               	bcf	4053,3,c	;volatile
  2190                           
  2191                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  2192  001904  0E07               	movlw	7
  2193  001906  12D5               	iorwf	4053,f,c	;volatile
  2194                           
  2195                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  2196  001908  8CF2               	bsf	4082,6,c	;volatile
  2197                           
  2198                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  2199  00190A  8AF2               	bsf	4082,5,c	;volatile
  2200                           
  2201                           ;int0_test.c: 33:   TMR0L = 252;
  2202  00190C  0EFC               	movlw	252
  2203  00190E  6ED6               	movwf	4054,c	;volatile
  2204                           
  2205                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2206  001910  0012               	return		;funcret
  2207  001912                     __end_of_config_timer0:
  2208                           	opt callstack 0
  2209                           
  2210 ;; *************** function _config_INT0 *****************
  2211 ;; Defined at:
  2212 ;;		line 13 in file "int0_test.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1  [STACK] void 
  2219 ;; Registers used:
  2220 ;;		None
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2226 ;;      Params:         0       0       0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:   10
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text12
  2241  001912                     __ptext12:
  2242                           	opt callstack 0
  2243  001912                     _config_INT0:
  2244                           	opt callstack 20
  2245                           
  2246                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2247                           
  2248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2249                           ;incstack = 0
  2250  001912  9095               	bcf	3989,0,c	;volatile
  2251                           
  2252                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2253  001914  8EF2               	bsf	4082,7,c	;volatile
  2254                           
  2255                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2256  001916  88F2               	bsf	4082,4,c	;volatile
  2257                           
  2258                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2259  001918  88F2               	bsf	4082,4,c	;volatile
  2260                           
  2261                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2262  00191A  92F2               	bcf	4082,1,c	;volatile
  2263                           
  2264                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2265  00191C  9EF1               	bcf	4081,7,c	;volatile
  2266                           
  2267                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2268  00191E  9CF1               	bcf	4081,6,c	;volatile
  2269                           
  2270                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2271  001920  0012               	return		;funcret
  2272  001922                     __end_of_config_INT0:
  2273                           	opt callstack 0
  2274                           
  2275 ;; *************** function _task_idle *****************
  2276 ;; Defined at:
  2277 ;;		line 117 in file "kernel.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1  [STACK] void 
  2284 ;; Registers used:
  2285 ;;		None
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2291 ;;      Params:         0       0       0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    3
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_lunos_init
  2302 ;; This function uses a reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text13
  2306  001928                     __ptext13:
  2307                           	opt callstack 0
  2308  001928                     _task_idle:
  2309                           	opt callstack 23
  2310                           
  2311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2312                           ;incstack = 0
  2313                           ;kernel.c: 119:   while (1) __nop();
  2314  001928  F000               	nop	
  2315  00192A  D7FE               	goto	_task_idle
  2316  00192C                     __end_of_task_idle:
  2317                           	opt callstack 0
  2318                           
  2319 ;; *************** function _count_bottles *****************
  2320 ;; Defined at:
  2321 ;;		line 65 in file "tasks.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  bottle          1  [STACK] struct .
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1  [STACK] void 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2335 ;;      Params:         0       0       0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    8
  2342 ;; This function calls:
  2343 ;;		_lunos_delayTask
  2344 ;;		_sem_post
  2345 ;;		_sem_wait
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text14
  2352  0015EE                     __ptext14:
  2353                           	opt callstack 0
  2354  0015EE                     _count_bottles:
  2355                           	opt callstack 0
  2356                           
  2357                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2358  0015EE  52E6               	movf	postinc1,f,c
  2359  0015F0                     l296:
  2360                           
  2361                           ;tasks.c: 67:         sem_wait(&count_sem);
  2362  0015F0  0E2D               	movlw	low _count_sem
  2363  0015F2  6EE6               	movwf	postinc1,c
  2364  0015F4  0E00               	movlw	high _count_sem
  2365  0015F6  6EE6               	movwf	postinc1,c
  2366  0015F8  EC67  F008         	call	_sem_wait	;wreg free
  2367                           
  2368                           ;tasks.c: 68:         PORTDbits.RD4 = 0;
  2369  0015FC  9883               	bcf	3971,4,c	;volatile
  2370                           
  2371                           ;tasks.c: 69:         if (global_buffer.p_state != BUSY_) {
  2372  0015FE  0406               	decf	_global_buffer+5,w,c
  2373  001600  A4D8               	btfss	status,2,c
  2374  001602  D026               	goto	l1911
  2375  001604  D02D               	goto	u70_20
  2376  001606                     l300:
  2377  001606  BC82               	btfsc	3970,6,c	;volatile
  2378  001608  D7FE               	goto	l300
  2379                           
  2380                           ;tasks.c: 72:                 PORTCbits.RC7 = 0;
  2381  00160A  9E82               	bcf	3970,7,c	;volatile
  2382                           
  2383                           ;tasks.c: 73:                 lunos_delayTask(300);
  2384  00160C  0E2C               	movlw	44
  2385  00160E  6EE6               	movwf	postinc1,c
  2386  001610  0E01               	movlw	1
  2387  001612  6EE6               	movwf	postinc1,c
  2388  001614  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  2389                           
  2390                           ;tasks.c: 74:                 t_bottle bottle;;tasks.c: 75:                 global_buffe
      +                          r.bottles[global_buffer.count] = bottle;
  2391                           ;stkvar	_bottle @ sp[(-1)+0]
  2392  001618  C001  F053         	movff	_global_buffer,btemp+10
  2393  00161C  C002  F054         	movff	_global_buffer+1,btemp+11
  2394  001620  0E03               	movlw	low (_global_buffer+2)
  2395  001622  2453               	addwf	btemp+10,w,c
  2396  001624  6ED9               	movwf	fsr2l,c
  2397  001626  0E00               	movlw	high (_global_buffer+2)
  2398  001628  2054               	addwfc	btemp+11,w,c
  2399  00162A  6EDA               	movwf	fsr2h,c
  2400  00162C  0EFF               	movlw	-1
  2401  00162E  CFE3 FFDF          	movff	plusw1,indf2
  2402                           
  2403                           ;tasks.c: 76:                 global_buffer.bottles[global_buffer.count].bottle_state = 
      +                          EMPTY;
  2404  001632  C001  F053         	movff	_global_buffer,btemp+10
  2405  001636  C002  F054         	movff	_global_buffer+1,btemp+11
  2406  00163A  0E03               	movlw	low (_global_buffer+2)
  2407  00163C  2453               	addwf	btemp+10,w,c
  2408  00163E  6ED9               	movwf	fsr2l,c
  2409  001640  0E00               	movlw	high (_global_buffer+2)
  2410  001642  2054               	addwfc	btemp+11,w,c
  2411  001644  6EDA               	movwf	fsr2h,c
  2412  001646  0E00               	movlw	0
  2413  001648  6EDF               	movwf	indf2,c
  2414                           
  2415                           ;tasks.c: 77:                 global_buffer.count += 1;
  2416  00164A  4A01               	infsnz	_global_buffer,f,c
  2417  00164C  2A02               	incf	_global_buffer+1,f,c
  2418                           
  2419                           ;tasks.c: 78:                 PORTCbits.RC7 = 1;
  2420  00164E  8E82               	bsf	3970,7,c	;volatile
  2421  001650                     l1911:
  2422                           
  2423                           ;tasks.c: 70:             while(global_buffer.count < 3){
  2424  001650  BE02               	btfsc	_global_buffer+1,7,c
  2425  001652  D7D9               	goto	l300
  2426  001654  5002               	movf	_global_buffer+1,w,c
  2427  001656  E104               	bnz	u70_20
  2428  001658  0E03               	movlw	3
  2429  00165A  5C01               	subwf	_global_buffer,w,c
  2430  00165C  A0D8               	btfss	status,0,c
  2431  00165E  D7D3               	goto	l300
  2432  001660                     u70_20:
  2433                           
  2434                           ;tasks.c: 81:         global_buffer.p_state = BUSY_;
  2435  001660  0E01               	movlw	1
  2436  001662  6E06               	movwf	_global_buffer+5,c
  2437                           
  2438                           ;tasks.c: 82:         sem_post(&fill_sem);
  2439  001664  0E1D               	movlw	low _fill_sem
  2440  001666  6EE6               	movwf	postinc1,c
  2441  001668  0E00               	movlw	high _fill_sem
  2442  00166A  6EE6               	movwf	postinc1,c
  2443  00166C  EC69  F007         	call	_sem_post	;wreg free
  2444                           
  2445                           ;tasks.c: 83:         PORTDbits.RD4 = 1;
  2446  001670  8883               	bsf	3971,4,c	;volatile
  2447  001672  D7BE               	goto	l296
  2448  001674                     __end_of_count_bottles:
  2449                           	opt callstack 0
  2450                           
  2451 ;; *************** function _sem_wait *****************
  2452 ;; Defined at:
  2453 ;;		line 20 in file "semaphore.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  s               2  [STACK] PTR struct semaphore
  2456 ;;		 -> out_sem(16), cover_sem(16), check_sem(16), fill_sem(16), 
  2457 ;;		 -> count_sem(16), r_pipe(16), w_pipe(16), 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1  [STACK] void 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2469 ;;      Params:         0       0       0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0
  2472 ;;      Totals:         0       0       0       0       0       0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    7
  2476 ;; This function calls:
  2477 ;;		___lwmod
  2478 ;;		_dispatcher
  2479 ;; This function is called by:
  2480 ;;		_pipe_write
  2481 ;;		_pipe_read
  2482 ;;		_count_bottles
  2483 ;;		_fill_bottle
  2484 ;;		_check_level
  2485 ;;		_cover_bottle
  2486 ;;		_count_out
  2487 ;; This function uses a reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text15
  2491  0010CE                     __ptext15:
  2492                           	opt callstack 0
  2493  0010CE                     _sem_wait:
  2494                           	opt callstack 18
  2495                           
  2496                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  2497                           
  2498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2499                           ;incstack = 0
  2500  0010CE  9EF2               	bcf	4082,7,c	;volatile
  2501                           
  2502                           ;semaphore.c: 23:   s->contador -= 1;
  2503                           ;stkvar	_s @ sp[(0)+-2]
  2504  0010D0  0EFE               	movlw	-2
  2505  0010D2  CFE3 FFD9          	movff	plusw1,fsr2l
  2506  0010D6  0EFF               	movlw	-1
  2507  0010D8  CFE3 FFDA          	movff	plusw1,fsr2h
  2508  0010DC  06DE               	decf	postinc2,f,c
  2509  0010DE  0E00               	movlw	0
  2510  0010E0  5ADD               	subwfb	postdec2,f,c
  2511                           
  2512                           ;semaphore.c: 24:   if (s->contador < 0) {
  2513                           ;stkvar	_s @ sp[(0)+-2]
  2514  0010E2  0EFE               	movlw	-2
  2515  0010E4  CFE3 FFD9          	movff	plusw1,fsr2l
  2516  0010E8  0EFF               	movlw	-1
  2517  0010EA  CFE3 FFDA          	movff	plusw1,fsr2h
  2518  0010EE  0E01               	movlw	1
  2519  0010F0  AEDB               	btfss	plusw2,7,c
  2520  0010F2  D059               	goto	l1683
  2521                           
  2522                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  2523  0010F4  EE23  F056         	lfsr	2,_ready_queue+662
  2524                           
  2525                           ;stkvar	_s @ sp[(0)+-2]
  2526  0010F8  0EFE               	movlw	-2
  2527  0010FA  CFE3 F053          	movff	plusw1,btemp+10
  2528  0010FE  0EFF               	movlw	-1
  2529  001100  CFE3 F054          	movff	plusw1,btemp+11
  2530  001104  0E0C               	movlw	12
  2531  001106  2453               	addwf	btemp+10,w,c
  2532  001108  6EE9               	movwf	fsr0l,c
  2533  00110A  0E00               	movlw	0
  2534  00110C  2054               	addwfc	btemp+11,w,c
  2535  00110E  6EEA               	movwf	fsr0h,c
  2536  001110  CFEE F053          	movff	postinc0,btemp+10
  2537  001114  CFED F054          	movff	postdec0,btemp+11
  2538  001118  90D8               	bcf	status,0,c
  2539  00111A  3453               	rlcf	btemp+10,w,c
  2540  00111C  6E51               	movwf	btemp+8,c
  2541  00111E  3454               	rlcf	btemp+11,w,c
  2542  001120  6E52               	movwf	btemp+9,c
  2543                           
  2544                           ;stkvar	_s @ sp[(0)+-2]
  2545  001122  0EFE               	movlw	-2
  2546  001124  50E3               	movf	plusw1,w,c
  2547  001126  2651               	addwf	btemp+8,f,c
  2548  001128  0EFF               	movlw	-1
  2549  00112A  50E3               	movf	plusw1,w,c
  2550  00112C  2252               	addwfc	btemp+9,f,c
  2551  00112E  0E02               	movlw	2
  2552  001130  2451               	addwf	btemp+8,w,c
  2553  001132  6EE9               	movwf	fsr0l,c
  2554  001134  0E00               	movlw	0
  2555  001136  2052               	addwfc	btemp+9,w,c
  2556  001138  6EEA               	movwf	fsr0h,c
  2557  00113A  CFDE FFEE          	movff	postinc2,postinc0
  2558  00113E  CFDD FFED          	movff	postdec2,postdec0
  2559                           
  2560                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 5;
  2561  001142  0E05               	movlw	5
  2562  001144  6EE6               	movwf	postinc1,c
  2563  001146  0E00               	movlw	0
  2564  001148  6EE6               	movwf	postinc1,c
  2565                           
  2566                           ;stkvar	_s @ sp[(-2)+-2]
  2567  00114A  0EFC               	movlw	-4
  2568  00114C  CFE3 F053          	movff	plusw1,btemp+10
  2569  001150  0EFD               	movlw	-3
  2570  001152  CFE3 F054          	movff	plusw1,btemp+11
  2571  001156  0E0C               	movlw	12
  2572  001158  2453               	addwf	btemp+10,w,c
  2573  00115A  6ED9               	movwf	fsr2l,c
  2574  00115C  0E00               	movlw	0
  2575  00115E  2054               	addwfc	btemp+11,w,c
  2576  001160  6EDA               	movwf	fsr2h,c
  2577  001162  CFDE F053          	movff	postinc2,btemp+10
  2578  001166  CFDD F054          	movff	postdec2,btemp+11
  2579  00116A  0E01               	movlw	1
  2580  00116C  2653               	addwf	btemp+10,f,c
  2581  00116E  0E00               	movlw	0
  2582  001170  2254               	addwfc	btemp+11,f,c
  2583  001172  C053  FFE6         	movff	btemp+10,postinc1
  2584  001176  C054  FFE6         	movff	btemp+11,postinc1
  2585  00117A  EC06  F00A         	call	___lwmod	;wreg free
  2586                           
  2587                           ;stkvar	_s @ sp[(0)+-2]
  2588  00117E  0EFE               	movlw	-2
  2589  001180  CFE3 F053          	movff	plusw1,btemp+10
  2590  001184  0EFF               	movlw	-1
  2591  001186  CFE3 F054          	movff	plusw1,btemp+11
  2592  00118A  0E0C               	movlw	12
  2593  00118C  2453               	addwf	btemp+10,w,c
  2594  00118E  6ED9               	movwf	fsr2l,c
  2595  001190  0E00               	movlw	0
  2596  001192  2054               	addwfc	btemp+11,w,c
  2597  001194  6EDA               	movwf	fsr2h,c
  2598  001196  C049  FFDE         	movff	btemp,postinc2
  2599  00119A  C04A  FFDD         	movff	btemp+1,postdec2
  2600                           
  2601                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  2602  00119E  0E05               	movlw	5
  2603  0011A0  6EE6               	movwf	postinc1,c
  2604  0011A2  EC6E  F002         	call	_dispatcher	;wreg free
  2605  0011A6                     l1683:
  2606                           
  2607                           ;semaphore.c: 30:   INTCONbits.GIE = 1;
  2608  0011A6  8EF2               	bsf	4082,7,c	;volatile
  2609                           
  2610                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2611  0011A8  52E5               	movf	postdec1,f,c
  2612  0011AA  52E5               	movf	postdec1,f,c
  2613  0011AC  0012               	return		;funcret
  2614  0011AE                     __end_of_sem_wait:
  2615                           	opt callstack 0
  2616                           
  2617 ;; *************** function _sem_post *****************
  2618 ;; Defined at:
  2619 ;;		line 33 in file "semaphore.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  s               2  [STACK] PTR struct semaphore
  2622 ;;		 -> out_sem(16), cover_sem(16), check_sem(16), fill_sem(16), 
  2623 ;;		 -> count_sem(16), r_pipe(16), w_pipe(16), 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1  [STACK] void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2635 ;;      Params:         0       0       0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0
  2638 ;;      Totals:         0       0       0       0       0       0       0
  2639 ;;Total ram usage:        0 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    4
  2642 ;; This function calls:
  2643 ;;		___lwmod
  2644 ;; This function is called by:
  2645 ;;		_pipe_write
  2646 ;;		_pipe_read
  2647 ;;		_count_bottles
  2648 ;;		_fill_bottle
  2649 ;;		_check_level
  2650 ;;		_cover_bottle
  2651 ;;		_count_out
  2652 ;; This function uses a reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text16
  2656  000ED2                     __ptext16:
  2657                           	opt callstack 0
  2658  000ED2                     _sem_post:
  2659                           	opt callstack 21
  2660                           
  2661                           ;semaphore.c: 34:   INTCONbits.GIE = 0;
  2662                           
  2663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2664                           ;incstack = 0
  2665  000ED2  9EF2               	bcf	4082,7,c	;volatile
  2666                           
  2667                           ;semaphore.c: 36:   s->contador += 1;
  2668                           ;stkvar	_s @ sp[(0)+-2]
  2669  000ED4  0EFE               	movlw	-2
  2670  000ED6  CFE3 FFD9          	movff	plusw1,fsr2l
  2671  000EDA  0EFF               	movlw	-1
  2672  000EDC  CFE3 FFDA          	movff	plusw1,fsr2h
  2673  000EE0  2ADE               	incf	postinc2,f,c
  2674  000EE2  0E00               	movlw	0
  2675  000EE4  22DD               	addwfc	postdec2,f,c
  2676                           
  2677                           ;semaphore.c: 37:   if (s->contador <= 0) {
  2678                           ;stkvar	_s @ sp[(0)+-2]
  2679  000EE6  0EFE               	movlw	-2
  2680  000EE8  CFE3 FFD9          	movff	plusw1,fsr2l
  2681  000EEC  0EFF               	movlw	-1
  2682  000EEE  CFE3 FFDA          	movff	plusw1,fsr2h
  2683  000EF2  0E01               	movlw	1
  2684  000EF4  BEDB               	btfsc	plusw2,7,c
  2685  000EF6  D006               	goto	u53_20
  2686  000EF8  0E01               	movlw	1
  2687  000EFA  50DB               	movf	plusw2,w,c
  2688  000EFC  E167               	bnz	l1695
  2689  000EFE  04DE               	decf	postinc2,w,c
  2690  000F00  B0D8               	btfsc	status,0,c
  2691  000F02  D064               	goto	l1695
  2692  000F04                     u53_20:
  2693                           
  2694                           ;semaphore.c: 38:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  2695                           ;stkvar	_s @ sp[(0)+-2]
  2696  000F04  0EFE               	movlw	-2
  2697  000F06  CFE3 F053          	movff	plusw1,btemp+10
  2698  000F0A  0EFF               	movlw	-1
  2699  000F0C  CFE3 F054          	movff	plusw1,btemp+11
  2700  000F10  0E0E               	movlw	14
  2701  000F12  2453               	addwf	btemp+10,w,c
  2702  000F14  6ED9               	movwf	fsr2l,c
  2703  000F16  0E00               	movlw	0
  2704  000F18  2054               	addwfc	btemp+11,w,c
  2705  000F1A  6EDA               	movwf	fsr2h,c
  2706  000F1C  CFDE F053          	movff	postinc2,btemp+10
  2707  000F20  CFDD F054          	movff	postdec2,btemp+11
  2708  000F24  90D8               	bcf	status,0,c
  2709  000F26  3453               	rlcf	btemp+10,w,c
  2710  000F28  6E51               	movwf	btemp+8,c
  2711  000F2A  3454               	rlcf	btemp+11,w,c
  2712  000F2C  6E52               	movwf	btemp+9,c
  2713                           
  2714                           ;stkvar	_s @ sp[(0)+-2]
  2715  000F2E  0EFE               	movlw	-2
  2716  000F30  50E3               	movf	plusw1,w,c
  2717  000F32  2651               	addwf	btemp+8,f,c
  2718  000F34  0EFF               	movlw	-1
  2719  000F36  50E3               	movf	plusw1,w,c
  2720  000F38  2252               	addwfc	btemp+9,f,c
  2721  000F3A  0E02               	movlw	2
  2722  000F3C  2451               	addwf	btemp+8,w,c
  2723  000F3E  6ED9               	movwf	fsr2l,c
  2724  000F40  0E00               	movlw	0
  2725  000F42  2052               	addwfc	btemp+9,w,c
  2726  000F44  6EDA               	movwf	fsr2h,c
  2727  000F46  CFDE F053          	movff	postinc2,btemp+10
  2728  000F4A  CFDD F054          	movff	postdec2,btemp+11
  2729  000F4E  0E6E               	movlw	110
  2730  000F50  0253               	mulwf	btemp+10,c
  2731  000F52  CFF3 F051          	movff	prodl,btemp+8
  2732  000F56  CFF4 F052          	movff	prodh,btemp+9
  2733  000F5A  0254               	mulwf	btemp+11,c
  2734  000F5C  50F3               	movf	prodl,w,c
  2735  000F5E  2652               	addwf	btemp+9,f,c
  2736  000F60  0EC8               	movlw	low (_ready_queue+8)
  2737  000F62  2451               	addwf	btemp+8,w,c
  2738  000F64  6ED9               	movwf	fsr2l,c
  2739  000F66  0E00               	movlw	high (_ready_queue+8)
  2740  000F68  2052               	addwfc	btemp+9,w,c
  2741  000F6A  6EDA               	movwf	fsr2h,c
  2742  000F6C  0E00               	movlw	0
  2743  000F6E  6EDF               	movwf	indf2,c
  2744                           
  2745                           ;semaphore.c: 39:     s->task_to_ready = (s->task_to_ready + 1) % 5;
  2746  000F70  0E05               	movlw	5
  2747  000F72  6EE6               	movwf	postinc1,c
  2748  000F74  0E00               	movlw	0
  2749  000F76  6EE6               	movwf	postinc1,c
  2750                           
  2751                           ;stkvar	_s @ sp[(-2)+-2]
  2752  000F78  0EFC               	movlw	-4
  2753  000F7A  CFE3 F053          	movff	plusw1,btemp+10
  2754  000F7E  0EFD               	movlw	-3
  2755  000F80  CFE3 F054          	movff	plusw1,btemp+11
  2756  000F84  0E0E               	movlw	14
  2757  000F86  2453               	addwf	btemp+10,w,c
  2758  000F88  6ED9               	movwf	fsr2l,c
  2759  000F8A  0E00               	movlw	0
  2760  000F8C  2054               	addwfc	btemp+11,w,c
  2761  000F8E  6EDA               	movwf	fsr2h,c
  2762  000F90  CFDE F053          	movff	postinc2,btemp+10
  2763  000F94  CFDD F054          	movff	postdec2,btemp+11
  2764  000F98  0E01               	movlw	1
  2765  000F9A  2653               	addwf	btemp+10,f,c
  2766  000F9C  0E00               	movlw	0
  2767  000F9E  2254               	addwfc	btemp+11,f,c
  2768  000FA0  C053  FFE6         	movff	btemp+10,postinc1
  2769  000FA4  C054  FFE6         	movff	btemp+11,postinc1
  2770  000FA8  EC06  F00A         	call	___lwmod	;wreg free
  2771                           
  2772                           ;stkvar	_s @ sp[(0)+-2]
  2773  000FAC  0EFE               	movlw	-2
  2774  000FAE  CFE3 F053          	movff	plusw1,btemp+10
  2775  000FB2  0EFF               	movlw	-1
  2776  000FB4  CFE3 F054          	movff	plusw1,btemp+11
  2777  000FB8  0E0E               	movlw	14
  2778  000FBA  2453               	addwf	btemp+10,w,c
  2779  000FBC  6ED9               	movwf	fsr2l,c
  2780  000FBE  0E00               	movlw	0
  2781  000FC0  2054               	addwfc	btemp+11,w,c
  2782  000FC2  6EDA               	movwf	fsr2h,c
  2783  000FC4  C049  FFDE         	movff	btemp,postinc2
  2784  000FC8  C04A  FFDD         	movff	btemp+1,postdec2
  2785  000FCC                     l1695:
  2786                           
  2787                           ;semaphore.c: 43:   INTCONbits.GIE = 1;
  2788  000FCC  8EF2               	bsf	4082,7,c	;volatile
  2789                           
  2790                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2791  000FCE  52E5               	movf	postdec1,f,c
  2792  000FD0  52E5               	movf	postdec1,f,c
  2793  000FD2  0012               	return		;funcret
  2794  000FD4                     __end_of_sem_post:
  2795                           	opt callstack 0
  2796                           
  2797 ;; *************** function _lunos_delayTask *****************
  2798 ;; Defined at:
  2799 ;;		line 31 in file "kernel.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  time            2  [STACK] unsigned int 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1  [STACK] void 
  2806 ;; Registers used:
  2807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2813 ;;      Params:         0       0       0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0
  2816 ;;      Totals:         0       0       0       0       0       0       0
  2817 ;;Total ram usage:        0 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    7
  2820 ;; This function calls:
  2821 ;;		_dispatcher
  2822 ;; This function is called by:
  2823 ;;		_count_bottles
  2824 ;;		_fill_bottle
  2825 ;;		_check_level
  2826 ;;		_cover_bottle
  2827 ;;		_count_out
  2828 ;; This function uses a reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text17
  2832  0017E2                     __ptext17:
  2833                           	opt callstack 0
  2834  0017E2                     _lunos_delayTask:
  2835                           	opt callstack 18
  2836                           
  2837                           ;kernel.c: 32:   INTCONbits.GIE = 0;
  2838                           
  2839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2840                           ;incstack = 0
  2841  0017E2  9EF2               	bcf	4082,7,c	;volatile
  2842                           
  2843                           ;kernel.c: 34:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  2844                           ;stkvar	_time @ sp[(0)+-2]
  2845  0017E4  50E1               	movf	fsr1l,w,c
  2846  0017E6  0FFE               	addlw	-2
  2847  0017E8  6ED9               	movwf	fsr2l,c
  2848  0017EA  50E2               	movf	fsr1h,w,c
  2849  0017EC  6EDA               	movwf	fsr2h,c
  2850  0017EE  0EFF               	movlw	255
  2851  0017F0  22DA               	addwfc	fsr2h,f,c
  2852  0017F2  EE03  F056         	lfsr	0,_ready_queue+662
  2853  0017F6  CFEE F053          	movff	postinc0,btemp+10
  2854  0017FA  CFED F054          	movff	postdec0,btemp+11
  2855  0017FE  0E6E               	movlw	110
  2856  001800  0253               	mulwf	btemp+10,c
  2857  001802  CFF3 F051          	movff	prodl,btemp+8
  2858  001806  CFF4 F052          	movff	prodh,btemp+9
  2859  00180A  0254               	mulwf	btemp+11,c
  2860  00180C  50F3               	movf	prodl,w,c
  2861  00180E  2652               	addwf	btemp+9,f,c
  2862  001810  0E2C               	movlw	low (_ready_queue+108)
  2863  001812  2451               	addwf	btemp+8,w,c
  2864  001814  6EE9               	movwf	fsr0l,c
  2865  001816  0E01               	movlw	high (_ready_queue+108)
  2866  001818  2052               	addwfc	btemp+9,w,c
  2867  00181A  6EEA               	movwf	fsr0h,c
  2868  00181C  CFDE FFEE          	movff	postinc2,postinc0
  2869  001820  CFDD FFED          	movff	postdec2,postdec0
  2870                           
  2871                           ;kernel.c: 35:   dispatcher(WAITING);
  2872  001824  0E02               	movlw	2
  2873  001826  6EE6               	movwf	postinc1,c
  2874  001828  EC6E  F002         	call	_dispatcher	;wreg free
  2875                           
  2876                           ;kernel.c: 37:   INTCONbits.GIE = 1;
  2877  00182C  8EF2               	bsf	4082,7,c	;volatile
  2878                           
  2879                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2880  00182E  52E5               	movf	postdec1,f,c
  2881  001830  52E5               	movf	postdec1,f,c
  2882  001832  0012               	return		;funcret
  2883  001834                     __end_of_lunos_delayTask:
  2884                           	opt callstack 0
  2885                           
  2886 ;; *************** function _fill_bottle *****************
  2887 ;; Defined at:
  2888 ;;		line 87 in file "tasks.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1  [STACK] void 
  2895 ;; Registers used:
  2896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2902 ;;      Params:         0       0       0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    8
  2909 ;; This function calls:
  2910 ;;		_lunos_delayTask
  2911 ;;		_sem_post
  2912 ;;		_sem_wait
  2913 ;; This function is called by:
  2914 ;;		_main
  2915 ;; This function uses a reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text18
  2919  001834                     __ptext18:
  2920                           	opt callstack 0
  2921  001834                     _fill_bottle:
  2922                           	opt callstack 18
  2923                           
  2924                           ;tasks.c: 89:         sem_wait(&fill_sem);
  2925                           
  2926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2927                           ;incstack = 0
  2928                           ;tasks.c: 88:     while(1){
  2929  001834  0E1D               	movlw	low _fill_sem
  2930  001836  6EE6               	movwf	postinc1,c
  2931  001838  0E00               	movlw	high _fill_sem
  2932  00183A  6EE6               	movwf	postinc1,c
  2933  00183C  EC67  F008         	call	_sem_wait	;wreg free
  2934                           
  2935                           ;tasks.c: 90:         PORTDbits.RD5 = 0;
  2936  001840  9A83               	bcf	3971,5,c	;volatile
  2937                           
  2938                           ;tasks.c: 91:         PORTCbits.RC7 = 0;
  2939  001842  9E82               	bcf	3970,7,c	;volatile
  2940                           
  2941                           ;tasks.c: 92:         lunos_delayTask(300);
  2942  001844  0E2C               	movlw	44
  2943  001846  6EE6               	movwf	postinc1,c
  2944  001848  0E01               	movlw	1
  2945  00184A  6EE6               	movwf	postinc1,c
  2946  00184C  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  2947                           
  2948                           ;tasks.c: 93:         PORTCbits.RC7 = 1;
  2949  001850  8E82               	bsf	3970,7,c	;volatile
  2950                           
  2951                           ;tasks.c: 94:         lunos_delayTask(500);
  2952  001852  0EF4               	movlw	244
  2953  001854  6EE6               	movwf	postinc1,c
  2954  001856  0E01               	movlw	1
  2955  001858  6EE6               	movwf	postinc1,c
  2956  00185A  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  2957  00185E                     l310:
  2958  00185E  B082               	btfsc	3970,0,c	;volatile
  2959  001860  A282               	btfss	3970,1,c	;volatile
  2960  001862  D002               	goto	u73_20
  2961  001864  B482               	btfsc	3970,2,c	;volatile
  2962  001866  D7FB               	goto	l310
  2963  001868                     u73_20:
  2964                           
  2965                           ;tasks.c: 96:         lunos_delayTask(200);
  2966  001868  0EC8               	movlw	200
  2967  00186A  6EE6               	movwf	postinc1,c
  2968  00186C  0E00               	movlw	0
  2969  00186E  6EE6               	movwf	postinc1,c
  2970  001870  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  2971                           
  2972                           ;tasks.c: 97:         sem_post(&check_sem);
  2973  001874  0E0D               	movlw	low _check_sem
  2974  001876  6EE6               	movwf	postinc1,c
  2975  001878  0E00               	movlw	high _check_sem
  2976  00187A  6EE6               	movwf	postinc1,c
  2977  00187C  EC69  F007         	call	_sem_post	;wreg free
  2978                           
  2979                           ;tasks.c: 98:         PORTDbits.RD5 = 1;
  2980  001880  8A83               	bsf	3971,5,c	;volatile
  2981  001882  D7D8               	goto	_fill_bottle
  2982  001884                     __end_of_fill_bottle:
  2983                           	opt callstack 0
  2984                           
  2985 ;; *************** function _check_level *****************
  2986 ;; Defined at:
  2987 ;;		line 102 in file "tasks.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1  [STACK] void 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3001 ;;      Params:         0       0       0       0       0       0       0
  3002 ;;      Locals:         0       0       0       0       0       0       0
  3003 ;;      Temps:          0       0       0       0       0       0       0
  3004 ;;      Totals:         0       0       0       0       0       0       0
  3005 ;;Total ram usage:        0 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    8
  3008 ;; This function calls:
  3009 ;;		_lunos_delayTask
  3010 ;;		_sem_post
  3011 ;;		_sem_wait
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text19
  3018  001674                     __ptext19:
  3019                           	opt callstack 0
  3020  001674                     _check_level:
  3021                           	opt callstack 18
  3022                           
  3023                           ;tasks.c: 104:         sem_wait(&check_sem);
  3024                           
  3025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3026                           ;incstack = 0
  3027                           ;tasks.c: 103:     while(1){
  3028  001674  0E0D               	movlw	low _check_sem
  3029  001676  6EE6               	movwf	postinc1,c
  3030  001678  0E00               	movlw	high _check_sem
  3031  00167A  6EE6               	movwf	postinc1,c
  3032  00167C  EC67  F008         	call	_sem_wait	;wreg free
  3033                           
  3034                           ;tasks.c: 105:         PORTDbits.RD6 = 0;
  3035  001680  9C83               	bcf	3971,6,c	;volatile
  3036                           
  3037                           ;tasks.c: 106:         PORTCbits.RC7 = 0;
  3038  001682  9E82               	bcf	3970,7,c	;volatile
  3039                           
  3040                           ;tasks.c: 107:         lunos_delayTask(500);
  3041  001684  0EF4               	movlw	244
  3042  001686  6EE6               	movwf	postinc1,c
  3043  001688  0E01               	movlw	1
  3044  00168A  6EE6               	movwf	postinc1,c
  3045  00168C  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  3046                           
  3047                           ;tasks.c: 108:         PORTCbits.RC7 = 1;
  3048  001690  8E82               	bsf	3970,7,c	;volatile
  3049                           
  3050                           ;tasks.c: 109:         lunos_delayTask(500);
  3051  001692  0EF4               	movlw	244
  3052  001694  6EE6               	movwf	postinc1,c
  3053  001696  0E01               	movlw	1
  3054  001698  6EE6               	movwf	postinc1,c
  3055  00169A  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  3056  00169E                     l321:
  3057  00169E  B283               	btfsc	3971,1,c	;volatile
  3058  0016A0  A483               	btfss	3971,2,c	;volatile
  3059  0016A2  D002               	goto	u76_20
  3060  0016A4  B683               	btfsc	3971,3,c	;volatile
  3061  0016A6  D7FB               	goto	l321
  3062  0016A8                     u76_20:
  3063                           
  3064                           ;tasks.c: 111:         lunos_delayTask(200);
  3065  0016A8  0EC8               	movlw	200
  3066  0016AA  6EE6               	movwf	postinc1,c
  3067  0016AC  0E00               	movlw	0
  3068  0016AE  6EE6               	movwf	postinc1,c
  3069  0016B0  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  3070                           
  3071                           ;tasks.c: 113:         if (LATDbits.LATD1)
  3072  0016B4  A28C               	btfss	3980,1,c	;volatile
  3073  0016B6  D002               	goto	l1955
  3074                           
  3075                           ;tasks.c: 114:             global_buffer.bottles[0].bottle_state = EMPTY;
  3076  0016B8  6A03               	clrf	_global_buffer+2,c
  3077  0016BA  D002               	goto	l1957
  3078  0016BC                     l1955:
  3079                           
  3080                           ;tasks.c: 116:             global_buffer.bottles[0].bottle_state = FULL;
  3081  0016BC  0E01               	movlw	1
  3082  0016BE  6E03               	movwf	_global_buffer+2,c
  3083  0016C0                     l1957:
  3084                           
  3085                           ;tasks.c: 118:         if (PORTDbits.RD2)
  3086  0016C0  A483               	btfss	3971,2,c	;volatile
  3087  0016C2  D002               	goto	l1961
  3088                           
  3089                           ;tasks.c: 119:             global_buffer.bottles[1].bottle_state = EMPTY;
  3090  0016C4  6A04               	clrf	_global_buffer+3,c
  3091  0016C6  D002               	goto	l1963
  3092  0016C8                     l1961:
  3093                           
  3094                           ;tasks.c: 121:             global_buffer.bottles[1].bottle_state = FULL;
  3095  0016C8  0E01               	movlw	1
  3096  0016CA  6E04               	movwf	_global_buffer+3,c
  3097  0016CC                     l1963:
  3098                           
  3099                           ;tasks.c: 123:         if (PORTDbits.RD3)
  3100  0016CC  A683               	btfss	3971,3,c	;volatile
  3101  0016CE  D002               	goto	l1967
  3102                           
  3103                           ;tasks.c: 124:             global_buffer.bottles[2].bottle_state = EMPTY;
  3104  0016D0  6A05               	clrf	_global_buffer+4,c
  3105  0016D2  D002               	goto	l331
  3106  0016D4                     l1967:
  3107                           
  3108                           ;tasks.c: 126:             global_buffer.bottles[2].bottle_state = FULL;
  3109  0016D4  0E01               	movlw	1
  3110  0016D6  6E05               	movwf	_global_buffer+4,c
  3111  0016D8                     l331:
  3112                           
  3113                           ;tasks.c: 128:         global_buffer.bottles[0].bottle_state = FULL;
  3114  0016D8  0E01               	movlw	1
  3115  0016DA  6E03               	movwf	_global_buffer+2,c
  3116                           
  3117                           ;tasks.c: 129:         global_buffer.bottles[1].bottle_state = FULL;
  3118  0016DC  0E01               	movlw	1
  3119  0016DE  6E04               	movwf	_global_buffer+3,c
  3120                           
  3121                           ;tasks.c: 130:         global_buffer.bottles[2].bottle_state = FULL;
  3122  0016E0  0E01               	movlw	1
  3123  0016E2  6E05               	movwf	_global_buffer+4,c
  3124                           
  3125                           ;tasks.c: 132:         sem_post(&cover_sem);
  3126  0016E4  0EB0               	movlw	low _cover_sem
  3127  0016E6  6EE6               	movwf	postinc1,c
  3128  0016E8  0E00               	movlw	high _cover_sem
  3129  0016EA  6EE6               	movwf	postinc1,c
  3130  0016EC  EC69  F007         	call	_sem_post	;wreg free
  3131                           
  3132                           ;tasks.c: 133:         PORTDbits.RD6 = 1;
  3133  0016F0  8C83               	bsf	3971,6,c	;volatile
  3134  0016F2  D7C0               	goto	_check_level
  3135  0016F4                     __end_of_check_level:
  3136                           	opt callstack 0
  3137                           
  3138 ;; *************** function _cover_bottle *****************
  3139 ;; Defined at:
  3140 ;;		line 137 in file "tasks.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  i               2  [STACK] int 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1  [STACK] void 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3154 ;;      Params:         0       0       0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0
  3157 ;;      Totals:         0       0       0       0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    9
  3161 ;; This function calls:
  3162 ;;		_lunos_delayTask
  3163 ;;		_pipe_write
  3164 ;;		_sem_post
  3165 ;;		_sem_wait
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text20
  3172  000FD4                     __ptext20:
  3173                           	opt callstack 0
  3174  000FD4                     _cover_bottle:
  3175                           	opt callstack 0
  3176                           
  3177                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3178  000FD4  52E6               	movf	postinc1,f,c
  3179  000FD6  52E6               	movf	postinc1,f,c
  3180  000FD8                     l337:
  3181                           
  3182                           ;tasks.c: 139:         sem_wait(&cover_sem);
  3183  000FD8  0EB0               	movlw	low _cover_sem
  3184  000FDA  6EE6               	movwf	postinc1,c
  3185  000FDC  0E00               	movlw	high _cover_sem
  3186  000FDE  6EE6               	movwf	postinc1,c
  3187  000FE0  EC67  F008         	call	_sem_wait	;wreg free
  3188                           
  3189                           ;tasks.c: 140:         PORTDbits.RD7 = 0;
  3190  000FE4  9E83               	bcf	3971,7,c	;volatile
  3191                           
  3192                           ;tasks.c: 141:         PORTCbits.RC7 = 0;
  3193  000FE6  9E82               	bcf	3970,7,c	;volatile
  3194                           
  3195                           ;tasks.c: 142:         lunos_delayTask(500);
  3196  000FE8  0EF4               	movlw	244
  3197  000FEA  6EE6               	movwf	postinc1,c
  3198  000FEC  0E01               	movlw	1
  3199  000FEE  6EE6               	movwf	postinc1,c
  3200  000FF0  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  3201  000FF4                     l338:
  3202  000FF4  B682               	btfsc	3970,3,c	;volatile
  3203  000FF6  A882               	btfss	3970,4,c	;volatile
  3204  000FF8  D002               	goto	u82_20
  3205  000FFA  BA82               	btfsc	3970,5,c	;volatile
  3206  000FFC  D7FB               	goto	l338
  3207  000FFE                     u82_20:
  3208                           
  3209                           ;tasks.c: 144:         lunos_delayTask(200);
  3210  000FFE  0EC8               	movlw	200
  3211  001000  6EE6               	movwf	postinc1,c
  3212  001002  0E00               	movlw	0
  3213  001004  6EE6               	movwf	postinc1,c
  3214  001006  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  3215                           
  3216                           ;tasks.c: 147:         if(global_buffer.bottles[0].bottle_state == FULL)
  3217  00100A  0403               	decf	_global_buffer+2,w,c
  3218  00100C  A4D8               	btfss	status,2,c
  3219  00100E  D002               	goto	l343
  3220                           
  3221                           ;tasks.c: 148:             global_buffer.bottles[0].bottle_state = CLOSED;
  3222  001010  0E02               	movlw	2
  3223  001012  D003               	goto	L2
  3224  001014                     l343:
  3225  001014  A682               	btfss	3970,3,c	;volatile
  3226  001016  D002               	goto	l1991
  3227                           
  3228                           ;tasks.c: 150:             global_buffer.bottles[0].bottle_state = FAIL;
  3229  001018  0E03               	movlw	3
  3230  00101A                     L2:
  3231  00101A  6E03               	movwf	_global_buffer+2,c
  3232  00101C                     l1991:
  3233                           
  3234                           ;tasks.c: 154:         if(global_buffer.bottles[1].bottle_state == FULL)
  3235  00101C  0404               	decf	_global_buffer+3,w,c
  3236  00101E  A4D8               	btfss	status,2,c
  3237  001020  D002               	goto	l346
  3238                           
  3239                           ;tasks.c: 155:             global_buffer.bottles[1].bottle_state = CLOSED;
  3240  001022  0E02               	movlw	2
  3241  001024  D003               	goto	L3
  3242  001026                     l346:
  3243  001026  A882               	btfss	3970,4,c	;volatile
  3244  001028  D002               	goto	l1997
  3245                           
  3246                           ;tasks.c: 157:             global_buffer.bottles[1].bottle_state = FAIL;
  3247  00102A  0E03               	movlw	3
  3248  00102C                     L3:
  3249  00102C  6E04               	movwf	_global_buffer+3,c
  3250  00102E                     l1997:
  3251                           
  3252                           ;tasks.c: 161:         if(global_buffer.bottles[2].bottle_state == FULL)
  3253  00102E  0405               	decf	_global_buffer+4,w,c
  3254  001030  A4D8               	btfss	status,2,c
  3255  001032  D002               	goto	l349
  3256                           
  3257                           ;tasks.c: 162:             global_buffer.bottles[2].bottle_state = CLOSED;
  3258  001034  0E02               	movlw	2
  3259  001036  D003               	goto	L4
  3260  001038                     l349:
  3261  001038  AA82               	btfss	3970,5,c	;volatile
  3262  00103A  D002               	goto	l2003
  3263                           
  3264                           ;tasks.c: 164:             global_buffer.bottles[2].bottle_state = FAIL;
  3265  00103C  0E03               	movlw	3
  3266  00103E                     L4:
  3267  00103E  6E05               	movwf	_global_buffer+4,c
  3268  001040                     l2003:
  3269                           
  3270                           ;tasks.c: 168:         numero = 0;
  3271  001040  6A07               	clrf	_count,c
  3272  001042  6A08               	clrf	_count+1,c
  3273                           
  3274                           ;tasks.c: 169:         for (int i = 0; i < 3; i++){
  3275                           ;stkvar	_i @ sp[(-2)+0]
  3276  001044  0EFE               	movlw	-2
  3277  001046  6AE3               	clrf	plusw1,c
  3278  001048  0EFF               	movlw	-1
  3279  00104A  6AE3               	clrf	plusw1,c
  3280  00104C                     l2011:
  3281                           
  3282                           ;tasks.c: 170:             if (global_buffer.bottles[i].bottle_state == CLOSED){
  3283                           ;stkvar	_i @ sp[(-2)+0]
  3284  00104C  0EFE               	movlw	-2
  3285  00104E  CFE3 F053          	movff	plusw1,btemp+10
  3286  001052  0EFF               	movlw	-1
  3287  001054  CFE3 F054          	movff	plusw1,btemp+11
  3288  001058  0E03               	movlw	low (_global_buffer+2)
  3289  00105A  2453               	addwf	btemp+10,w,c
  3290  00105C  6ED9               	movwf	fsr2l,c
  3291  00105E  0E00               	movlw	high (_global_buffer+2)
  3292  001060  2054               	addwfc	btemp+11,w,c
  3293  001062  6EDA               	movwf	fsr2h,c
  3294  001064  0E02               	movlw	2
  3295  001066  18DE               	xorwf	postinc2,w,c
  3296  001068  A4D8               	btfss	status,2,c
  3297  00106A  D002               	goto	l2015
  3298                           
  3299                           ;tasks.c: 171:                 count++;
  3300  00106C  4A07               	infsnz	_count,f,c
  3301  00106E  2A08               	incf	_count+1,f,c
  3302  001070                     l2015:
  3303                           
  3304                           ;tasks.c: 174:         }
  3305                           ;stkvar	_i @ sp[(-2)+0]
  3306  001070  0EFE               	movlw	-2
  3307  001072  50E3               	movf	plusw1,w,c
  3308  001074  0F01               	addlw	1
  3309  001076  6E49               	movwf	btemp,c
  3310  001078  0EFE               	movlw	-2
  3311  00107A  C049  FFE3         	movff	btemp,plusw1
  3312  00107E  6A49               	clrf	btemp,c
  3313  001080  0EFF               	movlw	-1
  3314  001082  50E3               	movf	plusw1,w,c
  3315  001084  2049               	addwfc	btemp,w,c
  3316  001086  6E49               	movwf	btemp,c
  3317  001088  0EFF               	movlw	-1
  3318  00108A  C049  FFE3         	movff	btemp,plusw1
  3319                           
  3320                           ;stkvar	_i @ sp[(-2)+0]
  3321  00108E  0EFF               	movlw	-1
  3322  001090  BEE3               	btfsc	plusw1,7,c
  3323  001092  D7DC               	goto	l2011
  3324  001094  0EFF               	movlw	-1
  3325  001096  50E3               	movf	plusw1,w,c
  3326  001098  E107               	bnz	u90_20
  3327  00109A  0EFE               	movlw	-2
  3328  00109C  CFE3 F049          	movff	plusw1,btemp
  3329  0010A0  0E03               	movlw	3
  3330  0010A2  5E49               	subwf	btemp,f,c
  3331  0010A4  A0D8               	btfss	status,0,c
  3332  0010A6  D7D2               	goto	l2011
  3333  0010A8                     u90_20:
  3334                           
  3335                           ;tasks.c: 178:         pipe_write(&p, count);
  3336  0010A8  C007  FFE6         	movff	_count,postinc1
  3337  0010AC  C008  FFE6         	movff	_count+1,postinc1
  3338  0010B0  0E3D               	movlw	low _p
  3339  0010B2  6EE6               	movwf	postinc1,c
  3340  0010B4  0E00               	movlw	high _p
  3341  0010B6  6EE6               	movwf	postinc1,c
  3342  0010B8  EC60  F006         	call	_pipe_write	;wreg free
  3343                           
  3344                           ;tasks.c: 179:         sem_post(&out_sem);
  3345  0010BC  0EA0               	movlw	low _out_sem
  3346  0010BE  6EE6               	movwf	postinc1,c
  3347  0010C0  0E00               	movlw	high _out_sem
  3348  0010C2  6EE6               	movwf	postinc1,c
  3349  0010C4  EC69  F007         	call	_sem_post	;wreg free
  3350                           
  3351                           ;tasks.c: 180:         PORTCbits.RC7 = 1;
  3352  0010C8  8E82               	bsf	3970,7,c	;volatile
  3353                           
  3354                           ;tasks.c: 181:         PORTDbits.RD7 = 1;
  3355  0010CA  8E83               	bsf	3971,7,c	;volatile
  3356  0010CC  D785               	goto	l337
  3357  0010CE                     __end_of_cover_bottle:
  3358                           	opt callstack 0
  3359                           
  3360 ;; *************** function _pipe_write *****************
  3361 ;; Defined at:
  3362 ;;		line 18 in file "pipe.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  p               2  [STACK] PTR struct pipe
  3365 ;;		 -> p(12), 
  3366 ;;  data            2  [STACK] unsigned int 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1  [STACK] void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3378 ;;      Params:         0       0       0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    8
  3385 ;; This function calls:
  3386 ;;		_sem_post
  3387 ;;		_sem_wait
  3388 ;; This function is called by:
  3389 ;;		_cover_bottle
  3390 ;; This function uses a reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text21
  3394  000CC0                     __ptext21:
  3395                           	opt callstack 0
  3396  000CC0                     _pipe_write:
  3397                           	opt callstack 17
  3398                           
  3399                           ;pipe.c: 20:   sem_wait(p->w);
  3400                           ;stkvar	_p @ sp[(0)+-2]
  3401                           
  3402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3403                           ;incstack = 0
  3404  000CC0  0EFE               	movlw	-2
  3405  000CC2  CFE3 F053          	movff	plusw1,btemp+10
  3406  000CC6  0EFF               	movlw	-1
  3407  000CC8  CFE3 F054          	movff	plusw1,btemp+11
  3408  000CCC  0E08               	movlw	8
  3409  000CCE  2453               	addwf	btemp+10,w,c
  3410  000CD0  6ED9               	movwf	fsr2l,c
  3411  000CD2  0E00               	movlw	0
  3412  000CD4  2054               	addwfc	btemp+11,w,c
  3413  000CD6  6EDA               	movwf	fsr2h,c
  3414  000CD8  CFDE F053          	movff	postinc2,btemp+10
  3415  000CDC  CFDD F054          	movff	postdec2,btemp+11
  3416  000CE0  C053  FFE6         	movff	btemp+10,postinc1
  3417  000CE4  C054  FFE6         	movff	btemp+11,postinc1
  3418  000CE8  EC67  F008         	call	_sem_wait	;wreg free
  3419                           
  3420                           ;pipe.c: 21:   p->pipe_data[p->index_write] = data;
  3421                           ;stkvar	_data @ sp[(0)+-4]
  3422  000CEC  50E1               	movf	fsr1l,w,c
  3423  000CEE  0FFC               	addlw	-4
  3424  000CF0  6ED9               	movwf	fsr2l,c
  3425  000CF2  50E2               	movf	fsr1h,w,c
  3426  000CF4  6EDA               	movwf	fsr2h,c
  3427  000CF6  0EFF               	movlw	255
  3428  000CF8  22DA               	addwfc	fsr2h,f,c
  3429                           
  3430                           ;stkvar	_p @ sp[(0)+-2]
  3431  000CFA  0EFE               	movlw	-2
  3432  000CFC  CFE3 F053          	movff	plusw1,btemp+10
  3433  000D00  0EFF               	movlw	-1
  3434  000D02  CFE3 F054          	movff	plusw1,btemp+11
  3435  000D06  0E04               	movlw	4
  3436  000D08  2453               	addwf	btemp+10,w,c
  3437  000D0A  6EE9               	movwf	fsr0l,c
  3438  000D0C  0E00               	movlw	0
  3439  000D0E  2054               	addwfc	btemp+11,w,c
  3440  000D10  6EEA               	movwf	fsr0h,c
  3441  000D12  CFEE F053          	movff	postinc0,btemp+10
  3442  000D16  CFED F054          	movff	postdec0,btemp+11
  3443  000D1A  90D8               	bcf	status,0,c
  3444  000D1C  3453               	rlcf	btemp+10,w,c
  3445  000D1E  6E51               	movwf	btemp+8,c
  3446  000D20  3454               	rlcf	btemp+11,w,c
  3447  000D22  6E52               	movwf	btemp+9,c
  3448                           
  3449                           ;stkvar	_p @ sp[(0)+-2]
  3450  000D24  0EFE               	movlw	-2
  3451  000D26  CFE3 F053          	movff	plusw1,btemp+10
  3452  000D2A  0EFF               	movlw	-1
  3453  000D2C  CFE3 F054          	movff	plusw1,btemp+11
  3454  000D30  5051               	movf	btemp+8,w,c
  3455  000D32  2453               	addwf	btemp+10,w,c
  3456  000D34  6EE9               	movwf	fsr0l,c
  3457  000D36  5052               	movf	btemp+9,w,c
  3458  000D38  2054               	addwfc	btemp+11,w,c
  3459  000D3A  6EEA               	movwf	fsr0h,c
  3460  000D3C  CFDE FFEE          	movff	postinc2,postinc0
  3461  000D40  CFDD FFED          	movff	postdec2,postdec0
  3462                           
  3463                           ;pipe.c: 22:   p->index_write = (p->index_write + 1) % 2;
  3464                           ;stkvar	_p @ sp[(0)+-2]
  3465  000D44  0EFE               	movlw	-2
  3466  000D46  CFE3 F053          	movff	plusw1,btemp+10
  3467  000D4A  0EFF               	movlw	-1
  3468  000D4C  CFE3 F054          	movff	plusw1,btemp+11
  3469  000D50  0E04               	movlw	4
  3470  000D52  2453               	addwf	btemp+10,w,c
  3471  000D54  6ED9               	movwf	fsr2l,c
  3472  000D56  0E00               	movlw	0
  3473  000D58  2054               	addwfc	btemp+11,w,c
  3474  000D5A  6EDA               	movwf	fsr2h,c
  3475  000D5C  CFDE F053          	movff	postinc2,btemp+10
  3476  000D60  CFDD F054          	movff	postdec2,btemp+11
  3477  000D64  0E01               	movlw	1
  3478  000D66  2653               	addwf	btemp+10,f,c
  3479  000D68  0E00               	movlw	0
  3480  000D6A  2254               	addwfc	btemp+11,f,c
  3481  000D6C  0E01               	movlw	1
  3482  000D6E  1653               	andwf	btemp+10,f,c
  3483  000D70  0E00               	movlw	0
  3484  000D72  1654               	andwf	btemp+11,f,c
  3485                           
  3486                           ;stkvar	_p @ sp[(0)+-2]
  3487  000D74  0EFE               	movlw	-2
  3488  000D76  CFE3 F051          	movff	plusw1,btemp+8
  3489  000D7A  0EFF               	movlw	-1
  3490  000D7C  CFE3 F052          	movff	plusw1,btemp+9
  3491  000D80  0E04               	movlw	4
  3492  000D82  2451               	addwf	btemp+8,w,c
  3493  000D84  6ED9               	movwf	fsr2l,c
  3494  000D86  0E00               	movlw	0
  3495  000D88  2052               	addwfc	btemp+9,w,c
  3496  000D8A  6EDA               	movwf	fsr2h,c
  3497  000D8C  C053  FFDE         	movff	btemp+10,postinc2
  3498  000D90  C054  FFDD         	movff	btemp+11,postdec2
  3499                           
  3500                           ;pipe.c: 23:   sem_post(p->r);
  3501                           ;stkvar	_p @ sp[(0)+-2]
  3502  000D94  0EFE               	movlw	-2
  3503  000D96  CFE3 F053          	movff	plusw1,btemp+10
  3504  000D9A  0EFF               	movlw	-1
  3505  000D9C  CFE3 F054          	movff	plusw1,btemp+11
  3506  000DA0  0E0A               	movlw	10
  3507  000DA2  2453               	addwf	btemp+10,w,c
  3508  000DA4  6ED9               	movwf	fsr2l,c
  3509  000DA6  0E00               	movlw	0
  3510  000DA8  2054               	addwfc	btemp+11,w,c
  3511  000DAA  6EDA               	movwf	fsr2h,c
  3512  000DAC  CFDE F053          	movff	postinc2,btemp+10
  3513  000DB0  CFDD F054          	movff	postdec2,btemp+11
  3514  000DB4  C053  FFE6         	movff	btemp+10,postinc1
  3515  000DB8  C054  FFE6         	movff	btemp+11,postinc1
  3516  000DBC  EC69  F007         	call	_sem_post	;wreg free
  3517                           
  3518                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  3519  000DC0  52E5               	movf	postdec1,f,c
  3520  000DC2  52E5               	movf	postdec1,f,c
  3521  000DC4  52E5               	movf	postdec1,f,c
  3522  000DC6  52E5               	movf	postdec1,f,c
  3523  000DC8  0012               	return		;funcret
  3524  000DCA                     __end_of_pipe_write:
  3525                           	opt callstack 0
  3526                           
  3527 ;; *************** function _count_out *****************
  3528 ;; Defined at:
  3529 ;;		line 185 in file "tasks.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  data            2  [STACK] unsigned int 
  3534 ;;  n               2  [STACK] unsigned int 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1  [STACK] void 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3544 ;;      Params:         0       0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    9
  3551 ;; This function calls:
  3552 ;;		_lunos_delayTask
  3553 ;;		_pipe_read
  3554 ;;		_sem_post
  3555 ;;		_sem_wait
  3556 ;; This function is called by:
  3557 ;;		_main
  3558 ;; This function uses a reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text22
  3562  001344                     __ptext22:
  3563                           	opt callstack 0
  3564  001344                     _count_out:
  3565                           	opt callstack 0
  3566                           
  3567                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3568  001344  52E6               	movf	postinc1,f,c
  3569  001346  52E6               	movf	postinc1,f,c
  3570  001348  52E6               	movf	postinc1,f,c
  3571  00134A  52E6               	movf	postinc1,f,c
  3572  00134C                     l360:
  3573                           
  3574                           ;tasks.c: 187:         unsigned int data;;tasks.c: 188:         unsigned int n = 0;
  3575                           ;stkvar	_n @ sp[(-4)+2]
  3576  00134C  0EFE               	movlw	-2
  3577  00134E  6AE3               	clrf	plusw1,c
  3578  001350  0EFF               	movlw	-1
  3579  001352  6AE3               	clrf	plusw1,c
  3580                           
  3581                           ;tasks.c: 189:         sem_wait(&out_sem);
  3582  001354  0EA0               	movlw	low _out_sem
  3583  001356  6EE6               	movwf	postinc1,c
  3584  001358  0E00               	movlw	high _out_sem
  3585  00135A  6EE6               	movwf	postinc1,c
  3586  00135C  EC67  F008         	call	_sem_wait	;wreg free
  3587                           
  3588                           ;tasks.c: 190:         PORTBbits.RB1 = 0;
  3589  001360  9281               	bcf	3969,1,c	;volatile
  3590                           
  3591                           ;tasks.c: 191:         PORTCbits.RC7 = 0;
  3592  001362  9E82               	bcf	3970,7,c	;volatile
  3593                           
  3594                           ;tasks.c: 193:         Data_PIPE = data;
  3595                           ;stkvar	_data @ sp[(-4)+0]
  3596  001364  0EFC               	movlw	252
  3597  001366  24E1               	addwf	fsr1l,w,c
  3598  001368  6E49               	movwf	btemp,c
  3599  00136A  0EFF               	movlw	255
  3600  00136C  20E2               	addwfc	fsr1h,w,c
  3601  00136E  6E4A               	movwf	btemp+1,c
  3602  001370  C049  FFE6         	movff	btemp,postinc1
  3603  001374  C04A  FFE6         	movff	btemp+1,postinc1
  3604  001378  0E3D               	movlw	low _p
  3605  00137A  6EE6               	movwf	postinc1,c
  3606  00137C  0E00               	movlw	high _p
  3607  00137E  6EE6               	movwf	postinc1,c
  3608  001380  ECE5  F006         	call	_pipe_read	;wreg free
  3609                           
  3610                           ;tasks.c: 194:         while (n < data){
  3611  001384  D017               	goto	l2041
  3612  001386                     l363:
  3613  001386  B481               	btfsc	3969,2,c	;volatile
  3614  001388  D7FE               	goto	l363
  3615                           
  3616                           ;tasks.c: 196:             lunos_delayTask(200);
  3617  00138A  0EC8               	movlw	200
  3618  00138C  6EE6               	movwf	postinc1,c
  3619  00138E  0E00               	movlw	0
  3620  001390  6EE6               	movwf	postinc1,c
  3621  001392  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  3622                           
  3623                           ;tasks.c: 197:             n++;
  3624                           ;stkvar	_n @ sp[(-4)+2]
  3625  001396  0EFE               	movlw	-2
  3626  001398  50E3               	movf	plusw1,w,c
  3627  00139A  0F01               	addlw	1
  3628  00139C  6E49               	movwf	btemp,c
  3629  00139E  0EFE               	movlw	-2
  3630  0013A0  C049  FFE3         	movff	btemp,plusw1
  3631  0013A4  6A49               	clrf	btemp,c
  3632  0013A6  0EFF               	movlw	-1
  3633  0013A8  50E3               	movf	plusw1,w,c
  3634  0013AA  2049               	addwfc	btemp,w,c
  3635  0013AC  6E49               	movwf	btemp,c
  3636  0013AE  0EFF               	movlw	-1
  3637  0013B0  C049  FFE3         	movff	btemp,plusw1
  3638  0013B4                     l2041:
  3639                           
  3640                           ;tasks.c: 194:         while (n < data){
  3641                           ;stkvar	_data @ sp[(-4)+0]
  3642  0013B4  0EFC               	movlw	-4
  3643  0013B6  CFE3 F053          	movff	plusw1,btemp+10
  3644  0013BA  0EFD               	movlw	-3
  3645  0013BC  CFE3 F054          	movff	plusw1,btemp+11
  3646                           
  3647                           ;stkvar	_n @ sp[(-4)+2]
  3648  0013C0  0EFE               	movlw	-2
  3649  0013C2  CFE3 F051          	movff	plusw1,btemp+8
  3650  0013C6  0EFF               	movlw	-1
  3651  0013C8  CFE3 F052          	movff	plusw1,btemp+9
  3652  0013CC  5053               	movf	btemp+10,w,c
  3653  0013CE  5C51               	subwf	btemp+8,w,c
  3654  0013D0  5054               	movf	btemp+11,w,c
  3655  0013D2  5852               	subwfb	btemp+9,w,c
  3656  0013D4  A0D8               	btfss	status,0,c
  3657  0013D6  D7D7               	goto	l363
  3658                           
  3659                           ;tasks.c: 199:         PORTBbits.RB1 = 1;
  3660  0013D8  8281               	bsf	3969,1,c	;volatile
  3661                           
  3662                           ;tasks.c: 200:         lunos_delayTask(200);
  3663  0013DA  0EC8               	movlw	200
  3664  0013DC  6EE6               	movwf	postinc1,c
  3665  0013DE  0E00               	movlw	0
  3666  0013E0  6EE6               	movwf	postinc1,c
  3667  0013E2  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  3668                           
  3669                           ;tasks.c: 201:         PORTCbits.RC7 = 1;
  3670  0013E6  8E82               	bsf	3970,7,c	;volatile
  3671                           
  3672                           ;tasks.c: 202:         PORTBbits.RB1 = 0;
  3673  0013E8  9281               	bcf	3969,1,c	;volatile
  3674                           
  3675                           ;tasks.c: 203:         lunos_delayTask(200);
  3676  0013EA  0EC8               	movlw	200
  3677  0013EC  6EE6               	movwf	postinc1,c
  3678  0013EE  0E00               	movlw	0
  3679  0013F0  6EE6               	movwf	postinc1,c
  3680  0013F2  ECF1  F00B         	call	_lunos_delayTask	;wreg free
  3681                           
  3682                           ;tasks.c: 205:         sem_post(&count_sem);
  3683  0013F6  0E2D               	movlw	low _count_sem
  3684  0013F8  6EE6               	movwf	postinc1,c
  3685  0013FA  0E00               	movlw	high _count_sem
  3686  0013FC  6EE6               	movwf	postinc1,c
  3687  0013FE  EC69  F007         	call	_sem_post	;wreg free
  3688                           
  3689                           ;tasks.c: 206:         global_buffer.p_state = FREE_;
  3690  001402  6A06               	clrf	_global_buffer+5,c
  3691                           
  3692                           ;tasks.c: 207:         global_buffer.count = 0;
  3693  001404  6A01               	clrf	_global_buffer,c
  3694  001406  6A02               	clrf	_global_buffer+1,c
  3695                           
  3696                           ;tasks.c: 208:         PORTBbits.RB1 = 1;
  3697  001408  8281               	bsf	3969,1,c	;volatile
  3698  00140A  D7A0               	goto	l360
  3699  00140C                     __end_of_count_out:
  3700                           	opt callstack 0
  3701                           
  3702 ;; *************** function _pipe_read *****************
  3703 ;; Defined at:
  3704 ;;		line 27 in file "pipe.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  p               2  [STACK] PTR struct pipe
  3707 ;;		 -> p(12), 
  3708 ;;  data            2  [STACK] PTR unsigned int 
  3709 ;;		 -> data(2), 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1  [STACK] void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3721 ;;      Params:         0       0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0       0
  3724 ;;      Totals:         0       0       0       0       0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    8
  3728 ;; This function calls:
  3729 ;;		_sem_post
  3730 ;;		_sem_wait
  3731 ;; This function is called by:
  3732 ;;		_count_out
  3733 ;; This function uses a reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text23
  3737  000DCA                     __ptext23:
  3738                           	opt callstack 0
  3739  000DCA                     _pipe_read:
  3740                           	opt callstack 17
  3741                           
  3742                           ;pipe.c: 29:   sem_wait(p->r);
  3743                           ;stkvar	_p @ sp[(0)+-2]
  3744                           
  3745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3746                           ;incstack = 0
  3747  000DCA  0EFE               	movlw	-2
  3748  000DCC  CFE3 F053          	movff	plusw1,btemp+10
  3749  000DD0  0EFF               	movlw	-1
  3750  000DD2  CFE3 F054          	movff	plusw1,btemp+11
  3751  000DD6  0E0A               	movlw	10
  3752  000DD8  2453               	addwf	btemp+10,w,c
  3753  000DDA  6ED9               	movwf	fsr2l,c
  3754  000DDC  0E00               	movlw	0
  3755  000DDE  2054               	addwfc	btemp+11,w,c
  3756  000DE0  6EDA               	movwf	fsr2h,c
  3757  000DE2  CFDE F053          	movff	postinc2,btemp+10
  3758  000DE6  CFDD F054          	movff	postdec2,btemp+11
  3759  000DEA  C053  FFE6         	movff	btemp+10,postinc1
  3760  000DEE  C054  FFE6         	movff	btemp+11,postinc1
  3761  000DF2  EC67  F008         	call	_sem_wait	;wreg free
  3762                           
  3763                           ;pipe.c: 30:   *data = p->pipe_data[p->index_read];
  3764                           ;stkvar	_p @ sp[(0)+-2]
  3765  000DF6  0EFE               	movlw	-2
  3766  000DF8  CFE3 F053          	movff	plusw1,btemp+10
  3767  000DFC  0EFF               	movlw	-1
  3768  000DFE  CFE3 F054          	movff	plusw1,btemp+11
  3769  000E02  0E06               	movlw	6
  3770  000E04  2453               	addwf	btemp+10,w,c
  3771  000E06  6ED9               	movwf	fsr2l,c
  3772  000E08  0E00               	movlw	0
  3773  000E0A  2054               	addwfc	btemp+11,w,c
  3774  000E0C  6EDA               	movwf	fsr2h,c
  3775  000E0E  CFDE F053          	movff	postinc2,btemp+10
  3776  000E12  CFDD F054          	movff	postdec2,btemp+11
  3777  000E16  90D8               	bcf	status,0,c
  3778  000E18  3453               	rlcf	btemp+10,w,c
  3779  000E1A  6E51               	movwf	btemp+8,c
  3780  000E1C  3454               	rlcf	btemp+11,w,c
  3781  000E1E  6E52               	movwf	btemp+9,c
  3782                           
  3783                           ;stkvar	_p @ sp[(0)+-2]
  3784  000E20  0EFE               	movlw	-2
  3785  000E22  CFE3 F053          	movff	plusw1,btemp+10
  3786  000E26  0EFF               	movlw	-1
  3787  000E28  CFE3 F054          	movff	plusw1,btemp+11
  3788  000E2C  5051               	movf	btemp+8,w,c
  3789  000E2E  2453               	addwf	btemp+10,w,c
  3790  000E30  6ED9               	movwf	fsr2l,c
  3791  000E32  5052               	movf	btemp+9,w,c
  3792  000E34  2054               	addwfc	btemp+11,w,c
  3793  000E36  6EDA               	movwf	fsr2h,c
  3794                           
  3795                           ;stkvar	_data @ sp[(0)+-4]
  3796  000E38  0EFC               	movlw	-4
  3797  000E3A  CFE3 FFE9          	movff	plusw1,fsr0l
  3798  000E3E  0EFD               	movlw	-3
  3799  000E40  CFE3 FFEA          	movff	plusw1,fsr0h
  3800  000E44  CFDE FFEE          	movff	postinc2,postinc0
  3801  000E48  CFDD FFED          	movff	postdec2,postdec0
  3802                           
  3803                           ;pipe.c: 31:   p->index_read = (p->index_read + 1) % 2;
  3804                           ;stkvar	_p @ sp[(0)+-2]
  3805  000E4C  0EFE               	movlw	-2
  3806  000E4E  CFE3 F053          	movff	plusw1,btemp+10
  3807  000E52  0EFF               	movlw	-1
  3808  000E54  CFE3 F054          	movff	plusw1,btemp+11
  3809  000E58  0E06               	movlw	6
  3810  000E5A  2453               	addwf	btemp+10,w,c
  3811  000E5C  6ED9               	movwf	fsr2l,c
  3812  000E5E  0E00               	movlw	0
  3813  000E60  2054               	addwfc	btemp+11,w,c
  3814  000E62  6EDA               	movwf	fsr2h,c
  3815  000E64  CFDE F053          	movff	postinc2,btemp+10
  3816  000E68  CFDD F054          	movff	postdec2,btemp+11
  3817  000E6C  0E01               	movlw	1
  3818  000E6E  2653               	addwf	btemp+10,f,c
  3819  000E70  0E00               	movlw	0
  3820  000E72  2254               	addwfc	btemp+11,f,c
  3821  000E74  0E01               	movlw	1
  3822  000E76  1653               	andwf	btemp+10,f,c
  3823  000E78  0E00               	movlw	0
  3824  000E7A  1654               	andwf	btemp+11,f,c
  3825                           
  3826                           ;stkvar	_p @ sp[(0)+-2]
  3827  000E7C  0EFE               	movlw	-2
  3828  000E7E  CFE3 F051          	movff	plusw1,btemp+8
  3829  000E82  0EFF               	movlw	-1
  3830  000E84  CFE3 F052          	movff	plusw1,btemp+9
  3831  000E88  0E06               	movlw	6
  3832  000E8A  2451               	addwf	btemp+8,w,c
  3833  000E8C  6ED9               	movwf	fsr2l,c
  3834  000E8E  0E00               	movlw	0
  3835  000E90  2052               	addwfc	btemp+9,w,c
  3836  000E92  6EDA               	movwf	fsr2h,c
  3837  000E94  C053  FFDE         	movff	btemp+10,postinc2
  3838  000E98  C054  FFDD         	movff	btemp+11,postdec2
  3839                           
  3840                           ;pipe.c: 32:   sem_post(p->w);
  3841                           ;stkvar	_p @ sp[(0)+-2]
  3842  000E9C  0EFE               	movlw	-2
  3843  000E9E  CFE3 F053          	movff	plusw1,btemp+10
  3844  000EA2  0EFF               	movlw	-1
  3845  000EA4  CFE3 F054          	movff	plusw1,btemp+11
  3846  000EA8  0E08               	movlw	8
  3847  000EAA  2453               	addwf	btemp+10,w,c
  3848  000EAC  6ED9               	movwf	fsr2l,c
  3849  000EAE  0E00               	movlw	0
  3850  000EB0  2054               	addwfc	btemp+11,w,c
  3851  000EB2  6EDA               	movwf	fsr2h,c
  3852  000EB4  CFDE F053          	movff	postinc2,btemp+10
  3853  000EB8  CFDD F054          	movff	postdec2,btemp+11
  3854  000EBC  C053  FFE6         	movff	btemp+10,postinc1
  3855  000EC0  C054  FFE6         	movff	btemp+11,postinc1
  3856  000EC4  EC69  F007         	call	_sem_post	;wreg free
  3857                           
  3858                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3859  000EC8  52E5               	movf	postdec1,f,c
  3860  000ECA  52E5               	movf	postdec1,f,c
  3861  000ECC  52E5               	movf	postdec1,f,c
  3862  000ECE  52E5               	movf	postdec1,f,c
  3863  000ED0  0012               	return		;funcret
  3864  000ED2                     __end_of_pipe_read:
  3865                           	opt callstack 0
  3866                           
  3867 ;; *************** function _ISR_timer0 *****************
  3868 ;; Defined at:
  3869 ;;		line 56 in file "int0_test.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3883 ;;      Params:         0       0       0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0
  3885 ;;      Temps:         14       0       0       0       0       0       0
  3886 ;;      Totals:        14       0       0       0       0       0       0
  3887 ;;Total ram usage:       14 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    2
  3890 ;; This function calls:
  3891 ;;		___wmul
  3892 ;;		_delay_decrement
  3893 ;;		_round_robin
  3894 ;; This function is called by:
  3895 ;;		Interrupt level 2
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	intcode
  3900  000008                     __pintcode:
  3901                           	opt callstack 0
  3902  000008                     _ISR_timer0:
  3903                           	opt callstack 17
  3904                           
  3905                           ;incstack = 0
  3906  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  3907                           
  3908                           	psect	intcode_body
  3909  000014                     __pintcode_body:
  3910                           	opt callstack 17
  3911  000014                     int_func:
  3912                           	opt callstack 17
  3913  000014  0006               	pop		; remove dummy address from shadow register refresh
  3914  000016  CFE1 F06B          	movff	fsr1l,??_ISR_timer0+2
  3915  00001A  CFE2 F06C          	movff	fsr1h,??_ISR_timer0+3
  3916  00001E  CFD9 F06D          	movff	fsr2l,??_ISR_timer0+4
  3917  000022  CFDA F06E          	movff	fsr2h,??_ISR_timer0+5
  3918  000026  CFF3 F06F          	movff	prodl,??_ISR_timer0+6
  3919  00002A  CFF4 F070          	movff	prodh,??_ISR_timer0+7
  3920  00002E  C049  F071         	movff	btemp,??_ISR_timer0+8
  3921  000032  C04A  F072         	movff	btemp+1,??_ISR_timer0+9
  3922  000036  C051  F073         	movff	btemp+8,??_ISR_timer0+10
  3923  00003A  C052  F074         	movff	btemp+9,??_ISR_timer0+11
  3924  00003E  C053  F075         	movff	btemp+10,??_ISR_timer0+12
  3925  000042  C054  F076         	movff	btemp+11,??_ISR_timer0+13
  3926  000046  EE15  F090         	lfsr	1,___inthi_sp
  3927                           
  3928                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  3929  00004A  9EF2               	bcf	4082,7,c	;volatile
  3930                           
  3931                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  3932  00004C  A4F2               	btfss	4082,2,c	;volatile
  3933  00004E  D22C               	goto	i2u67_40
  3934                           
  3935                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  3936  000050  94F2               	bcf	4082,2,c	;volatile
  3937                           
  3938                           ;int0_test.c: 61:     TMR0L = 252;
  3939  000052  0EFC               	movlw	252
  3940  000054  6ED6               	movwf	4054,c	;volatile
  3941                           
  3942                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  3943  000056  A083               	btfss	3971,0,c	;volatile
  3944  000058  D002               	goto	i2u63_40
  3945  00005A  0E01               	movlw	1
  3946  00005C  D001               	goto	i2u63_46
  3947  00005E                     i2u63_40:
  3948  00005E  0E00               	movlw	0
  3949  000060                     i2u63_46:
  3950  000060  0AFF               	xorlw	255
  3951  000062  6E69               	movwf	??_ISR_timer0& (0+255),c
  3952  000064  5083               	movf	3971,w,c	;volatile
  3953  000066  1869               	xorwf	??_ISR_timer0,w,c
  3954  000068  0BFE               	andlw	-2
  3955  00006A  1869               	xorwf	??_ISR_timer0,w,c
  3956  00006C  6E83               	movwf	3971,c	;volatile
  3957                           
  3958                           ;int0_test.c: 63:     delay_decrement();
  3959  00006E  ECCB  F004         	call	_delay_decrement	;wreg free
  3960                           
  3961                           ;int0_test.c: 65:     quantum--;
  3962  000072  0677               	decf	_quantum,f,c
  3963  000074  A0D8               	btfss	status,0,c
  3964  000076  0678               	decf	_quantum+1,f,c
  3965                           
  3966                           ;int0_test.c: 66:     if (quantum <= 0) {
  3967  000078  BE78               	btfsc	_quantum+1,7,c
  3968  00007A  D005               	goto	i2u64_40
  3969  00007C  5078               	movf	_quantum+1,w,c
  3970  00007E  E102               	bnz	i2u64_41
  3971  000080  0477               	decf	_quantum,w,c
  3972  000082  B0D8               	btfsc	status,0,c
  3973  000084                     i2u64_41:
  3974  000084  D211               	goto	i2u67_40
  3975  000086                     i2u64_40:
  3976                           
  3977                           ;int0_test.c: 67:       quantum = 10;
  3978  000086  0E00               	movlw	0
  3979  000088  6E78               	movwf	_quantum+1,c
  3980  00008A  0E0A               	movlw	10
  3981  00008C  6E77               	movwf	_quantum,c
  3982                           
  3983                           ;int0_test.c: 68:       { who = ready_queue.task_running; ready_queue.tasks[who].task_st
      +                          ate = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = ST
      +                          ATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks
      +                          [who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stac
      +                          k[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL
      +                          ; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size;};
  3984  00008E  C356  F00B         	movff	_ready_queue+662,_who
  3985  000092  C357  F00C         	movff	_ready_queue+663,_who+1
  3986  000096  0E6E               	movlw	110
  3987  000098  6EE6               	movwf	postinc1,c
  3988  00009A  0E00               	movlw	0
  3989  00009C  6EE6               	movwf	postinc1,c
  3990  00009E  C00B  FFE6         	movff	_who,postinc1
  3991  0000A2  C00C  FFE6         	movff	_who+1,postinc1
  3992  0000A6  EC64  F00A         	call	___wmul	;wreg free
  3993  0000AA  0EC8               	movlw	low (_ready_queue+8)
  3994  0000AC  2449               	addwf	btemp,w,c
  3995  0000AE  6ED9               	movwf	fsr2l,c
  3996  0000B0  0E00               	movlw	high (_ready_queue+8)
  3997  0000B2  204A               	addwfc	btemp+1,w,c
  3998  0000B4  6EDA               	movwf	fsr2h,c
  3999  0000B6  0E00               	movlw	0
  4000  0000B8  6EDF               	movwf	indf2,c
  4001  0000BA  0E6E               	movlw	110
  4002  0000BC  6EE6               	movwf	postinc1,c
  4003  0000BE  0E00               	movlw	0
  4004  0000C0  6EE6               	movwf	postinc1,c
  4005  0000C2  C00B  FFE6         	movff	_who,postinc1
  4006  0000C6  C00C  FFE6         	movff	_who+1,postinc1
  4007  0000CA  EC64  F00A         	call	___wmul	;wreg free
  4008  0000CE  0EC5               	movlw	low (_ready_queue+5)
  4009  0000D0  2449               	addwf	btemp,w,c
  4010  0000D2  6ED9               	movwf	fsr2l,c
  4011  0000D4  0E00               	movlw	high (_ready_queue+5)
  4012  0000D6  204A               	addwfc	btemp+1,w,c
  4013  0000D8  6EDA               	movwf	fsr2h,c
  4014  0000DA  CFE8 FFDF          	movff	wreg,indf2	;volatile
  4015  0000DE  0E6E               	movlw	110
  4016  0000E0  6EE6               	movwf	postinc1,c
  4017  0000E2  0E00               	movlw	0
  4018  0000E4  6EE6               	movwf	postinc1,c
  4019  0000E6  C00B  FFE6         	movff	_who,postinc1
  4020  0000EA  C00C  FFE6         	movff	_who+1,postinc1
  4021  0000EE  EC64  F00A         	call	___wmul	;wreg free
  4022  0000F2  0EC6               	movlw	low (_ready_queue+6)
  4023  0000F4  2449               	addwf	btemp,w,c
  4024  0000F6  6ED9               	movwf	fsr2l,c
  4025  0000F8  0E00               	movlw	high (_ready_queue+6)
  4026  0000FA  204A               	addwfc	btemp+1,w,c
  4027  0000FC  6EDA               	movwf	fsr2h,c
  4028  0000FE  CFD8 FFDF          	movff	status,indf2	;volatile
  4029  000102  0E6E               	movlw	110
  4030  000104  6EE6               	movwf	postinc1,c
  4031  000106  0E00               	movlw	0
  4032  000108  6EE6               	movwf	postinc1,c
  4033  00010A  C00B  FFE6         	movff	_who,postinc1
  4034  00010E  C00C  FFE6         	movff	_who+1,postinc1
  4035  000112  EC64  F00A         	call	___wmul	;wreg free
  4036  000116  0EC7               	movlw	low (_ready_queue+7)
  4037  000118  2449               	addwf	btemp,w,c
  4038  00011A  6ED9               	movwf	fsr2l,c
  4039  00011C  0E00               	movlw	high (_ready_queue+7)
  4040  00011E  204A               	addwfc	btemp+1,w,c
  4041  000120  6EDA               	movwf	fsr2h,c
  4042  000122  CFE0 FFDF          	movff	bsr,indf2	;volatile
  4043  000126  6A09               	clrf	_size,c
  4044  000128  6A0A               	clrf	_size+1,c
  4045  00012A  D07B               	goto	i2l1851
  4046  00012C                     i2l1847:
  4047  00012C  0E6E               	movlw	110
  4048  00012E  6EE6               	movwf	postinc1,c
  4049  000130  0E00               	movlw	0
  4050  000132  6EE6               	movwf	postinc1,c
  4051  000134  C00B  FFE6         	movff	_who,postinc1
  4052  000138  C00C  FFE6         	movff	_who+1,postinc1
  4053  00013C  EC64  F00A         	call	___wmul	;wreg free
  4054  000140  0EC0               	movlw	low _ready_queue
  4055  000142  6E69               	movwf	??_ISR_timer0& (0+255),c
  4056  000144  0E00               	movlw	high _ready_queue
  4057  000146  6E6A               	movwf	(??_ISR_timer0+1)& (0+255),c
  4058  000148  0E09               	movlw	9
  4059  00014A  2669               	addwf	??_ISR_timer0,f,c
  4060  00014C  0E00               	movlw	0
  4061  00014E  226A               	addwfc	??_ISR_timer0+1,f,c
  4062  000150  5049               	movf	btemp,w,c
  4063  000152  2669               	addwf	??_ISR_timer0,f,c
  4064  000154  504A               	movf	btemp+1,w,c
  4065  000156  226A               	addwfc	??_ISR_timer0+1,f,c
  4066  000158  0E03               	movlw	3
  4067  00015A  6EE6               	movwf	postinc1,c
  4068  00015C  0E00               	movlw	0
  4069  00015E  6EE6               	movwf	postinc1,c
  4070  000160  C009  FFE6         	movff	_size,postinc1
  4071  000164  C00A  FFE6         	movff	_size+1,postinc1
  4072  000168  EC64  F00A         	call	___wmul	;wreg free
  4073  00016C  5049               	movf	btemp,w,c
  4074  00016E  2469               	addwf	??_ISR_timer0,w,c
  4075  000170  6ED9               	movwf	fsr2l,c
  4076  000172  504A               	movf	btemp+1,w,c
  4077  000174  206A               	addwfc	??_ISR_timer0+1,w,c
  4078  000176  6EDA               	movwf	fsr2h,c
  4079  000178  CFFF FFDF          	movff	tosu,indf2	;volatile
  4080  00017C  0E6E               	movlw	110
  4081  00017E  6EE6               	movwf	postinc1,c
  4082  000180  0E00               	movlw	0
  4083  000182  6EE6               	movwf	postinc1,c
  4084  000184  C00B  FFE6         	movff	_who,postinc1
  4085  000188  C00C  FFE6         	movff	_who+1,postinc1
  4086  00018C  EC64  F00A         	call	___wmul	;wreg free
  4087  000190  0EC0               	movlw	low _ready_queue
  4088  000192  6E69               	movwf	??_ISR_timer0& (0+255),c
  4089  000194  0E00               	movlw	high _ready_queue
  4090  000196  6E6A               	movwf	(??_ISR_timer0+1)& (0+255),c
  4091  000198  0E0B               	movlw	11
  4092  00019A  2669               	addwf	??_ISR_timer0,f,c
  4093  00019C  0E00               	movlw	0
  4094  00019E  226A               	addwfc	??_ISR_timer0+1,f,c
  4095  0001A0  5049               	movf	btemp,w,c
  4096  0001A2  2669               	addwf	??_ISR_timer0,f,c
  4097  0001A4  504A               	movf	btemp+1,w,c
  4098  0001A6  226A               	addwfc	??_ISR_timer0+1,f,c
  4099  0001A8  0E03               	movlw	3
  4100  0001AA  6EE6               	movwf	postinc1,c
  4101  0001AC  0E00               	movlw	0
  4102  0001AE  6EE6               	movwf	postinc1,c
  4103  0001B0  C009  FFE6         	movff	_size,postinc1
  4104  0001B4  C00A  FFE6         	movff	_size+1,postinc1
  4105  0001B8  EC64  F00A         	call	___wmul	;wreg free
  4106  0001BC  5049               	movf	btemp,w,c
  4107  0001BE  2469               	addwf	??_ISR_timer0,w,c
  4108  0001C0  6ED9               	movwf	fsr2l,c
  4109  0001C2  504A               	movf	btemp+1,w,c
  4110  0001C4  206A               	addwfc	??_ISR_timer0+1,w,c
  4111  0001C6  6EDA               	movwf	fsr2h,c
  4112  0001C8  CFFE FFDF          	movff	tosh,indf2	;volatile
  4113  0001CC  0E6E               	movlw	110
  4114  0001CE  6EE6               	movwf	postinc1,c
  4115  0001D0  0E00               	movlw	0
  4116  0001D2  6EE6               	movwf	postinc1,c
  4117  0001D4  C00B  FFE6         	movff	_who,postinc1
  4118  0001D8  C00C  FFE6         	movff	_who+1,postinc1
  4119  0001DC  EC64  F00A         	call	___wmul	;wreg free
  4120  0001E0  0EC0               	movlw	low _ready_queue
  4121  0001E2  6E69               	movwf	??_ISR_timer0& (0+255),c
  4122  0001E4  0E00               	movlw	high _ready_queue
  4123  0001E6  6E6A               	movwf	(??_ISR_timer0+1)& (0+255),c
  4124  0001E8  0E0A               	movlw	10
  4125  0001EA  2669               	addwf	??_ISR_timer0,f,c
  4126  0001EC  0E00               	movlw	0
  4127  0001EE  226A               	addwfc	??_ISR_timer0+1,f,c
  4128  0001F0  5049               	movf	btemp,w,c
  4129  0001F2  2669               	addwf	??_ISR_timer0,f,c
  4130  0001F4  504A               	movf	btemp+1,w,c
  4131  0001F6  226A               	addwfc	??_ISR_timer0+1,f,c
  4132  0001F8  0E03               	movlw	3
  4133  0001FA  6EE6               	movwf	postinc1,c
  4134  0001FC  0E00               	movlw	0
  4135  0001FE  6EE6               	movwf	postinc1,c
  4136  000200  C009  FFE6         	movff	_size,postinc1
  4137  000204  C00A  FFE6         	movff	_size+1,postinc1
  4138  000208  EC64  F00A         	call	___wmul	;wreg free
  4139  00020C  5049               	movf	btemp,w,c
  4140  00020E  2469               	addwf	??_ISR_timer0,w,c
  4141  000210  6ED9               	movwf	fsr2l,c
  4142  000212  504A               	movf	btemp+1,w,c
  4143  000214  206A               	addwfc	??_ISR_timer0+1,w,c
  4144  000216  6EDA               	movwf	fsr2h,c
  4145  000218  CFFD FFDF          	movff	tosl,indf2	;volatile
  4146  00021C  4A09               	infsnz	_size,f,c
  4147  00021E  2A0A               	incf	_size+1,f,c
  4148  000220  0006               	pop		;# 
  4149  000222                     i2l1851:
  4150  000222  50FC               	movf	stkptr,w,c	;volatile
  4151  000224  A4D8               	btfss	status,2,c
  4152  000226  D782               	goto	i2l1847
  4153  000228  0E6E               	movlw	110
  4154  00022A  6EE6               	movwf	postinc1,c
  4155  00022C  0E00               	movlw	0
  4156  00022E  6EE6               	movwf	postinc1,c
  4157  000230  C00B  FFE6         	movff	_who,postinc1
  4158  000234  C00C  FFE6         	movff	_who+1,postinc1
  4159  000238  EC64  F00A         	call	___wmul	;wreg free
  4160  00023C  0E26               	movlw	low (_ready_queue+102)
  4161  00023E  2449               	addwf	btemp,w,c
  4162  000240  6ED9               	movwf	fsr2l,c
  4163  000242  0E01               	movlw	high (_ready_queue+102)
  4164  000244  204A               	addwfc	btemp+1,w,c
  4165  000246  6EDA               	movwf	fsr2h,c
  4166  000248  C009  FFDE         	movff	_size,postinc2
  4167  00024C  C00A  FFDD         	movff	_size+1,postdec2
  4168                           
  4169                           ;int0_test.c: 69:       ready_queue.task_running = round_robin();
  4170  000250  ECAF  F00A         	call	_round_robin	;wreg free
  4171  000254  C049  F356         	movff	btemp,_ready_queue+662
  4172  000258  C04A  F357         	movff	btemp+1,_ready_queue+663
  4173                           
  4174                           ;int0_test.c: 70:       { STKPTR = 0; who = ready_queue.task_running; if (ready_queue.ta
      +                          sks[who].task_installed == 0) { ready_queue.tasks[who].task_installed = 1; __asm("PUSH")
      +                          ; TOS = ready_queue.tasks[who].task_f; } else { ready_queue.tasks[who].task_state = RUNN
      +                          ING; WREG = ready_queue.tasks[who].W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BS
      +                          R = ready_queue.tasks[who].BSR_reg; size = ready_queue.tasks[who].task_stack.stack_level
      +                          ; while(size){ __asm("PUSH"); TOSL = ready_queue.tasks[who].task_stack.h_stack[size-1].T
      +                          OSL_reg; TOSH = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSH_reg; TOSU = ready
      +                          _queue.tasks[who].task_stack.h_stack[size-1].TOSU_reg; size--; } }};
  4175  00025C  6AFC               	clrf	stkptr,c	;volatile
  4176  00025E  C356  F00B         	movff	_ready_queue+662,_who
  4177  000262  C357  F00C         	movff	_ready_queue+663,_who+1
  4178  000266  0E6E               	movlw	110
  4179  000268  6EE6               	movwf	postinc1,c
  4180  00026A  0E00               	movlw	0
  4181  00026C  6EE6               	movwf	postinc1,c
  4182  00026E  C00B  FFE6         	movff	_who,postinc1
  4183  000272  C00C  FFE6         	movff	_who+1,postinc1
  4184  000276  EC64  F00A         	call	___wmul	;wreg free
  4185  00027A  0E28               	movlw	low (_ready_queue+104)
  4186  00027C  2449               	addwf	btemp,w,c
  4187  00027E  6ED9               	movwf	fsr2l,c
  4188  000280  0E01               	movlw	high (_ready_queue+104)
  4189  000282  204A               	addwfc	btemp+1,w,c
  4190  000284  6EDA               	movwf	fsr2h,c
  4191  000286  50DE               	movf	postinc2,w,c
  4192  000288  10DE               	iorwf	postinc2,w,c
  4193  00028A  A4D8               	btfss	status,2,c
  4194  00028C  D02F               	goto	i2l1865
  4195  00028E  0E6E               	movlw	110
  4196  000290  6EE6               	movwf	postinc1,c
  4197  000292  0E00               	movlw	0
  4198  000294  6EE6               	movwf	postinc1,c
  4199  000296  C00B  FFE6         	movff	_who,postinc1
  4200  00029A  C00C  FFE6         	movff	_who+1,postinc1
  4201  00029E  EC64  F00A         	call	___wmul	;wreg free
  4202  0002A2  0E28               	movlw	low (_ready_queue+104)
  4203  0002A4  2449               	addwf	btemp,w,c
  4204  0002A6  6ED9               	movwf	fsr2l,c
  4205  0002A8  0E01               	movlw	high (_ready_queue+104)
  4206  0002AA  204A               	addwfc	btemp+1,w,c
  4207  0002AC  6EDA               	movwf	fsr2h,c
  4208  0002AE  0E01               	movlw	1
  4209  0002B0  6EDE               	movwf	postinc2,c
  4210  0002B2  0E00               	movlw	0
  4211  0002B4  6EDD               	movwf	postdec2,c
  4212  0002B6  0005               	push		;# 
  4213  0002B8  0E6E               	movlw	110
  4214  0002BA  6EE6               	movwf	postinc1,c
  4215  0002BC  0E00               	movlw	0
  4216  0002BE  6EE6               	movwf	postinc1,c
  4217  0002C0  C00B  FFE6         	movff	_who,postinc1
  4218  0002C4  C00C  FFE6         	movff	_who+1,postinc1
  4219  0002C8  EC64  F00A         	call	___wmul	;wreg free
  4220  0002CC  0E2A               	movlw	low (_ready_queue+106)
  4221  0002CE  2449               	addwf	btemp,w,c
  4222  0002D0  6ED9               	movwf	fsr2l,c
  4223  0002D2  0E01               	movlw	high (_ready_queue+106)
  4224  0002D4  204A               	addwfc	btemp+1,w,c
  4225  0002D6  6EDA               	movwf	fsr2h,c
  4226  0002D8  CFDE F069          	movff	postinc2,??_ISR_timer0
  4227  0002DC  CFDD F06A          	movff	postdec2,??_ISR_timer0+1
  4228  0002E0  C069  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  4229  0002E4  C06A  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  4230  0002E8  6AFF               	clrf	tosu,c	;volatile
  4231  0002EA  D0DE               	goto	i2u67_40
  4232  0002EC                     i2l1865:
  4233  0002EC  0E6E               	movlw	110
  4234  0002EE  6EE6               	movwf	postinc1,c
  4235  0002F0  0E00               	movlw	0
  4236  0002F2  6EE6               	movwf	postinc1,c
  4237  0002F4  C00B  FFE6         	movff	_who,postinc1
  4238  0002F8  C00C  FFE6         	movff	_who+1,postinc1
  4239  0002FC  EC64  F00A         	call	___wmul	;wreg free
  4240  000300  0EC8               	movlw	low (_ready_queue+8)
  4241  000302  2449               	addwf	btemp,w,c
  4242  000304  6ED9               	movwf	fsr2l,c
  4243  000306  0E00               	movlw	high (_ready_queue+8)
  4244  000308  204A               	addwfc	btemp+1,w,c
  4245  00030A  6EDA               	movwf	fsr2h,c
  4246  00030C  0E01               	movlw	1
  4247  00030E  6EDF               	movwf	indf2,c
  4248  000310  0E6E               	movlw	110
  4249  000312  6EE6               	movwf	postinc1,c
  4250  000314  0E00               	movlw	0
  4251  000316  6EE6               	movwf	postinc1,c
  4252  000318  C00B  FFE6         	movff	_who,postinc1
  4253  00031C  C00C  FFE6         	movff	_who+1,postinc1
  4254  000320  EC64  F00A         	call	___wmul	;wreg free
  4255  000324  0EC5               	movlw	low (_ready_queue+5)
  4256  000326  2449               	addwf	btemp,w,c
  4257  000328  6ED9               	movwf	fsr2l,c
  4258  00032A  0E00               	movlw	high (_ready_queue+5)
  4259  00032C  204A               	addwfc	btemp+1,w,c
  4260  00032E  6EDA               	movwf	fsr2h,c
  4261  000330  50DF               	movf	indf2,w,c
  4262  000332  6E69               	movwf	??_ISR_timer0& (0+255),c
  4263  000334  5069               	movf	??_ISR_timer0,w,c
  4264  000336  0E6E               	movlw	110
  4265  000338  6EE6               	movwf	postinc1,c
  4266  00033A  0E00               	movlw	0
  4267  00033C  6EE6               	movwf	postinc1,c
  4268  00033E  C00B  FFE6         	movff	_who,postinc1
  4269  000342  C00C  FFE6         	movff	_who+1,postinc1
  4270  000346  EC64  F00A         	call	___wmul	;wreg free
  4271  00034A  0EC6               	movlw	low (_ready_queue+6)
  4272  00034C  2449               	addwf	btemp,w,c
  4273  00034E  6ED9               	movwf	fsr2l,c
  4274  000350  0E00               	movlw	high (_ready_queue+6)
  4275  000352  204A               	addwfc	btemp+1,w,c
  4276  000354  6EDA               	movwf	fsr2h,c
  4277  000356  50DF               	movf	indf2,w,c
  4278  000358  6ED8               	movwf	status,c	;volatile
  4279  00035A  0E6E               	movlw	110
  4280  00035C  6EE6               	movwf	postinc1,c
  4281  00035E  0E00               	movlw	0
  4282  000360  6EE6               	movwf	postinc1,c
  4283  000362  C00B  FFE6         	movff	_who,postinc1
  4284  000366  C00C  FFE6         	movff	_who+1,postinc1
  4285  00036A  EC64  F00A         	call	___wmul	;wreg free
  4286  00036E  0EC7               	movlw	low (_ready_queue+7)
  4287  000370  2449               	addwf	btemp,w,c
  4288  000372  6ED9               	movwf	fsr2l,c
  4289  000374  0E00               	movlw	high (_ready_queue+7)
  4290  000376  204A               	addwfc	btemp+1,w,c
  4291  000378  6EDA               	movwf	fsr2h,c
  4292  00037A  50DF               	movf	indf2,w,c
  4293  00037C  6EE0               	movwf	bsr,c	;volatile
  4294  00037E  0E6E               	movlw	110
  4295  000380  6EE6               	movwf	postinc1,c
  4296  000382  0E00               	movlw	0
  4297  000384  6EE6               	movwf	postinc1,c
  4298  000386  C00B  FFE6         	movff	_who,postinc1
  4299  00038A  C00C  FFE6         	movff	_who+1,postinc1
  4300  00038E  EC64  F00A         	call	___wmul	;wreg free
  4301  000392  0E26               	movlw	low (_ready_queue+102)
  4302  000394  2449               	addwf	btemp,w,c
  4303  000396  6ED9               	movwf	fsr2l,c
  4304  000398  0E01               	movlw	high (_ready_queue+102)
  4305  00039A  204A               	addwfc	btemp+1,w,c
  4306  00039C  6EDA               	movwf	fsr2h,c
  4307  00039E  CFDE F009          	movff	postinc2,_size
  4308  0003A2  CFDD F00A          	movff	postdec2,_size+1
  4309  0003A6  D07C               	goto	i2l1871
  4310  0003A8                     i2l59:
  4311  0003A8  0005               	push		;# 
  4312  0003AA  0E6E               	movlw	110
  4313  0003AC  6EE6               	movwf	postinc1,c
  4314  0003AE  0E00               	movlw	0
  4315  0003B0  6EE6               	movwf	postinc1,c
  4316  0003B2  C00B  FFE6         	movff	_who,postinc1
  4317  0003B6  C00C  FFE6         	movff	_who+1,postinc1
  4318  0003BA  EC64  F00A         	call	___wmul	;wreg free
  4319  0003BE  0EC0               	movlw	low _ready_queue
  4320  0003C0  6E69               	movwf	??_ISR_timer0& (0+255),c
  4321  0003C2  0E00               	movlw	high _ready_queue
  4322  0003C4  6E6A               	movwf	(??_ISR_timer0+1)& (0+255),c
  4323  0003C6  0E07               	movlw	7
  4324  0003C8  2669               	addwf	??_ISR_timer0,f,c
  4325  0003CA  0E00               	movlw	0
  4326  0003CC  226A               	addwfc	??_ISR_timer0+1,f,c
  4327  0003CE  5049               	movf	btemp,w,c
  4328  0003D0  2669               	addwf	??_ISR_timer0,f,c
  4329  0003D2  504A               	movf	btemp+1,w,c
  4330  0003D4  226A               	addwfc	??_ISR_timer0+1,f,c
  4331  0003D6  0E03               	movlw	3
  4332  0003D8  6EE6               	movwf	postinc1,c
  4333  0003DA  0E00               	movlw	0
  4334  0003DC  6EE6               	movwf	postinc1,c
  4335  0003DE  C009  FFE6         	movff	_size,postinc1
  4336  0003E2  C00A  FFE6         	movff	_size+1,postinc1
  4337  0003E6  EC64  F00A         	call	___wmul	;wreg free
  4338  0003EA  5049               	movf	btemp,w,c
  4339  0003EC  2469               	addwf	??_ISR_timer0,w,c
  4340  0003EE  6ED9               	movwf	fsr2l,c
  4341  0003F0  504A               	movf	btemp+1,w,c
  4342  0003F2  206A               	addwfc	??_ISR_timer0+1,w,c
  4343  0003F4  6EDA               	movwf	fsr2h,c
  4344  0003F6  50DF               	movf	indf2,w,c
  4345  0003F8  6EFD               	movwf	tosl,c	;volatile
  4346  0003FA  0E6E               	movlw	110
  4347  0003FC  6EE6               	movwf	postinc1,c
  4348  0003FE  0E00               	movlw	0
  4349  000400  6EE6               	movwf	postinc1,c
  4350  000402  C00B  FFE6         	movff	_who,postinc1
  4351  000406  C00C  FFE6         	movff	_who+1,postinc1
  4352  00040A  EC64  F00A         	call	___wmul	;wreg free
  4353  00040E  0EC0               	movlw	low _ready_queue
  4354  000410  6E69               	movwf	??_ISR_timer0& (0+255),c
  4355  000412  0E00               	movlw	high _ready_queue
  4356  000414  6E6A               	movwf	(??_ISR_timer0+1)& (0+255),c
  4357  000416  0E08               	movlw	8
  4358  000418  2669               	addwf	??_ISR_timer0,f,c
  4359  00041A  0E00               	movlw	0
  4360  00041C  226A               	addwfc	??_ISR_timer0+1,f,c
  4361  00041E  5049               	movf	btemp,w,c
  4362  000420  2669               	addwf	??_ISR_timer0,f,c
  4363  000422  504A               	movf	btemp+1,w,c
  4364  000424  226A               	addwfc	??_ISR_timer0+1,f,c
  4365  000426  0E03               	movlw	3
  4366  000428  6EE6               	movwf	postinc1,c
  4367  00042A  0E00               	movlw	0
  4368  00042C  6EE6               	movwf	postinc1,c
  4369  00042E  C009  FFE6         	movff	_size,postinc1
  4370  000432  C00A  FFE6         	movff	_size+1,postinc1
  4371  000436  EC64  F00A         	call	___wmul	;wreg free
  4372  00043A  5049               	movf	btemp,w,c
  4373  00043C  2469               	addwf	??_ISR_timer0,w,c
  4374  00043E  6ED9               	movwf	fsr2l,c
  4375  000440  504A               	movf	btemp+1,w,c
  4376  000442  206A               	addwfc	??_ISR_timer0+1,w,c
  4377  000444  6EDA               	movwf	fsr2h,c
  4378  000446  50DF               	movf	indf2,w,c
  4379  000448  6EFE               	movwf	tosh,c	;volatile
  4380  00044A  0E6E               	movlw	110
  4381  00044C  6EE6               	movwf	postinc1,c
  4382  00044E  0E00               	movlw	0
  4383  000450  6EE6               	movwf	postinc1,c
  4384  000452  C00B  FFE6         	movff	_who,postinc1
  4385  000456  C00C  FFE6         	movff	_who+1,postinc1
  4386  00045A  EC64  F00A         	call	___wmul	;wreg free
  4387  00045E  0EC0               	movlw	low _ready_queue
  4388  000460  6E69               	movwf	??_ISR_timer0& (0+255),c
  4389  000462  0E00               	movlw	high _ready_queue
  4390  000464  6E6A               	movwf	(??_ISR_timer0+1)& (0+255),c
  4391  000466  0E06               	movlw	6
  4392  000468  2669               	addwf	??_ISR_timer0,f,c
  4393  00046A  0E00               	movlw	0
  4394  00046C  226A               	addwfc	??_ISR_timer0+1,f,c
  4395  00046E  5049               	movf	btemp,w,c
  4396  000470  2669               	addwf	??_ISR_timer0,f,c
  4397  000472  504A               	movf	btemp+1,w,c
  4398  000474  226A               	addwfc	??_ISR_timer0+1,f,c
  4399  000476  0E03               	movlw	3
  4400  000478  6EE6               	movwf	postinc1,c
  4401  00047A  0E00               	movlw	0
  4402  00047C  6EE6               	movwf	postinc1,c
  4403  00047E  C009  FFE6         	movff	_size,postinc1
  4404  000482  C00A  FFE6         	movff	_size+1,postinc1
  4405  000486  EC64  F00A         	call	___wmul	;wreg free
  4406  00048A  5049               	movf	btemp,w,c
  4407  00048C  2469               	addwf	??_ISR_timer0,w,c
  4408  00048E  6ED9               	movwf	fsr2l,c
  4409  000490  504A               	movf	btemp+1,w,c
  4410  000492  206A               	addwfc	??_ISR_timer0+1,w,c
  4411  000494  6EDA               	movwf	fsr2h,c
  4412  000496  50DF               	movf	indf2,w,c
  4413  000498  6EFF               	movwf	tosu,c	;volatile
  4414  00049A  0609               	decf	_size,f,c
  4415  00049C  A0D8               	btfss	status,0,c
  4416  00049E  060A               	decf	_size+1,f,c
  4417  0004A0                     i2l1871:
  4418  0004A0  5009               	movf	_size,w,c
  4419  0004A2  100A               	iorwf	_size+1,w,c
  4420  0004A4  A4D8               	btfss	status,2,c
  4421  0004A6  D780               	goto	i2l59
  4422  0004A8                     i2u67_40:
  4423                           
  4424                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  4425                           
  4426                           ;int0_test.c: 73:   }
  4427  0004A8  8EF2               	bsf	4082,7,c	;volatile
  4428  0004AA  C076  F054         	movff	??_ISR_timer0+13,btemp+11
  4429  0004AE  C075  F053         	movff	??_ISR_timer0+12,btemp+10
  4430  0004B2  C074  F052         	movff	??_ISR_timer0+11,btemp+9
  4431  0004B6  C073  F051         	movff	??_ISR_timer0+10,btemp+8
  4432  0004BA  C072  F04A         	movff	??_ISR_timer0+9,btemp+1
  4433  0004BE  C071  F049         	movff	??_ISR_timer0+8,btemp
  4434  0004C2  C070  FFF4         	movff	??_ISR_timer0+7,prodh
  4435  0004C6  C06F  FFF3         	movff	??_ISR_timer0+6,prodl
  4436  0004CA  C06E  FFDA         	movff	??_ISR_timer0+5,fsr2h
  4437  0004CE  C06D  FFD9         	movff	??_ISR_timer0+4,fsr2l
  4438  0004D2  C06C  FFE2         	movff	??_ISR_timer0+3,fsr1h
  4439  0004D6  C06B  FFE1         	movff	??_ISR_timer0+2,fsr1l
  4440  0004DA  0011               	retfie		f
  4441  0004DC                     __end_of_ISR_timer0:
  4442                           	opt callstack 0
  4443                           
  4444 ;; *************** function _delay_decrement *****************
  4445 ;; Defined at:
  4446 ;;		line 101 in file "kernel.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  i               2  [STACK] int 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1  [STACK] void 
  4453 ;; Registers used:
  4454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4460 ;;      Params:         0       0       0       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0
  4463 ;;      Totals:         0       0       0       0       0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_ISR_timer0
  4470 ;; This function uses a reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text25
  4474  000996                     __ptext25:
  4475                           	opt callstack 0
  4476  000996                     _delay_decrement:
  4477                           	opt callstack 0
  4478                           
  4479                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4480  000996  52E6               	movf	postinc1,f,c
  4481  000998  52E6               	movf	postinc1,f,c
  4482                           
  4483                           ;kernel.c: 102:   int i;;kernel.c: 104:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  4484                           ;stkvar	_i @ sp[(-2)+0]
  4485                           
  4486                           ;incstack = 0
  4487  00099A  0EFE               	movlw	-2
  4488  00099C  6AE3               	clrf	plusw1,c
  4489  00099E  0EFF               	movlw	-1
  4490  0009A0  6AE3               	clrf	plusw1,c
  4491  0009A2  D070               	goto	l1731
  4492  0009A4                     l1721:
  4493                           
  4494                           ;kernel.c: 105:     if (ready_queue.tasks[i].task_state == WAITING) {
  4495                           ;stkvar	_i @ sp[(-2)+0]
  4496  0009A4  0EFE               	movlw	-2
  4497  0009A6  CFE3 F053          	movff	plusw1,btemp+10
  4498  0009AA  0EFF               	movlw	-1
  4499  0009AC  CFE3 F054          	movff	plusw1,btemp+11
  4500  0009B0  0E6E               	movlw	110
  4501  0009B2  0253               	mulwf	btemp+10,c
  4502  0009B4  CFF3 F051          	movff	prodl,btemp+8
  4503  0009B8  CFF4 F052          	movff	prodh,btemp+9
  4504  0009BC  0254               	mulwf	btemp+11,c
  4505  0009BE  50F3               	movf	prodl,w,c
  4506  0009C0  2652               	addwf	btemp+9,f,c
  4507  0009C2  0EC8               	movlw	low (_ready_queue+8)
  4508  0009C4  2451               	addwf	btemp+8,w,c
  4509  0009C6  6ED9               	movwf	fsr2l,c
  4510  0009C8  0E00               	movlw	high (_ready_queue+8)
  4511  0009CA  2052               	addwfc	btemp+9,w,c
  4512  0009CC  6EDA               	movwf	fsr2h,c
  4513  0009CE  0E02               	movlw	2
  4514  0009D0  18DE               	xorwf	postinc2,w,c
  4515  0009D2  A4D8               	btfss	status,2,c
  4516  0009D4  D048               	goto	l1729
  4517                           
  4518                           ;kernel.c: 106:       ready_queue.tasks[i].task_delay_time--;
  4519                           ;stkvar	_i @ sp[(-2)+0]
  4520  0009D6  0EFE               	movlw	-2
  4521  0009D8  CFE3 F053          	movff	plusw1,btemp+10
  4522  0009DC  0EFF               	movlw	-1
  4523  0009DE  CFE3 F054          	movff	plusw1,btemp+11
  4524  0009E2  0E6E               	movlw	110
  4525  0009E4  0253               	mulwf	btemp+10,c
  4526  0009E6  CFF3 F051          	movff	prodl,btemp+8
  4527  0009EA  CFF4 F052          	movff	prodh,btemp+9
  4528  0009EE  0254               	mulwf	btemp+11,c
  4529  0009F0  50F3               	movf	prodl,w,c
  4530  0009F2  2652               	addwf	btemp+9,f,c
  4531  0009F4  0E2C               	movlw	low (_ready_queue+108)
  4532  0009F6  2451               	addwf	btemp+8,w,c
  4533  0009F8  6ED9               	movwf	fsr2l,c
  4534  0009FA  0E01               	movlw	high (_ready_queue+108)
  4535  0009FC  2052               	addwfc	btemp+9,w,c
  4536  0009FE  6EDA               	movwf	fsr2h,c
  4537  000A00  06DE               	decf	postinc2,f,c
  4538  000A02  0E00               	movlw	0
  4539  000A04  5ADD               	subwfb	postdec2,f,c
  4540                           
  4541                           ;kernel.c: 107:       if (ready_queue.tasks[i].task_delay_time == 0) {
  4542                           ;stkvar	_i @ sp[(-2)+0]
  4543  000A06  0EFE               	movlw	-2
  4544  000A08  CFE3 F053          	movff	plusw1,btemp+10
  4545  000A0C  0EFF               	movlw	-1
  4546  000A0E  CFE3 F054          	movff	plusw1,btemp+11
  4547  000A12  0E6E               	movlw	110
  4548  000A14  0253               	mulwf	btemp+10,c
  4549  000A16  CFF3 F051          	movff	prodl,btemp+8
  4550  000A1A  CFF4 F052          	movff	prodh,btemp+9
  4551  000A1E  0254               	mulwf	btemp+11,c
  4552  000A20  50F3               	movf	prodl,w,c
  4553  000A22  2652               	addwf	btemp+9,f,c
  4554  000A24  0E2C               	movlw	low (_ready_queue+108)
  4555  000A26  2451               	addwf	btemp+8,w,c
  4556  000A28  6ED9               	movwf	fsr2l,c
  4557  000A2A  0E01               	movlw	high (_ready_queue+108)
  4558  000A2C  2052               	addwfc	btemp+9,w,c
  4559  000A2E  6EDA               	movwf	fsr2h,c
  4560  000A30  50DE               	movf	postinc2,w,c
  4561  000A32  10DE               	iorwf	postinc2,w,c
  4562  000A34  A4D8               	btfss	status,2,c
  4563  000A36  D017               	goto	l1729
  4564                           
  4565                           ;kernel.c: 108:         ready_queue.tasks[i].task_state = READY;
  4566                           ;stkvar	_i @ sp[(-2)+0]
  4567  000A38  0EFE               	movlw	-2
  4568  000A3A  CFE3 F053          	movff	plusw1,btemp+10
  4569  000A3E  0EFF               	movlw	-1
  4570  000A40  CFE3 F054          	movff	plusw1,btemp+11
  4571  000A44  0E6E               	movlw	110
  4572  000A46  0253               	mulwf	btemp+10,c
  4573  000A48  CFF3 F051          	movff	prodl,btemp+8
  4574  000A4C  CFF4 F052          	movff	prodh,btemp+9
  4575  000A50  0254               	mulwf	btemp+11,c
  4576  000A52  50F3               	movf	prodl,w,c
  4577  000A54  2652               	addwf	btemp+9,f,c
  4578  000A56  0EC8               	movlw	low (_ready_queue+8)
  4579  000A58  2451               	addwf	btemp+8,w,c
  4580  000A5A  6ED9               	movwf	fsr2l,c
  4581  000A5C  0E00               	movlw	high (_ready_queue+8)
  4582  000A5E  2052               	addwfc	btemp+9,w,c
  4583  000A60  6EDA               	movwf	fsr2h,c
  4584  000A62  0E00               	movlw	0
  4585  000A64  6EDF               	movwf	indf2,c
  4586  000A66                     l1729:
  4587                           
  4588                           ;kernel.c: 114:   }
  4589                           ;stkvar	_i @ sp[(-2)+0]
  4590  000A66  0EFE               	movlw	-2
  4591  000A68  50E3               	movf	plusw1,w,c
  4592  000A6A  0F01               	addlw	1
  4593  000A6C  6E49               	movwf	btemp,c
  4594  000A6E  0EFE               	movlw	-2
  4595  000A70  C049  FFE3         	movff	btemp,plusw1
  4596  000A74  6A49               	clrf	btemp,c
  4597  000A76  0EFF               	movlw	-1
  4598  000A78  50E3               	movf	plusw1,w,c
  4599  000A7A  2049               	addwfc	btemp,w,c
  4600  000A7C  6E49               	movwf	btemp,c
  4601  000A7E  0EFF               	movlw	-1
  4602  000A80  C049  FFE3         	movff	btemp,plusw1
  4603  000A84                     l1731:
  4604  000A84  EE23  F054         	lfsr	2,_ready_queue+660
  4605                           
  4606                           ;stkvar	_i @ sp[(-2)+0]
  4607  000A88  0EFE               	movlw	-2
  4608  000A8A  CFE3 F049          	movff	plusw1,btemp
  4609  000A8E  50DE               	movf	postinc2,w,c
  4610  000A90  5C49               	subwf	btemp,w,c
  4611  000A92  0EFF               	movlw	-1
  4612  000A94  CFE3 F049          	movff	plusw1,btemp
  4613  000A98  50DE               	movf	postinc2,w,c
  4614  000A9A  5849               	subwfb	btemp,w,c
  4615  000A9C  A0D8               	btfss	status,0,c
  4616  000A9E  D782               	goto	l1721
  4617                           
  4618                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  4619  000AA0  52E5               	movf	postdec1,f,c
  4620  000AA2  52E5               	movf	postdec1,f,c
  4621  000AA4  0012               	return		;funcret
  4622  000AA6                     __end_of_delay_decrement:
  4623                           	opt callstack 0
  4624                           
  4625 ;; *************** function ___wmul *****************
  4626 ;; Defined at:
  4627 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  multiplier      2  [STACK] unsigned int 
  4630 ;;  multiplicand    2  [STACK] unsigned int 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  product         2  [STACK] unsigned int 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  2  [STACK] unsigned int 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4642 ;;      Params:         0       0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_ISR_timer0
  4652 ;; This function uses a reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text26
  4656  0014C8                     __ptext26:
  4657                           	opt callstack 0
  4658  0014C8                     ___wmul:
  4659                           	opt callstack 0
  4660                           
  4661                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4662  0014C8  52E6               	movf	postinc1,f,c
  4663  0014CA  52E6               	movf	postinc1,f,c
  4664                           
  4665                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4666                           
  4667                           ;incstack = 0
  4668  0014CC  0EFA               	movlw	-6
  4669  0014CE  CFE3 F054          	movff	plusw1,btemp+11
  4670                           
  4671                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4672  0014D2  0EFC               	movlw	-4
  4673  0014D4  50E3               	movf	plusw1,w,c
  4674  0014D6  0254               	mulwf	btemp+11,c
  4675                           
  4676                           ;stkvar	_product @ sp[(-2)+0]
  4677  0014D8  0EFE               	movlw	-2
  4678  0014DA  CFF3 FFE3          	movff	prodl,plusw1
  4679  0014DE  0EFF               	movlw	-1
  4680  0014E0  CFF4 FFE3          	movff	prodh,plusw1
  4681                           
  4682                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4683  0014E4  0EFB               	movlw	251
  4684  0014E6  24E1               	addwf	fsr1l,w,c
  4685  0014E8  6ED9               	movwf	fsr2l,c
  4686  0014EA  0EFF               	movlw	255
  4687  0014EC  20E2               	addwfc	fsr1h,w,c
  4688  0014EE  6EDA               	movwf	fsr2h,c
  4689  0014F0  50DF               	movf	indf2,w,c
  4690  0014F2  6E54               	movwf	btemp+11,c
  4691                           
  4692                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4693  0014F4  0EFC               	movlw	-4
  4694  0014F6  50E3               	movf	plusw1,w,c
  4695  0014F8  0254               	mulwf	btemp+11,c
  4696  0014FA  CFF3 FFF4          	movff	prodl,prodh
  4697  0014FE  6AF3               	clrf	prodl,c
  4698                           
  4699                           ;stkvar	_product @ sp[(-2)+0]
  4700  001500  50E1               	movf	fsr1l,w,c
  4701  001502  0FFE               	addlw	-2
  4702  001504  6ED9               	movwf	fsr2l,c
  4703  001506  50E2               	movf	fsr1h,w,c
  4704  001508  6EDA               	movwf	fsr2h,c
  4705  00150A  0EFF               	movlw	255
  4706  00150C  22DA               	addwfc	fsr2h,f,c
  4707  00150E  50F3               	movf	prodl,w,c
  4708  001510  26DE               	addwf	postinc2,f,c
  4709  001512  50F4               	movf	prodh,w,c
  4710  001514  22DD               	addwfc	postdec2,f,c
  4711                           
  4712                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4713  001516  0EFA               	movlw	-6
  4714  001518  CFE3 F054          	movff	plusw1,btemp+11
  4715                           
  4716                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4717  00151C  0EFD               	movlw	253
  4718  00151E  24E1               	addwf	fsr1l,w,c
  4719  001520  6ED9               	movwf	fsr2l,c
  4720  001522  0EFF               	movlw	255
  4721  001524  20E2               	addwfc	fsr1h,w,c
  4722  001526  6EDA               	movwf	fsr2h,c
  4723  001528  50DF               	movf	indf2,w,c
  4724  00152A  0254               	mulwf	btemp+11,c
  4725  00152C  CFF3 FFF4          	movff	prodl,prodh
  4726  001530  6AF3               	clrf	prodl,c
  4727                           
  4728                           ;stkvar	_product @ sp[(-2)+0]
  4729  001532  50E1               	movf	fsr1l,w,c
  4730  001534  0FFE               	addlw	-2
  4731  001536  6ED9               	movwf	fsr2l,c
  4732  001538  50E2               	movf	fsr1h,w,c
  4733  00153A  6EDA               	movwf	fsr2h,c
  4734  00153C  0EFF               	movlw	255
  4735  00153E  22DA               	addwfc	fsr2h,f,c
  4736  001540  50F3               	movf	prodl,w,c
  4737  001542  26DE               	addwf	postinc2,f,c
  4738  001544  50F4               	movf	prodh,w,c
  4739  001546  22DD               	addwfc	postdec2,f,c
  4740                           
  4741                           ;stkvar	_product @ sp[(-2)+0]
  4742  001548  0EFE               	movlw	-2
  4743  00154A  CFE3 F049          	movff	plusw1,btemp
  4744  00154E  0EFF               	movlw	-1
  4745  001550  CFE3 F04A          	movff	plusw1,btemp+1
  4746                           
  4747                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  4748  001554  0EFA               	movlw	250
  4749  001556  26E1               	addwf	fsr1l,f,c
  4750  001558  0EFF               	movlw	255
  4751  00155A  22E2               	addwfc	fsr1h,f,c
  4752  00155C  0012               	return		;funcret
  4753  00155E                     __end_of___wmul:
  4754                           	opt callstack 0
  4755  0000                     
  4756                           	psect	text27
  4757  000000                     __ptext27:
  4758                           	opt callstack 0
  4759                           
  4760                           	psect	rparam
  4761  0000                     
  4762                           	psect	temp
  4763  000049                     btemp:
  4764                           	opt callstack 0
  4765  000049                     	ds	32
  4766  0000                     wtemp0	set	btemp
  4767  0000                     wtemp1	set	btemp+2
  4768  0000                     wtemp2	set	btemp+4
  4769  0000                     wtemp3	set	btemp+6
  4770  0000                     wtemp4	set	btemp+8
  4771  0000                     wtemp5	set	btemp+10
  4772  0000                     wtemp8	set	btemp+1
  4773  0000                     ttemp0	set	btemp
  4774  0000                     ttemp1	set	btemp+3
  4775  0000                     ttemp2	set	btemp+6
  4776  0000                     ttemp3	set	btemp+9
  4777  0000                     ttemp5	set	btemp+1
  4778  0000                     ttemp6	set	btemp+4
  4779  0000                     ttemp7	set	btemp+8
  4780  0000                     ltemp0	set	btemp
  4781  0000                     ltemp1	set	btemp+4
  4782  0000                     ltemp2	set	btemp+8
  4783  0000                     lltemp0	set	btemp
  4784  0000                     lltemp1	set	btemp+8
  4785  0000                     lltemp2	set	btemp+16
  4786  0000                     lltemp3	set	btemp+24
  4787                           tosu	equ	0xFFF
  4788                           tosh	equ	0xFFE
  4789                           tosl	equ	0xFFD
  4790                           stkptr	equ	0xFFC
  4791                           pclatu	equ	0xFFB
  4792                           pclath	equ	0xFFA
  4793                           pcl	equ	0xFF9
  4794                           tblptru	equ	0xFF8
  4795                           tblptrh	equ	0xFF7
  4796                           tblptrl	equ	0xFF6
  4797                           tablat	equ	0xFF5
  4798                           prodh	equ	0xFF4
  4799                           prodl	equ	0xFF3
  4800                           indf0	equ	0xFEF
  4801                           postinc0	equ	0xFEE
  4802                           postdec0	equ	0xFED
  4803                           preinc0	equ	0xFEC
  4804                           plusw0	equ	0xFEB
  4805                           fsr0h	equ	0xFEA
  4806                           fsr0l	equ	0xFE9
  4807                           wreg	equ	0xFE8
  4808                           indf1	equ	0xFE7
  4809                           postinc1	equ	0xFE6
  4810                           postdec1	equ	0xFE5
  4811                           preinc1	equ	0xFE4
  4812                           plusw1	equ	0xFE3
  4813                           fsr1h	equ	0xFE2
  4814                           fsr1l	equ	0xFE1
  4815                           bsr	equ	0xFE0
  4816                           indf2	equ	0xFDF
  4817                           postinc2	equ	0xFDE
  4818                           postdec2	equ	0xFDD
  4819                           preinc2	equ	0xFDC
  4820                           plusw2	equ	0xFDB
  4821                           fsr2h	equ	0xFDA
  4822                           fsr2l	equ	0xFD9
  4823                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1312
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      88
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    mem	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> out_sem(BANK0[16]), cover_sem(BANK0[16]), check_sem(COMRAM[16]), fill_sem(COMRAM[16]), 
		 -> count_sem(COMRAM[16]), r_pipe(BANK0[16]), w_pipe(BANK0[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> out_sem(BANK0[16]), cover_sem(BANK0[16]), check_sem(COMRAM[16]), fill_sem(COMRAM[16]), 
		 -> count_sem(COMRAM[16]), r_pipe(BANK0[16]), w_pipe(BANK0[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> out_sem(BANK0[16]), cover_sem(BANK0[16]), check_sem(COMRAM[16]), fill_sem(COMRAM[16]), 
		 -> count_sem(COMRAM[16]), r_pipe(BANK0[16]), w_pipe(BANK0[16]), 

    data	PTR unsigned int  size(2) Largest target is 2
		 -> data(STACK[2]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    S545pipe$r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    p.r	PTR struct semaphore size(2) Largest target is 16
		 -> r_pipe(BANK0[16]), 

    S545pipe$w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p.w	PTR struct semaphore size(2) Largest target is 16
		 -> w_pipe(BANK0[16]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    S258pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1159
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0     352
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _pipe_create                                          6     0      6     264
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     347
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   114   110      4     211
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0    1124
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         2     2      0    2155
                    _lunos_delayTask
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            4     4      0    2168
                    _lunos_delayTask
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0    1124
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0    1102
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         2     2      0    2155
                    _lunos_delayTask
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            4     4      0    2168
                    _lunos_delayTask
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer0                                         14    14      0     498
                                              0 COMRAM    14    14      0
                             ___wmul
                    _delay_decrement
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (13) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _user_conf
     _pipe_create
       _sem_init
     _sem_init

 _task_idle (ROOT)

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   _delay_decrement
   _round_robin
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     498      17       76.6%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      58       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98      15        0.0%
DATA                 0      0     530       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun 10 14:51:34 2019

                        _p 003D   __end_of_lunos_createTask 0CC0                        l300 1606  
                      l310 185E                        l127 086C                        l321 169E  
                      l331 16D8                        l343 1014                        l360 134C  
                      l337 0FD8                        l346 1026                        l338 0FF4  
                      l186 1770                        l363 1386                        l349 1038  
                      l296 15F0                        _BSR 000FE0                        u501 0CA4  
                      u510 11F2                        u550 144C                        u570 14B2  
                      u490 0990                        _TOS 000FFD                        _who 000B  
              _round_robin 155E                        wreg 000FE8               __CFG_WDT$OFF 000000  
                     l2011 104C                       l2003 1040                       l2015 1070  
                     l2041 13B4                       l1701 1424                       l1613 0988  
                     l1711 1494                       l1607 0792                       l1721 09A4  
                     l1731 0A84                       l1911 1650                       l1735 156E  
                     l1655 1238                       l1647 11DE                       l1729 0A66  
                     l1593 06B0                       l1683 11A6                       l1589 0596  
                     l1695 0FCC                       l1961 16C8                       l1963 16CC  
                     l1955 16BC                       l1957 16C0                       l1991 101C  
                     l1967 16D4                       l1997 102E                       i2l59 03A8  
                     _TOSH 000FFE                       _TOSL 000FFD                       _WREG 000FE8  
                     _TOSU 000FFF                       _main 16F4              _global_buffer 0001  
   __size_of_count_bottles 0086                       _size 0009                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0049                       prodh 000FF4                       prodl 000FF3  
                     start 000C               ___param_bank 000000            __end_of___lwmod 14C8  
                    _TMR0L 000FD6                      u53_20 0F04                      u70_20 1660  
                    u73_20 1868                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      u90_20 10A8                      u82_20 0FFE  
                    u76_20 16A8                ?_ISR_timer0 0069       __size_of_check_level 0080  
                    _count 0007                      tablat 000FF5                      ltemp0 0049  
                    ltemp1 004D                      ltemp2 0051                      plusw0 000FEB  
                    plusw1 000FE3                      plusw2 000FDB                      ttemp0 0049  
                    ttemp1 004C                      ttemp2 004F                      ttemp3 0052  
                    ttemp5 004A                      ttemp6 004D                      ttemp7 0051  
                    status 000FD8                      wtemp0 0049                      wtemp1 004B  
                    wtemp2 004D                      wtemp3 004F                      wtemp4 0051  
                    wtemp5 0053                      wtemp8 004A   __size_of_delay_decrement 0110  
          __initialization 1884               __end_of_main 1772              _count_bottles 15EE  
            __activetblptr 000000                     i2l1851 0222                     i2l1871 04A0  
                   i2l1847 012C                     i2l1865 02EC                     _STATUS 000FD8  
                   _STKPTR 000FFC       __size_of_config_INT0 0010       __size_of_fill_bottle 0050  
      __size_of_ISR_timer0 04D4                     ___wmul 14C8                     clear_0 18A4  
                   clear_1 18B6                     clear_2 18C2                     _r_pipe 0080  
                   _w_pipe 0090           __end_of_sem_init 17E2           __end_of_sem_wait 11AE  
         __end_of_sem_post 0FD4               __pdataCOMRAM 0077                     lltemp0 0049  
                   lltemp1 0051                     lltemp2 0059                     lltemp3 0061  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0080    __end_of__initialization 18C8            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001             __pcstackCOMRAM 0069                 ___inthi_sp 0590  
     __end_of_cover_bottle 10CE                 __pbssBANK0 0080         __size_of_count_out 00C8  
            __uDynamicHeap 0358         __size_of_scheduler 0006         __size_of_pipe_read 0108  
       __size_of_task_idle 0004               ??_ISR_timer0 0069                    i2u63_40 005E  
                  i2u63_46 0060                    i2u64_40 0086                    i2u64_41 0084  
                  i2u67_40 04A8                 _dispatcher 04DC            _lunos_delayTask 17E2  
     __size_of_pipe_create 010E         __size_of_user_conf 00C8                    __Hparam 0000  
                  __Lparam 0000            __size_of___wmul 0096         __end_of_ISR_timer0 04DC  
                  ___lwmod 140C                    __pcinit 1884                    __ramtop 0600  
        __end_of_count_out 140C                    __ptext0 16F4                    __ptext1 127C  
                  __ptext2 0AA6                    __ptext3 1772                    __ptext4 18CE  
                  __ptext5 0BB4                    __ptext6 11AE                    __ptext7 04DC  
                  __ptext8 1922                    __ptext9 155E                  _T0CONbits 000FD5  
                  _quantum 0077                    _out_sem 00A0          __end_of_scheduler 1928  
           __pintcode_body 0014       end_of_initialization 18C8          __end_of_pipe_read 0ED2  
        __end_of_task_idle 192C                    int_func 0014                 _pipe_write 0CC0  
    __end_of_config_timer0 1912                    postdec0 000FED                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 _lunos_init 18CE          __end_of_user_conf 1344  
                _PORTBbits 000F81                  _PORTCbits 000F82                  _PORTDbits 000F83  
  __end_of_lunos_delayTask 1834      __size_of_cover_bottle 00FA                  _TRISDbits 000F95  
     __size_of_round_robin 0090        __end_of_check_level 16F4            _delay_decrement 0996  
             _cover_bottle 0FD4             __end_of___wmul 155E              __pidataCOMRAM 192C  
      start_initialization 1884  __size_of_lunos_createTask 010C        __end_of_config_INT0 1922  
      __size_of_dispatcher 04BA        __end_of_fill_bottle 1884                __pbssBIGRAM 00C0  
              __pbssCOMRAM 0001                _check_level 1674    __end_of_delay_decrement 0AA6  
     __end_of_SRAMInitHeap 127C                  _check_sem 000D                  __pintcode 0008  
        __size_of_sem_init 0070          __size_of_sem_wait 00E0          __size_of_sem_post 0102  
    __end_of_count_bottles 1674        __size_of_pipe_write 010A                  _cover_sem 00B0  
                _count_sem 002D                  _count_out 1344        __size_of_lunos_init 0032  
                _scheduler 1922                   _LATDbits 000F8C                _config_INT0 1912  
                _pipe_read 0DCA                _fill_bottle 1834                  _task_idle 1928  
                _user_conf 127C           _lunos_createTask 0BB4                _INTCON2bits 000FF1  
      __end_of_pipe_create 0BB4                   __Hrparam 0000                   __Lrparam 0000  
       __end_of_dispatcher 0996           __size_of___lwmod 00BC     __size_of_config_timer0 0012  
    __size_of_SRAMInitHeap 00CE                   __ptext10 140C                   __ptext11 1900  
                 __ptext20 0FD4                   __ptext12 1912                   __ptext21 0CC0  
                 __ptext13 1928                   __ptext22 1344                   __ptext14 15EE  
                 __ptext23 0DCA                   __ptext15 10CE                   __ptext16 0ED2  
                 __ptext25 0996                   __ptext17 17E2                   __ptext26 14C8  
                 __ptext18 1834                   __ptext27 0000                   __ptext19 1674  
                 _fill_sem 001D              __size_of_main 007E                _ready_queue 00C0  
                 _sem_init 1772                   _sem_wait 10CE                   _sem_post 0ED2  
             _SRAMInitHeap 11AE                 _INTCONbits 000FF2         __end_of_pipe_write 0DCA  
              _pipe_create 0AA6        __end_of_round_robin 15EE                   intlevel1 0000  
                 intlevel2 0000         __end_of_lunos_init 1900              _config_timer0 1900  
               _ISR_timer0 0008   __size_of_lunos_delayTask 0052  
