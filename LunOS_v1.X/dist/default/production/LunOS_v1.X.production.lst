

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun  5 15:30:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 2.05
    53                           ; Generated 20/12/2018 GMT
    54                           ; 
    55                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87 ;;_p	offset=-2 (param)
    88 ;;_w	offset=-4 (param)
    89 ;;_r	offset=-6 (param)
    90 ;;_s	offset=-2 (param)
    91 ;;_valor	offset=-4 (param)
    92 ;;_pHeap	offset	0
    93 ;;_temp	offset	2
    94 ;;_segHeader	offset	4
    95 ;;_segLen	offset	5
    96 ;;_nBytes	offset=-1 (param)
    97 ;;_pSegB	offset	0
    98 ;;_uSegB	offset	2
    99 ;;_uSegA	offset	3
   100 ;;_uSum	offset	4
   101 ;;_pSegA	offset=-2 (param)
   102 ;;_new_task	offset	0
   103 ;;_prior	offset=-2 (param)
   104 ;;_f	offset=-4 (param)
   105 ;;_count	offset	0
   106 ;;_pHeap	offset	2
   107 ;;_state	offset=-1 (param)
   108 ;;_next_task_to_run	offset	0
   109 ;;_counter	offset	0
   110 ;;_dividend	offset=-2 (param)
   111 ;;_divisor	offset=-4 (param)
   112 ;;_bottle	offset	0
   113 ;;_s	offset=-2 (param)
   114 ;;_s	offset=-2 (param)
   115 ;;_time	offset=-2 (param)
   116 ;;_state	offset=-1 (param)
   117 ;;_next_task_to_run	offset	0
   118 ;;_counter	offset	0
   119 ;;_dividend	offset=-2 (param)
   120 ;;_divisor	offset=-4 (param)
   121 ;;_out_bottles	offset	0
   122 ;;_p	offset=-2 (param)
   123 ;;_data	offset=-4 (param)
   124 ;;_dado	offset	0
   125 ;;_p	offset=-2 (param)
   126 ;;_data	offset=-4 (param)
   127 ;;_i	offset	0
   128 ;;_i	offset	0
   129 ;;_next_task_to_run	offset	0
   130 ;;_counter	offset	0
   131 ;;_dividend	offset=-2 (param)
   132 ;;_divisor	offset=-4 (param)
   133 ;;_i	offset	0
   134 ;;_product	offset	0
   135 ;;_multiplier	offset=-2 (param)
   136 ;;_multiplicand	offset=-4 (param)
   137                           
   138                           	psect	idataCOMRAM
   139  001C2A                     __pidataCOMRAM:
   140                           	opt callstack 0
   141                           
   142                           ;initializer for _quantum
   143  001C2A  000A               	dw	10
   144  0000                     _TOS	set	4093
   145  0000                     _PORTBbits	set	3969
   146  0000                     _PORTCbits	set	3970
   147  0000                     _TRISD	set	3989
   148  0000                     _TRISC	set	3988
   149  0000                     _TRISB	set	3987
   150  0000                     _STKPTR	set	4092
   151  0000                     _TOSL	set	4093
   152  0000                     _TOSH	set	4094
   153  0000                     _TOSU	set	4095
   154  0000                     _BSR	set	4064
   155  0000                     _STATUS	set	4056
   156  0000                     _WREG	set	4072
   157  0000                     _PORTDbits	set	3971
   158  0000                     _TMR0L	set	4054
   159  0000                     _T0CONbits	set	4053
   160  0000                     _INTCON2bits	set	4081
   161  0000                     _INTCONbits	set	4082
   162  0000                     _TRISDbits	set	3989
   163  0000                     _FREE	set	32052
   164                           
   165                           ; #config settings
   166  0000                     
   167                           	psect	cinit
   168  001AB4                     __pcinit:
   169                           	opt callstack 0
   170  001AB4                     start_initialization:
   171                           	opt callstack 0
   172  001AB4                     __initialization:
   173                           	opt callstack 0
   174                           
   175                           ; Initialize objects allocated to COMRAM (2 bytes)
   176                           ; load TBLPTR registers with __pidataCOMRAM
   177  001AB4  0E2A               	movlw	low __pidataCOMRAM
   178  001AB6  6EF6               	movwf	tblptrl,c
   179  001AB8  0E1C               	movlw	high __pidataCOMRAM
   180  001ABA  6EF7               	movwf	tblptrh,c
   181  001ABC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   182  001ABE  6EF8               	movwf	tblptru,c
   183  001AC0  0009               	tblrd		*+	;fetch initializer
   184  001AC2  CFF5 F073          	movff	tablat,__pdataCOMRAM
   185  001AC6  0009               	tblrd		*+	;fetch initializer
   186  001AC8  CFF5 F074          	movff	tablat,__pdataCOMRAM+1
   187                           
   188                           ; Clear objects allocated to BIGRAM (1056 bytes)
   189  001ACC  EE00  F0D4         	lfsr	0,__pbssBIGRAM
   190  001AD0  EE24 F020          	lfsr	2,1056
   191  001AD4                     clear_0:
   192  001AD4  6AEE               	clrf	postinc0,c
   193  001AD6  50DD               	movf	postdec2,w,c
   194  001AD8  50D9               	movf	fsr2l,w,c
   195  001ADA  E1FC               	bnz	clear_0
   196  001ADC  50DA               	movf	fsr2h,w,c
   197  001ADE  E1FA               	bnz	clear_0
   198                           
   199                           ; Clear objects allocated to BANK0 (84 bytes)
   200  001AE0  EE00  F080         	lfsr	0,__pbssBANK0
   201  001AE4  0E54               	movlw	84
   202  001AE6                     clear_1:
   203  001AE6  6AEE               	clrf	postinc0,c
   204  001AE8  06E8               	decf	wreg,f,c
   205  001AEA  E1FD               	bnz	clear_1
   206                           
   207                           ; Clear objects allocated to COMRAM (66 bytes)
   208  001AEC  EE00  F001         	lfsr	0,__pbssCOMRAM
   209  001AF0  0E42               	movlw	66
   210  001AF2                     clear_2:
   211  001AF2  6AEE               	clrf	postinc0,c
   212  001AF4  06E8               	decf	wreg,f,c
   213  001AF6  E1FD               	bnz	clear_2
   214  001AF8                     end_of_initialization:
   215                           	opt callstack 0
   216  001AF8                     __end_of__initialization:
   217                           	opt callstack 0
   218  001AF8  0100               	movlb	0
   219  001AFA  EFBD  F00B         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222  000001                     __pbssCOMRAM:
   223                           	opt callstack 0
   224  000001                     _global_buffer:
   225                           	opt callstack 0
   226  000001                     	ds	6
   227  000007                     _mem:
   228                           	opt callstack 0
   229  000007                     	ds	2
   230  000009                     _size:
   231                           	opt callstack 0
   232  000009                     	ds	2
   233  00000B                     _who:
   234                           	opt callstack 0
   235  00000B                     	ds	2
   236  00000D                     _check_sem:
   237                           	opt callstack 0
   238  00000D                     	ds	14
   239  00001B                     _fill_sem:
   240                           	opt callstack 0
   241  00001B                     	ds	14
   242  000029                     _count_sem:
   243                           	opt callstack 0
   244  000029                     	ds	14
   245  000037                     _p:
   246                           	opt callstack 0
   247  000037                     	ds	12
   248                           
   249                           	psect	dataCOMRAM
   250  000073                     __pdataCOMRAM:
   251                           	opt callstack 0
   252  000073                     _quantum:
   253                           	opt callstack 0
   254  000073                     	ds	2
   255                           
   256                           	psect	bssBANK0
   257  000080                     __pbssBANK0:
   258                           	opt callstack 0
   259  000080                     _out_sem:
   260                           	opt callstack 0
   261  000080                     	ds	14
   262  00008E                     _cover_sem:
   263                           	opt callstack 0
   264  00008E                     	ds	14
   265  00009C                     _r_pipe:
   266                           	opt callstack 0
   267  00009C                     	ds	14
   268  0000AA                     _w_pipe:
   269                           	opt callstack 0
   270  0000AA                     	ds	14
   271  0000B8                     _teste_2:
   272                           	opt callstack 0
   273  0000B8                     	ds	14
   274  0000C6                     _teste_1:
   275                           	opt callstack 0
   276  0000C6                     	ds	14
   277                           
   278                           	psect	bssBIGRAM
   279  0000D4                     __pbssBIGRAM:
   280                           	opt callstack 0
   281  0000D4                     _ready_queue:
   282                           	opt callstack 0
   283  0000D4                     	ds	544
   284  0002F4                     __uDynamicHeap:
   285                           	opt callstack 0
   286  0002F4                     	ds	512
   287                           
   288                           	psect	cstackCOMRAM
   289  000063                     __pcstackCOMRAM:
   290                           	opt callstack 0
   291  000063                     ??_ISR_timer0:
   292                           
   293                           ; 1 bytes @ 0x0
   294  000063                     	ds	16
   295                           
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 16 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1  [STACK] void 
   308 ;; Registers used:
   309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   315 ;;      Params:         0       0       0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0
   318 ;;      Totals:         0       0       0       0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels required when called:   14
   321 ;; This function calls:
   322 ;;		_config_INT0
   323 ;;		_config_timer0
   324 ;;		_dispatcher
   325 ;;		_lunos_createTask
   326 ;;		_lunos_init
   327 ;;		_user_conf
   328 ;; This function is called by:
   329 ;;		Startup code after reset
   330 ;; This function uses a reentrant model
   331 ;;
   332                           
   333                           	psect	text0
   334  00177A                     __ptext0:
   335                           	opt callstack 0
   336  00177A                     _main:
   337                           	opt callstack 17
   338                           
   339                           ;main.c: 18:   lunos_createTask(5, &check_level);
   340                           
   341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   342                           ;incstack = 0
   343  00177A  ECBE  F00D         	call	_lunos_init	;wreg free
   344                           
   345                           ;main.c: 20:   lunos_createTask(7, &count_out);
   346  00177E  ECD7  F00A         	call	_user_conf	;wreg free
   347                           
   348                           ;main.c: 21: 
   349  001782  EC08  F00E         	call	_config_INT0	;wreg free
   350                           
   351                           ;main.c: 22: 
   352  001786  ECFF  F00D         	call	_config_timer0	;wreg free
   353                           
   354                           ;main.c: 30: }
   355  00178A  0E5A               	movlw	low _count_bottles
   356  00178C  6EE6               	movwf	postinc1,c
   357  00178E  0E19               	movlw	high _count_bottles
   358  001790  6EE6               	movwf	postinc1,c
   359  001792  0E03               	movlw	3
   360  001794  6EE6               	movwf	postinc1,c
   361  001796  0E00               	movlw	0
   362  001798  6EE6               	movwf	postinc1,c
   363  00179A  EC48  F008         	call	_lunos_createTask	;wreg free
   364  00179E  0ED8               	movlw	low _fill_bottle
   365  0017A0  6EE6               	movwf	postinc1,c
   366  0017A2  0E1B               	movlw	high _fill_bottle
   367  0017A4  6EE6               	movwf	postinc1,c
   368  0017A6  0E04               	movlw	4
   369  0017A8  6EE6               	movwf	postinc1,c
   370  0017AA  0E00               	movlw	0
   371  0017AC  6EE6               	movwf	postinc1,c
   372  0017AE  EC48  F008         	call	_lunos_createTask	;wreg free
   373  0017B2  0E3E               	movlw	low _check_level
   374  0017B4  6EE6               	movwf	postinc1,c
   375  0017B6  0E1B               	movlw	high _check_level
   376  0017B8  6EE6               	movwf	postinc1,c
   377  0017BA  0E05               	movlw	5
   378  0017BC  6EE6               	movwf	postinc1,c
   379  0017BE  0E00               	movlw	0
   380  0017C0  6EE6               	movwf	postinc1,c
   381  0017C2  EC48  F008         	call	_lunos_createTask	;wreg free
   382  0017C6  0E18               	movlw	low _cover_bottle
   383  0017C8  6EE6               	movwf	postinc1,c
   384  0017CA  0E1A               	movlw	high _cover_bottle
   385  0017CC  6EE6               	movwf	postinc1,c
   386  0017CE  0E06               	movlw	6
   387  0017D0  6EE6               	movwf	postinc1,c
   388  0017D2  0E00               	movlw	0
   389  0017D4  6EE6               	movwf	postinc1,c
   390  0017D6  EC48  F008         	call	_lunos_createTask	;wreg free
   391  0017DA  0E76               	movlw	low _count_out
   392  0017DC  6EE6               	movwf	postinc1,c
   393  0017DE  0E18               	movlw	high _count_out
   394  0017E0  6EE6               	movwf	postinc1,c
   395  0017E2  0E07               	movlw	7
   396  0017E4  6EE6               	movwf	postinc1,c
   397  0017E6  0E00               	movlw	0
   398  0017E8  6EE6               	movwf	postinc1,c
   399  0017EA  EC48  F008         	call	_lunos_createTask	;wreg free
   400  0017EE  0E00               	movlw	0
   401  0017F0  6EE6               	movwf	postinc1,c
   402  0017F2  EC66  F002         	call	_dispatcher	;wreg free
   403  0017F6                     l186:
   404  0017F6  D7FF               	goto	l186
   405  0017F8                     __end_of_main:
   406                           	opt callstack 0
   407                           
   408 ;; *************** function _user_conf *****************
   409 ;; Defined at:
   410 ;;		line 21 in file "tasks.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1  [STACK] void 
   417 ;; Registers used:
   418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   424 ;;      Params:         0       0       0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0       0       0
   427 ;;      Totals:         0       0       0       0       0       0       0
   428 ;;Total ram usage:        0 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:   12
   431 ;; This function calls:
   432 ;;		_SRAMalloc
   433 ;;		_pipe_create
   434 ;;		_sem_init
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a reentrant model
   438 ;;
   439                           
   440                           	psect	text1
   441  0015AE                     __ptext1:
   442                           	opt callstack 0
   443  0015AE                     _user_conf:
   444                           	opt callstack 18
   445                           
   446                           ;tasks.c: 22:   TRISB = 0b00000001;
   447                           
   448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   449                           ;incstack = 0
   450  0015AE  0E01               	movlw	1
   451  0015B0  6E93               	movwf	3987,c	;volatile
   452                           
   453                           ;tasks.c: 23:   TRISC = 0b01111111;
   454  0015B2  0E7F               	movlw	127
   455  0015B4  6E94               	movwf	3988,c	;volatile
   456                           
   457                           ;tasks.c: 24:   TRISD = 0b01111110;
   458  0015B6  0E7E               	movlw	126
   459  0015B8  6E95               	movwf	3989,c	;volatile
   460                           
   461                           ;tasks.c: 25:   PORTCbits.RC7 = 1;
   462  0015BA  8E82               	bsf	3970,7,c	;volatile
   463                           
   464                           ;tasks.c: 29:   sem_init(&count_sem, 1);
   465  0015BC  0E01               	movlw	1
   466  0015BE  6EE6               	movwf	postinc1,c
   467  0015C0  0E00               	movlw	0
   468  0015C2  6EE6               	movwf	postinc1,c
   469  0015C4  0E29               	movlw	low _count_sem
   470  0015C6  6EE6               	movwf	postinc1,c
   471  0015C8  0E00               	movlw	high _count_sem
   472  0015CA  6EE6               	movwf	postinc1,c
   473  0015CC  EC75  F00C         	call	_sem_init	;wreg free
   474                           
   475                           ;tasks.c: 30:   sem_init(&fill_sem, 0);
   476  0015D0  0E00               	movlw	0
   477  0015D2  6EE6               	movwf	postinc1,c
   478  0015D4  0E00               	movlw	0
   479  0015D6  6EE6               	movwf	postinc1,c
   480  0015D8  0E1B               	movlw	low _fill_sem
   481  0015DA  6EE6               	movwf	postinc1,c
   482  0015DC  0E00               	movlw	high _fill_sem
   483  0015DE  6EE6               	movwf	postinc1,c
   484  0015E0  EC75  F00C         	call	_sem_init	;wreg free
   485                           
   486                           ;tasks.c: 31:   sem_init(&check_sem, 0);
   487  0015E4  0E00               	movlw	0
   488  0015E6  6EE6               	movwf	postinc1,c
   489  0015E8  0E00               	movlw	0
   490  0015EA  6EE6               	movwf	postinc1,c
   491  0015EC  0E0D               	movlw	low _check_sem
   492  0015EE  6EE6               	movwf	postinc1,c
   493  0015F0  0E00               	movlw	high _check_sem
   494  0015F2  6EE6               	movwf	postinc1,c
   495  0015F4  EC75  F00C         	call	_sem_init	;wreg free
   496                           
   497                           ;tasks.c: 32:   sem_init(&cover_sem, 0);
   498  0015F8  0E00               	movlw	0
   499  0015FA  6EE6               	movwf	postinc1,c
   500  0015FC  0E00               	movlw	0
   501  0015FE  6EE6               	movwf	postinc1,c
   502  001600  0E8E               	movlw	low _cover_sem
   503  001602  6EE6               	movwf	postinc1,c
   504  001604  0E00               	movlw	high _cover_sem
   505  001606  6EE6               	movwf	postinc1,c
   506  001608  EC75  F00C         	call	_sem_init	;wreg free
   507                           
   508                           ;tasks.c: 33:   sem_init(&out_sem, 0);
   509  00160C  0E00               	movlw	0
   510  00160E  6EE6               	movwf	postinc1,c
   511  001610  0E00               	movlw	0
   512  001612  6EE6               	movwf	postinc1,c
   513  001614  0E80               	movlw	low _out_sem
   514  001616  6EE6               	movwf	postinc1,c
   515  001618  0E00               	movlw	high _out_sem
   516  00161A  6EE6               	movwf	postinc1,c
   517  00161C  EC75  F00C         	call	_sem_init	;wreg free
   518                           
   519                           ;tasks.c: 34:   pipe_create(&p, &w_pipe, &r_pipe);
   520  001620  0E9C               	movlw	low _r_pipe
   521  001622  6EE6               	movwf	postinc1,c
   522  001624  0E00               	movlw	high _r_pipe
   523  001626  6EE6               	movwf	postinc1,c
   524  001628  0EAA               	movlw	low _w_pipe
   525  00162A  6EE6               	movwf	postinc1,c
   526  00162C  0E00               	movlw	high _w_pipe
   527  00162E  6EE6               	movwf	postinc1,c
   528  001630  0E37               	movlw	low _p
   529  001632  6EE6               	movwf	postinc1,c
   530  001634  0E00               	movlw	high _p
   531  001636  6EE6               	movwf	postinc1,c
   532  001638  ECB8  F006         	call	_pipe_create	;wreg free
   533                           
   534                           ;tasks.c: 35:   mem = SRAMalloc(5);
   535  00163C  0E05               	movlw	5
   536  00163E  6EE6               	movwf	postinc1,c
   537  001640  ECB8  F004         	call	_SRAMalloc	;wreg free
   538  001644  C043  F007         	movff	btemp,_mem
   539  001648  C044  F008         	movff	btemp+1,_mem+1
   540                           
   541                           ;tasks.c: 37:   global_buffer.count = 0;
   542  00164C  6A01               	clrf	_global_buffer,c
   543  00164E  6A02               	clrf	_global_buffer+1,c
   544                           
   545                           ;tasks.c: 38:   global_buffer.p_state = FREE_;
   546  001650  6A06               	clrf	_global_buffer+5,c
   547                           
   548                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   549  001652  0012               	return		;funcret
   550  001654                     __end_of_user_conf:
   551                           	opt callstack 0
   552                           
   553 ;; *************** function _pipe_create *****************
   554 ;; Defined at:
   555 ;;		line 9 in file "pipe.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  p               2  [STACK] PTR struct pipe
   558 ;;		 -> p(12), 
   559 ;;  w               2  [STACK] PTR struct semaphore
   560 ;;		 -> w_pipe(14), 
   561 ;;  r               2  [STACK] PTR struct semaphore
   562 ;;		 -> r_pipe(14), 
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1  [STACK] void 
   567 ;; Registers used:
   568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   574 ;;      Params:         0       0       0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:   11
   581 ;; This function calls:
   582 ;;		_sem_init
   583 ;; This function is called by:
   584 ;;		_user_conf
   585 ;; This function uses a reentrant model
   586 ;;
   587                           
   588                           	psect	text2
   589  000D70                     __ptext2:
   590                           	opt callstack 0
   591  000D70                     _pipe_create:
   592                           	opt callstack 18
   593                           
   594                           ;pipe.c: 10:   p->index_write = 0;
   595                           ;stkvar	_p @ sp[(0)+-2]
   596                           
   597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   598                           ;incstack = 0
   599  000D70  0EFE               	movlw	-2
   600  000D72  CFE3 F04D          	movff	plusw1,btemp+10
   601  000D76  0EFF               	movlw	-1
   602  000D78  CFE3 F04E          	movff	plusw1,btemp+11
   603  000D7C  0E04               	movlw	4
   604  000D7E  244D               	addwf	btemp+10,w,c
   605  000D80  6ED9               	movwf	fsr2l,c
   606  000D82  0E00               	movlw	0
   607  000D84  204E               	addwfc	btemp+11,w,c
   608  000D86  6EDA               	movwf	fsr2h,c
   609  000D88  0E00               	movlw	0
   610  000D8A  6EDE               	movwf	postinc2,c
   611  000D8C  0E00               	movlw	0
   612  000D8E  6EDD               	movwf	postdec2,c
   613                           
   614                           ;pipe.c: 11:   p->index_read = 0;
   615                           ;stkvar	_p @ sp[(0)+-2]
   616  000D90  0EFE               	movlw	-2
   617  000D92  CFE3 F04D          	movff	plusw1,btemp+10
   618  000D96  0EFF               	movlw	-1
   619  000D98  CFE3 F04E          	movff	plusw1,btemp+11
   620  000D9C  0E06               	movlw	6
   621  000D9E  244D               	addwf	btemp+10,w,c
   622  000DA0  6ED9               	movwf	fsr2l,c
   623  000DA2  0E00               	movlw	0
   624  000DA4  204E               	addwfc	btemp+11,w,c
   625  000DA6  6EDA               	movwf	fsr2h,c
   626  000DA8  0E00               	movlw	0
   627  000DAA  6EDE               	movwf	postinc2,c
   628  000DAC  0E00               	movlw	0
   629  000DAE  6EDD               	movwf	postdec2,c
   630                           
   631                           ;pipe.c: 12:   p->w = w;
   632                           ;stkvar	_w @ sp[(0)+-4]
   633  000DB0  50E1               	movf	fsr1l,w,c
   634  000DB2  0FFC               	addlw	-4
   635  000DB4  6ED9               	movwf	fsr2l,c
   636  000DB6  50E2               	movf	fsr1h,w,c
   637  000DB8  6EDA               	movwf	fsr2h,c
   638  000DBA  0EFF               	movlw	255
   639  000DBC  22DA               	addwfc	fsr2h,f,c
   640                           
   641                           ;stkvar	_p @ sp[(0)+-2]
   642  000DBE  0EFE               	movlw	-2
   643  000DC0  CFE3 F04D          	movff	plusw1,btemp+10
   644  000DC4  0EFF               	movlw	-1
   645  000DC6  CFE3 F04E          	movff	plusw1,btemp+11
   646  000DCA  0E08               	movlw	8
   647  000DCC  244D               	addwf	btemp+10,w,c
   648  000DCE  6EE9               	movwf	fsr0l,c
   649  000DD0  0E00               	movlw	0
   650  000DD2  204E               	addwfc	btemp+11,w,c
   651  000DD4  6EEA               	movwf	fsr0h,c
   652  000DD6  CFDE FFEE          	movff	postinc2,postinc0
   653  000DDA  CFDD FFED          	movff	postdec2,postdec0
   654                           
   655                           ;pipe.c: 13:   p->r = r;
   656                           ;stkvar	_r @ sp[(0)+-6]
   657  000DDE  50E1               	movf	fsr1l,w,c
   658  000DE0  0FFA               	addlw	-6
   659  000DE2  6ED9               	movwf	fsr2l,c
   660  000DE4  50E2               	movf	fsr1h,w,c
   661  000DE6  6EDA               	movwf	fsr2h,c
   662  000DE8  0EFF               	movlw	255
   663  000DEA  22DA               	addwfc	fsr2h,f,c
   664                           
   665                           ;stkvar	_p @ sp[(0)+-2]
   666  000DEC  0EFE               	movlw	-2
   667  000DEE  CFE3 F04D          	movff	plusw1,btemp+10
   668  000DF2  0EFF               	movlw	-1
   669  000DF4  CFE3 F04E          	movff	plusw1,btemp+11
   670  000DF8  0E0A               	movlw	10
   671  000DFA  244D               	addwf	btemp+10,w,c
   672  000DFC  6EE9               	movwf	fsr0l,c
   673  000DFE  0E00               	movlw	0
   674  000E00  204E               	addwfc	btemp+11,w,c
   675  000E02  6EEA               	movwf	fsr0h,c
   676  000E04  CFDE FFEE          	movff	postinc2,postinc0
   677  000E08  CFDD FFED          	movff	postdec2,postdec0
   678                           
   679                           ;pipe.c: 14:   sem_init(p->w, 2);
   680  000E0C  0E02               	movlw	2
   681  000E0E  6EE6               	movwf	postinc1,c
   682  000E10  0E00               	movlw	0
   683  000E12  6EE6               	movwf	postinc1,c
   684                           
   685                           ;stkvar	_p @ sp[(-2)+-2]
   686  000E14  0EFC               	movlw	-4
   687  000E16  CFE3 F04D          	movff	plusw1,btemp+10
   688  000E1A  0EFD               	movlw	-3
   689  000E1C  CFE3 F04E          	movff	plusw1,btemp+11
   690  000E20  0E08               	movlw	8
   691  000E22  244D               	addwf	btemp+10,w,c
   692  000E24  6ED9               	movwf	fsr2l,c
   693  000E26  0E00               	movlw	0
   694  000E28  204E               	addwfc	btemp+11,w,c
   695  000E2A  6EDA               	movwf	fsr2h,c
   696  000E2C  CFDE F04D          	movff	postinc2,btemp+10
   697  000E30  CFDD F04E          	movff	postdec2,btemp+11
   698  000E34  C04D  FFE6         	movff	btemp+10,postinc1
   699  000E38  C04E  FFE6         	movff	btemp+11,postinc1
   700  000E3C  EC75  F00C         	call	_sem_init	;wreg free
   701                           
   702                           ;pipe.c: 15:   sem_init(p->r, 0);
   703  000E40  0E00               	movlw	0
   704  000E42  6EE6               	movwf	postinc1,c
   705  000E44  0E00               	movlw	0
   706  000E46  6EE6               	movwf	postinc1,c
   707                           
   708                           ;stkvar	_p @ sp[(-2)+-2]
   709  000E48  0EFC               	movlw	-4
   710  000E4A  CFE3 F04D          	movff	plusw1,btemp+10
   711  000E4E  0EFD               	movlw	-3
   712  000E50  CFE3 F04E          	movff	plusw1,btemp+11
   713  000E54  0E0A               	movlw	10
   714  000E56  244D               	addwf	btemp+10,w,c
   715  000E58  6ED9               	movwf	fsr2l,c
   716  000E5A  0E00               	movlw	0
   717  000E5C  204E               	addwfc	btemp+11,w,c
   718  000E5E  6EDA               	movwf	fsr2h,c
   719  000E60  CFDE F04D          	movff	postinc2,btemp+10
   720  000E64  CFDD F04E          	movff	postdec2,btemp+11
   721  000E68  C04D  FFE6         	movff	btemp+10,postinc1
   722  000E6C  C04E  FFE6         	movff	btemp+11,postinc1
   723  000E70  EC75  F00C         	call	_sem_init	;wreg free
   724                           
   725                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
   726  000E74  0EFA               	movlw	250
   727  000E76  26E1               	addwf	fsr1l,f,c
   728  000E78  0EFF               	movlw	255
   729  000E7A  22E2               	addwfc	fsr1h,f,c
   730  000E7C  0012               	return		;funcret
   731  000E7E                     __end_of_pipe_create:
   732                           	opt callstack 0
   733                           
   734 ;; *************** function _sem_init *****************
   735 ;; Defined at:
   736 ;;		line 10 in file "semaphore.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;  s               2  [STACK] PTR struct semaphore
   739 ;;		 -> r_pipe(14), w_pipe(14), out_sem(14), cover_sem(14), 
   740 ;;		 -> check_sem(14), fill_sem(14), count_sem(14), 
   741 ;;  valor           2  [STACK] int 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1  [STACK] void 
   746 ;; Registers used:
   747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   753 ;;      Params:         0       0       0       0       0       0       0
   754 ;;      Locals:         0       0       0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0       0       0
   756 ;;      Totals:         0       0       0       0       0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:   10
   760 ;; This function calls:
   761 ;;		Nothing
   762 ;; This function is called by:
   763 ;;		_pipe_create
   764 ;;		_user_conf
   765 ;; This function uses a reentrant model
   766 ;;
   767                           
   768                           	psect	text3
   769  0018EA                     __ptext3:
   770                           	opt callstack 0
   771  0018EA                     _sem_init:
   772                           	opt callstack 19
   773                           
   774                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   775                           
   776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   777                           ;incstack = 0
   778  0018EA  9EF2               	bcf	4082,7,c	;volatile
   779                           
   780                           ;semaphore.c: 13:   s->contador = valor;
   781                           ;stkvar	_valor @ sp[(0)+-4]
   782  0018EC  50E1               	movf	fsr1l,w,c
   783  0018EE  0FFC               	addlw	-4
   784  0018F0  6ED9               	movwf	fsr2l,c
   785  0018F2  50E2               	movf	fsr1h,w,c
   786  0018F4  6EDA               	movwf	fsr2h,c
   787  0018F6  0EFF               	movlw	255
   788  0018F8  22DA               	addwfc	fsr2h,f,c
   789                           
   790                           ;stkvar	_s @ sp[(0)+-2]
   791  0018FA  0EFE               	movlw	-2
   792  0018FC  CFE3 FFE9          	movff	plusw1,fsr0l
   793  001900  0EFF               	movlw	-1
   794  001902  CFE3 FFEA          	movff	plusw1,fsr0h
   795  001906  CFDE FFEE          	movff	postinc2,postinc0
   796  00190A  CFDD FFED          	movff	postdec2,postdec0
   797                           
   798                           ;semaphore.c: 14:   s->bloqued_size = 0;
   799                           ;stkvar	_s @ sp[(0)+-2]
   800  00190E  0EFE               	movlw	-2
   801  001910  CFE3 F04D          	movff	plusw1,btemp+10
   802  001914  0EFF               	movlw	-1
   803  001916  CFE3 F04E          	movff	plusw1,btemp+11
   804  00191A  0E0A               	movlw	10
   805  00191C  244D               	addwf	btemp+10,w,c
   806  00191E  6ED9               	movwf	fsr2l,c
   807  001920  0E00               	movlw	0
   808  001922  204E               	addwfc	btemp+11,w,c
   809  001924  6EDA               	movwf	fsr2h,c
   810  001926  0E00               	movlw	0
   811  001928  6EDE               	movwf	postinc2,c
   812  00192A  0E00               	movlw	0
   813  00192C  6EDD               	movwf	postdec2,c
   814                           
   815                           ;semaphore.c: 15:   s->task_to_ready = 0;
   816                           ;stkvar	_s @ sp[(0)+-2]
   817  00192E  0EFE               	movlw	-2
   818  001930  CFE3 F04D          	movff	plusw1,btemp+10
   819  001934  0EFF               	movlw	-1
   820  001936  CFE3 F04E          	movff	plusw1,btemp+11
   821  00193A  0E0C               	movlw	12
   822  00193C  244D               	addwf	btemp+10,w,c
   823  00193E  6ED9               	movwf	fsr2l,c
   824  001940  0E00               	movlw	0
   825  001942  204E               	addwfc	btemp+11,w,c
   826  001944  6EDA               	movwf	fsr2h,c
   827  001946  0E00               	movlw	0
   828  001948  6EDE               	movwf	postinc2,c
   829  00194A  0E00               	movlw	0
   830  00194C  6EDD               	movwf	postdec2,c
   831                           
   832                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   833  00194E  8EF2               	bsf	4082,7,c	;volatile
   834                           
   835                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   836  001950  52E5               	movf	postdec1,f,c
   837  001952  52E5               	movf	postdec1,f,c
   838  001954  52E5               	movf	postdec1,f,c
   839  001956  52E5               	movf	postdec1,f,c
   840  001958  0012               	return		;funcret
   841  00195A                     __end_of_sem_init:
   842                           	opt callstack 0
   843                           
   844 ;; *************** function _SRAMalloc *****************
   845 ;; Defined at:
   846 ;;		line 191 in file "sralloc.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  nBytes          1  [STACK] unsigned char 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  pHeap           2  [STACK] PTR struct _SALLOC
   851 ;;		 -> _uDynamicHeap(512), 
   852 ;;  temp            2  [STACK] PTR struct _SALLOC
   853 ;;		 -> _uDynamicHeap(512), 
   854 ;;  segHeader       1  [STACK] struct _SALLOC
   855 ;;  segLen          1  [STACK] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  2  [STACK] PTR unsigned char 
   858 ;; Registers used:
   859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   865 ;;      Params:         0       0       0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0
   868 ;;      Totals:         0       0       0       0       0       0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:   11
   872 ;; This function calls:
   873 ;;		__SRAMmerge
   874 ;; This function is called by:
   875 ;;		_user_conf
   876 ;; This function uses a reentrant model
   877 ;;
   878                           
   879                           	psect	text4
   880  000970                     __ptext4:
   881                           	opt callstack 0
   882  000970                     _SRAMalloc:
   883                           	opt callstack 0
   884                           
   885                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   886  000970  0E06               	movlw	6
   887  000972  26E1               	addwf	fsr1l,f,c
   888  000974  0E00               	movlw	0
   889  000976  22E2               	addwfc	fsr1h,f,c
   890                           
   891                           ;sralloc.c: 191: unsigned char * SRAMalloc( unsigned char nBytes);sralloc.c: 192: {;sral
      +                          loc.c: 193:  SALLOC * pHeap;;sralloc.c: 194:  SALLOC * temp;;sralloc.c: 195:       SALLO
      +                          C segHeader;;sralloc.c: 196:       unsigned char segLen;;sralloc.c: 199:  if (nBytes > (
      +                          0x7F - 1)) return (0);
   892                           ;stkvar	_nBytes @ sp[(-6)+-1]
   893                           
   894                           ;incstack = 0
   895  000978  0EF9               	movlw	-7
   896  00097A  CFE3 F043          	movff	plusw1,btemp
   897  00097E  0E7E               	movlw	126
   898  000980  6443               	cpfsgt	btemp,c
   899  000982  D005               	goto	l1831
   900  000984                     u730:
   901  000984  0E00               	movlw	0
   902  000986  6E43               	movwf	btemp,c
   903  000988  0E00               	movlw	0
   904  00098A  6E44               	movwf	btemp+1,c
   905  00098C  D0BB               	goto	l405
   906  00098E                     l1831:
   907                           
   908                           ;sralloc.c: 202:  pHeap = (SALLOC *)_uDynamicHeap;
   909                           ;stkvar	_pHeap @ sp[(-6)+0]
   910  00098E  0E02               	movlw	high __uDynamicHeap
   911  000990  6E43               	movwf	btemp,c
   912  000992  0EFB               	movlw	-5
   913  000994  C043  FFE3         	movff	btemp,plusw1
   914  000998  0EF4               	movlw	low __uDynamicHeap
   915  00099A  6E43               	movwf	btemp,c
   916  00099C  0EFA               	movlw	-6
   917  00099E  C043  FFE3         	movff	btemp,plusw1
   918  0009A2                     l1833:
   919                           
   920                           ;sralloc.c: 205:  {;sralloc.c: 207:   segHeader = *pHeap;
   921                           ;stkvar	_pHeap @ sp[(-6)+0]
   922  0009A2  0EFA               	movlw	-6
   923  0009A4  CFE3 FFD9          	movff	plusw1,fsr2l
   924  0009A8  0EFB               	movlw	-5
   925  0009AA  CFE3 FFDA          	movff	plusw1,fsr2h
   926  0009AE  50DF               	movf	indf2,w,c
   927  0009B0  6E4E               	movwf	btemp+11,c
   928                           
   929                           ;stkvar	_segHeader @ sp[(-6)+4]
   930  0009B2  0EFE               	movlw	-2
   931  0009B4  C04E  FFE3         	movff	btemp+11,plusw1
   932                           
   933                           ;sralloc.c: 210:   segLen = segHeader.bits.count - 1;
   934                           ;stkvar	_segHeader @ sp[(-6)+4]
   935  0009B8  50E1               	movf	fsr1l,w,c
   936  0009BA  0FFE               	addlw	-2
   937  0009BC  6ED9               	movwf	fsr2l,c
   938  0009BE  50E2               	movf	fsr1h,w,c
   939  0009C0  6EDA               	movwf	fsr2h,c
   940  0009C2  0EFF               	movlw	255
   941  0009C4  22DA               	addwfc	fsr2h,f,c
   942  0009C6  50DF               	movf	223,w,c
   943  0009C8  0B7F               	andlw	127
   944  0009CA  6E4E               	movwf	btemp+11,c
   945  0009CC  0EFF               	movlw	255
   946  0009CE  264E               	addwf	btemp+11,f,c
   947                           
   948                           ;stkvar	_segLen @ sp[(-6)+5]
   949  0009D0  0EFF               	movlw	-1
   950  0009D2  C04E  FFE3         	movff	btemp+11,plusw1
   951                           
   952                           ;sralloc.c: 213:   if (segHeader.byte == 0) return (0);
   953                           ;stkvar	_segHeader @ sp[(-6)+4]
   954  0009D6  0EFE               	movlw	-2
   955  0009D8  50E3               	movf	plusw1,w,c
   956  0009DA  B4D8               	btfsc	status,2,c
   957  0009DC  D7D3               	goto	u730
   958                           
   959                           ;sralloc.c: 216:   if (!(segHeader.bits.alloc))
   960                           ;stkvar	_segHeader @ sp[(-6)+4]
   961  0009DE  50E1               	movf	fsr1l,w,c
   962  0009E0  0FFE               	addlw	-2
   963  0009E2  6ED9               	movwf	fsr2l,c
   964  0009E4  50E2               	movf	fsr1h,w,c
   965  0009E6  6EDA               	movwf	fsr2h,c
   966  0009E8  0EFF               	movlw	255
   967  0009EA  22DA               	addwfc	fsr2h,f,c
   968  0009EC  BEDF               	btfsc	indf2,7,c
   969  0009EE  D016               	goto	u770
   970                           
   971                           ;sralloc.c: 217:   {;sralloc.c: 219:    if (nBytes > segLen)
   972                           ;stkvar	_nBytes @ sp[(-6)+-1]
   973                           ;stkvar	_segLen @ sp[(-6)+5]
   974  0009F0  50E1               	movf	fsr1l,w,c
   975  0009F2  0FFF               	addlw	-1
   976  0009F4  6ED9               	movwf	fsr2l,c
   977  0009F6  50E2               	movf	fsr1h,w,c
   978  0009F8  6EDA               	movwf	fsr2h,c
   979  0009FA  0EFF               	movlw	255
   980  0009FC  22DA               	addwfc	fsr2h,f,c
   981  0009FE  0EF9               	movlw	-7
   982  000A00  50E3               	movf	plusw1,w,c
   983  000A02  5CDE               	subwf	postinc2,w,c
   984  000A04  B0D8               	btfsc	status,0,c
   985  000A06  D020               	goto	l1851
   986                           
   987                           ;sralloc.c: 220:    {;sralloc.c: 222:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.b
      +                          its.count;
   988                           ;stkvar	_pHeap @ sp[(-6)+0]
   989  000A08  0EFA               	movlw	-6
   990  000A0A  CFE3 FFE6          	movff	plusw1,postinc1
   991  000A0E  CFE3 FFE6          	movff	plusw1,postinc1
   992  000A12  EC87  F005         	call	__SRAMmerge	;wreg free
   993  000A16  5043               	movf	btemp,w,c
   994  000A18  A4D8               	btfss	status,2,c
   995  000A1A  D7C3               	goto	l1833
   996  000A1C                     u770:
   997                           
   998                           ;stkvar	_segHeader @ sp[(-6)+4]
   999  000A1C  50E1               	movf	fsr1l,w,c
  1000  000A1E  0FFE               	addlw	-2
  1001  000A20  6ED9               	movwf	fsr2l,c
  1002  000A22  50E2               	movf	fsr1h,w,c
  1003  000A24  6EDA               	movwf	fsr2h,c
  1004  000A26  0EFF               	movlw	255
  1005  000A28  22DA               	addwfc	fsr2h,f,c
  1006  000A2A  50DF               	movf	223,w,c
  1007  000A2C  0B7F               	andlw	127
  1008  000A2E  0D01               	mullw	1
  1009                           
  1010                           ;stkvar	_pHeap @ sp[(-6)+0]
  1011  000A30  50E1               	movf	fsr1l,w,c
  1012  000A32  0FFA               	addlw	-6
  1013  000A34  6ED9               	movwf	fsr2l,c
  1014  000A36  50E2               	movf	fsr1h,w,c
  1015  000A38  6EDA               	movwf	fsr2h,c
  1016  000A3A  0EFF               	movlw	255
  1017  000A3C  22DA               	addwfc	fsr2h,f,c
  1018  000A3E  50F3               	movf	prodl,w,c
  1019  000A40  26DE               	addwf	postinc2,f,c
  1020  000A42  50F4               	movf	prodh,w,c
  1021  000A44  22DD               	addwfc	postdec2,f,c
  1022  000A46  D7AD               	goto	l1833
  1023  000A48                     l1851:
  1024                           
  1025                           ;sralloc.c: 228:    if (nBytes == segLen)
  1026                           ;stkvar	_segLen @ sp[(-6)+5]
  1027                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1028  000A48  50E1               	movf	fsr1l,w,c
  1029  000A4A  0FF9               	addlw	-7
  1030  000A4C  6ED9               	movwf	fsr2l,c
  1031  000A4E  50E2               	movf	fsr1h,w,c
  1032  000A50  6EDA               	movwf	fsr2h,c
  1033  000A52  0EFF               	movlw	255
  1034  000A54  22DA               	addwfc	fsr2h,f,c
  1035  000A56  0EFF               	movlw	-1
  1036  000A58  50E3               	movf	plusw1,w,c
  1037  000A5A  18DE               	xorwf	postinc2,w,c
  1038  000A5C  A4D8               	btfss	status,2,c
  1039  000A5E  D011               	goto	l1861
  1040                           
  1041                           ;sralloc.c: 229:    {;sralloc.c: 231:     (*pHeap).bits.alloc = 1;
  1042                           ;stkvar	_pHeap @ sp[(-6)+0]
  1043  000A60  0EFA               	movlw	-6
  1044  000A62  CFE3 FFD9          	movff	plusw1,fsr2l
  1045  000A66  0EFB               	movlw	-5
  1046  000A68  CFE3 FFDA          	movff	plusw1,fsr2h
  1047  000A6C  8EDF               	bsf	indf2,7,c
  1048                           
  1049                           ;sralloc.c: 234:     return ((unsigned char *)(pHeap + 1));
  1050                           ;stkvar	_pHeap @ sp[(-6)+0]
  1051  000A6E  0EFA               	movlw	-6
  1052  000A70  50E3               	movf	plusw1,w,c
  1053  000A72  0F01               	addlw	1
  1054  000A74  6E43               	movwf	btemp,c
  1055  000A76  0EFB               	movlw	-5
  1056  000A78  CFE3 F044          	movff	plusw1,btemp+1
  1057  000A7C  0E00               	movlw	0
  1058  000A7E  2244               	addwfc	btemp+1,f,c
  1059  000A80  D041               	goto	l405
  1060  000A82                     l1861:
  1061                           
  1062                           ;sralloc.c: 239:    {;sralloc.c: 241:     (*pHeap).byte = nBytes + 0x81;
  1063                           ;stkvar	_pHeap @ sp[(-6)+0]
  1064  000A82  0EFA               	movlw	-6
  1065  000A84  CFE3 FFD9          	movff	plusw1,fsr2l
  1066  000A88  0EFB               	movlw	-5
  1067  000A8A  CFE3 FFDA          	movff	plusw1,fsr2h
  1068                           
  1069                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1070  000A8E  0EF9               	movlw	-7
  1071  000A90  50E3               	movf	plusw1,w,c
  1072  000A92  0F81               	addlw	129
  1073  000A94  6EDF               	movwf	indf2,c
  1074                           
  1075                           ;sralloc.c: 244:     temp = pHeap + 1;
  1076                           ;stkvar	_pHeap @ sp[(-6)+0]
  1077  000A96  0EFA               	movlw	-6
  1078  000A98  50E3               	movf	plusw1,w,c
  1079  000A9A  0F01               	addlw	1
  1080  000A9C  6E4D               	movwf	btemp+10,c
  1081  000A9E  0EFB               	movlw	-5
  1082  000AA0  CFE3 F04E          	movff	plusw1,btemp+11
  1083  000AA4  0E00               	movlw	0
  1084  000AA6  224E               	addwfc	btemp+11,f,c
  1085                           
  1086                           ;stkvar	_temp @ sp[(-6)+2]
  1087  000AA8  0EFD               	movlw	-3
  1088  000AAA  C04E  FFE3         	movff	btemp+11,plusw1
  1089  000AAE  0EFC               	movlw	-4
  1090  000AB0  C04D  FFE3         	movff	btemp+10,plusw1
  1091                           
  1092                           ;sralloc.c: 247:     pHeap += (nBytes + 1);
  1093                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1094  000AB4  0EF9               	movlw	-7
  1095  000AB6  50E3               	movf	plusw1,w,c
  1096  000AB8  6E4D               	movwf	btemp+10,c
  1097  000ABA  6A4E               	clrf	btemp+11,c
  1098  000ABC  0E01               	movlw	1
  1099  000ABE  264D               	addwf	btemp+10,f,c
  1100  000AC0  0E00               	movlw	0
  1101  000AC2  224E               	addwfc	btemp+11,f,c
  1102                           
  1103                           ;stkvar	_pHeap @ sp[(-6)+0]
  1104  000AC4  50E1               	movf	fsr1l,w,c
  1105  000AC6  0FFA               	addlw	-6
  1106  000AC8  6ED9               	movwf	fsr2l,c
  1107  000ACA  50E2               	movf	fsr1h,w,c
  1108  000ACC  6EDA               	movwf	fsr2h,c
  1109  000ACE  0EFF               	movlw	255
  1110  000AD0  22DA               	addwfc	fsr2h,f,c
  1111  000AD2  504D               	movf	btemp+10,w,c
  1112  000AD4  26DE               	addwf	postinc2,f,c
  1113  000AD6  504E               	movf	btemp+11,w,c
  1114  000AD8  22DD               	addwfc	postdec2,f,c
  1115                           
  1116                           ;sralloc.c: 250:     (*pHeap).byte = segLen - nBytes;
  1117                           ;stkvar	_pHeap @ sp[(-6)+0]
  1118  000ADA  0EFA               	movlw	-6
  1119  000ADC  CFE3 FFD9          	movff	plusw1,fsr2l
  1120  000AE0  0EFB               	movlw	-5
  1121  000AE2  CFE3 FFDA          	movff	plusw1,fsr2h
  1122                           
  1123                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1124  000AE6  0EF9               	movlw	-7
  1125  000AE8  CFE3 F04E          	movff	plusw1,btemp+11
  1126                           
  1127                           ;stkvar	_segLen @ sp[(-6)+5]
  1128  000AEC  0EFF               	movlw	-1
  1129  000AEE  CFE3 F04D          	movff	plusw1,btemp+10
  1130  000AF2  504E               	movf	btemp+11,w,c
  1131  000AF4  5C4D               	subwf	btemp+10,w,c
  1132  000AF6  6EDF               	movwf	indf2,c
  1133                           
  1134                           ;sralloc.c: 253:     return ((unsigned char *) temp);
  1135                           ;stkvar	_temp @ sp[(-6)+2]
  1136  000AF8  0EFC               	movlw	-4
  1137  000AFA  CFE3 F043          	movff	plusw1,btemp
  1138  000AFE  0EFD               	movlw	-3
  1139  000B00  CFE3 F044          	movff	plusw1,btemp+1
  1140  000B04                     l405:
  1141                           
  1142                           ; _SRAMalloc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  1143  000B04  0EF9               	movlw	249
  1144  000B06  26E1               	addwf	fsr1l,f,c
  1145  000B08  0EFF               	movlw	255
  1146  000B0A  22E2               	addwfc	fsr1h,f,c
  1147  000B0C  0012               	return		;funcret
  1148  000B0E                     __end_of_SRAMalloc:
  1149                           	opt callstack 0
  1150                           
  1151 ;; *************** function __SRAMmerge *****************
  1152 ;; Defined at:
  1153 ;;		line 359 in file "sralloc.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  pSegA           2  [STACK] PTR struct _SALLOC
  1156 ;;		 -> _uDynamicHeap(512), 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  pSegB           2  [STACK] PTR struct _SALLOC
  1159 ;;		 -> _uDynamicHeap(512), 
  1160 ;;  uSegB           1  [STACK] struct _SALLOC
  1161 ;;  uSegA           1  [STACK] struct _SALLOC
  1162 ;;  uSum            1  [STACK] struct _SALLOC
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1  [STACK] unsigned char 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1172 ;;      Params:         0       0       0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:   10
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_SRAMalloc
  1183 ;; This function uses a reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text5
  1187  000B0E                     __ptext5:
  1188                           	opt callstack 0
  1189  000B0E                     __SRAMmerge:
  1190                           	opt callstack 0
  1191                           
  1192                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1193  000B0E  0E05               	movlw	5
  1194  000B10  26E1               	addwf	fsr1l,f,c
  1195  000B12  0E00               	movlw	0
  1196  000B14  22E2               	addwfc	fsr1h,f,c
  1197                           
  1198                           ;sralloc.c: 359:      unsigned char _SRAMmerge(SALLOC * pSegA);sralloc.c: 360: {;sralloc
      +                          .c: 361:  SALLOC * pSegB;;sralloc.c: 362:       SALLOC uSegA, uSegB, uSum;;sralloc.c: 36
      +                          6:  pSegB = pSegA + (*pSegA).byte;
  1199                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1200                           
  1201                           ;incstack = 0
  1202  000B16  0EF9               	movlw	-7
  1203  000B18  CFE3 FFD9          	movff	plusw1,fsr2l
  1204  000B1C  0EFA               	movlw	-6
  1205  000B1E  CFE3 FFDA          	movff	plusw1,fsr2h
  1206  000B22  50DF               	movf	indf2,w,c
  1207  000B24  6E4D               	movwf	btemp+10,c
  1208  000B26  6A4E               	clrf	btemp+11,c
  1209                           
  1210                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1211  000B28  0EF9               	movlw	-7
  1212  000B2A  50E3               	movf	plusw1,w,c
  1213  000B2C  264D               	addwf	btemp+10,f,c
  1214  000B2E  0EFA               	movlw	-6
  1215  000B30  50E3               	movf	plusw1,w,c
  1216  000B32  224E               	addwfc	btemp+11,f,c
  1217                           
  1218                           ;stkvar	_pSegB @ sp[(-5)+0]
  1219  000B34  0EFC               	movlw	-4
  1220  000B36  C04E  FFE3         	movff	btemp+11,plusw1
  1221  000B3A  0EFB               	movlw	-5
  1222  000B3C  C04D  FFE3         	movff	btemp+10,plusw1
  1223                           
  1224                           ;sralloc.c: 369:  uSegA = *pSegA;
  1225                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1226  000B40  0EF9               	movlw	-7
  1227  000B42  CFE3 FFD9          	movff	plusw1,fsr2l
  1228  000B46  0EFA               	movlw	-6
  1229  000B48  CFE3 FFDA          	movff	plusw1,fsr2h
  1230  000B4C  50DF               	movf	indf2,w,c
  1231  000B4E  6E4E               	movwf	btemp+11,c
  1232                           
  1233                           ;stkvar	_uSegA @ sp[(-5)+3]
  1234  000B50  0EFE               	movlw	-2
  1235  000B52  C04E  FFE3         	movff	btemp+11,plusw1
  1236                           
  1237                           ;sralloc.c: 370:  uSegB = *pSegB;
  1238                           ;stkvar	_pSegB @ sp[(-5)+0]
  1239  000B56  0EFB               	movlw	-5
  1240  000B58  CFE3 FFD9          	movff	plusw1,fsr2l
  1241  000B5C  0EFC               	movlw	-4
  1242  000B5E  CFE3 FFDA          	movff	plusw1,fsr2h
  1243  000B62  50DF               	movf	indf2,w,c
  1244  000B64  6E4E               	movwf	btemp+11,c
  1245                           
  1246                           ;stkvar	_uSegB @ sp[(-5)+2]
  1247  000B66  0EFD               	movlw	-3
  1248  000B68  C04E  FFE3         	movff	btemp+11,plusw1
  1249                           
  1250                           ;sralloc.c: 373:  if (uSegB.byte == 0) return (0);
  1251                           ;stkvar	_uSegB @ sp[(-5)+2]
  1252  000B6C  0EFD               	movlw	-3
  1253  000B6E  50E3               	movf	plusw1,w,c
  1254  000B70  A4D8               	btfss	status,2,c
  1255  000B72  D002               	goto	l1705
  1256  000B74                     u630:
  1257  000B74  0E00               	movlw	0
  1258  000B76  D06E               	goto	L1
  1259  000B78                     l1705:
  1260                           
  1261                           ;sralloc.c: 376:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1262                           ;stkvar	_uSegA @ sp[(-5)+3]
  1263  000B78  50E1               	movf	fsr1l,w,c
  1264  000B7A  0FFE               	addlw	-2
  1265  000B7C  6ED9               	movwf	fsr2l,c
  1266  000B7E  50E2               	movf	fsr1h,w,c
  1267  000B80  6EDA               	movwf	fsr2h,c
  1268  000B82  0EFF               	movlw	255
  1269  000B84  22DA               	addwfc	fsr2h,f,c
  1270  000B86  BEDF               	btfsc	indf2,7,c
  1271  000B88  D7F5               	goto	u630
  1272                           
  1273                           ;stkvar	_uSegB @ sp[(-5)+2]
  1274  000B8A  50E1               	movf	fsr1l,w,c
  1275  000B8C  0FFD               	addlw	-3
  1276  000B8E  6ED9               	movwf	fsr2l,c
  1277  000B90  50E2               	movf	fsr1h,w,c
  1278  000B92  6EDA               	movwf	fsr2h,c
  1279  000B94  0EFF               	movlw	255
  1280  000B96  22DA               	addwfc	fsr2h,f,c
  1281  000B98  BEDF               	btfsc	indf2,7,c
  1282  000B9A  D7EC               	goto	u630
  1283                           
  1284                           ;sralloc.c: 379:  if (uSegA.bits.count == 0x7F) return (0);
  1285                           ;stkvar	_uSegA @ sp[(-5)+3]
  1286  000B9C  50E1               	movf	fsr1l,w,c
  1287  000B9E  0FFE               	addlw	-2
  1288  000BA0  6ED9               	movwf	fsr2l,c
  1289  000BA2  50E2               	movf	fsr1h,w,c
  1290  000BA4  6EDA               	movwf	fsr2h,c
  1291  000BA6  0EFF               	movlw	255
  1292  000BA8  22DA               	addwfc	fsr2h,f,c
  1293  000BAA  50DF               	movf	223,w,c
  1294  000BAC  0B7F               	andlw	127
  1295  000BAE  0A7F               	xorlw	127
  1296  000BB0  B4D8               	btfsc	status,2,c
  1297  000BB2  D7E0               	goto	u630
  1298                           
  1299                           ;sralloc.c: 382:  uSum.byte = uSegA.byte + uSegB.byte;
  1300                           ;stkvar	_uSegB @ sp[(-5)+2]
  1301  000BB4  0EFD               	movlw	-3
  1302  000BB6  CFE3 F04E          	movff	plusw1,btemp+11
  1303                           
  1304                           ;stkvar	_uSegA @ sp[(-5)+3]
  1305  000BBA  0EFE               	movlw	-2
  1306  000BBC  50E3               	movf	plusw1,w,c
  1307  000BBE  244E               	addwf	btemp+11,w,c
  1308  000BC0  6E4D               	movwf	btemp+10,c
  1309                           
  1310                           ;stkvar	_uSum @ sp[(-5)+4]
  1311  000BC2  0EFF               	movlw	-1
  1312  000BC4  C04D  FFE3         	movff	btemp+10,plusw1
  1313                           
  1314                           ;sralloc.c: 388:  if ((uSum.byte) > 0x7F)
  1315                           ;stkvar	_uSum @ sp[(-5)+4]
  1316  000BC8  0EFF               	movlw	-1
  1317  000BCA  CFE3 F043          	movff	plusw1,btemp
  1318  000BCE  0E7F               	movlw	127
  1319  000BD0  6443               	cpfsgt	btemp,c
  1320  000BD2  D036               	goto	l1737
  1321                           
  1322                           ;sralloc.c: 389:  {;sralloc.c: 390:   (*pSegA).byte = 0x7F;
  1323                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1324  000BD4  0EF9               	movlw	-7
  1325  000BD6  CFE3 FFD9          	movff	plusw1,fsr2l
  1326  000BDA  0EFA               	movlw	-6
  1327  000BDC  CFE3 FFDA          	movff	plusw1,fsr2h
  1328  000BE0  0E7F               	movlw	127
  1329  000BE2  6EDF               	movwf	indf2,c
  1330                           
  1331                           ;sralloc.c: 391:   pSegA += 0x7F;
  1332                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1333  000BE4  0EF9               	movlw	-7
  1334  000BE6  50E3               	movf	plusw1,w,c
  1335  000BE8  0F7F               	addlw	127
  1336  000BEA  6E43               	movwf	btemp,c
  1337  000BEC  0EF9               	movlw	-7
  1338  000BEE  C043  FFE3         	movff	btemp,plusw1
  1339  000BF2  6A43               	clrf	btemp,c
  1340  000BF4  0EFA               	movlw	-6
  1341  000BF6  50E3               	movf	plusw1,w,c
  1342  000BF8  2043               	addwfc	btemp,w,c
  1343  000BFA  6E43               	movwf	btemp,c
  1344  000BFC  0EFA               	movlw	-6
  1345  000BFE  C043  FFE3         	movff	btemp,plusw1
  1346                           
  1347                           ;sralloc.c: 392:   pSegB += uSegB.byte;
  1348                           ;stkvar	_uSegB @ sp[(-5)+2]
  1349  000C02  0EFD               	movlw	-3
  1350  000C04  50E3               	movf	plusw1,w,c
  1351  000C06  0D01               	mullw	1
  1352                           
  1353                           ;stkvar	_pSegB @ sp[(-5)+0]
  1354  000C08  50E1               	movf	fsr1l,w,c
  1355  000C0A  0FFB               	addlw	-5
  1356  000C0C  6ED9               	movwf	fsr2l,c
  1357  000C0E  50E2               	movf	fsr1h,w,c
  1358  000C10  6EDA               	movwf	fsr2h,c
  1359  000C12  0EFF               	movlw	255
  1360  000C14  22DA               	addwfc	fsr2h,f,c
  1361  000C16  50F3               	movf	prodl,w,c
  1362  000C18  26DE               	addwf	postinc2,f,c
  1363  000C1A  50F4               	movf	prodh,w,c
  1364  000C1C  22DD               	addwfc	postdec2,f,c
  1365                           
  1366                           ;sralloc.c: 393:   (*pSegA).byte = pSegB - pSegA;
  1367                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1368  000C1E  0EF9               	movlw	-7
  1369  000C20  CFE3 FFD9          	movff	plusw1,fsr2l
  1370  000C24  0EFA               	movlw	-6
  1371  000C26  CFE3 FFDA          	movff	plusw1,fsr2h
  1372                           
  1373                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1374  000C2A  0EF9               	movlw	-7
  1375  000C2C  CFE3 F04E          	movff	plusw1,btemp+11
  1376                           
  1377                           ;stkvar	_pSegB @ sp[(-5)+0]
  1378  000C30  0EFB               	movlw	-5
  1379  000C32  CFE3 F04D          	movff	plusw1,btemp+10
  1380  000C36  504E               	movf	btemp+11,w,c
  1381  000C38  5C4D               	subwf	btemp+10,w,c
  1382  000C3A  6EDF               	movwf	indf2,c
  1383                           
  1384                           ;sralloc.c: 395:   return (0x7F);
  1385  000C3C  0E7F               	movlw	127
  1386  000C3E  D00A               	goto	L1
  1387  000C40                     l1737:
  1388                           
  1389                           ;sralloc.c: 400:  {;sralloc.c: 401:   return ((*pSegA).byte = uSum.byte);
  1390                           ;stkvar	_uSum @ sp[(-5)+4]
  1391                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1392  000C40  0EF9               	movlw	-7
  1393  000C42  CFE3 FFD9          	movff	plusw1,fsr2l
  1394  000C46  0EFA               	movlw	-6
  1395  000C48  CFE3 FFDA          	movff	plusw1,fsr2h
  1396  000C4C  0EFF               	movlw	-1
  1397  000C4E  CFE3 FFDF          	movff	plusw1,indf2
  1398  000C52  50DF               	movf	indf2,w,c
  1399  000C54                     L1:
  1400  000C54  6E43               	movwf	btemp,c
  1401                           
  1402                           ; __SRAMmerge: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  1403  000C56  0EF9               	movlw	249
  1404  000C58  26E1               	addwf	fsr1l,f,c
  1405  000C5A  0EFF               	movlw	255
  1406  000C5C  22E2               	addwfc	fsr1h,f,c
  1407  000C5E  0012               	return		;funcret
  1408  000C60                     __end_of__SRAMmerge:
  1409                           	opt callstack 0
  1410                           
  1411 ;; *************** function _lunos_init *****************
  1412 ;; Defined at:
  1413 ;;		line 49 in file "kernel.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1  [STACK] void 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1427 ;;      Params:         0       0       0       0       0       0       0
  1428 ;;      Locals:         0       0       0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0
  1430 ;;      Totals:         0       0       0       0       0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:   11
  1434 ;; This function calls:
  1435 ;;		_SRAMInitHeap
  1436 ;;		_lunos_createTask
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text6
  1443  001B7C                     __ptext6:
  1444                           	opt callstack 0
  1445  001B7C                     _lunos_init:
  1446                           	opt callstack 19
  1447                           
  1448                           ;kernel.c: 50:   SRAMInitHeap();
  1449                           
  1450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1451                           ;incstack = 0
  1452  001B7C  ECB3  F009         	call	_SRAMInitHeap	;wreg free
  1453                           
  1454                           ;kernel.c: 51:   ready_queue.task_running = 0;
  1455  001B80  0E00               	movlw	0
  1456  001B82  CFE8 F2F2          	movff	wreg,_ready_queue+542
  1457  001B86  0E00               	movlw	0
  1458  001B88  CFE8 F2F3          	movff	wreg,_ready_queue+543
  1459                           
  1460                           ;kernel.c: 52:   ready_queue.tasks_installed = 0;
  1461  001B8C  0E00               	movlw	0
  1462  001B8E  CFE8 F2F0          	movff	wreg,_ready_queue+540
  1463  001B92  0E00               	movlw	0
  1464  001B94  CFE8 F2F1          	movff	wreg,_ready_queue+541
  1465                           
  1466                           ;kernel.c: 53:   lunos_createTask(0, &task_idle);
  1467  001B98  0E26               	movlw	low _task_idle
  1468  001B9A  6EE6               	movwf	postinc1,c
  1469  001B9C  0E1C               	movlw	high _task_idle
  1470  001B9E  6EE6               	movwf	postinc1,c
  1471  001BA0  0E00               	movlw	0
  1472  001BA2  6EE6               	movwf	postinc1,c
  1473  001BA4  0E00               	movlw	0
  1474  001BA6  6EE6               	movwf	postinc1,c
  1475  001BA8  EC48  F008         	call	_lunos_createTask	;wreg free
  1476                           
  1477                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  1478  001BAC  0012               	return		;funcret
  1479  001BAE                     __end_of_lunos_init:
  1480                           	opt callstack 0
  1481                           
  1482 ;; *************** function _lunos_createTask *****************
  1483 ;; Defined at:
  1484 ;;		line 14 in file "kernel.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  prior           2  [STACK] unsigned int 
  1487 ;;  f               2  [STACK] PTR FTN()void 
  1488 ;;		 -> count_out(1), cover_bottle(1), check_level(1), fill_bottle(1), 
  1489 ;;		 -> count_bottles(1), task_idle(1), 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  new_task      108  [STACK] struct pcb
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1  [STACK] void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1501 ;;      Params:         0       0       0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:   10
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_lunos_init
  1512 ;;		_main
  1513 ;; This function uses a reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text7
  1517  001090                     __ptext7:
  1518                           	opt callstack 0
  1519  001090                     _lunos_createTask:
  1520                           	opt callstack 0
  1521                           
  1522                           ; autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  1523  001090  0E6C               	movlw	108
  1524  001092  26E1               	addwf	fsr1l,f,c
  1525  001094  0E00               	movlw	0
  1526  001096  22E2               	addwfc	fsr1h,f,c
  1527                           
  1528                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
  1529                           
  1530                           ;incstack = 0
  1531  001098  EE22  F0F0         	lfsr	2,_ready_queue+540
  1532  00109C  CFDE F04D          	movff	postinc2,btemp+10
  1533  0010A0  CFDD F04E          	movff	postdec2,btemp+11
  1534  0010A4  0E01               	movlw	1
  1535  0010A6  264D               	addwf	btemp+10,f,c
  1536  0010A8  0E00               	movlw	0
  1537  0010AA  224E               	addwfc	btemp+11,f,c
  1538                           
  1539                           ;stkvar	_new_task @ sp[(-108)+0]
  1540  0010AC  0E94               	movlw	-108
  1541  0010AE  C04D  FFE3         	movff	btemp+10,plusw1
  1542  0010B2  0E95               	movlw	-107
  1543  0010B4  C04E  FFE3         	movff	btemp+11,plusw1
  1544                           
  1545                           ;kernel.c: 19:   new_task.task_prior = prior;
  1546                           ;stkvar	_prior @ sp[(-108)+-2]
  1547  0010B8  50E1               	movf	fsr1l,w,c
  1548  0010BA  0F92               	addlw	-110
  1549  0010BC  6ED9               	movwf	fsr2l,c
  1550  0010BE  50E2               	movf	fsr1h,w,c
  1551  0010C0  6EDA               	movwf	fsr2h,c
  1552  0010C2  0EFF               	movlw	255
  1553  0010C4  22DA               	addwfc	fsr2h,f,c
  1554                           
  1555                           ;stkvar	_new_task @ sp[(-108)+0]
  1556  0010C6  0E96               	movlw	150
  1557  0010C8  24E1               	addwf	fsr1l,w,c
  1558  0010CA  6EE9               	movwf	fsr0l,c
  1559  0010CC  0EFF               	movlw	255
  1560  0010CE  20E2               	addwfc	fsr1h,w,c
  1561  0010D0  6EEA               	movwf	fsr0h,c
  1562  0010D2  CFDE FFEE          	movff	postinc2,postinc0
  1563  0010D6  CFDD FFED          	movff	postdec2,postdec0
  1564                           
  1565                           ;kernel.c: 20:   new_task.task_state = READY;
  1566                           ;stkvar	_new_task @ sp[(-108)+0]
  1567  0010DA  0E9C               	movlw	156
  1568  0010DC  24E1               	addwf	fsr1l,w,c
  1569  0010DE  6ED9               	movwf	fsr2l,c
  1570  0010E0  0EFF               	movlw	255
  1571  0010E2  20E2               	addwfc	fsr1h,w,c
  1572  0010E4  6EDA               	movwf	fsr2h,c
  1573  0010E6  0E00               	movlw	0
  1574  0010E8  6EDF               	movwf	indf2,c
  1575                           
  1576                           ;kernel.c: 21:   new_task.task_f = f;
  1577                           ;stkvar	_f @ sp[(-108)+-4]
  1578  0010EA  50E1               	movf	fsr1l,w,c
  1579  0010EC  0F90               	addlw	-112
  1580  0010EE  6ED9               	movwf	fsr2l,c
  1581  0010F0  50E2               	movf	fsr1h,w,c
  1582  0010F2  6EDA               	movwf	fsr2h,c
  1583  0010F4  0EFF               	movlw	255
  1584  0010F6  22DA               	addwfc	fsr2h,f,c
  1585                           
  1586                           ;stkvar	_new_task @ sp[(-108)+0]
  1587  0010F8  0EFC               	movlw	252
  1588  0010FA  24E1               	addwf	fsr1l,w,c
  1589  0010FC  6EE9               	movwf	fsr0l,c
  1590  0010FE  0EFF               	movlw	255
  1591  001100  20E2               	addwfc	fsr1h,w,c
  1592  001102  6EEA               	movwf	fsr0h,c
  1593  001104  CFDE FFEE          	movff	postinc2,postinc0
  1594  001108  CFDD FFED          	movff	postdec2,postdec0
  1595                           
  1596                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
  1597                           ;stkvar	_new_task @ sp[(-108)+0]
  1598  00110C  0EFA               	movlw	250
  1599  00110E  24E1               	addwf	fsr1l,w,c
  1600  001110  6ED9               	movwf	fsr2l,c
  1601  001112  0EFF               	movlw	255
  1602  001114  20E2               	addwfc	fsr1h,w,c
  1603  001116  6EDA               	movwf	fsr2h,c
  1604  001118  0E00               	movlw	0
  1605  00111A  6EDE               	movwf	postinc2,c
  1606  00111C  0E00               	movlw	0
  1607  00111E  6EDD               	movwf	postdec2,c
  1608                           
  1609                           ;kernel.c: 23:   new_task.task_delay_time = 0;
  1610                           ;stkvar	_new_task @ sp[(-108)+0]
  1611  001120  0EFE               	movlw	254
  1612  001122  24E1               	addwf	fsr1l,w,c
  1613  001124  6ED9               	movwf	fsr2l,c
  1614  001126  0EFF               	movlw	255
  1615  001128  20E2               	addwfc	fsr1h,w,c
  1616  00112A  6EDA               	movwf	fsr2h,c
  1617  00112C  0E00               	movlw	0
  1618  00112E  6EDE               	movwf	postinc2,c
  1619  001130  0E00               	movlw	0
  1620  001132  6EDD               	movwf	postdec2,c
  1621                           
  1622                           ;kernel.c: 25:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
  1623                           ;stkvar	_new_task @ sp[(-108)+0]
  1624  001134  0E94               	movlw	148
  1625  001136  24E1               	addwf	fsr1l,w,c
  1626  001138  6ED9               	movwf	fsr2l,c
  1627  00113A  0EFF               	movlw	255
  1628  00113C  20E2               	addwfc	fsr1h,w,c
  1629  00113E  6EDA               	movwf	fsr2h,c
  1630  001140  EE02  F0F0         	lfsr	0,_ready_queue+540
  1631  001144  CFEE F04D          	movff	postinc0,btemp+10
  1632  001148  CFED F04E          	movff	postdec0,btemp+11
  1633  00114C  0E6C               	movlw	108
  1634  00114E  024D               	mulwf	btemp+10,c
  1635  001150  CFF3 F04B          	movff	prodl,btemp+8
  1636  001154  CFF4 F04C          	movff	prodh,btemp+9
  1637  001158  024E               	mulwf	btemp+11,c
  1638  00115A  50F3               	movf	prodl,w,c
  1639  00115C  264C               	addwf	btemp+9,f,c
  1640  00115E  0ED4               	movlw	low _ready_queue
  1641  001160  244B               	addwf	btemp+8,w,c
  1642  001162  6EE9               	movwf	fsr0l,c
  1643  001164  0E00               	movlw	high _ready_queue
  1644  001166  204C               	addwfc	btemp+9,w,c
  1645  001168  6EEA               	movwf	fsr0h,c
  1646  00116A  0E6B               	movlw	107
  1647  00116C                     u681:
  1648  00116C  CFDB FFEB          	movff	plusw2,plusw0
  1649  001170  06E8               	decf	wreg,f,c
  1650  001172  E2FC               	bc	u681
  1651                           
  1652                           ;kernel.c: 26:   ready_queue.tasks_installed++;
  1653  001174  EE22  F0F0         	lfsr	2,_ready_queue+540
  1654  001178  2ADE               	incf	postinc2,f,c
  1655  00117A  0E00               	movlw	0
  1656  00117C  22DD               	addwfc	postdec2,f,c
  1657                           
  1658                           ; _lunos_createTask: autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
  1659  00117E  0E90               	movlw	144
  1660  001180  26E1               	addwf	fsr1l,f,c
  1661  001182  0EFF               	movlw	255
  1662  001184  22E2               	addwfc	fsr1h,f,c
  1663  001186  0012               	return		;funcret
  1664  001188                     __end_of_lunos_createTask:
  1665                           	opt callstack 0
  1666                           
  1667 ;; *************** function _SRAMInitHeap *****************
  1668 ;; Defined at:
  1669 ;;		line 313 in file "sralloc.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  count           2  [STACK] unsigned int 
  1674 ;;  pHeap           2  [STACK] PTR unsigned char 
  1675 ;;		 -> _uDynamicHeap(512), 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1  [STACK] void 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1685 ;;      Params:         0       0       0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:   10
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_lunos_init
  1696 ;; This function uses a reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text8
  1700  001366                     __ptext8:
  1701                           	opt callstack 0
  1702  001366                     _SRAMInitHeap:
  1703                           	opt callstack 0
  1704                           
  1705                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1706  001366  52E6               	movf	postinc1,f,c
  1707  001368  52E6               	movf	postinc1,f,c
  1708  00136A  52E6               	movf	postinc1,f,c
  1709  00136C  52E6               	movf	postinc1,f,c
  1710                           
  1711                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
  1712                           ;stkvar	_pHeap @ sp[(-4)+2]
  1713                           
  1714                           ;incstack = 0
  1715  00136E  0E02               	movlw	high __uDynamicHeap
  1716  001370  6E43               	movwf	btemp,c
  1717  001372  0EFF               	movlw	-1
  1718  001374  C043  FFE3         	movff	btemp,plusw1
  1719  001378  0EF4               	movlw	low __uDynamicHeap
  1720  00137A  6E43               	movwf	btemp,c
  1721  00137C  0EFE               	movlw	-2
  1722  00137E  C043  FFE3         	movff	btemp,plusw1
  1723                           
  1724                           ;sralloc.c: 319:  count = 0x200 -1;
  1725  001382  0EFF               	movlw	255
  1726  001384  6E4D               	movwf	btemp+10,c
  1727  001386  0E01               	movlw	1
  1728  001388  6E4E               	movwf	btemp+11,c
  1729                           
  1730                           ;stkvar	_count @ sp[(-4)+0]
  1731  00138A  0EFC               	movlw	-4
  1732  00138C  C04D  FFE3         	movff	btemp+10,plusw1
  1733  001390  0EFD               	movlw	-3
  1734  001392  C04E  FFE3         	movff	btemp+11,plusw1
  1735  001396                     l1801:
  1736                           
  1737                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
  1738                           ;stkvar	_count @ sp[(-4)+0]
  1739  001396  0EFD               	movlw	-3
  1740  001398  50E3               	movf	plusw1,w,c
  1741  00139A  E107               	bnz	u720
  1742  00139C  0EFC               	movlw	-4
  1743  00139E  CFE3 F043          	movff	plusw1,btemp
  1744  0013A2  0E80               	movlw	128
  1745  0013A4  5E43               	subwf	btemp,f,c
  1746  0013A6  A0D8               	btfss	status,0,c
  1747  0013A8  D023               	goto	l1809
  1748  0013AA                     u720:
  1749                           
  1750                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
  1751                           ;stkvar	_pHeap @ sp[(-4)+2]
  1752  0013AA  0EFE               	movlw	-2
  1753  0013AC  CFE3 FFD9          	movff	plusw1,fsr2l
  1754  0013B0  0EFF               	movlw	-1
  1755  0013B2  CFE3 FFDA          	movff	plusw1,fsr2h
  1756  0013B6  0E7F               	movlw	127
  1757  0013B8  6EDF               	movwf	indf2,c
  1758                           
  1759                           ;sralloc.c: 326:    pHeap += 0x7F;
  1760                           ;stkvar	_pHeap @ sp[(-4)+2]
  1761  0013BA  0EFE               	movlw	-2
  1762  0013BC  50E3               	movf	plusw1,w,c
  1763  0013BE  0F7F               	addlw	127
  1764  0013C0  6E43               	movwf	btemp,c
  1765  0013C2  0EFE               	movlw	-2
  1766  0013C4  C043  FFE3         	movff	btemp,plusw1
  1767  0013C8  6A43               	clrf	btemp,c
  1768  0013CA  0EFF               	movlw	-1
  1769  0013CC  50E3               	movf	plusw1,w,c
  1770  0013CE  2043               	addwfc	btemp,w,c
  1771  0013D0  6E43               	movwf	btemp,c
  1772  0013D2  0EFF               	movlw	-1
  1773  0013D4  C043  FFE3         	movff	btemp,plusw1
  1774                           
  1775                           ;sralloc.c: 327:    count = count - 0x7F;
  1776                           ;stkvar	_count @ sp[(-4)+0]
  1777  0013D8  50E1               	movf	fsr1l,w,c
  1778  0013DA  0FFC               	addlw	-4
  1779  0013DC  6ED9               	movwf	fsr2l,c
  1780  0013DE  50E2               	movf	fsr1h,w,c
  1781  0013E0  6EDA               	movwf	fsr2h,c
  1782  0013E2  0EFF               	movlw	255
  1783  0013E4  22DA               	addwfc	fsr2h,f,c
  1784  0013E6  0E81               	movlw	129
  1785  0013E8  26DE               	addwf	postinc2,f,c
  1786  0013EA  0EFF               	movlw	255
  1787  0013EC  22DD               	addwfc	postdec2,f,c
  1788                           
  1789                           ;sralloc.c: 328:   }
  1790  0013EE  D7D3               	goto	l1801
  1791  0013F0                     l1809:
  1792                           
  1793                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1794                           ;stkvar	_count @ sp[(-4)+0]
  1795                           ;stkvar	_pHeap @ sp[(-4)+2]
  1796  0013F0  0EFE               	movlw	-2
  1797  0013F2  CFE3 FFD9          	movff	plusw1,fsr2l
  1798  0013F6  0EFF               	movlw	-1
  1799  0013F8  CFE3 FFDA          	movff	plusw1,fsr2h
  1800  0013FC  0EFC               	movlw	-4
  1801  0013FE  CFE3 FFDF          	movff	plusw1,indf2
  1802                           
  1803                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1804                           ;stkvar	_count @ sp[(-4)+0]
  1805  001402  0EFC               	movlw	-4
  1806  001404  CFE3 F04D          	movff	plusw1,btemp+10
  1807  001408  0EFD               	movlw	-3
  1808  00140A  CFE3 F04E          	movff	plusw1,btemp+11
  1809                           
  1810                           ;stkvar	_pHeap @ sp[(-4)+2]
  1811  00140E  0EFE               	movlw	-2
  1812  001410  CFE3 F04B          	movff	plusw1,btemp+8
  1813  001414  0EFF               	movlw	-1
  1814  001416  CFE3 F04C          	movff	plusw1,btemp+9
  1815  00141A  504D               	movf	btemp+10,w,c
  1816  00141C  244B               	addwf	btemp+8,w,c
  1817  00141E  6ED9               	movwf	fsr2l,c
  1818  001420  504E               	movf	btemp+11,w,c
  1819  001422  204C               	addwfc	btemp+9,w,c
  1820  001424  6EDA               	movwf	fsr2h,c
  1821  001426  0E00               	movlw	0
  1822  001428  6EDF               	movwf	indf2,c
  1823                           
  1824                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1825  00142A  52E5               	movf	postdec1,f,c
  1826  00142C  52E5               	movf	postdec1,f,c
  1827  00142E  52E5               	movf	postdec1,f,c
  1828  001430  52E5               	movf	postdec1,f,c
  1829  001432  0012               	return		;funcret
  1830  001434                     __end_of_SRAMInitHeap:
  1831                           	opt callstack 0
  1832                           
  1833 ;; *************** function _dispatcher *****************
  1834 ;; Defined at:
  1835 ;;		line 64 in file "kernel.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  state           1  [STACK] enum E4
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1  [STACK] void 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1849 ;;      Params:         0       0       0       0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0
  1852 ;;      Totals:         0       0       0       0       0       0       0
  1853 ;;Total ram usage:        0 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:   13
  1856 ;; This function calls:
  1857 ;;		_scheduler
  1858 ;; This function is called by:
  1859 ;;		_lunos_delayTask
  1860 ;;		_main
  1861 ;;		_sem_wait
  1862 ;; This function uses a reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text9
  1866  0004CC                     __ptext9:
  1867                           	opt callstack 0
  1868  0004CC                     _dispatcher:
  1869                           	opt callstack 11
  1870                           
  1871                           ;kernel.c: 65:   INTCONbits.GIE = 0;
  1872                           
  1873                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1874                           ;incstack = 0
  1875  0004CC  9EF2               	bcf	4082,7,c	;volatile
  1876                           
  1877                           ;kernel.c: 67:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  1878  0004CE  C2F2  F00B         	movff	_ready_queue+542,_who
  1879  0004D2  C2F3  F00C         	movff	_ready_queue+543,_who+1
  1880                           
  1881                           ;stkvar	_state @ sp[(0)+-1]
  1882  0004D6  C00B  F04D         	movff	_who,btemp+10
  1883  0004DA  C00C  F04E         	movff	_who+1,btemp+11
  1884  0004DE  0E6C               	movlw	108
  1885  0004E0  024D               	mulwf	btemp+10,c
  1886  0004E2  CFF3 F04B          	movff	prodl,btemp+8
  1887  0004E6  CFF4 F04C          	movff	prodh,btemp+9
  1888  0004EA  024E               	mulwf	btemp+11,c
  1889  0004EC  50F3               	movf	prodl,w,c
  1890  0004EE  264C               	addwf	btemp+9,f,c
  1891  0004F0  0EDC               	movlw	low (_ready_queue+8)
  1892  0004F2  244B               	addwf	btemp+8,w,c
  1893  0004F4  6ED9               	movwf	fsr2l,c
  1894  0004F6  0E00               	movlw	high (_ready_queue+8)
  1895  0004F8  204C               	addwfc	btemp+9,w,c
  1896  0004FA  6EDA               	movwf	fsr2h,c
  1897  0004FC  0EFF               	movlw	-1
  1898  0004FE  CFE3 FFDF          	movff	plusw1,indf2
  1899  000502  C00B  F04D         	movff	_who,btemp+10
  1900  000506  C00C  F04E         	movff	_who+1,btemp+11
  1901  00050A  0E6C               	movlw	108
  1902  00050C  024D               	mulwf	btemp+10,c
  1903  00050E  CFF3 F04B          	movff	prodl,btemp+8
  1904  000512  CFF4 F04C          	movff	prodh,btemp+9
  1905  000516  024E               	mulwf	btemp+11,c
  1906  000518  50F3               	movf	prodl,w,c
  1907  00051A  264C               	addwf	btemp+9,f,c
  1908  00051C  0ED9               	movlw	low (_ready_queue+5)
  1909  00051E  244B               	addwf	btemp+8,w,c
  1910  000520  6ED9               	movwf	fsr2l,c
  1911  000522  0E00               	movlw	high (_ready_queue+5)
  1912  000524  204C               	addwfc	btemp+9,w,c
  1913  000526  6EDA               	movwf	fsr2h,c
  1914  000528  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1915  00052C  C00B  F04D         	movff	_who,btemp+10
  1916  000530  C00C  F04E         	movff	_who+1,btemp+11
  1917  000534  0E6C               	movlw	108
  1918  000536  024D               	mulwf	btemp+10,c
  1919  000538  CFF3 F04B          	movff	prodl,btemp+8
  1920  00053C  CFF4 F04C          	movff	prodh,btemp+9
  1921  000540  024E               	mulwf	btemp+11,c
  1922  000542  50F3               	movf	prodl,w,c
  1923  000544  264C               	addwf	btemp+9,f,c
  1924  000546  0EDA               	movlw	low (_ready_queue+6)
  1925  000548  244B               	addwf	btemp+8,w,c
  1926  00054A  6ED9               	movwf	fsr2l,c
  1927  00054C  0E00               	movlw	high (_ready_queue+6)
  1928  00054E  204C               	addwfc	btemp+9,w,c
  1929  000550  6EDA               	movwf	fsr2h,c
  1930  000552  CFD8 FFDF          	movff	status,indf2	;volatile
  1931  000556  C00B  F04D         	movff	_who,btemp+10
  1932  00055A  C00C  F04E         	movff	_who+1,btemp+11
  1933  00055E  0E6C               	movlw	108
  1934  000560  024D               	mulwf	btemp+10,c
  1935  000562  CFF3 F04B          	movff	prodl,btemp+8
  1936  000566  CFF4 F04C          	movff	prodh,btemp+9
  1937  00056A  024E               	mulwf	btemp+11,c
  1938  00056C  50F3               	movf	prodl,w,c
  1939  00056E  264C               	addwf	btemp+9,f,c
  1940  000570  0EDB               	movlw	low (_ready_queue+7)
  1941  000572  244B               	addwf	btemp+8,w,c
  1942  000574  6ED9               	movwf	fsr2l,c
  1943  000576  0E00               	movlw	high (_ready_queue+7)
  1944  000578  204C               	addwfc	btemp+9,w,c
  1945  00057A  6EDA               	movwf	fsr2h,c
  1946  00057C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1947  000580  6A09               	clrf	_size,c
  1948  000582  6A0A               	clrf	_size+1,c
  1949  000584  D08D               	goto	l1773
  1950  000586                     l1769:
  1951  000586  C009  F04D         	movff	_size,btemp+10
  1952  00058A  C00A  F04E         	movff	_size+1,btemp+11
  1953  00058E  0E03               	movlw	3
  1954  000590  024D               	mulwf	btemp+10,c
  1955  000592  CFF3 F04B          	movff	prodl,btemp+8
  1956  000596  CFF4 F04C          	movff	prodh,btemp+9
  1957  00059A  024E               	mulwf	btemp+11,c
  1958  00059C  50F3               	movf	prodl,w,c
  1959  00059E  264C               	addwf	btemp+9,f,c
  1960  0005A0  C00B  F04D         	movff	_who,btemp+10
  1961  0005A4  C00C  F04E         	movff	_who+1,btemp+11
  1962  0005A8  0E6C               	movlw	108
  1963  0005AA  024D               	mulwf	btemp+10,c
  1964  0005AC  CFF3 F049          	movff	prodl,btemp+6
  1965  0005B0  CFF4 F04A          	movff	prodh,btemp+7
  1966  0005B4  024E               	mulwf	btemp+11,c
  1967  0005B6  50F3               	movf	prodl,w,c
  1968  0005B8  264A               	addwf	btemp+7,f,c
  1969  0005BA  0ED4               	movlw	low _ready_queue
  1970  0005BC  6E4D               	movwf	btemp+10,c
  1971  0005BE  0E00               	movlw	high _ready_queue
  1972  0005C0  6E4E               	movwf	btemp+11,c
  1973  0005C2  0E09               	movlw	9
  1974  0005C4  264D               	addwf	btemp+10,f,c
  1975  0005C6  0E00               	movlw	0
  1976  0005C8  224E               	addwfc	btemp+11,f,c
  1977  0005CA  5049               	movf	btemp+6,w,c
  1978  0005CC  264D               	addwf	btemp+10,f,c
  1979  0005CE  504A               	movf	btemp+7,w,c
  1980  0005D0  224E               	addwfc	btemp+11,f,c
  1981  0005D2  504B               	movf	btemp+8,w,c
  1982  0005D4  244D               	addwf	btemp+10,w,c
  1983  0005D6  6ED9               	movwf	fsr2l,c
  1984  0005D8  504C               	movf	btemp+9,w,c
  1985  0005DA  204E               	addwfc	btemp+11,w,c
  1986  0005DC  6EDA               	movwf	fsr2h,c
  1987  0005DE  CFFF FFDF          	movff	tosu,indf2	;volatile
  1988  0005E2  C009  F04D         	movff	_size,btemp+10
  1989  0005E6  C00A  F04E         	movff	_size+1,btemp+11
  1990  0005EA  0E03               	movlw	3
  1991  0005EC  024D               	mulwf	btemp+10,c
  1992  0005EE  CFF3 F04B          	movff	prodl,btemp+8
  1993  0005F2  CFF4 F04C          	movff	prodh,btemp+9
  1994  0005F6  024E               	mulwf	btemp+11,c
  1995  0005F8  50F3               	movf	prodl,w,c
  1996  0005FA  264C               	addwf	btemp+9,f,c
  1997  0005FC  C00B  F04D         	movff	_who,btemp+10
  1998  000600  C00C  F04E         	movff	_who+1,btemp+11
  1999  000604  0E6C               	movlw	108
  2000  000606  024D               	mulwf	btemp+10,c
  2001  000608  CFF3 F049          	movff	prodl,btemp+6
  2002  00060C  CFF4 F04A          	movff	prodh,btemp+7
  2003  000610  024E               	mulwf	btemp+11,c
  2004  000612  50F3               	movf	prodl,w,c
  2005  000614  264A               	addwf	btemp+7,f,c
  2006  000616  0ED4               	movlw	low _ready_queue
  2007  000618  6E4D               	movwf	btemp+10,c
  2008  00061A  0E00               	movlw	high _ready_queue
  2009  00061C  6E4E               	movwf	btemp+11,c
  2010  00061E  0E0B               	movlw	11
  2011  000620  264D               	addwf	btemp+10,f,c
  2012  000622  0E00               	movlw	0
  2013  000624  224E               	addwfc	btemp+11,f,c
  2014  000626  5049               	movf	btemp+6,w,c
  2015  000628  264D               	addwf	btemp+10,f,c
  2016  00062A  504A               	movf	btemp+7,w,c
  2017  00062C  224E               	addwfc	btemp+11,f,c
  2018  00062E  504B               	movf	btemp+8,w,c
  2019  000630  244D               	addwf	btemp+10,w,c
  2020  000632  6ED9               	movwf	fsr2l,c
  2021  000634  504C               	movf	btemp+9,w,c
  2022  000636  204E               	addwfc	btemp+11,w,c
  2023  000638  6EDA               	movwf	fsr2h,c
  2024  00063A  CFFE FFDF          	movff	tosh,indf2	;volatile
  2025  00063E  C009  F04D         	movff	_size,btemp+10
  2026  000642  C00A  F04E         	movff	_size+1,btemp+11
  2027  000646  0E03               	movlw	3
  2028  000648  024D               	mulwf	btemp+10,c
  2029  00064A  CFF3 F04B          	movff	prodl,btemp+8
  2030  00064E  CFF4 F04C          	movff	prodh,btemp+9
  2031  000652  024E               	mulwf	btemp+11,c
  2032  000654  50F3               	movf	prodl,w,c
  2033  000656  264C               	addwf	btemp+9,f,c
  2034  000658  C00B  F04D         	movff	_who,btemp+10
  2035  00065C  C00C  F04E         	movff	_who+1,btemp+11
  2036  000660  0E6C               	movlw	108
  2037  000662  024D               	mulwf	btemp+10,c
  2038  000664  CFF3 F049          	movff	prodl,btemp+6
  2039  000668  CFF4 F04A          	movff	prodh,btemp+7
  2040  00066C  024E               	mulwf	btemp+11,c
  2041  00066E  50F3               	movf	prodl,w,c
  2042  000670  264A               	addwf	btemp+7,f,c
  2043  000672  0ED4               	movlw	low _ready_queue
  2044  000674  6E4D               	movwf	btemp+10,c
  2045  000676  0E00               	movlw	high _ready_queue
  2046  000678  6E4E               	movwf	btemp+11,c
  2047  00067A  0E0A               	movlw	10
  2048  00067C  264D               	addwf	btemp+10,f,c
  2049  00067E  0E00               	movlw	0
  2050  000680  224E               	addwfc	btemp+11,f,c
  2051  000682  5049               	movf	btemp+6,w,c
  2052  000684  264D               	addwf	btemp+10,f,c
  2053  000686  504A               	movf	btemp+7,w,c
  2054  000688  224E               	addwfc	btemp+11,f,c
  2055  00068A  504B               	movf	btemp+8,w,c
  2056  00068C  244D               	addwf	btemp+10,w,c
  2057  00068E  6ED9               	movwf	fsr2l,c
  2058  000690  504C               	movf	btemp+9,w,c
  2059  000692  204E               	addwfc	btemp+11,w,c
  2060  000694  6EDA               	movwf	fsr2h,c
  2061  000696  CFFD FFDF          	movff	tosl,indf2	;volatile
  2062  00069A  4A09               	infsnz	_size,f,c
  2063  00069C  2A0A               	incf	_size+1,f,c
  2064  00069E  0006               	pop		;# 
  2065  0006A0                     l1773:
  2066  0006A0  50FC               	movf	stkptr,w,c	;volatile
  2067  0006A2  A4D8               	btfss	status,2,c
  2068  0006A4  D770               	goto	l1769
  2069  0006A6  0EFF               	movlw	255
  2070  0006A8  6E4D               	movwf	btemp+10,c
  2071  0006AA  0EFF               	movlw	255
  2072  0006AC  6E4E               	movwf	btemp+11,c
  2073  0006AE  C009  F04B         	movff	_size,btemp+8
  2074  0006B2  C00A  F04C         	movff	_size+1,btemp+9
  2075  0006B6  504D               	movf	btemp+10,w,c
  2076  0006B8  264B               	addwf	btemp+8,f,c
  2077  0006BA  504E               	movf	btemp+11,w,c
  2078  0006BC  224C               	addwfc	btemp+9,f,c
  2079  0006BE  C00B  F04D         	movff	_who,btemp+10
  2080  0006C2  C00C  F04E         	movff	_who+1,btemp+11
  2081  0006C6  0E6C               	movlw	108
  2082  0006C8  024D               	mulwf	btemp+10,c
  2083  0006CA  CFF3 F049          	movff	prodl,btemp+6
  2084  0006CE  CFF4 F04A          	movff	prodh,btemp+7
  2085  0006D2  024E               	mulwf	btemp+11,c
  2086  0006D4  50F3               	movf	prodl,w,c
  2087  0006D6  264A               	addwf	btemp+7,f,c
  2088  0006D8  0E3A               	movlw	low (_ready_queue+102)
  2089  0006DA  2449               	addwf	btemp+6,w,c
  2090  0006DC  6ED9               	movwf	fsr2l,c
  2091  0006DE  0E01               	movlw	high (_ready_queue+102)
  2092  0006E0  204A               	addwfc	btemp+7,w,c
  2093  0006E2  6EDA               	movwf	fsr2h,c
  2094  0006E4  C04B  FFDE         	movff	btemp+8,postinc2
  2095  0006E8  C04C  FFDD         	movff	btemp+9,postdec2
  2096                           
  2097                           ;kernel.c: 69:   ready_queue.task_running = scheduler();
  2098  0006EC  EC10  F00E         	call	_scheduler	;wreg free
  2099  0006F0  C043  F2F2         	movff	btemp,_ready_queue+542
  2100  0006F4  C044  F2F3         	movff	btemp+1,_ready_queue+543
  2101                           
  2102                           ;kernel.c: 71:   { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.tasks[who
      +                          ].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task_f; } e
      +                          lse { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].W_reg; 
      +                          STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg; size =
      +                           ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL = read
      +                          y_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[who].task
      +                          _stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[size].TO
      +                          SU_reg; size--; } }};
  2103  0006F8  C2F2  F00B         	movff	_ready_queue+542,_who
  2104  0006FC  C2F3  F00C         	movff	_ready_queue+543,_who+1
  2105  000700  6AFC               	clrf	stkptr,c	;volatile
  2106  000702  C00B  F04D         	movff	_who,btemp+10
  2107  000706  C00C  F04E         	movff	_who+1,btemp+11
  2108  00070A  0E6C               	movlw	108
  2109  00070C  024D               	mulwf	btemp+10,c
  2110  00070E  CFF3 F04B          	movff	prodl,btemp+8
  2111  000712  CFF4 F04C          	movff	prodh,btemp+9
  2112  000716  024E               	mulwf	btemp+11,c
  2113  000718  50F3               	movf	prodl,w,c
  2114  00071A  264C               	addwf	btemp+9,f,c
  2115  00071C  0E3A               	movlw	low (_ready_queue+102)
  2116  00071E  244B               	addwf	btemp+8,w,c
  2117  000720  6ED9               	movwf	fsr2l,c
  2118  000722  0E01               	movlw	high (_ready_queue+102)
  2119  000724  204C               	addwfc	btemp+9,w,c
  2120  000726  6EDA               	movwf	fsr2h,c
  2121  000728  50DE               	movf	postinc2,w,c
  2122  00072A  10DE               	iorwf	postinc2,w,c
  2123  00072C  A4D8               	btfss	status,2,c
  2124  00072E  D01E               	goto	l1789
  2125  000730  0005               	push		;# 
  2126  000732  C00B  F04D         	movff	_who,btemp+10
  2127  000736  C00C  F04E         	movff	_who+1,btemp+11
  2128  00073A  0E6C               	movlw	108
  2129  00073C  024D               	mulwf	btemp+10,c
  2130  00073E  CFF3 F04B          	movff	prodl,btemp+8
  2131  000742  CFF4 F04C          	movff	prodh,btemp+9
  2132  000746  024E               	mulwf	btemp+11,c
  2133  000748  50F3               	movf	prodl,w,c
  2134  00074A  264C               	addwf	btemp+9,f,c
  2135  00074C  0E3C               	movlw	low (_ready_queue+104)
  2136  00074E  244B               	addwf	btemp+8,w,c
  2137  000750  6ED9               	movwf	fsr2l,c
  2138  000752  0E01               	movlw	high (_ready_queue+104)
  2139  000754  204C               	addwfc	btemp+9,w,c
  2140  000756  6EDA               	movwf	fsr2h,c
  2141  000758  CFDE F04D          	movff	postinc2,btemp+10
  2142  00075C  CFDD F04E          	movff	postdec2,btemp+11
  2143  000760  C04D  FFFD         	movff	btemp+10,tosl	;volatile
  2144  000764  C04E  FFFE         	movff	btemp+11,tosh	;volatile
  2145  000768  6AFF               	clrf	tosu,c	;volatile
  2146  00076A  D0FF               	goto	u710
  2147  00076C                     l1789:
  2148  00076C  C00B  F04D         	movff	_who,btemp+10
  2149  000770  C00C  F04E         	movff	_who+1,btemp+11
  2150  000774  0E6C               	movlw	108
  2151  000776  024D               	mulwf	btemp+10,c
  2152  000778  CFF3 F04B          	movff	prodl,btemp+8
  2153  00077C  CFF4 F04C          	movff	prodh,btemp+9
  2154  000780  024E               	mulwf	btemp+11,c
  2155  000782  50F3               	movf	prodl,w,c
  2156  000784  264C               	addwf	btemp+9,f,c
  2157  000786  0EDC               	movlw	low (_ready_queue+8)
  2158  000788  244B               	addwf	btemp+8,w,c
  2159  00078A  6ED9               	movwf	fsr2l,c
  2160  00078C  0E00               	movlw	high (_ready_queue+8)
  2161  00078E  204C               	addwfc	btemp+9,w,c
  2162  000790  6EDA               	movwf	fsr2h,c
  2163  000792  0E01               	movlw	1
  2164  000794  6EDF               	movwf	indf2,c
  2165  000796  C00B  F04D         	movff	_who,btemp+10
  2166  00079A  C00C  F04E         	movff	_who+1,btemp+11
  2167  00079E  0E6C               	movlw	108
  2168  0007A0  024D               	mulwf	btemp+10,c
  2169  0007A2  CFF3 F04B          	movff	prodl,btemp+8
  2170  0007A6  CFF4 F04C          	movff	prodh,btemp+9
  2171  0007AA  024E               	mulwf	btemp+11,c
  2172  0007AC  50F3               	movf	prodl,w,c
  2173  0007AE  264C               	addwf	btemp+9,f,c
  2174  0007B0  0ED9               	movlw	low (_ready_queue+5)
  2175  0007B2  244B               	addwf	btemp+8,w,c
  2176  0007B4  6ED9               	movwf	fsr2l,c
  2177  0007B6  0E00               	movlw	high (_ready_queue+5)
  2178  0007B8  204C               	addwfc	btemp+9,w,c
  2179  0007BA  6EDA               	movwf	fsr2h,c
  2180  0007BC  50DF               	movf	indf2,w,c
  2181  0007BE  6E4E               	movwf	btemp+11,c
  2182  0007C0  504E               	movf	btemp+11,w,c
  2183  0007C2  C00B  F04D         	movff	_who,btemp+10
  2184  0007C6  C00C  F04E         	movff	_who+1,btemp+11
  2185  0007CA  0E6C               	movlw	108
  2186  0007CC  024D               	mulwf	btemp+10,c
  2187  0007CE  CFF3 F04B          	movff	prodl,btemp+8
  2188  0007D2  CFF4 F04C          	movff	prodh,btemp+9
  2189  0007D6  024E               	mulwf	btemp+11,c
  2190  0007D8  50F3               	movf	prodl,w,c
  2191  0007DA  264C               	addwf	btemp+9,f,c
  2192  0007DC  0EDA               	movlw	low (_ready_queue+6)
  2193  0007DE  244B               	addwf	btemp+8,w,c
  2194  0007E0  6ED9               	movwf	fsr2l,c
  2195  0007E2  0E00               	movlw	high (_ready_queue+6)
  2196  0007E4  204C               	addwfc	btemp+9,w,c
  2197  0007E6  6EDA               	movwf	fsr2h,c
  2198  0007E8  50DF               	movf	indf2,w,c
  2199  0007EA  6ED8               	movwf	status,c	;volatile
  2200  0007EC  C00B  F04D         	movff	_who,btemp+10
  2201  0007F0  C00C  F04E         	movff	_who+1,btemp+11
  2202  0007F4  0E6C               	movlw	108
  2203  0007F6  024D               	mulwf	btemp+10,c
  2204  0007F8  CFF3 F04B          	movff	prodl,btemp+8
  2205  0007FC  CFF4 F04C          	movff	prodh,btemp+9
  2206  000800  024E               	mulwf	btemp+11,c
  2207  000802  50F3               	movf	prodl,w,c
  2208  000804  264C               	addwf	btemp+9,f,c
  2209  000806  0EDB               	movlw	low (_ready_queue+7)
  2210  000808  244B               	addwf	btemp+8,w,c
  2211  00080A  6ED9               	movwf	fsr2l,c
  2212  00080C  0E00               	movlw	high (_ready_queue+7)
  2213  00080E  204C               	addwfc	btemp+9,w,c
  2214  000810  6EDA               	movwf	fsr2h,c
  2215  000812  50DF               	movf	indf2,w,c
  2216  000814  6EE0               	movwf	bsr,c	;volatile
  2217  000816  C00B  F04D         	movff	_who,btemp+10
  2218  00081A  C00C  F04E         	movff	_who+1,btemp+11
  2219  00081E  0E6C               	movlw	108
  2220  000820  024D               	mulwf	btemp+10,c
  2221  000822  CFF3 F04B          	movff	prodl,btemp+8
  2222  000826  CFF4 F04C          	movff	prodh,btemp+9
  2223  00082A  024E               	mulwf	btemp+11,c
  2224  00082C  50F3               	movf	prodl,w,c
  2225  00082E  264C               	addwf	btemp+9,f,c
  2226  000830  0E3A               	movlw	low (_ready_queue+102)
  2227  000832  244B               	addwf	btemp+8,w,c
  2228  000834  6ED9               	movwf	fsr2l,c
  2229  000836  0E01               	movlw	high (_ready_queue+102)
  2230  000838  204C               	addwfc	btemp+9,w,c
  2231  00083A  6EDA               	movwf	fsr2h,c
  2232  00083C  CFDE F009          	movff	postinc2,_size
  2233  000840  CFDD F00A          	movff	postdec2,_size+1
  2234  000844  D08E               	goto	l1795
  2235  000846                     l127:
  2236  000846  0005               	push		;# 
  2237  000848  C009  F04D         	movff	_size,btemp+10
  2238  00084C  C00A  F04E         	movff	_size+1,btemp+11
  2239  000850  0E03               	movlw	3
  2240  000852  024D               	mulwf	btemp+10,c
  2241  000854  CFF3 F04B          	movff	prodl,btemp+8
  2242  000858  CFF4 F04C          	movff	prodh,btemp+9
  2243  00085C  024E               	mulwf	btemp+11,c
  2244  00085E  50F3               	movf	prodl,w,c
  2245  000860  264C               	addwf	btemp+9,f,c
  2246  000862  C00B  F04D         	movff	_who,btemp+10
  2247  000866  C00C  F04E         	movff	_who+1,btemp+11
  2248  00086A  0E6C               	movlw	108
  2249  00086C  024D               	mulwf	btemp+10,c
  2250  00086E  CFF3 F049          	movff	prodl,btemp+6
  2251  000872  CFF4 F04A          	movff	prodh,btemp+7
  2252  000876  024E               	mulwf	btemp+11,c
  2253  000878  50F3               	movf	prodl,w,c
  2254  00087A  264A               	addwf	btemp+7,f,c
  2255  00087C  0ED4               	movlw	low _ready_queue
  2256  00087E  6E4D               	movwf	btemp+10,c
  2257  000880  0E00               	movlw	high _ready_queue
  2258  000882  6E4E               	movwf	btemp+11,c
  2259  000884  0E0A               	movlw	10
  2260  000886  264D               	addwf	btemp+10,f,c
  2261  000888  0E00               	movlw	0
  2262  00088A  224E               	addwfc	btemp+11,f,c
  2263  00088C  5049               	movf	btemp+6,w,c
  2264  00088E  264D               	addwf	btemp+10,f,c
  2265  000890  504A               	movf	btemp+7,w,c
  2266  000892  224E               	addwfc	btemp+11,f,c
  2267  000894  504B               	movf	btemp+8,w,c
  2268  000896  244D               	addwf	btemp+10,w,c
  2269  000898  6ED9               	movwf	fsr2l,c
  2270  00089A  504C               	movf	btemp+9,w,c
  2271  00089C  204E               	addwfc	btemp+11,w,c
  2272  00089E  6EDA               	movwf	fsr2h,c
  2273  0008A0  50DF               	movf	indf2,w,c
  2274  0008A2  6EFD               	movwf	tosl,c	;volatile
  2275  0008A4  C009  F04D         	movff	_size,btemp+10
  2276  0008A8  C00A  F04E         	movff	_size+1,btemp+11
  2277  0008AC  0E03               	movlw	3
  2278  0008AE  024D               	mulwf	btemp+10,c
  2279  0008B0  CFF3 F04B          	movff	prodl,btemp+8
  2280  0008B4  CFF4 F04C          	movff	prodh,btemp+9
  2281  0008B8  024E               	mulwf	btemp+11,c
  2282  0008BA  50F3               	movf	prodl,w,c
  2283  0008BC  264C               	addwf	btemp+9,f,c
  2284  0008BE  C00B  F04D         	movff	_who,btemp+10
  2285  0008C2  C00C  F04E         	movff	_who+1,btemp+11
  2286  0008C6  0E6C               	movlw	108
  2287  0008C8  024D               	mulwf	btemp+10,c
  2288  0008CA  CFF3 F049          	movff	prodl,btemp+6
  2289  0008CE  CFF4 F04A          	movff	prodh,btemp+7
  2290  0008D2  024E               	mulwf	btemp+11,c
  2291  0008D4  50F3               	movf	prodl,w,c
  2292  0008D6  264A               	addwf	btemp+7,f,c
  2293  0008D8  0ED4               	movlw	low _ready_queue
  2294  0008DA  6E4D               	movwf	btemp+10,c
  2295  0008DC  0E00               	movlw	high _ready_queue
  2296  0008DE  6E4E               	movwf	btemp+11,c
  2297  0008E0  0E0B               	movlw	11
  2298  0008E2  264D               	addwf	btemp+10,f,c
  2299  0008E4  0E00               	movlw	0
  2300  0008E6  224E               	addwfc	btemp+11,f,c
  2301  0008E8  5049               	movf	btemp+6,w,c
  2302  0008EA  264D               	addwf	btemp+10,f,c
  2303  0008EC  504A               	movf	btemp+7,w,c
  2304  0008EE  224E               	addwfc	btemp+11,f,c
  2305  0008F0  504B               	movf	btemp+8,w,c
  2306  0008F2  244D               	addwf	btemp+10,w,c
  2307  0008F4  6ED9               	movwf	fsr2l,c
  2308  0008F6  504C               	movf	btemp+9,w,c
  2309  0008F8  204E               	addwfc	btemp+11,w,c
  2310  0008FA  6EDA               	movwf	fsr2h,c
  2311  0008FC  50DF               	movf	indf2,w,c
  2312  0008FE  6EFE               	movwf	tosh,c	;volatile
  2313  000900  C009  F04D         	movff	_size,btemp+10
  2314  000904  C00A  F04E         	movff	_size+1,btemp+11
  2315  000908  0E03               	movlw	3
  2316  00090A  024D               	mulwf	btemp+10,c
  2317  00090C  CFF3 F04B          	movff	prodl,btemp+8
  2318  000910  CFF4 F04C          	movff	prodh,btemp+9
  2319  000914  024E               	mulwf	btemp+11,c
  2320  000916  50F3               	movf	prodl,w,c
  2321  000918  264C               	addwf	btemp+9,f,c
  2322  00091A  C00B  F04D         	movff	_who,btemp+10
  2323  00091E  C00C  F04E         	movff	_who+1,btemp+11
  2324  000922  0E6C               	movlw	108
  2325  000924  024D               	mulwf	btemp+10,c
  2326  000926  CFF3 F049          	movff	prodl,btemp+6
  2327  00092A  CFF4 F04A          	movff	prodh,btemp+7
  2328  00092E  024E               	mulwf	btemp+11,c
  2329  000930  50F3               	movf	prodl,w,c
  2330  000932  264A               	addwf	btemp+7,f,c
  2331  000934  0ED4               	movlw	low _ready_queue
  2332  000936  6E4D               	movwf	btemp+10,c
  2333  000938  0E00               	movlw	high _ready_queue
  2334  00093A  6E4E               	movwf	btemp+11,c
  2335  00093C  0E09               	movlw	9
  2336  00093E  264D               	addwf	btemp+10,f,c
  2337  000940  0E00               	movlw	0
  2338  000942  224E               	addwfc	btemp+11,f,c
  2339  000944  5049               	movf	btemp+6,w,c
  2340  000946  264D               	addwf	btemp+10,f,c
  2341  000948  504A               	movf	btemp+7,w,c
  2342  00094A  224E               	addwfc	btemp+11,f,c
  2343  00094C  504B               	movf	btemp+8,w,c
  2344  00094E  244D               	addwf	btemp+10,w,c
  2345  000950  6ED9               	movwf	fsr2l,c
  2346  000952  504C               	movf	btemp+9,w,c
  2347  000954  204E               	addwfc	btemp+11,w,c
  2348  000956  6EDA               	movwf	fsr2h,c
  2349  000958  50DF               	movf	indf2,w,c
  2350  00095A  6EFF               	movwf	tosu,c	;volatile
  2351  00095C  0609               	decf	_size,f,c
  2352  00095E  A0D8               	btfss	status,0,c
  2353  000960  060A               	decf	_size+1,f,c
  2354  000962                     l1795:
  2355  000962  5009               	movf	_size,w,c
  2356  000964  100A               	iorwf	_size+1,w,c
  2357  000966  A4D8               	btfss	status,2,c
  2358  000968  D76E               	goto	l127
  2359  00096A                     u710:
  2360                           
  2361                           ;kernel.c: 73:   INTCONbits.GIE = 1;
  2362  00096A  8EF2               	bsf	4082,7,c	;volatile
  2363                           
  2364                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2365  00096C  52E5               	movf	postdec1,f,c
  2366  00096E  0012               	return		;funcret
  2367  000970                     __end_of_dispatcher:
  2368                           	opt callstack 0
  2369                           
  2370 ;; *************** function _scheduler *****************
  2371 ;; Defined at:
  2372 ;;		line 56 in file "kernel.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2  [STACK] unsigned int 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2386 ;;      Params:         0       0       0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0
  2389 ;;      Totals:         0       0       0       0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:   12
  2393 ;; This function calls:
  2394 ;;		_round_robin
  2395 ;; This function is called by:
  2396 ;;		_dispatcher
  2397 ;; This function uses a reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text10
  2401  001C20                     __ptext10:
  2402                           	opt callstack 0
  2403  001C20                     _scheduler:
  2404                           	opt callstack 11
  2405                           
  2406                           ;kernel.c: 58:   return round_robin();
  2407                           
  2408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2409                           ;incstack = 0
  2410  001C20  EC75  F00B         	call	_round_robin	;wreg free
  2411                           
  2412                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2413  001C24  0012               	return		;funcret
  2414  001C26                     __end_of_scheduler:
  2415                           	opt callstack 0
  2416                           
  2417 ;; *************** function _round_robin *****************
  2418 ;; Defined at:
  2419 ;;		line 76 in file "kernel.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  next_task_to    2  [STACK] int 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  2  [STACK] unsigned int 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2433 ;;      Params:         0       0       0       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0
  2436 ;;      Totals:         0       0       0       0       0       0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:   11
  2440 ;; This function calls:
  2441 ;;		___lwmod
  2442 ;; This function is called by:
  2443 ;;		_ISR_timer0
  2444 ;;		_scheduler
  2445 ;; This function uses a reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text11
  2449  0016EA                     __ptext11:
  2450                           	opt callstack 0
  2451  0016EA                     _round_robin:
  2452                           	opt callstack 0
  2453                           
  2454                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2455  0016EA  52E6               	movf	postinc1,f,c
  2456  0016EC  52E6               	movf	postinc1,f,c
  2457                           
  2458                           ;kernel.c: 77:   int next_task_to_run = ready_queue.task_running;
  2459                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2460                           
  2461                           ;incstack = 0
  2462  0016EE  0EFE               	movlw	-2
  2463  0016F0  C2F2  FFE3         	movff	_ready_queue+542,plusw1
  2464  0016F4  0EFF               	movlw	-1
  2465  0016F6  C2F3  FFE3         	movff	_ready_queue+543,plusw1
  2466  0016FA                     l1913:
  2467                           
  2468                           ;kernel.c: 80:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  2469  0016FA  EE22  F0F0         	lfsr	2,_ready_queue+540
  2470  0016FE  CFDE F04D          	movff	postinc2,btemp+10
  2471  001702  CFDD F04E          	movff	postdec2,btemp+11
  2472  001706  C04D  FFE6         	movff	btemp+10,postinc1
  2473  00170A  C04E  FFE6         	movff	btemp+11,postinc1
  2474                           
  2475                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  2476  00170E  0EFC               	movlw	-4
  2477  001710  50E3               	movf	plusw1,w,c
  2478  001712  0F01               	addlw	1
  2479  001714  6E4D               	movwf	btemp+10,c
  2480  001716  0EFD               	movlw	-3
  2481  001718  CFE3 F04E          	movff	plusw1,btemp+11
  2482  00171C  0E00               	movlw	0
  2483  00171E  224E               	addwfc	btemp+11,f,c
  2484  001720  C04D  FFE6         	movff	btemp+10,postinc1
  2485  001724  C04E  FFE6         	movff	btemp+11,postinc1
  2486  001728  EC79  F00A         	call	___lwmod	;wreg free
  2487                           
  2488                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2489  00172C  0EFE               	movlw	-2
  2490  00172E  C043  FFE3         	movff	btemp,plusw1
  2491  001732  0EFF               	movlw	-1
  2492  001734  C044  FFE3         	movff	btemp+1,plusw1
  2493                           
  2494                           ;kernel.c: 81:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  2495                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2496  001738  0EFE               	movlw	-2
  2497  00173A  CFE3 F04D          	movff	plusw1,btemp+10
  2498  00173E  0EFF               	movlw	-1
  2499  001740  CFE3 F04E          	movff	plusw1,btemp+11
  2500  001744  0E6C               	movlw	108
  2501  001746  024D               	mulwf	btemp+10,c
  2502  001748  CFF3 F04B          	movff	prodl,btemp+8
  2503  00174C  CFF4 F04C          	movff	prodh,btemp+9
  2504  001750  024E               	mulwf	btemp+11,c
  2505  001752  50F3               	movf	prodl,w,c
  2506  001754  264C               	addwf	btemp+9,f,c
  2507  001756  0EDC               	movlw	low (_ready_queue+8)
  2508  001758  244B               	addwf	btemp+8,w,c
  2509  00175A  6ED9               	movwf	fsr2l,c
  2510  00175C  0E00               	movlw	high (_ready_queue+8)
  2511  00175E  204C               	addwfc	btemp+9,w,c
  2512  001760  6EDA               	movwf	fsr2h,c
  2513  001762  50DF               	movf	indf2,w,c
  2514  001764  A4D8               	btfss	status,2,c
  2515  001766  D7C9               	goto	l1913
  2516                           
  2517                           ;kernel.c: 83:   return next_task_to_run;
  2518                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2519  001768  0EFE               	movlw	-2
  2520  00176A  CFE3 F043          	movff	plusw1,btemp
  2521  00176E  0EFF               	movlw	-1
  2522  001770  CFE3 F044          	movff	plusw1,btemp+1
  2523                           
  2524                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2525  001774  52E5               	movf	postdec1,f,c
  2526  001776  52E5               	movf	postdec1,f,c
  2527  001778  0012               	return		;funcret
  2528  00177A                     __end_of_round_robin:
  2529                           	opt callstack 0
  2530                           
  2531 ;; *************** function ___lwmod *****************
  2532 ;; Defined at:
  2533 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  dividend        2  [STACK] unsigned int 
  2536 ;;  divisor         2  [STACK] unsigned int 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  counter         1  [STACK] unsigned char 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  2  [STACK] unsigned int 
  2541 ;; Registers used:
  2542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2548 ;;      Params:         0       0       0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0
  2551 ;;      Totals:         0       0       0       0       0       0       0
  2552 ;;Total ram usage:        0 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:   10
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_round_robin
  2559 ;; This function uses a reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text12
  2563  0014F2                     __ptext12:
  2564                           	opt callstack 0
  2565  0014F2                     ___lwmod:
  2566                           	opt callstack 0
  2567                           
  2568                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2569  0014F2  52E6               	movf	postinc1,f,c
  2570                           
  2571                           ;stkvar	_divisor @ sp[(-1)+-4]
  2572                           
  2573                           ;incstack = 0
  2574  0014F4  0EFB               	movlw	-5
  2575  0014F6  CFE3 F043          	movff	plusw1,btemp
  2576  0014FA  0EFC               	movlw	-4
  2577  0014FC  50E3               	movf	plusw1,w,c
  2578  0014FE  1043               	iorwf	btemp,w,c
  2579  001500  B4D8               	btfsc	status,2,c
  2580  001502  D04A               	goto	u820
  2581                           
  2582                           ;stkvar	_counter @ sp[(-1)+0]
  2583  001504  0EFF               	movlw	-1
  2584  001506  6AE3               	clrf	plusw1,c
  2585  001508  D010               	goto	L2
  2586  00150A                     l1879:
  2587                           
  2588                           ;stkvar	_divisor @ sp[(-1)+-4]
  2589  00150A  0EFB               	movlw	-5
  2590  00150C  50E3               	movf	plusw1,w,c
  2591  00150E  90D8               	bcf	status,0,c
  2592  001510  34E8               	rlcf	wreg,w,c
  2593  001512  6E43               	movwf	btemp,c
  2594  001514  0EFB               	movlw	-5
  2595  001516  C043  FFE3         	movff	btemp,plusw1
  2596  00151A  0EFC               	movlw	-4
  2597  00151C  50E3               	movf	plusw1,w,c
  2598  00151E  34E8               	rlcf	wreg,w,c
  2599  001520  6E43               	movwf	btemp,c
  2600  001522  0EFC               	movlw	-4
  2601  001524  C043  FFE3         	movff	btemp,plusw1
  2602                           
  2603                           ;stkvar	_counter @ sp[(-1)+0]
  2604  001528  0EFF               	movlw	-1
  2605  00152A                     L2:
  2606  00152A  2AE3               	incf	plusw1,f,c
  2607                           
  2608                           ;stkvar	_divisor @ sp[(-1)+-4]
  2609  00152C  0EFC               	movlw	-4
  2610  00152E  AEE3               	btfss	plusw1,7,c
  2611  001530  D7EC               	goto	l1879
  2612  001532                     u800:
  2613                           
  2614                           ;stkvar	_divisor @ sp[(-1)+-4]
  2615  001532  0EFB               	movlw	-5
  2616  001534  CFE3 F04D          	movff	plusw1,btemp+10
  2617  001538  0EFC               	movlw	-4
  2618  00153A  CFE3 F04E          	movff	plusw1,btemp+11
  2619                           
  2620                           ;stkvar	_dividend @ sp[(-1)+-2]
  2621  00153E  0EFD               	movlw	-3
  2622  001540  CFE3 F04B          	movff	plusw1,btemp+8
  2623  001544  0EFE               	movlw	-2
  2624  001546  CFE3 F04C          	movff	plusw1,btemp+9
  2625  00154A  504D               	movf	btemp+10,w,c
  2626  00154C  5C4B               	subwf	btemp+8,w,c
  2627  00154E  504E               	movf	btemp+11,w,c
  2628  001550  584C               	subwfb	btemp+9,w,c
  2629  001552  A0D8               	btfss	status,0,c
  2630  001554  D012               	goto	l1889
  2631                           
  2632                           ;stkvar	_divisor @ sp[(-1)+-4]
  2633                           ;stkvar	_dividend @ sp[(-1)+-2]
  2634  001556  0EFD               	movlw	-3
  2635  001558  50E3               	movf	plusw1,w,c
  2636  00155A  6E43               	movwf	btemp,c
  2637  00155C  0EFB               	movlw	-5
  2638  00155E  50E3               	movf	plusw1,w,c
  2639  001560  5E43               	subwf	btemp,f,c
  2640  001562  0EFD               	movlw	-3
  2641  001564  C043  FFE3         	movff	btemp,plusw1
  2642  001568  0EFE               	movlw	-2
  2643  00156A  50E3               	movf	plusw1,w,c
  2644  00156C  6E43               	movwf	btemp,c
  2645  00156E  0EFC               	movlw	-4
  2646  001570  50E3               	movf	plusw1,w,c
  2647  001572  5A43               	subwfb	btemp,f,c
  2648  001574  0EFE               	movlw	-2
  2649  001576  C043  FFE3         	movff	btemp,plusw1
  2650  00157A                     l1889:
  2651                           
  2652                           ;stkvar	_divisor @ sp[(-1)+-4]
  2653  00157A  90D8               	bcf	status,0,c
  2654  00157C  0EFC               	movlw	-4
  2655  00157E  32E3               	rrcf	plusw1,f,c
  2656  001580  0EFB               	movlw	-5
  2657  001582  32E3               	rrcf	plusw1,f,c
  2658                           
  2659                           ;stkvar	_counter @ sp[(-1)+0]
  2660  001584  0EFF               	movlw	-1
  2661  001586  50E3               	movf	plusw1,w,c
  2662  001588  6E43               	movwf	btemp,c
  2663  00158A  0E01               	movlw	1
  2664  00158C  5E43               	subwf	btemp,f,c
  2665  00158E  0EFF               	movlw	-1
  2666  001590  C043  FFE3         	movff	btemp,plusw1
  2667  001594  A4D8               	btfss	status,2,c
  2668  001596  D7CD               	goto	u800
  2669  001598                     u820:
  2670                           
  2671                           ;stkvar	_dividend @ sp[(-1)+-2]
  2672  001598  0EFD               	movlw	-3
  2673  00159A  CFE3 F043          	movff	plusw1,btemp
  2674  00159E  0EFE               	movlw	-2
  2675  0015A0  CFE3 F044          	movff	plusw1,btemp+1
  2676                           
  2677                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2678  0015A4  0EFB               	movlw	251
  2679  0015A6  26E1               	addwf	fsr1l,f,c
  2680  0015A8  0EFF               	movlw	255
  2681  0015AA  22E2               	addwfc	fsr1h,f,c
  2682  0015AC  0012               	return		;funcret
  2683  0015AE                     __end_of___lwmod:
  2684                           	opt callstack 0
  2685                           
  2686 ;; *************** function _config_timer0 *****************
  2687 ;; Defined at:
  2688 ;;		line 23 in file "int0_test.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1  [STACK] void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2702 ;;      Params:         0       0       0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:   10
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_main
  2713 ;; This function uses a reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text13
  2717  001BFE                     __ptext13:
  2718                           	opt callstack 0
  2719  001BFE                     _config_timer0:
  2720                           	opt callstack 20
  2721                           
  2722                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  2723                           
  2724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2725                           ;incstack = 0
  2726  001BFE  9AD5               	bcf	4053,5,c	;volatile
  2727                           
  2728                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  2729  001C00  96D5               	bcf	4053,3,c	;volatile
  2730                           
  2731                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  2732  001C02  0E07               	movlw	7
  2733  001C04  12D5               	iorwf	4053,f,c	;volatile
  2734                           
  2735                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  2736  001C06  8CF2               	bsf	4082,6,c	;volatile
  2737                           
  2738                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  2739  001C08  8AF2               	bsf	4082,5,c	;volatile
  2740                           
  2741                           ;int0_test.c: 33:   TMR0L = 252;
  2742  001C0A  0EFC               	movlw	252
  2743  001C0C  6ED6               	movwf	4054,c	;volatile
  2744                           
  2745                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2746  001C0E  0012               	return		;funcret
  2747  001C10                     __end_of_config_timer0:
  2748                           	opt callstack 0
  2749                           
  2750 ;; *************** function _config_INT0 *****************
  2751 ;; Defined at:
  2752 ;;		line 13 in file "int0_test.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1  [STACK] void 
  2759 ;; Registers used:
  2760 ;;		None
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2766 ;;      Params:         0       0       0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0
  2769 ;;      Totals:         0       0       0       0       0       0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:   10
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text14
  2781  001C10                     __ptext14:
  2782                           	opt callstack 0
  2783  001C10                     _config_INT0:
  2784                           	opt callstack 20
  2785                           
  2786                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2787                           
  2788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2789                           ;incstack = 0
  2790  001C10  9095               	bcf	3989,0,c	;volatile
  2791                           
  2792                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2793  001C12  8EF2               	bsf	4082,7,c	;volatile
  2794                           
  2795                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2796  001C14  88F2               	bsf	4082,4,c	;volatile
  2797                           
  2798                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2799  001C16  88F2               	bsf	4082,4,c	;volatile
  2800                           
  2801                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2802  001C18  92F2               	bcf	4082,1,c	;volatile
  2803                           
  2804                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2805  001C1A  9EF1               	bcf	4081,7,c	;volatile
  2806                           
  2807                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2808  001C1C  9CF1               	bcf	4081,6,c	;volatile
  2809                           
  2810                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2811  001C1E  0012               	return		;funcret
  2812  001C20                     __end_of_config_INT0:
  2813                           	opt callstack 0
  2814                           
  2815 ;; *************** function _task_idle *****************
  2816 ;; Defined at:
  2817 ;;		line 116 in file "kernel.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1  [STACK] void 
  2824 ;; Registers used:
  2825 ;;		None
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2831 ;;      Params:         0       0       0       0       0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0
  2834 ;;      Totals:         0       0       0       0       0       0       0
  2835 ;;Total ram usage:        0 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    3
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_lunos_init
  2842 ;; This function uses a reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text15
  2846  001C26                     __ptext15:
  2847                           	opt callstack 0
  2848  001C26                     _task_idle:
  2849                           	opt callstack 23
  2850                           
  2851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2852                           ;incstack = 0
  2853                           ;kernel.c: 118:   while (1) __nop();
  2854  001C26  F000               	nop	
  2855  001C28  D7FE               	goto	_task_idle
  2856  001C2A                     __end_of_task_idle:
  2857                           	opt callstack 0
  2858                           
  2859 ;; *************** function _count_bottles *****************
  2860 ;; Defined at:
  2861 ;;		line 42 in file "tasks.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  bottle          1  [STACK] struct .
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1  [STACK] void 
  2868 ;; Registers used:
  2869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2875 ;;      Params:         0       0       0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    8
  2882 ;; This function calls:
  2883 ;;		_lunos_delayTask
  2884 ;;		_sem_post
  2885 ;;		_sem_wait
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text16
  2892  00195A                     __ptext16:
  2893                           	opt callstack 0
  2894  00195A                     _count_bottles:
  2895                           	opt callstack 0
  2896                           
  2897                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2898  00195A  52E6               	movf	postinc1,f,c
  2899  00195C                     l296:
  2900                           
  2901                           ;tasks.c: 44:         sem_wait(&count_sem);
  2902  00195C  0E29               	movlw	low _count_sem
  2903  00195E  6EE6               	movwf	postinc1,c
  2904  001960  0E00               	movlw	high _count_sem
  2905  001962  6EE6               	movwf	postinc1,c
  2906  001964  EC3F  F009         	call	_sem_wait	;wreg free
  2907                           
  2908                           ;tasks.c: 45:         while(global_buffer.count < 3){
  2909  001968  D023               	goto	l2099
  2910  00196A                     l298:
  2911                           
  2912                           ;tasks.c: 46:             if(!PORTBbits.RB6){
  2913  00196A  BC81               	btfsc	3969,6,c	;volatile
  2914  00196C  D021               	goto	l2099
  2915                           
  2916                           ;tasks.c: 47:                 lunos_delayTask(500);
  2917  00196E  0EF4               	movlw	244
  2918  001970  6EE6               	movwf	postinc1,c
  2919  001972  0E01               	movlw	1
  2920  001974  6EE6               	movwf	postinc1,c
  2921  001976  ECE3  F00C         	call	_lunos_delayTask	;wreg free
  2922                           
  2923                           ;tasks.c: 48:                 t_bottle bottle;;tasks.c: 49:                 global_buffe
      +                          r.bottles[global_buffer.count] = bottle;
  2924                           ;stkvar	_bottle @ sp[(-1)+0]
  2925  00197A  C001  F04D         	movff	_global_buffer,btemp+10
  2926  00197E  C002  F04E         	movff	_global_buffer+1,btemp+11
  2927  001982  0E03               	movlw	low (_global_buffer+2)
  2928  001984  244D               	addwf	btemp+10,w,c
  2929  001986  6ED9               	movwf	fsr2l,c
  2930  001988  0E00               	movlw	high (_global_buffer+2)
  2931  00198A  204E               	addwfc	btemp+11,w,c
  2932  00198C  6EDA               	movwf	fsr2h,c
  2933  00198E  0EFF               	movlw	-1
  2934  001990  CFE3 FFDF          	movff	plusw1,indf2
  2935                           
  2936                           ;tasks.c: 50:                 global_buffer.bottles[global_buffer.count].bottle_state = 
      +                          EMPTY;
  2937  001994  C001  F04D         	movff	_global_buffer,btemp+10
  2938  001998  C002  F04E         	movff	_global_buffer+1,btemp+11
  2939  00199C  0E03               	movlw	low (_global_buffer+2)
  2940  00199E  244D               	addwf	btemp+10,w,c
  2941  0019A0  6ED9               	movwf	fsr2l,c
  2942  0019A2  0E00               	movlw	high (_global_buffer+2)
  2943  0019A4  204E               	addwfc	btemp+11,w,c
  2944  0019A6  6EDA               	movwf	fsr2h,c
  2945  0019A8  0E00               	movlw	0
  2946  0019AA  6EDF               	movwf	indf2,c
  2947                           
  2948                           ;tasks.c: 51:                 global_buffer.count += 1;
  2949  0019AC  4A01               	infsnz	_global_buffer,f,c
  2950  0019AE  2A02               	incf	_global_buffer+1,f,c
  2951  0019B0                     l2099:
  2952                           
  2953                           ;tasks.c: 45:         while(global_buffer.count < 3){
  2954  0019B0  BE02               	btfsc	_global_buffer+1,7,c
  2955  0019B2  D7DB               	goto	l298
  2956  0019B4  5002               	movf	_global_buffer+1,w,c
  2957  0019B6  E104               	bnz	u96_20
  2958  0019B8  0E03               	movlw	3
  2959  0019BA  5C01               	subwf	_global_buffer,w,c
  2960  0019BC  A0D8               	btfss	status,0,c
  2961  0019BE  D7D5               	goto	l298
  2962  0019C0                     u96_20:
  2963                           
  2964                           ;tasks.c: 54:         global_buffer.p_state = BUSY_;
  2965  0019C0  0E01               	movlw	1
  2966  0019C2  6E06               	movwf	_global_buffer+5,c
  2967  0019C4  D7CB               	goto	l296
  2968  0019C6                     __end_of_count_bottles:
  2969                           	opt callstack 0
  2970                           
  2971 ;; *************** function _sem_wait *****************
  2972 ;; Defined at:
  2973 ;;		line 20 in file "semaphore.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  s               2  [STACK] PTR struct semaphore
  2976 ;;		 -> teste_2(14), teste_1(14), r_pipe(14), w_pipe(14), 
  2977 ;;		 -> out_sem(14), cover_sem(14), check_sem(14), fill_sem(14), 
  2978 ;;		 -> count_sem(14), 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1  [STACK] void 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2990 ;;      Params:         0       0       0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    7
  2997 ;; This function calls:
  2998 ;;		_dispatcher
  2999 ;; This function is called by:
  3000 ;;		_pipe_write
  3001 ;;		_pipe_read
  3002 ;;		_count_bottles
  3003 ;;		_fill_bottle
  3004 ;;		_check_level
  3005 ;;		_cover_bottle
  3006 ;;		_count_out
  3007 ;;		_task_bozo
  3008 ;;		_task_xuxa
  3009 ;; This function uses a reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text17
  3013  00127E                     __ptext17:
  3014                           	opt callstack 0
  3015  00127E                     _sem_wait:
  3016                           	opt callstack 18
  3017                           
  3018                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  3019                           
  3020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3021                           ;incstack = 0
  3022  00127E  9EF2               	bcf	4082,7,c	;volatile
  3023                           
  3024                           ;semaphore.c: 22:   s->contador -= 1;
  3025                           ;stkvar	_s @ sp[(0)+-2]
  3026  001280  0EFE               	movlw	-2
  3027  001282  CFE3 FFD9          	movff	plusw1,fsr2l
  3028  001286  0EFF               	movlw	-1
  3029  001288  CFE3 FFDA          	movff	plusw1,fsr2h
  3030  00128C  06DE               	decf	postinc2,f,c
  3031  00128E  0E00               	movlw	0
  3032  001290  5ADD               	subwfb	postdec2,f,c
  3033                           
  3034                           ;semaphore.c: 23:   if (s->contador < 0) {
  3035                           ;stkvar	_s @ sp[(0)+-2]
  3036  001292  0EFE               	movlw	-2
  3037  001294  CFE3 FFD9          	movff	plusw1,fsr2l
  3038  001298  0EFF               	movlw	-1
  3039  00129A  CFE3 FFDA          	movff	plusw1,fsr2h
  3040  00129E  0E01               	movlw	1
  3041  0012A0  AEDB               	btfss	plusw2,7,c
  3042  0012A2  D05D               	goto	l1981
  3043                           
  3044                           ;semaphore.c: 24:     s->contador = 0;
  3045                           ;stkvar	_s @ sp[(0)+-2]
  3046  0012A4  0EFE               	movlw	-2
  3047  0012A6  CFE3 FFD9          	movff	plusw1,fsr2l
  3048  0012AA  0EFF               	movlw	-1
  3049  0012AC  CFE3 FFDA          	movff	plusw1,fsr2h
  3050  0012B0  0E00               	movlw	0
  3051  0012B2  6EDE               	movwf	postinc2,c
  3052  0012B4  0E00               	movlw	0
  3053  0012B6  6EDD               	movwf	postdec2,c
  3054                           
  3055                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  3056  0012B8  EE22  F0F2         	lfsr	2,_ready_queue+542
  3057                           
  3058                           ;stkvar	_s @ sp[(0)+-2]
  3059  0012BC  0EFE               	movlw	-2
  3060  0012BE  CFE3 F04D          	movff	plusw1,btemp+10
  3061  0012C2  0EFF               	movlw	-1
  3062  0012C4  CFE3 F04E          	movff	plusw1,btemp+11
  3063  0012C8  0E0A               	movlw	10
  3064  0012CA  244D               	addwf	btemp+10,w,c
  3065  0012CC  6EE9               	movwf	fsr0l,c
  3066  0012CE  0E00               	movlw	0
  3067  0012D0  204E               	addwfc	btemp+11,w,c
  3068  0012D2  6EEA               	movwf	fsr0h,c
  3069  0012D4  CFEE F04D          	movff	postinc0,btemp+10
  3070  0012D8  CFED F04E          	movff	postdec0,btemp+11
  3071  0012DC  90D8               	bcf	status,0,c
  3072  0012DE  344D               	rlcf	btemp+10,w,c
  3073  0012E0  6E4B               	movwf	btemp+8,c
  3074  0012E2  344E               	rlcf	btemp+11,w,c
  3075  0012E4  6E4C               	movwf	btemp+9,c
  3076                           
  3077                           ;stkvar	_s @ sp[(0)+-2]
  3078  0012E6  0EFE               	movlw	-2
  3079  0012E8  50E3               	movf	plusw1,w,c
  3080  0012EA  264B               	addwf	btemp+8,f,c
  3081  0012EC  0EFF               	movlw	-1
  3082  0012EE  50E3               	movf	plusw1,w,c
  3083  0012F0  224C               	addwfc	btemp+9,f,c
  3084  0012F2  0E02               	movlw	2
  3085  0012F4  244B               	addwf	btemp+8,w,c
  3086  0012F6  6EE9               	movwf	fsr0l,c
  3087  0012F8  0E00               	movlw	0
  3088  0012FA  204C               	addwfc	btemp+9,w,c
  3089  0012FC  6EEA               	movwf	fsr0h,c
  3090  0012FE  CFDE FFEE          	movff	postinc2,postinc0
  3091  001302  CFDD FFED          	movff	postdec2,postdec0
  3092                           
  3093                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 4;
  3094                           ;stkvar	_s @ sp[(0)+-2]
  3095  001306  0EFE               	movlw	-2
  3096  001308  CFE3 F04D          	movff	plusw1,btemp+10
  3097  00130C  0EFF               	movlw	-1
  3098  00130E  CFE3 F04E          	movff	plusw1,btemp+11
  3099  001312  0E0A               	movlw	10
  3100  001314  244D               	addwf	btemp+10,w,c
  3101  001316  6ED9               	movwf	fsr2l,c
  3102  001318  0E00               	movlw	0
  3103  00131A  204E               	addwfc	btemp+11,w,c
  3104  00131C  6EDA               	movwf	fsr2h,c
  3105  00131E  CFDE F04D          	movff	postinc2,btemp+10
  3106  001322  CFDD F04E          	movff	postdec2,btemp+11
  3107  001326  0E01               	movlw	1
  3108  001328  264D               	addwf	btemp+10,f,c
  3109  00132A  0E00               	movlw	0
  3110  00132C  224E               	addwfc	btemp+11,f,c
  3111  00132E  0E03               	movlw	3
  3112  001330  164D               	andwf	btemp+10,f,c
  3113  001332  0E00               	movlw	0
  3114  001334  164E               	andwf	btemp+11,f,c
  3115                           
  3116                           ;stkvar	_s @ sp[(0)+-2]
  3117  001336  0EFE               	movlw	-2
  3118  001338  CFE3 F04B          	movff	plusw1,btemp+8
  3119  00133C  0EFF               	movlw	-1
  3120  00133E  CFE3 F04C          	movff	plusw1,btemp+9
  3121  001342  0E0A               	movlw	10
  3122  001344  244B               	addwf	btemp+8,w,c
  3123  001346  6ED9               	movwf	fsr2l,c
  3124  001348  0E00               	movlw	0
  3125  00134A  204C               	addwfc	btemp+9,w,c
  3126  00134C  6EDA               	movwf	fsr2h,c
  3127  00134E  C04D  FFDE         	movff	btemp+10,postinc2
  3128  001352  C04E  FFDD         	movff	btemp+11,postdec2
  3129                           
  3130                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  3131  001356  0E05               	movlw	5
  3132  001358  6EE6               	movwf	postinc1,c
  3133  00135A  EC66  F002         	call	_dispatcher	;wreg free
  3134  00135E                     l1981:
  3135                           
  3136                           ;semaphore.c: 29:   INTCONbits.GIE = 1;
  3137  00135E  8EF2               	bsf	4082,7,c	;volatile
  3138                           
  3139                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3140  001360  52E5               	movf	postdec1,f,c
  3141  001362  52E5               	movf	postdec1,f,c
  3142  001364  0012               	return		;funcret
  3143  001366                     __end_of_sem_wait:
  3144                           	opt callstack 0
  3145                           
  3146 ;; *************** function _sem_post *****************
  3147 ;; Defined at:
  3148 ;;		line 32 in file "semaphore.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  s               2  [STACK] PTR struct semaphore
  3151 ;;		 -> teste_2(14), teste_1(14), r_pipe(14), w_pipe(14), 
  3152 ;;		 -> out_sem(14), cover_sem(14), check_sem(14), fill_sem(14), 
  3153 ;;		 -> count_sem(14), 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1  [STACK] void 
  3158 ;; Registers used:
  3159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3165 ;;      Params:         0       0       0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0
  3168 ;;      Totals:         0       0       0       0       0       0       0
  3169 ;;Total ram usage:        0 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    3
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_pipe_write
  3176 ;;		_pipe_read
  3177 ;;		_count_bottles
  3178 ;;		_fill_bottle
  3179 ;;		_check_level
  3180 ;;		_cover_bottle
  3181 ;;		_count_out
  3182 ;;		_task_bozo
  3183 ;;		_task_xuxa
  3184 ;; This function uses a reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text18
  3188  001188                     __ptext18:
  3189                           	opt callstack 0
  3190  001188                     _sem_post:
  3191                           	opt callstack 22
  3192                           
  3193                           ;semaphore.c: 33:   INTCONbits.GIE = 0;
  3194                           
  3195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3196                           ;incstack = 0
  3197  001188  9EF2               	bcf	4082,7,c	;volatile
  3198                           
  3199                           ;semaphore.c: 34:   s->contador += 1;
  3200                           ;stkvar	_s @ sp[(0)+-2]
  3201  00118A  0EFE               	movlw	-2
  3202  00118C  CFE3 FFD9          	movff	plusw1,fsr2l
  3203  001190  0EFF               	movlw	-1
  3204  001192  CFE3 FFDA          	movff	plusw1,fsr2h
  3205  001196  2ADE               	incf	postinc2,f,c
  3206  001198  0E00               	movlw	0
  3207  00119A  22DD               	addwfc	postdec2,f,c
  3208                           
  3209                           ;semaphore.c: 35:   if (s->contador > 0) {
  3210                           ;stkvar	_s @ sp[(0)+-2]
  3211  00119C  0EFE               	movlw	-2
  3212  00119E  CFE3 FFD9          	movff	plusw1,fsr2l
  3213  0011A2  0EFF               	movlw	-1
  3214  0011A4  CFE3 FFDA          	movff	plusw1,fsr2h
  3215  0011A8  0E01               	movlw	1
  3216  0011AA  BEDB               	btfsc	plusw2,7,c
  3217  0011AC  D064               	goto	l1993
  3218  0011AE  0E01               	movlw	1
  3219  0011B0  50DB               	movf	plusw2,w,c
  3220  0011B2  E103               	bnz	u88_20
  3221  0011B4  04DE               	decf	postinc2,w,c
  3222  0011B6  A0D8               	btfss	status,0,c
  3223  0011B8  D05E               	goto	l1993
  3224  0011BA                     u88_20:
  3225                           
  3226                           ;semaphore.c: 36:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  3227                           ;stkvar	_s @ sp[(0)+-2]
  3228  0011BA  0EFE               	movlw	-2
  3229  0011BC  CFE3 F04D          	movff	plusw1,btemp+10
  3230  0011C0  0EFF               	movlw	-1
  3231  0011C2  CFE3 F04E          	movff	plusw1,btemp+11
  3232  0011C6  0E0C               	movlw	12
  3233  0011C8  244D               	addwf	btemp+10,w,c
  3234  0011CA  6ED9               	movwf	fsr2l,c
  3235  0011CC  0E00               	movlw	0
  3236  0011CE  204E               	addwfc	btemp+11,w,c
  3237  0011D0  6EDA               	movwf	fsr2h,c
  3238  0011D2  CFDE F04D          	movff	postinc2,btemp+10
  3239  0011D6  CFDD F04E          	movff	postdec2,btemp+11
  3240  0011DA  90D8               	bcf	status,0,c
  3241  0011DC  344D               	rlcf	btemp+10,w,c
  3242  0011DE  6E4B               	movwf	btemp+8,c
  3243  0011E0  344E               	rlcf	btemp+11,w,c
  3244  0011E2  6E4C               	movwf	btemp+9,c
  3245                           
  3246                           ;stkvar	_s @ sp[(0)+-2]
  3247  0011E4  0EFE               	movlw	-2
  3248  0011E6  50E3               	movf	plusw1,w,c
  3249  0011E8  264B               	addwf	btemp+8,f,c
  3250  0011EA  0EFF               	movlw	-1
  3251  0011EC  50E3               	movf	plusw1,w,c
  3252  0011EE  224C               	addwfc	btemp+9,f,c
  3253  0011F0  0E02               	movlw	2
  3254  0011F2  244B               	addwf	btemp+8,w,c
  3255  0011F4  6ED9               	movwf	fsr2l,c
  3256  0011F6  0E00               	movlw	0
  3257  0011F8  204C               	addwfc	btemp+9,w,c
  3258  0011FA  6EDA               	movwf	fsr2h,c
  3259  0011FC  CFDE F04D          	movff	postinc2,btemp+10
  3260  001200  CFDD F04E          	movff	postdec2,btemp+11
  3261  001204  0E6C               	movlw	108
  3262  001206  024D               	mulwf	btemp+10,c
  3263  001208  CFF3 F04B          	movff	prodl,btemp+8
  3264  00120C  CFF4 F04C          	movff	prodh,btemp+9
  3265  001210  024E               	mulwf	btemp+11,c
  3266  001212  50F3               	movf	prodl,w,c
  3267  001214  264C               	addwf	btemp+9,f,c
  3268  001216  0EDC               	movlw	low (_ready_queue+8)
  3269  001218  244B               	addwf	btemp+8,w,c
  3270  00121A  6ED9               	movwf	fsr2l,c
  3271  00121C  0E00               	movlw	high (_ready_queue+8)
  3272  00121E  204C               	addwfc	btemp+9,w,c
  3273  001220  6EDA               	movwf	fsr2h,c
  3274  001222  0E00               	movlw	0
  3275  001224  6EDF               	movwf	indf2,c
  3276                           
  3277                           ;semaphore.c: 37:     s->task_to_ready = (s->task_to_ready + 1) % 4;
  3278                           ;stkvar	_s @ sp[(0)+-2]
  3279  001226  0EFE               	movlw	-2
  3280  001228  CFE3 F04D          	movff	plusw1,btemp+10
  3281  00122C  0EFF               	movlw	-1
  3282  00122E  CFE3 F04E          	movff	plusw1,btemp+11
  3283  001232  0E0C               	movlw	12
  3284  001234  244D               	addwf	btemp+10,w,c
  3285  001236  6ED9               	movwf	fsr2l,c
  3286  001238  0E00               	movlw	0
  3287  00123A  204E               	addwfc	btemp+11,w,c
  3288  00123C  6EDA               	movwf	fsr2h,c
  3289  00123E  CFDE F04D          	movff	postinc2,btemp+10
  3290  001242  CFDD F04E          	movff	postdec2,btemp+11
  3291  001246  0E01               	movlw	1
  3292  001248  264D               	addwf	btemp+10,f,c
  3293  00124A  0E00               	movlw	0
  3294  00124C  224E               	addwfc	btemp+11,f,c
  3295  00124E  0E03               	movlw	3
  3296  001250  164D               	andwf	btemp+10,f,c
  3297  001252  0E00               	movlw	0
  3298  001254  164E               	andwf	btemp+11,f,c
  3299                           
  3300                           ;stkvar	_s @ sp[(0)+-2]
  3301  001256  0EFE               	movlw	-2
  3302  001258  CFE3 F04B          	movff	plusw1,btemp+8
  3303  00125C  0EFF               	movlw	-1
  3304  00125E  CFE3 F04C          	movff	plusw1,btemp+9
  3305  001262  0E0C               	movlw	12
  3306  001264  244B               	addwf	btemp+8,w,c
  3307  001266  6ED9               	movwf	fsr2l,c
  3308  001268  0E00               	movlw	0
  3309  00126A  204C               	addwfc	btemp+9,w,c
  3310  00126C  6EDA               	movwf	fsr2h,c
  3311  00126E  C04D  FFDE         	movff	btemp+10,postinc2
  3312  001272  C04E  FFDD         	movff	btemp+11,postdec2
  3313  001276                     l1993:
  3314                           
  3315                           ;semaphore.c: 40:   INTCONbits.GIE = 1;
  3316  001276  8EF2               	bsf	4082,7,c	;volatile
  3317                           
  3318                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3319  001278  52E5               	movf	postdec1,f,c
  3320  00127A  52E5               	movf	postdec1,f,c
  3321  00127C  0012               	return		;funcret
  3322  00127E                     __end_of_sem_post:
  3323                           	opt callstack 0
  3324                           
  3325 ;; *************** function _lunos_delayTask *****************
  3326 ;; Defined at:
  3327 ;;		line 29 in file "kernel.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  time            2  [STACK] unsigned int 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1  [STACK] void 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3341 ;;      Params:         0       0       0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0
  3344 ;;      Totals:         0       0       0       0       0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    7
  3348 ;; This function calls:
  3349 ;;		_dispatcher
  3350 ;; This function is called by:
  3351 ;;		_count_bottles
  3352 ;;		_fill_bottle
  3353 ;;		_count_out
  3354 ;;		_task_0
  3355 ;;		_task_1
  3356 ;;		_task_2
  3357 ;;		_task_xuxa
  3358 ;; This function uses a reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text19
  3362  0019C6                     __ptext19:
  3363                           	opt callstack 0
  3364  0019C6                     _lunos_delayTask:
  3365                           	opt callstack 18
  3366                           
  3367                           ;kernel.c: 30:   INTCONbits.GIE = 0;
  3368                           
  3369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3370                           ;incstack = 0
  3371  0019C6  9EF2               	bcf	4082,7,c	;volatile
  3372                           
  3373                           ;kernel.c: 32:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  3374                           ;stkvar	_time @ sp[(0)+-2]
  3375  0019C8  50E1               	movf	fsr1l,w,c
  3376  0019CA  0FFE               	addlw	-2
  3377  0019CC  6ED9               	movwf	fsr2l,c
  3378  0019CE  50E2               	movf	fsr1h,w,c
  3379  0019D0  6EDA               	movwf	fsr2h,c
  3380  0019D2  0EFF               	movlw	255
  3381  0019D4  22DA               	addwfc	fsr2h,f,c
  3382  0019D6  EE02  F0F2         	lfsr	0,_ready_queue+542
  3383  0019DA  CFEE F04D          	movff	postinc0,btemp+10
  3384  0019DE  CFED F04E          	movff	postdec0,btemp+11
  3385  0019E2  0E6C               	movlw	108
  3386  0019E4  024D               	mulwf	btemp+10,c
  3387  0019E6  CFF3 F04B          	movff	prodl,btemp+8
  3388  0019EA  CFF4 F04C          	movff	prodh,btemp+9
  3389  0019EE  024E               	mulwf	btemp+11,c
  3390  0019F0  50F3               	movf	prodl,w,c
  3391  0019F2  264C               	addwf	btemp+9,f,c
  3392  0019F4  0E3E               	movlw	low (_ready_queue+106)
  3393  0019F6  244B               	addwf	btemp+8,w,c
  3394  0019F8  6EE9               	movwf	fsr0l,c
  3395  0019FA  0E01               	movlw	high (_ready_queue+106)
  3396  0019FC  204C               	addwfc	btemp+9,w,c
  3397  0019FE  6EEA               	movwf	fsr0h,c
  3398  001A00  CFDE FFEE          	movff	postinc2,postinc0
  3399  001A04  CFDD FFED          	movff	postdec2,postdec0
  3400                           
  3401                           ;kernel.c: 33:   dispatcher(WAITING);
  3402  001A08  0E02               	movlw	2
  3403  001A0A  6EE6               	movwf	postinc1,c
  3404  001A0C  EC66  F002         	call	_dispatcher	;wreg free
  3405                           
  3406                           ;kernel.c: 35:   INTCONbits.GIE = 1;
  3407  001A10  8EF2               	bsf	4082,7,c	;volatile
  3408                           
  3409                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3410  001A12  52E5               	movf	postdec1,f,c
  3411  001A14  52E5               	movf	postdec1,f,c
  3412  001A16  0012               	return		;funcret
  3413  001A18                     __end_of_lunos_delayTask:
  3414                           	opt callstack 0
  3415                           
  3416 ;; *************** function _fill_bottle *****************
  3417 ;; Defined at:
  3418 ;;		line 59 in file "tasks.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1  [STACK] void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:         0       0       0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    8
  3439 ;; This function calls:
  3440 ;;		_lunos_delayTask
  3441 ;;		_sem_post
  3442 ;;		_sem_wait
  3443 ;; This function is called by:
  3444 ;;		_main
  3445 ;; This function uses a reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text20
  3449  001BD8                     __ptext20:
  3450                           	opt callstack 0
  3451  001BD8                     _fill_bottle:
  3452                           	opt callstack 18
  3453                           
  3454                           ;tasks.c: 61:         sem_wait(&fill_sem);
  3455                           
  3456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3457                           ;incstack = 0
  3458                           ;tasks.c: 60:     while(1){
  3459  001BD8  0E1B               	movlw	low _fill_sem
  3460  001BDA  6EE6               	movwf	postinc1,c
  3461  001BDC  0E00               	movlw	high _fill_sem
  3462  001BDE  6EE6               	movwf	postinc1,c
  3463  001BE0  EC3F  F009         	call	_sem_wait	;wreg free
  3464                           
  3465                           ;tasks.c: 62:         while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  3466  001BE4  D006               	goto	l2109
  3467  001BE6                     l2107:
  3468                           
  3469                           ;tasks.c: 63:             lunos_delayTask(100);
  3470  001BE6  0E64               	movlw	100
  3471  001BE8  6EE6               	movwf	postinc1,c
  3472  001BEA  0E00               	movlw	0
  3473  001BEC  6EE6               	movwf	postinc1,c
  3474  001BEE  ECE3  F00C         	call	_lunos_delayTask	;wreg free
  3475  001BF2                     l2109:
  3476                           
  3477                           ;tasks.c: 62:         while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  3478  001BF2  A082               	btfss	3970,0,c	;volatile
  3479  001BF4  B282               	btfsc	3970,1,c	;volatile
  3480  001BF6  D7F0               	goto	_fill_bottle
  3481  001BF8  B482               	btfsc	3970,2,c	;volatile
  3482  001BFA  D7EE               	goto	_fill_bottle
  3483  001BFC  D7F4               	goto	l2107
  3484  001BFE                     __end_of_fill_bottle:
  3485                           	opt callstack 0
  3486                           
  3487 ;; *************** function _check_level *****************
  3488 ;; Defined at:
  3489 ;;		line 69 in file "tasks.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1  [STACK] void 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3503 ;;      Params:         0       0       0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0
  3506 ;;      Totals:         0       0       0       0       0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    8
  3510 ;; This function calls:
  3511 ;;		_sem_post
  3512 ;;		_sem_wait
  3513 ;; This function is called by:
  3514 ;;		_main
  3515 ;; This function uses a reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text21
  3519  001B3E                     __ptext21:
  3520                           	opt callstack 0
  3521  001B3E                     _check_level:
  3522                           	opt callstack 18
  3523                           
  3524                           ;tasks.c: 71:         sem_wait(&check_sem);
  3525                           
  3526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3527                           ;incstack = 0
  3528                           ;tasks.c: 70:     while(1){
  3529  001B3E  0E0D               	movlw	low _check_sem
  3530  001B40  6EE6               	movwf	postinc1,c
  3531  001B42  0E00               	movlw	high _check_sem
  3532  001B44  6EE6               	movwf	postinc1,c
  3533  001B46  EC3F  F009         	call	_sem_wait	;wreg free
  3534                           
  3535                           ;tasks.c: 72:         if (!PORTDbits.RD1)
  3536  001B4A  B283               	btfsc	3971,1,c	;volatile
  3537  001B4C  D002               	goto	l318
  3538                           
  3539                           ;tasks.c: 73:             global_buffer.bottles[0].bottle_state = EMPTY;
  3540  001B4E  6A03               	clrf	_global_buffer+2,c
  3541  001B50  D004               	goto	l319
  3542  001B52                     l318:
  3543  001B52  A283               	btfss	3971,1,c	;volatile
  3544  001B54  D002               	goto	l319
  3545                           
  3546                           ;tasks.c: 75:             global_buffer.bottles[0].bottle_state = FULL;
  3547  001B56  0E01               	movlw	1
  3548  001B58  6E03               	movwf	_global_buffer+2,c
  3549  001B5A                     l319:
  3550                           
  3551                           ;tasks.c: 78:         if (!PORTDbits.RD2)
  3552  001B5A  B483               	btfsc	3971,2,c	;volatile
  3553  001B5C  D002               	goto	l322
  3554                           
  3555                           ;tasks.c: 79:             global_buffer.bottles[1].bottle_state = EMPTY;
  3556  001B5E  6A04               	clrf	_global_buffer+3,c
  3557  001B60  D004               	goto	l323
  3558  001B62                     l322:
  3559  001B62  A483               	btfss	3971,2,c	;volatile
  3560  001B64  D002               	goto	l323
  3561                           
  3562                           ;tasks.c: 81:             global_buffer.bottles[1].bottle_state = FULL;
  3563  001B66  0E01               	movlw	1
  3564  001B68  6E04               	movwf	_global_buffer+3,c
  3565  001B6A                     l323:
  3566                           
  3567                           ;tasks.c: 84:         if (!PORTDbits.RD3)
  3568  001B6A  B683               	btfsc	3971,3,c	;volatile
  3569  001B6C  D002               	goto	l326
  3570                           
  3571                           ;tasks.c: 85:             global_buffer.bottles[2].bottle_state = EMPTY;
  3572  001B6E  6A05               	clrf	_global_buffer+4,c
  3573  001B70  D7E6               	goto	_check_level
  3574  001B72                     l326:
  3575  001B72  A683               	btfss	3971,3,c	;volatile
  3576  001B74  D7E4               	goto	_check_level
  3577                           
  3578                           ;tasks.c: 87:             global_buffer.bottles[2].bottle_state = FULL;
  3579  001B76  0E01               	movlw	1
  3580  001B78  6E05               	movwf	_global_buffer+4,c
  3581  001B7A  D7E1               	goto	_check_level
  3582  001B7C                     __end_of_check_level:
  3583                           	opt callstack 0
  3584                           
  3585 ;; *************** function _cover_bottle *****************
  3586 ;; Defined at:
  3587 ;;		line 93 in file "tasks.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;		None
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1  [STACK] void 
  3594 ;; Registers used:
  3595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3601 ;;      Params:         0       0       0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0
  3604 ;;      Totals:         0       0       0       0       0       0       0
  3605 ;;Total ram usage:        0 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    8
  3608 ;; This function calls:
  3609 ;;		_sem_post
  3610 ;;		_sem_wait
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text22
  3617  001A18                     __ptext22:
  3618                           	opt callstack 0
  3619  001A18                     _cover_bottle:
  3620                           	opt callstack 18
  3621                           
  3622                           ;tasks.c: 95:         sem_wait(&cover_sem);
  3623                           
  3624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3625                           ;incstack = 0
  3626                           ;tasks.c: 94:     while(1){
  3627  001A18  0E8E               	movlw	low _cover_sem
  3628  001A1A  6EE6               	movwf	postinc1,c
  3629  001A1C  0E00               	movlw	high _cover_sem
  3630  001A1E  6EE6               	movwf	postinc1,c
  3631  001A20  EC3F  F009         	call	_sem_wait	;wreg free
  3632                           
  3633                           ;tasks.c: 96:         if (PORTCbits.RC3){
  3634  001A24  A682               	btfss	3970,3,c	;volatile
  3635  001A26  D009               	goto	l336
  3636                           
  3637                           ;tasks.c: 97:             if(global_buffer.bottles[0].bottle_state == FULL)
  3638  001A28  0403               	decf	_global_buffer+2,w,c
  3639  001A2A  A4D8               	btfss	status,2,c
  3640  001A2C  D002               	goto	l337
  3641                           
  3642                           ;tasks.c: 98:                 global_buffer.bottles[0].bottle_state = CLOSED;
  3643  001A2E  0E02               	movlw	2
  3644  001A30  D003               	goto	L3
  3645  001A32                     l337:
  3646  001A32  A682               	btfss	3970,3,c	;volatile
  3647  001A34  D002               	goto	l336
  3648                           
  3649                           ;tasks.c: 100:                 global_buffer.bottles[0].bottle_state = FAIL;
  3650  001A36  0E03               	movlw	3
  3651  001A38                     L3:
  3652  001A38  6E03               	movwf	_global_buffer+2,c
  3653  001A3A                     l336:
  3654                           
  3655                           ;tasks.c: 103:         if (PORTCbits.RC4){
  3656  001A3A  A882               	btfss	3970,4,c	;volatile
  3657  001A3C  D009               	goto	l341
  3658                           
  3659                           ;tasks.c: 104:             if(global_buffer.bottles[1].bottle_state == FULL)
  3660  001A3E  0404               	decf	_global_buffer+3,w,c
  3661  001A40  A4D8               	btfss	status,2,c
  3662  001A42  D002               	goto	l342
  3663                           
  3664                           ;tasks.c: 105:                 global_buffer.bottles[1].bottle_state = CLOSED;
  3665  001A44  0E02               	movlw	2
  3666  001A46  D003               	goto	L4
  3667  001A48                     l342:
  3668  001A48  A882               	btfss	3970,4,c	;volatile
  3669  001A4A  D002               	goto	l341
  3670                           
  3671                           ;tasks.c: 107:                 global_buffer.bottles[1].bottle_state = FAIL;
  3672  001A4C  0E03               	movlw	3
  3673  001A4E                     L4:
  3674  001A4E  6E04               	movwf	_global_buffer+3,c
  3675  001A50                     l341:
  3676                           
  3677                           ;tasks.c: 110:         if (PORTCbits.RC5){
  3678  001A50  AA82               	btfss	3970,5,c	;volatile
  3679  001A52  D7E2               	goto	_cover_bottle
  3680                           
  3681                           ;tasks.c: 111:             if(global_buffer.bottles[2].bottle_state == FULL)
  3682  001A54  0405               	decf	_global_buffer+4,w,c
  3683  001A56  A4D8               	btfss	status,2,c
  3684  001A58  D002               	goto	l347
  3685                           
  3686                           ;tasks.c: 112:                 global_buffer.bottles[2].bottle_state = CLOSED;
  3687  001A5A  0E02               	movlw	2
  3688  001A5C  D003               	goto	L5
  3689  001A5E                     l347:
  3690  001A5E  AA82               	btfss	3970,5,c	;volatile
  3691  001A60  D7DB               	goto	_cover_bottle
  3692                           
  3693                           ;tasks.c: 114:                 global_buffer.bottles[2].bottle_state = FAIL;
  3694  001A62  0E03               	movlw	3
  3695  001A64                     L5:
  3696  001A64  6E05               	movwf	_global_buffer+4,c
  3697                           
  3698                           ;tasks.c: 116:         }
  3699  001A66  D7D8               	goto	_cover_bottle
  3700  001A68                     __end_of_cover_bottle:
  3701                           	opt callstack 0
  3702                           
  3703 ;; *************** function _count_out *****************
  3704 ;; Defined at:
  3705 ;;		line 121 in file "tasks.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  out_bottles     2  [STACK] int 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1  [STACK] void 
  3712 ;; Registers used:
  3713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3719 ;;      Params:         0       0       0       0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0
  3722 ;;      Totals:         0       0       0       0       0       0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    8
  3726 ;; This function calls:
  3727 ;;		_lunos_delayTask
  3728 ;;		_sem_post
  3729 ;;		_sem_wait
  3730 ;; This function is called by:
  3731 ;;		_main
  3732 ;; This function uses a reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text23
  3736  001876                     __ptext23:
  3737                           	opt callstack 0
  3738  001876                     _count_out:
  3739                           	opt callstack 0
  3740                           
  3741                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3742  001876  52E6               	movf	postinc1,f,c
  3743  001878  52E6               	movf	postinc1,f,c
  3744                           
  3745                           ;tasks.c: 122:     sem_wait(&out_sem);
  3746                           
  3747                           ;incstack = 0
  3748  00187A  0E80               	movlw	low _out_sem
  3749  00187C  6EE6               	movwf	postinc1,c
  3750  00187E  0E00               	movlw	high _out_sem
  3751  001880  6EE6               	movwf	postinc1,c
  3752  001882  EC3F  F009         	call	_sem_wait	;wreg free
  3753  001886                     l2161:
  3754                           
  3755                           ;tasks.c: 124:         int out_bottles = 0;
  3756                           ;stkvar	_out_bottles @ sp[(-2)+0]
  3757  001886  0EFE               	movlw	-2
  3758  001888  6AE3               	clrf	plusw1,c
  3759  00188A  0EFF               	movlw	-1
  3760  00188C  6AE3               	clrf	plusw1,c
  3761                           
  3762                           ;tasks.c: 125:         if(PORTDbits.RD4){
  3763  00188E  A883               	btfss	3971,4,c	;volatile
  3764  001890  D015               	goto	l2169
  3765                           
  3766                           ;tasks.c: 126:             out_bottles++;
  3767                           ;stkvar	_out_bottles @ sp[(-2)+0]
  3768  001892  0EFE               	movlw	-2
  3769  001894  50E3               	movf	plusw1,w,c
  3770  001896  0F01               	addlw	1
  3771  001898  6E43               	movwf	btemp,c
  3772  00189A  0EFE               	movlw	-2
  3773  00189C  C043  FFE3         	movff	btemp,plusw1
  3774  0018A0  6A43               	clrf	btemp,c
  3775  0018A2  0EFF               	movlw	-1
  3776  0018A4  50E3               	movf	plusw1,w,c
  3777  0018A6  2043               	addwfc	btemp,w,c
  3778  0018A8  6E43               	movwf	btemp,c
  3779  0018AA  0EFF               	movlw	-1
  3780  0018AC  C043  FFE3         	movff	btemp,plusw1
  3781                           
  3782                           ;tasks.c: 127:             lunos_delayTask(100);
  3783  0018B0  0E64               	movlw	100
  3784  0018B2  6EE6               	movwf	postinc1,c
  3785  0018B4  0E00               	movlw	0
  3786  0018B6  6EE6               	movwf	postinc1,c
  3787  0018B8  ECE3  F00C         	call	_lunos_delayTask	;wreg free
  3788  0018BC                     l2169:
  3789                           
  3790                           ;tasks.c: 129:         if (out_bottles == 5){
  3791                           ;stkvar	_out_bottles @ sp[(-2)+0]
  3792  0018BC  0EFE               	movlw	-2
  3793  0018BE  CFE3 F043          	movff	plusw1,btemp
  3794  0018C2  0E05               	movlw	5
  3795  0018C4  1843               	xorwf	btemp,w,c
  3796  0018C6  E10C               	bnz	l2177
  3797  0018C8  0EFF               	movlw	-1
  3798  0018CA  50E3               	movf	plusw1,w,c
  3799  0018CC  A4D8               	btfss	status,2,c
  3800  0018CE  D008               	goto	l2177
  3801                           
  3802                           ;tasks.c: 130:             PORTBbits.RB1 = 0;
  3803  0018D0  9281               	bcf	3969,1,c	;volatile
  3804                           
  3805                           ;tasks.c: 131:             lunos_delayTask(10000);
  3806  0018D2  0E10               	movlw	16
  3807  0018D4  6EE6               	movwf	postinc1,c
  3808  0018D6  0E27               	movlw	39
  3809  0018D8  6EE6               	movwf	postinc1,c
  3810  0018DA  ECE3  F00C         	call	_lunos_delayTask	;wreg free
  3811                           
  3812                           ;tasks.c: 132:             PORTBbits.RB1 = 1;
  3813  0018DE  8281               	bsf	3969,1,c	;volatile
  3814  0018E0                     l2177:
  3815                           
  3816                           ;tasks.c: 134:          global_buffer.p_state = FREE;
  3817  0018E0  0E00               	movlw	0
  3818  0018E2  B8A6               	btfsc	4006,4,c	;volsfr
  3819  0018E4  0E01               	movlw	1
  3820  0018E6  6E06               	movwf	_global_buffer+5,c
  3821  0018E8  D7CE               	goto	l2161
  3822  0018EA                     __end_of_count_out:
  3823                           	opt callstack 0
  3824                           
  3825 ;; *************** function _task_0 *****************
  3826 ;; Defined at:
  3827 ;;		line 139 in file "tasks.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1  [STACK] void 
  3834 ;; Registers used:
  3835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3841 ;;      Params:         0       0       0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    9
  3848 ;; This function calls:
  3849 ;;		_lunos_delayTask
  3850 ;;		_pipe_write
  3851 ;; This function is called by:
  3852 ;;		Interrupt level 1
  3853 ;; This function uses a reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text24
  3857  001AFE                     __ptext24:
  3858                           	opt callstack 0
  3859  001AFE                     _task_0:
  3860                           	opt callstack 17
  3861                           
  3862                           ;tasks.c: 141:     pipe_write(&p, 1);
  3863                           
  3864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3865                           ;incstack = 0
  3866                           ;tasks.c: 140:   while(1){
  3867  001AFE  0E01               	movlw	1
  3868  001B00  6EE6               	movwf	postinc1,c
  3869  001B02  0E00               	movlw	0
  3870  001B04  6EE6               	movwf	postinc1,c
  3871  001B06  0E37               	movlw	low _p
  3872  001B08  6EE6               	movwf	postinc1,c
  3873  001B0A  0E00               	movlw	high _p
  3874  001B0C  6EE6               	movwf	postinc1,c
  3875  001B0E  EC3F  F007         	call	_pipe_write	;wreg free
  3876                           
  3877                           ;tasks.c: 142:     PORTBbits.RB3 = ~PORTBbits.RB3;
  3878  001B12  A681               	btfss	3969,3,c	;volatile
  3879  001B14  D002               	goto	u117_20
  3880  001B16  0E01               	movlw	1
  3881  001B18  D001               	goto	u117_26
  3882  001B1A                     u117_20:
  3883  001B1A  0E00               	movlw	0
  3884  001B1C                     u117_26:
  3885  001B1C  0AFF               	xorlw	255
  3886  001B1E  6E4E               	movwf	btemp+11,c
  3887  001B20  464E               	rlncf	btemp+11,f,c
  3888  001B22  464E               	rlncf	btemp+11,f,c
  3889  001B24  464E               	rlncf	btemp+11,f,c
  3890  001B26  5081               	movf	3969,w,c	;volatile
  3891  001B28  184E               	xorwf	btemp+11,w,c
  3892  001B2A  0BF7               	andlw	-9
  3893  001B2C  184E               	xorwf	btemp+11,w,c
  3894  001B2E  6E81               	movwf	3969,c	;volatile
  3895                           
  3896                           ;tasks.c: 143:     lunos_delayTask(1000);
  3897  001B30  0EE8               	movlw	232
  3898  001B32  6EE6               	movwf	postinc1,c
  3899  001B34  0E03               	movlw	3
  3900  001B36  6EE6               	movwf	postinc1,c
  3901  001B38  ECE3  F00C         	call	_lunos_delayTask	;wreg free
  3902  001B3C  D7E0               	goto	_task_0
  3903  001B3E                     __end_of_task_0:
  3904                           	opt callstack 0
  3905                           
  3906 ;; *************** function _pipe_write *****************
  3907 ;; Defined at:
  3908 ;;		line 18 in file "pipe.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  p               2  [STACK] PTR struct pipe
  3911 ;;		 -> p(12), 
  3912 ;;  data            2  [STACK] unsigned int 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1  [STACK] void 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3924 ;;      Params:         0       0       0       0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0
  3927 ;;      Totals:         0       0       0       0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    8
  3931 ;; This function calls:
  3932 ;;		_sem_post
  3933 ;;		_sem_wait
  3934 ;; This function is called by:
  3935 ;;		_task_0
  3936 ;; This function uses a reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text25
  3940  000E7E                     __ptext25:
  3941                           	opt callstack 0
  3942  000E7E                     _pipe_write:
  3943                           	opt callstack 17
  3944                           
  3945                           ;pipe.c: 20:   sem_wait(p->w);
  3946                           ;stkvar	_p @ sp[(0)+-2]
  3947                           
  3948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3949                           ;incstack = 0
  3950  000E7E  0EFE               	movlw	-2
  3951  000E80  CFE3 F04D          	movff	plusw1,btemp+10
  3952  000E84  0EFF               	movlw	-1
  3953  000E86  CFE3 F04E          	movff	plusw1,btemp+11
  3954  000E8A  0E08               	movlw	8
  3955  000E8C  244D               	addwf	btemp+10,w,c
  3956  000E8E  6ED9               	movwf	fsr2l,c
  3957  000E90  0E00               	movlw	0
  3958  000E92  204E               	addwfc	btemp+11,w,c
  3959  000E94  6EDA               	movwf	fsr2h,c
  3960  000E96  CFDE F04D          	movff	postinc2,btemp+10
  3961  000E9A  CFDD F04E          	movff	postdec2,btemp+11
  3962  000E9E  C04D  FFE6         	movff	btemp+10,postinc1
  3963  000EA2  C04E  FFE6         	movff	btemp+11,postinc1
  3964  000EA6  EC3F  F009         	call	_sem_wait	;wreg free
  3965                           
  3966                           ;pipe.c: 21:   p->pipe_data[p->index_write] = data;
  3967                           ;stkvar	_data @ sp[(0)+-4]
  3968  000EAA  50E1               	movf	fsr1l,w,c
  3969  000EAC  0FFC               	addlw	-4
  3970  000EAE  6ED9               	movwf	fsr2l,c
  3971  000EB0  50E2               	movf	fsr1h,w,c
  3972  000EB2  6EDA               	movwf	fsr2h,c
  3973  000EB4  0EFF               	movlw	255
  3974  000EB6  22DA               	addwfc	fsr2h,f,c
  3975                           
  3976                           ;stkvar	_p @ sp[(0)+-2]
  3977  000EB8  0EFE               	movlw	-2
  3978  000EBA  CFE3 F04D          	movff	plusw1,btemp+10
  3979  000EBE  0EFF               	movlw	-1
  3980  000EC0  CFE3 F04E          	movff	plusw1,btemp+11
  3981  000EC4  0E04               	movlw	4
  3982  000EC6  244D               	addwf	btemp+10,w,c
  3983  000EC8  6EE9               	movwf	fsr0l,c
  3984  000ECA  0E00               	movlw	0
  3985  000ECC  204E               	addwfc	btemp+11,w,c
  3986  000ECE  6EEA               	movwf	fsr0h,c
  3987  000ED0  CFEE F04D          	movff	postinc0,btemp+10
  3988  000ED4  CFED F04E          	movff	postdec0,btemp+11
  3989  000ED8  90D8               	bcf	status,0,c
  3990  000EDA  344D               	rlcf	btemp+10,w,c
  3991  000EDC  6E4B               	movwf	btemp+8,c
  3992  000EDE  344E               	rlcf	btemp+11,w,c
  3993  000EE0  6E4C               	movwf	btemp+9,c
  3994                           
  3995                           ;stkvar	_p @ sp[(0)+-2]
  3996  000EE2  0EFE               	movlw	-2
  3997  000EE4  CFE3 F04D          	movff	plusw1,btemp+10
  3998  000EE8  0EFF               	movlw	-1
  3999  000EEA  CFE3 F04E          	movff	plusw1,btemp+11
  4000  000EEE  504B               	movf	btemp+8,w,c
  4001  000EF0  244D               	addwf	btemp+10,w,c
  4002  000EF2  6EE9               	movwf	fsr0l,c
  4003  000EF4  504C               	movf	btemp+9,w,c
  4004  000EF6  204E               	addwfc	btemp+11,w,c
  4005  000EF8  6EEA               	movwf	fsr0h,c
  4006  000EFA  CFDE FFEE          	movff	postinc2,postinc0
  4007  000EFE  CFDD FFED          	movff	postdec2,postdec0
  4008                           
  4009                           ;pipe.c: 22:   p->index_write = (p->index_write + 1) % 2;
  4010                           ;stkvar	_p @ sp[(0)+-2]
  4011  000F02  0EFE               	movlw	-2
  4012  000F04  CFE3 F04D          	movff	plusw1,btemp+10
  4013  000F08  0EFF               	movlw	-1
  4014  000F0A  CFE3 F04E          	movff	plusw1,btemp+11
  4015  000F0E  0E04               	movlw	4
  4016  000F10  244D               	addwf	btemp+10,w,c
  4017  000F12  6ED9               	movwf	fsr2l,c
  4018  000F14  0E00               	movlw	0
  4019  000F16  204E               	addwfc	btemp+11,w,c
  4020  000F18  6EDA               	movwf	fsr2h,c
  4021  000F1A  CFDE F04D          	movff	postinc2,btemp+10
  4022  000F1E  CFDD F04E          	movff	postdec2,btemp+11
  4023  000F22  0E01               	movlw	1
  4024  000F24  264D               	addwf	btemp+10,f,c
  4025  000F26  0E00               	movlw	0
  4026  000F28  224E               	addwfc	btemp+11,f,c
  4027  000F2A  0E01               	movlw	1
  4028  000F2C  164D               	andwf	btemp+10,f,c
  4029  000F2E  0E00               	movlw	0
  4030  000F30  164E               	andwf	btemp+11,f,c
  4031                           
  4032                           ;stkvar	_p @ sp[(0)+-2]
  4033  000F32  0EFE               	movlw	-2
  4034  000F34  CFE3 F04B          	movff	plusw1,btemp+8
  4035  000F38  0EFF               	movlw	-1
  4036  000F3A  CFE3 F04C          	movff	plusw1,btemp+9
  4037  000F3E  0E04               	movlw	4
  4038  000F40  244B               	addwf	btemp+8,w,c
  4039  000F42  6ED9               	movwf	fsr2l,c
  4040  000F44  0E00               	movlw	0
  4041  000F46  204C               	addwfc	btemp+9,w,c
  4042  000F48  6EDA               	movwf	fsr2h,c
  4043  000F4A  C04D  FFDE         	movff	btemp+10,postinc2
  4044  000F4E  C04E  FFDD         	movff	btemp+11,postdec2
  4045                           
  4046                           ;pipe.c: 23:   sem_post(p->r);
  4047                           ;stkvar	_p @ sp[(0)+-2]
  4048  000F52  0EFE               	movlw	-2
  4049  000F54  CFE3 F04D          	movff	plusw1,btemp+10
  4050  000F58  0EFF               	movlw	-1
  4051  000F5A  CFE3 F04E          	movff	plusw1,btemp+11
  4052  000F5E  0E0A               	movlw	10
  4053  000F60  244D               	addwf	btemp+10,w,c
  4054  000F62  6ED9               	movwf	fsr2l,c
  4055  000F64  0E00               	movlw	0
  4056  000F66  204E               	addwfc	btemp+11,w,c
  4057  000F68  6EDA               	movwf	fsr2h,c
  4058  000F6A  CFDE F04D          	movff	postinc2,btemp+10
  4059  000F6E  CFDD F04E          	movff	postdec2,btemp+11
  4060  000F72  C04D  FFE6         	movff	btemp+10,postinc1
  4061  000F76  C04E  FFE6         	movff	btemp+11,postinc1
  4062  000F7A  ECC4  F008         	call	_sem_post	;wreg free
  4063                           
  4064                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  4065  000F7E  52E5               	movf	postdec1,f,c
  4066  000F80  52E5               	movf	postdec1,f,c
  4067  000F82  52E5               	movf	postdec1,f,c
  4068  000F84  52E5               	movf	postdec1,f,c
  4069  000F86  0012               	return		;funcret
  4070  000F88                     __end_of_pipe_write:
  4071                           	opt callstack 0
  4072                           
  4073 ;; *************** function _task_1 *****************
  4074 ;; Defined at:
  4075 ;;		line 148 in file "tasks.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  dado            2  [STACK] unsigned int 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1  [STACK] void 
  4082 ;; Registers used:
  4083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4089 ;;      Params:         0       0       0       0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0
  4092 ;;      Totals:         0       0       0       0       0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    9
  4096 ;; This function calls:
  4097 ;;		_lunos_delayTask
  4098 ;;		_pipe_read
  4099 ;; This function is called by:
  4100 ;;		Interrupt level 1
  4101 ;; This function uses a reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text26
  4105  001A68                     __ptext26:
  4106                           	opt callstack 0
  4107  001A68                     _task_1:
  4108                           	opt callstack 0
  4109                           
  4110                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4111  001A68  52E6               	movf	postinc1,f,c
  4112  001A6A  52E6               	movf	postinc1,f,c
  4113  001A6C                     l370:
  4114                           
  4115                           ;tasks.c: 151:     pipe_read(&p, &dado);
  4116                           ;stkvar	_dado @ sp[(-2)+0]
  4117  001A6C  0EFE               	movlw	254
  4118  001A6E  24E1               	addwf	fsr1l,w,c
  4119  001A70  6E43               	movwf	btemp,c
  4120  001A72  0EFF               	movlw	255
  4121  001A74  20E2               	addwfc	fsr1h,w,c
  4122  001A76  6E44               	movwf	btemp+1,c
  4123  001A78  C043  FFE6         	movff	btemp,postinc1
  4124  001A7C  C044  FFE6         	movff	btemp+1,postinc1
  4125  001A80  0E37               	movlw	low _p
  4126  001A82  6EE6               	movwf	postinc1,c
  4127  001A84  0E00               	movlw	high _p
  4128  001A86  6EE6               	movwf	postinc1,c
  4129  001A88  ECC4  F007         	call	_pipe_read	;wreg free
  4130                           
  4131                           ;tasks.c: 152:     PORTBbits.RB4 = ~PORTBbits.RB4;
  4132  001A8C  A881               	btfss	3969,4,c	;volatile
  4133  001A8E  D002               	goto	u118_20
  4134  001A90  0E01               	movlw	1
  4135  001A92  D001               	goto	u118_26
  4136  001A94                     u118_20:
  4137  001A94  0E00               	movlw	0
  4138  001A96                     u118_26:
  4139  001A96  0AFF               	xorlw	255
  4140  001A98  6E4E               	movwf	btemp+11,c
  4141  001A9A  3A4E               	swapf	btemp+11,f,c
  4142  001A9C  5081               	movf	3969,w,c	;volatile
  4143  001A9E  184E               	xorwf	btemp+11,w,c
  4144  001AA0  0BEF               	andlw	-17
  4145  001AA2  184E               	xorwf	btemp+11,w,c
  4146  001AA4  6E81               	movwf	3969,c	;volatile
  4147                           
  4148                           ;tasks.c: 153:     lunos_delayTask(2000);
  4149  001AA6  0ED0               	movlw	208
  4150  001AA8  6EE6               	movwf	postinc1,c
  4151  001AAA  0E07               	movlw	7
  4152  001AAC  6EE6               	movwf	postinc1,c
  4153  001AAE  ECE3  F00C         	call	_lunos_delayTask	;wreg free
  4154  001AB2  D7DC               	goto	l370
  4155  001AB4                     __end_of_task_1:
  4156                           	opt callstack 0
  4157                           
  4158 ;; *************** function _pipe_read *****************
  4159 ;; Defined at:
  4160 ;;		line 27 in file "pipe.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  p               2  [STACK] PTR struct pipe
  4163 ;;		 -> p(12), 
  4164 ;;  data            2  [STACK] PTR unsigned int 
  4165 ;;		 -> dado(2), 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1  [STACK] void 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4177 ;;      Params:         0       0       0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0
  4180 ;;      Totals:         0       0       0       0       0       0       0
  4181 ;;Total ram usage:        0 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    8
  4184 ;; This function calls:
  4185 ;;		_sem_post
  4186 ;;		_sem_wait
  4187 ;; This function is called by:
  4188 ;;		_task_1
  4189 ;; This function uses a reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text27
  4193  000F88                     __ptext27:
  4194                           	opt callstack 0
  4195  000F88                     _pipe_read:
  4196                           	opt callstack 17
  4197                           
  4198                           ;pipe.c: 29:   sem_wait(p->r);
  4199                           ;stkvar	_p @ sp[(0)+-2]
  4200                           
  4201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4202                           ;incstack = 0
  4203  000F88  0EFE               	movlw	-2
  4204  000F8A  CFE3 F04D          	movff	plusw1,btemp+10
  4205  000F8E  0EFF               	movlw	-1
  4206  000F90  CFE3 F04E          	movff	plusw1,btemp+11
  4207  000F94  0E0A               	movlw	10
  4208  000F96  244D               	addwf	btemp+10,w,c
  4209  000F98  6ED9               	movwf	fsr2l,c
  4210  000F9A  0E00               	movlw	0
  4211  000F9C  204E               	addwfc	btemp+11,w,c
  4212  000F9E  6EDA               	movwf	fsr2h,c
  4213  000FA0  CFDE F04D          	movff	postinc2,btemp+10
  4214  000FA4  CFDD F04E          	movff	postdec2,btemp+11
  4215  000FA8  C04D  FFE6         	movff	btemp+10,postinc1
  4216  000FAC  C04E  FFE6         	movff	btemp+11,postinc1
  4217  000FB0  EC3F  F009         	call	_sem_wait	;wreg free
  4218                           
  4219                           ;pipe.c: 30:   *data = p->pipe_data[p->index_read];
  4220                           ;stkvar	_p @ sp[(0)+-2]
  4221  000FB4  0EFE               	movlw	-2
  4222  000FB6  CFE3 F04D          	movff	plusw1,btemp+10
  4223  000FBA  0EFF               	movlw	-1
  4224  000FBC  CFE3 F04E          	movff	plusw1,btemp+11
  4225  000FC0  0E06               	movlw	6
  4226  000FC2  244D               	addwf	btemp+10,w,c
  4227  000FC4  6ED9               	movwf	fsr2l,c
  4228  000FC6  0E00               	movlw	0
  4229  000FC8  204E               	addwfc	btemp+11,w,c
  4230  000FCA  6EDA               	movwf	fsr2h,c
  4231  000FCC  CFDE F04D          	movff	postinc2,btemp+10
  4232  000FD0  CFDD F04E          	movff	postdec2,btemp+11
  4233  000FD4  90D8               	bcf	status,0,c
  4234  000FD6  344D               	rlcf	btemp+10,w,c
  4235  000FD8  6E4B               	movwf	btemp+8,c
  4236  000FDA  344E               	rlcf	btemp+11,w,c
  4237  000FDC  6E4C               	movwf	btemp+9,c
  4238                           
  4239                           ;stkvar	_p @ sp[(0)+-2]
  4240  000FDE  0EFE               	movlw	-2
  4241  000FE0  CFE3 F04D          	movff	plusw1,btemp+10
  4242  000FE4  0EFF               	movlw	-1
  4243  000FE6  CFE3 F04E          	movff	plusw1,btemp+11
  4244  000FEA  504B               	movf	btemp+8,w,c
  4245  000FEC  244D               	addwf	btemp+10,w,c
  4246  000FEE  6ED9               	movwf	fsr2l,c
  4247  000FF0  504C               	movf	btemp+9,w,c
  4248  000FF2  204E               	addwfc	btemp+11,w,c
  4249  000FF4  6EDA               	movwf	fsr2h,c
  4250                           
  4251                           ;stkvar	_data @ sp[(0)+-4]
  4252  000FF6  0EFC               	movlw	-4
  4253  000FF8  CFE3 FFE9          	movff	plusw1,fsr0l
  4254  000FFC  0EFD               	movlw	-3
  4255  000FFE  CFE3 FFEA          	movff	plusw1,fsr0h
  4256  001002  CFDE FFEE          	movff	postinc2,postinc0
  4257  001006  CFDD FFED          	movff	postdec2,postdec0
  4258                           
  4259                           ;pipe.c: 31:   p->index_read = (p->index_read + 1) % 2;
  4260                           ;stkvar	_p @ sp[(0)+-2]
  4261  00100A  0EFE               	movlw	-2
  4262  00100C  CFE3 F04D          	movff	plusw1,btemp+10
  4263  001010  0EFF               	movlw	-1
  4264  001012  CFE3 F04E          	movff	plusw1,btemp+11
  4265  001016  0E06               	movlw	6
  4266  001018  244D               	addwf	btemp+10,w,c
  4267  00101A  6ED9               	movwf	fsr2l,c
  4268  00101C  0E00               	movlw	0
  4269  00101E  204E               	addwfc	btemp+11,w,c
  4270  001020  6EDA               	movwf	fsr2h,c
  4271  001022  CFDE F04D          	movff	postinc2,btemp+10
  4272  001026  CFDD F04E          	movff	postdec2,btemp+11
  4273  00102A  0E01               	movlw	1
  4274  00102C  264D               	addwf	btemp+10,f,c
  4275  00102E  0E00               	movlw	0
  4276  001030  224E               	addwfc	btemp+11,f,c
  4277  001032  0E01               	movlw	1
  4278  001034  164D               	andwf	btemp+10,f,c
  4279  001036  0E00               	movlw	0
  4280  001038  164E               	andwf	btemp+11,f,c
  4281                           
  4282                           ;stkvar	_p @ sp[(0)+-2]
  4283  00103A  0EFE               	movlw	-2
  4284  00103C  CFE3 F04B          	movff	plusw1,btemp+8
  4285  001040  0EFF               	movlw	-1
  4286  001042  CFE3 F04C          	movff	plusw1,btemp+9
  4287  001046  0E06               	movlw	6
  4288  001048  244B               	addwf	btemp+8,w,c
  4289  00104A  6ED9               	movwf	fsr2l,c
  4290  00104C  0E00               	movlw	0
  4291  00104E  204C               	addwfc	btemp+9,w,c
  4292  001050  6EDA               	movwf	fsr2h,c
  4293  001052  C04D  FFDE         	movff	btemp+10,postinc2
  4294  001056  C04E  FFDD         	movff	btemp+11,postdec2
  4295                           
  4296                           ;pipe.c: 32:   sem_post(p->w);
  4297                           ;stkvar	_p @ sp[(0)+-2]
  4298  00105A  0EFE               	movlw	-2
  4299  00105C  CFE3 F04D          	movff	plusw1,btemp+10
  4300  001060  0EFF               	movlw	-1
  4301  001062  CFE3 F04E          	movff	plusw1,btemp+11
  4302  001066  0E08               	movlw	8
  4303  001068  244D               	addwf	btemp+10,w,c
  4304  00106A  6ED9               	movwf	fsr2l,c
  4305  00106C  0E00               	movlw	0
  4306  00106E  204E               	addwfc	btemp+11,w,c
  4307  001070  6EDA               	movwf	fsr2h,c
  4308  001072  CFDE F04D          	movff	postinc2,btemp+10
  4309  001076  CFDD F04E          	movff	postdec2,btemp+11
  4310  00107A  C04D  FFE6         	movff	btemp+10,postinc1
  4311  00107E  C04E  FFE6         	movff	btemp+11,postinc1
  4312  001082  ECC4  F008         	call	_sem_post	;wreg free
  4313                           
  4314                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  4315  001086  52E5               	movf	postdec1,f,c
  4316  001088  52E5               	movf	postdec1,f,c
  4317  00108A  52E5               	movf	postdec1,f,c
  4318  00108C  52E5               	movf	postdec1,f,c
  4319  00108E  0012               	return		;funcret
  4320  001090                     __end_of_pipe_read:
  4321                           	opt callstack 0
  4322                           
  4323 ;; *************** function _task_2 *****************
  4324 ;; Defined at:
  4325 ;;		line 157 in file "tasks.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1  [STACK] void 
  4332 ;; Registers used:
  4333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4339 ;;      Params:         0       0       0       0       0       0       0
  4340 ;;      Locals:         0       0       0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0
  4342 ;;      Totals:         0       0       0       0       0       0       0
  4343 ;;Total ram usage:        0 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    8
  4346 ;; This function calls:
  4347 ;;		_lunos_delayTask
  4348 ;; This function is called by:
  4349 ;;		Interrupt level 1
  4350 ;; This function uses a reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text28
  4354  001BAE                     __ptext28:
  4355                           	opt callstack 0
  4356  001BAE                     _task_2:
  4357                           	opt callstack 18
  4358                           
  4359                           ;tasks.c: 159:     PORTBbits.RB5 = ~PORTBbits.RB5;
  4360                           
  4361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4362                           ;incstack = 0
  4363                           ;tasks.c: 158:   while(1){
  4364  001BAE  AA81               	btfss	3969,5,c	;volatile
  4365  001BB0  D002               	goto	u119_20
  4366  001BB2  0E01               	movlw	1
  4367  001BB4  D001               	goto	u119_26
  4368  001BB6                     u119_20:
  4369  001BB6  0E00               	movlw	0
  4370  001BB8                     u119_26:
  4371  001BB8  0AFF               	xorlw	255
  4372  001BBA  6E4E               	movwf	btemp+11,c
  4373  001BBC  3A4E               	swapf	btemp+11,f,c
  4374  001BBE  464E               	rlncf	btemp+11,f,c
  4375  001BC0  5081               	movf	3969,w,c	;volatile
  4376  001BC2  184E               	xorwf	btemp+11,w,c
  4377  001BC4  0BDF               	andlw	-33
  4378  001BC6  184E               	xorwf	btemp+11,w,c
  4379  001BC8  6E81               	movwf	3969,c	;volatile
  4380                           
  4381                           ;tasks.c: 160:     lunos_delayTask(1000);
  4382  001BCA  0EE8               	movlw	232
  4383  001BCC  6EE6               	movwf	postinc1,c
  4384  001BCE  0E03               	movlw	3
  4385  001BD0  6EE6               	movwf	postinc1,c
  4386  001BD2  ECE3  F00C         	call	_lunos_delayTask	;wreg free
  4387  001BD6  D7EB               	goto	_task_2
  4388  001BD8                     __end_of_task_2:
  4389                           	opt callstack 0
  4390                           
  4391 ;; *************** function _task_bozo *****************
  4392 ;; Defined at:
  4393 ;;		line 165 in file "tasks.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  i               2  [STACK] int 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1  [STACK] void 
  4400 ;; Registers used:
  4401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4407 ;;      Params:         0       0       0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0
  4410 ;;      Totals:         0       0       0       0       0       0       0
  4411 ;;Total ram usage:        0 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    8
  4414 ;; This function calls:
  4415 ;;		_sem_post
  4416 ;;		_sem_wait
  4417 ;; This function is called by:
  4418 ;;		Interrupt level 1
  4419 ;; This function uses a reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text29
  4423  0017F8                     __ptext29:
  4424                           	opt callstack 0
  4425  0017F8                     _task_bozo:
  4426                           	opt callstack 0
  4427                           
  4428                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4429  0017F8  52E6               	movf	postinc1,f,c
  4430  0017FA  52E6               	movf	postinc1,f,c
  4431  0017FC                     l382:
  4432                           
  4433                           ;tasks.c: 167:     int i;;tasks.c: 168:     sem_wait(&teste_1);
  4434  0017FC  0EC6               	movlw	low _teste_1
  4435  0017FE  6EE6               	movwf	postinc1,c
  4436  001800  0E00               	movlw	high _teste_1
  4437  001802  6EE6               	movwf	postinc1,c
  4438  001804  EC3F  F009         	call	_sem_wait	;wreg free
  4439                           
  4440                           ;tasks.c: 169:     for (i = 0; i < 4; i++) {
  4441                           ;stkvar	_i @ sp[(-2)+0]
  4442  001808  0EFE               	movlw	-2
  4443  00180A  6AE3               	clrf	plusw1,c
  4444  00180C  0EFF               	movlw	-1
  4445  00180E  6AE3               	clrf	plusw1,c
  4446  001810                     l2205:
  4447                           
  4448                           ;tasks.c: 170:       mem[i] = i+1;
  4449                           ;stkvar	_i @ sp[(-2)+0]
  4450  001810  0EFE               	movlw	-2
  4451  001812  CFE3 F04D          	movff	plusw1,btemp+10
  4452  001816  0EFF               	movlw	-1
  4453  001818  CFE3 F04E          	movff	plusw1,btemp+11
  4454  00181C  504D               	movf	btemp+10,w,c
  4455  00181E  2407               	addwf	_mem,w,c
  4456  001820  6ED9               	movwf	fsr2l,c
  4457  001822  504E               	movf	btemp+11,w,c
  4458  001824  2008               	addwfc	_mem+1,w,c
  4459  001826  6EDA               	movwf	fsr2h,c
  4460                           
  4461                           ;stkvar	_i @ sp[(-2)+0]
  4462  001828  0EFE               	movlw	-2
  4463  00182A  50E3               	movf	plusw1,w,c
  4464  00182C  0F01               	addlw	1
  4465  00182E  6EDF               	movwf	indf2,c
  4466                           
  4467                           ;tasks.c: 171:     }
  4468                           ;stkvar	_i @ sp[(-2)+0]
  4469  001830  0EFE               	movlw	-2
  4470  001832  50E3               	movf	plusw1,w,c
  4471  001834  0F01               	addlw	1
  4472  001836  6E43               	movwf	btemp,c
  4473  001838  0EFE               	movlw	-2
  4474  00183A  C043  FFE3         	movff	btemp,plusw1
  4475  00183E  6A43               	clrf	btemp,c
  4476  001840  0EFF               	movlw	-1
  4477  001842  50E3               	movf	plusw1,w,c
  4478  001844  2043               	addwfc	btemp,w,c
  4479  001846  6E43               	movwf	btemp,c
  4480  001848  0EFF               	movlw	-1
  4481  00184A  C043  FFE3         	movff	btemp,plusw1
  4482                           
  4483                           ;stkvar	_i @ sp[(-2)+0]
  4484  00184E  0EFF               	movlw	-1
  4485  001850  BEE3               	btfsc	plusw1,7,c
  4486  001852  D7DE               	goto	l2205
  4487  001854  0EFF               	movlw	-1
  4488  001856  50E3               	movf	plusw1,w,c
  4489  001858  E107               	bnz	u120_20
  4490  00185A  0EFE               	movlw	-2
  4491  00185C  CFE3 F043          	movff	plusw1,btemp
  4492  001860  0E04               	movlw	4
  4493  001862  5E43               	subwf	btemp,f,c
  4494  001864  A0D8               	btfss	status,0,c
  4495  001866  D7D4               	goto	l2205
  4496  001868                     u120_20:
  4497                           
  4498                           ;tasks.c: 172:     sem_post(&teste_2);
  4499  001868  0EB8               	movlw	low _teste_2
  4500  00186A  6EE6               	movwf	postinc1,c
  4501  00186C  0E00               	movlw	high _teste_2
  4502  00186E  6EE6               	movwf	postinc1,c
  4503  001870  ECC4  F008         	call	_sem_post	;wreg free
  4504  001874  D7C3               	goto	l382
  4505  001876                     __end_of_task_bozo:
  4506                           	opt callstack 0
  4507                           
  4508 ;; *************** function _task_xuxa *****************
  4509 ;; Defined at:
  4510 ;;		line 176 in file "tasks.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  i               2  [STACK] int 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1  [STACK] void 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4524 ;;      Params:         0       0       0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    8
  4531 ;; This function calls:
  4532 ;;		_lunos_delayTask
  4533 ;;		_sem_post
  4534 ;;		_sem_wait
  4535 ;; This function is called by:
  4536 ;;		Interrupt level 1
  4537 ;; This function uses a reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text30
  4541  001434                     __ptext30:
  4542                           	opt callstack 0
  4543  001434                     _task_xuxa:
  4544                           	opt callstack 0
  4545                           
  4546                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4547  001434  52E6               	movf	postinc1,f,c
  4548  001436  52E6               	movf	postinc1,f,c
  4549  001438                     l390:
  4550                           
  4551                           ;tasks.c: 179:     sem_wait(&teste_2);
  4552  001438  0EB8               	movlw	low _teste_2
  4553  00143A  6EE6               	movwf	postinc1,c
  4554  00143C  0E00               	movlw	high _teste_2
  4555  00143E  6EE6               	movwf	postinc1,c
  4556  001440  EC3F  F009         	call	_sem_wait	;wreg free
  4557                           
  4558                           ;tasks.c: 180:     for (i = 0; i < 4; i++) {
  4559                           ;stkvar	_i @ sp[(-2)+0]
  4560  001444  0EFE               	movlw	-2
  4561  001446  6AE3               	clrf	plusw1,c
  4562  001448  0EFF               	movlw	-1
  4563  00144A  6AE3               	clrf	plusw1,c
  4564  00144C                     l2221:
  4565                           
  4566                           ;tasks.c: 181:       if (mem[i] % 2 == 0)
  4567                           ;stkvar	_i @ sp[(-2)+0]
  4568  00144C  0EFE               	movlw	-2
  4569  00144E  CFE3 F04D          	movff	plusw1,btemp+10
  4570  001452  0EFF               	movlw	-1
  4571  001454  CFE3 F04E          	movff	plusw1,btemp+11
  4572  001458  504D               	movf	btemp+10,w,c
  4573  00145A  2407               	addwf	_mem,w,c
  4574  00145C  6ED9               	movwf	fsr2l,c
  4575  00145E  504E               	movf	btemp+11,w,c
  4576  001460  2008               	addwfc	_mem+1,w,c
  4577  001462  6EDA               	movwf	fsr2h,c
  4578  001464  B0DF               	btfsc	indf2,0,c
  4579  001466  D00E               	goto	l2225
  4580                           
  4581                           ;tasks.c: 182:         PORTBbits.RB3 = ~PORTBbits.RB3;
  4582  001468  A681               	btfss	3969,3,c	;volatile
  4583  00146A  D002               	goto	u122_20
  4584  00146C  0E01               	movlw	1
  4585  00146E  D001               	goto	u122_26
  4586  001470                     u122_20:
  4587  001470  0E00               	movlw	0
  4588  001472                     u122_26:
  4589  001472  0AFF               	xorlw	255
  4590  001474  6E4E               	movwf	btemp+11,c
  4591  001476  464E               	rlncf	btemp+11,f,c
  4592  001478  464E               	rlncf	btemp+11,f,c
  4593  00147A  464E               	rlncf	btemp+11,f,c
  4594  00147C  5081               	movf	3969,w,c	;volatile
  4595  00147E  184E               	xorwf	btemp+11,w,c
  4596  001480  0BF7               	andlw	-9
  4597  001482  D00C               	goto	L6
  4598  001484                     l2225:
  4599                           
  4600                           ;tasks.c: 184:         PORTBbits.RB5 = ~PORTBbits.RB5;
  4601  001484  AA81               	btfss	3969,5,c	;volatile
  4602  001486  D002               	goto	u123_20
  4603  001488  0E01               	movlw	1
  4604  00148A  D001               	goto	u123_26
  4605  00148C                     u123_20:
  4606  00148C  0E00               	movlw	0
  4607  00148E                     u123_26:
  4608  00148E  0AFF               	xorlw	255
  4609  001490  6E4E               	movwf	btemp+11,c
  4610  001492  3A4E               	swapf	btemp+11,f,c
  4611  001494  464E               	rlncf	btemp+11,f,c
  4612  001496  5081               	movf	3969,w,c	;volatile
  4613  001498  184E               	xorwf	btemp+11,w,c
  4614  00149A  0BDF               	andlw	-33
  4615  00149C                     L6:
  4616  00149C  184E               	xorwf	btemp+11,w,c
  4617  00149E  6E81               	movwf	3969,c	;volatile
  4618                           
  4619                           ;tasks.c: 185:       lunos_delayTask(1000);
  4620  0014A0  0EE8               	movlw	232
  4621  0014A2  6EE6               	movwf	postinc1,c
  4622  0014A4  0E03               	movlw	3
  4623  0014A6  6EE6               	movwf	postinc1,c
  4624  0014A8  ECE3  F00C         	call	_lunos_delayTask	;wreg free
  4625                           
  4626                           ;tasks.c: 186:     }
  4627                           ;stkvar	_i @ sp[(-2)+0]
  4628  0014AC  0EFE               	movlw	-2
  4629  0014AE  50E3               	movf	plusw1,w,c
  4630  0014B0  0F01               	addlw	1
  4631  0014B2  6E43               	movwf	btemp,c
  4632  0014B4  0EFE               	movlw	-2
  4633  0014B6  C043  FFE3         	movff	btemp,plusw1
  4634  0014BA  6A43               	clrf	btemp,c
  4635  0014BC  0EFF               	movlw	-1
  4636  0014BE  50E3               	movf	plusw1,w,c
  4637  0014C0  2043               	addwfc	btemp,w,c
  4638  0014C2  6E43               	movwf	btemp,c
  4639  0014C4  0EFF               	movlw	-1
  4640  0014C6  C043  FFE3         	movff	btemp,plusw1
  4641                           
  4642                           ;stkvar	_i @ sp[(-2)+0]
  4643  0014CA  0EFF               	movlw	-1
  4644  0014CC  BEE3               	btfsc	plusw1,7,c
  4645  0014CE  D7BE               	goto	l2221
  4646  0014D0  0EFF               	movlw	-1
  4647  0014D2  50E3               	movf	plusw1,w,c
  4648  0014D4  E107               	bnz	u124_20
  4649  0014D6  0EFE               	movlw	-2
  4650  0014D8  CFE3 F043          	movff	plusw1,btemp
  4651  0014DC  0E04               	movlw	4
  4652  0014DE  5E43               	subwf	btemp,f,c
  4653  0014E0  A0D8               	btfss	status,0,c
  4654  0014E2  D7B4               	goto	l2221
  4655  0014E4                     u124_20:
  4656                           
  4657                           ;tasks.c: 187:     sem_post(&teste_1);
  4658  0014E4  0EC6               	movlw	low _teste_1
  4659  0014E6  6EE6               	movwf	postinc1,c
  4660  0014E8  0E00               	movlw	high _teste_1
  4661  0014EA  6EE6               	movwf	postinc1,c
  4662  0014EC  ECC4  F008         	call	_sem_post	;wreg free
  4663  0014F0  D7A3               	goto	l390
  4664  0014F2                     __end_of_task_xuxa:
  4665                           	opt callstack 0
  4666                           
  4667 ;; *************** function _ISR_timer0 *****************
  4668 ;; Defined at:
  4669 ;;		line 56 in file "int0_test.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4683 ;;      Params:         0       0       0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0
  4685 ;;      Temps:         16       0       0       0       0       0       0
  4686 ;;      Totals:        16       0       0       0       0       0       0
  4687 ;;Total ram usage:       16 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    2
  4690 ;; This function calls:
  4691 ;;		___wmul
  4692 ;;		_delay_decrement
  4693 ;;		_round_robin
  4694 ;; This function is called by:
  4695 ;;		Interrupt level 2
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	intcode
  4700  000008                     __pintcode:
  4701                           	opt callstack 0
  4702  000008                     _ISR_timer0:
  4703                           	opt callstack 17
  4704                           
  4705                           ;incstack = 0
  4706  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  4707                           
  4708                           	psect	intcode_body
  4709  000014                     __pintcode_body:
  4710                           	opt callstack 17
  4711  000014                     int_func:
  4712                           	opt callstack 17
  4713  000014  0006               	pop		; remove dummy address from shadow register refresh
  4714  000016  CFE1 F067          	movff	fsr1l,??_ISR_timer0+4
  4715  00001A  CFE2 F068          	movff	fsr1h,??_ISR_timer0+5
  4716  00001E  CFD9 F069          	movff	fsr2l,??_ISR_timer0+6
  4717  000022  CFDA F06A          	movff	fsr2h,??_ISR_timer0+7
  4718  000026  CFF3 F06B          	movff	prodl,??_ISR_timer0+8
  4719  00002A  CFF4 F06C          	movff	prodh,??_ISR_timer0+9
  4720  00002E  C043  F06D         	movff	btemp,??_ISR_timer0+10
  4721  000032  C044  F06E         	movff	btemp+1,??_ISR_timer0+11
  4722  000036  C04B  F06F         	movff	btemp+8,??_ISR_timer0+12
  4723  00003A  C04C  F070         	movff	btemp+9,??_ISR_timer0+13
  4724  00003E  C04D  F071         	movff	btemp+10,??_ISR_timer0+14
  4725  000042  C04E  F072         	movff	btemp+11,??_ISR_timer0+15
  4726  000046  EE15  F04E         	lfsr	1,___inthi_sp
  4727                           
  4728                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  4729  00004A  9EF2               	bcf	4082,7,c	;volatile
  4730                           
  4731                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  4732  00004C  A4F2               	btfss	4082,2,c	;volatile
  4733  00004E  D224               	goto	i2u94_40
  4734                           
  4735                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  4736  000050  94F2               	bcf	4082,2,c	;volatile
  4737                           
  4738                           ;int0_test.c: 61:     TMR0L = 252;
  4739  000052  0EFC               	movlw	252
  4740  000054  6ED6               	movwf	4054,c	;volatile
  4741                           
  4742                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  4743  000056  A083               	btfss	3971,0,c	;volatile
  4744  000058  D002               	goto	i2u90_40
  4745  00005A  0E01               	movlw	1
  4746  00005C  D001               	goto	i2u90_46
  4747  00005E                     i2u90_40:
  4748  00005E  0E00               	movlw	0
  4749  000060                     i2u90_46:
  4750  000060  0AFF               	xorlw	255
  4751  000062  6E63               	movwf	??_ISR_timer0& (0+255),c
  4752  000064  5083               	movf	3971,w,c	;volatile
  4753  000066  1863               	xorwf	??_ISR_timer0,w,c
  4754  000068  0BFE               	andlw	-2
  4755  00006A  1863               	xorwf	??_ISR_timer0,w,c
  4756  00006C  6E83               	movwf	3971,c	;volatile
  4757                           
  4758                           ;int0_test.c: 63:     delay_decrement();
  4759  00006E  EC30  F006         	call	_delay_decrement	;wreg free
  4760                           
  4761                           ;int0_test.c: 65:     quantum--;
  4762  000072  0673               	decf	_quantum,f,c
  4763  000074  A0D8               	btfss	status,0,c
  4764  000076  0674               	decf	_quantum+1,f,c
  4765                           
  4766                           ;int0_test.c: 66:     if (quantum <= 0) {
  4767  000078  BE74               	btfsc	_quantum+1,7,c
  4768  00007A  D005               	goto	i2u91_40
  4769  00007C  5074               	movf	_quantum+1,w,c
  4770  00007E  E102               	bnz	i2u91_41
  4771  000080  0473               	decf	_quantum,w,c
  4772  000082  B0D8               	btfsc	status,0,c
  4773  000084                     i2u91_41:
  4774  000084  D209               	goto	i2u94_40
  4775  000086                     i2u91_40:
  4776                           
  4777                           ;int0_test.c: 67:       quantum = 10;
  4778  000086  0E00               	movlw	0
  4779  000088  6E74               	movwf	_quantum+1,c
  4780  00008A  0E0A               	movlw	10
  4781  00008C  6E73               	movwf	_quantum,c
  4782                           
  4783                           ;int0_test.c: 68:       { who = ready_queue.task_running; ready_queue.tasks[who].task_st
      +                          ate = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = ST
      +                          ATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks
      +                          [who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stac
      +                          k[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL
      +                          ; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size - 1;};
  4784  00008E  C2F2  F00B         	movff	_ready_queue+542,_who
  4785  000092  C2F3  F00C         	movff	_ready_queue+543,_who+1
  4786  000096  0E6C               	movlw	108
  4787  000098  6EE6               	movwf	postinc1,c
  4788  00009A  0E00               	movlw	0
  4789  00009C  6EE6               	movwf	postinc1,c
  4790  00009E  C00B  FFE6         	movff	_who,postinc1
  4791  0000A2  C00C  FFE6         	movff	_who+1,postinc1
  4792  0000A6  EC2A  F00B         	call	___wmul	;wreg free
  4793  0000AA  0EDC               	movlw	low (_ready_queue+8)
  4794  0000AC  2443               	addwf	btemp,w,c
  4795  0000AE  6ED9               	movwf	fsr2l,c
  4796  0000B0  0E00               	movlw	high (_ready_queue+8)
  4797  0000B2  2044               	addwfc	btemp+1,w,c
  4798  0000B4  6EDA               	movwf	fsr2h,c
  4799  0000B6  0E00               	movlw	0
  4800  0000B8  6EDF               	movwf	indf2,c
  4801  0000BA  0E6C               	movlw	108
  4802  0000BC  6EE6               	movwf	postinc1,c
  4803  0000BE  0E00               	movlw	0
  4804  0000C0  6EE6               	movwf	postinc1,c
  4805  0000C2  C00B  FFE6         	movff	_who,postinc1
  4806  0000C6  C00C  FFE6         	movff	_who+1,postinc1
  4807  0000CA  EC2A  F00B         	call	___wmul	;wreg free
  4808  0000CE  0ED9               	movlw	low (_ready_queue+5)
  4809  0000D0  2443               	addwf	btemp,w,c
  4810  0000D2  6ED9               	movwf	fsr2l,c
  4811  0000D4  0E00               	movlw	high (_ready_queue+5)
  4812  0000D6  2044               	addwfc	btemp+1,w,c
  4813  0000D8  6EDA               	movwf	fsr2h,c
  4814  0000DA  CFE8 FFDF          	movff	wreg,indf2	;volatile
  4815  0000DE  0E6C               	movlw	108
  4816  0000E0  6EE6               	movwf	postinc1,c
  4817  0000E2  0E00               	movlw	0
  4818  0000E4  6EE6               	movwf	postinc1,c
  4819  0000E6  C00B  FFE6         	movff	_who,postinc1
  4820  0000EA  C00C  FFE6         	movff	_who+1,postinc1
  4821  0000EE  EC2A  F00B         	call	___wmul	;wreg free
  4822  0000F2  0EDA               	movlw	low (_ready_queue+6)
  4823  0000F4  2443               	addwf	btemp,w,c
  4824  0000F6  6ED9               	movwf	fsr2l,c
  4825  0000F8  0E00               	movlw	high (_ready_queue+6)
  4826  0000FA  2044               	addwfc	btemp+1,w,c
  4827  0000FC  6EDA               	movwf	fsr2h,c
  4828  0000FE  CFD8 FFDF          	movff	status,indf2	;volatile
  4829  000102  0E6C               	movlw	108
  4830  000104  6EE6               	movwf	postinc1,c
  4831  000106  0E00               	movlw	0
  4832  000108  6EE6               	movwf	postinc1,c
  4833  00010A  C00B  FFE6         	movff	_who,postinc1
  4834  00010E  C00C  FFE6         	movff	_who+1,postinc1
  4835  000112  EC2A  F00B         	call	___wmul	;wreg free
  4836  000116  0EDB               	movlw	low (_ready_queue+7)
  4837  000118  2443               	addwf	btemp,w,c
  4838  00011A  6ED9               	movwf	fsr2l,c
  4839  00011C  0E00               	movlw	high (_ready_queue+7)
  4840  00011E  2044               	addwfc	btemp+1,w,c
  4841  000120  6EDA               	movwf	fsr2h,c
  4842  000122  CFE0 FFDF          	movff	bsr,indf2	;volatile
  4843  000126  6A09               	clrf	_size,c
  4844  000128  6A0A               	clrf	_size+1,c
  4845  00012A  D07B               	goto	i2l2045
  4846  00012C                     i2l2041:
  4847  00012C  0E6C               	movlw	108
  4848  00012E  6EE6               	movwf	postinc1,c
  4849  000130  0E00               	movlw	0
  4850  000132  6EE6               	movwf	postinc1,c
  4851  000134  C00B  FFE6         	movff	_who,postinc1
  4852  000138  C00C  FFE6         	movff	_who+1,postinc1
  4853  00013C  EC2A  F00B         	call	___wmul	;wreg free
  4854  000140  0ED4               	movlw	low _ready_queue
  4855  000142  6E63               	movwf	??_ISR_timer0& (0+255),c
  4856  000144  0E00               	movlw	high _ready_queue
  4857  000146  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4858  000148  0E09               	movlw	9
  4859  00014A  2663               	addwf	??_ISR_timer0,f,c
  4860  00014C  0E00               	movlw	0
  4861  00014E  2264               	addwfc	??_ISR_timer0+1,f,c
  4862  000150  5043               	movf	btemp,w,c
  4863  000152  2663               	addwf	??_ISR_timer0,f,c
  4864  000154  5044               	movf	btemp+1,w,c
  4865  000156  2264               	addwfc	??_ISR_timer0+1,f,c
  4866  000158  0E03               	movlw	3
  4867  00015A  6EE6               	movwf	postinc1,c
  4868  00015C  0E00               	movlw	0
  4869  00015E  6EE6               	movwf	postinc1,c
  4870  000160  C009  FFE6         	movff	_size,postinc1
  4871  000164  C00A  FFE6         	movff	_size+1,postinc1
  4872  000168  EC2A  F00B         	call	___wmul	;wreg free
  4873  00016C  5043               	movf	btemp,w,c
  4874  00016E  2463               	addwf	??_ISR_timer0,w,c
  4875  000170  6ED9               	movwf	fsr2l,c
  4876  000172  5044               	movf	btemp+1,w,c
  4877  000174  2064               	addwfc	??_ISR_timer0+1,w,c
  4878  000176  6EDA               	movwf	fsr2h,c
  4879  000178  CFFF FFDF          	movff	tosu,indf2	;volatile
  4880  00017C  0E6C               	movlw	108
  4881  00017E  6EE6               	movwf	postinc1,c
  4882  000180  0E00               	movlw	0
  4883  000182  6EE6               	movwf	postinc1,c
  4884  000184  C00B  FFE6         	movff	_who,postinc1
  4885  000188  C00C  FFE6         	movff	_who+1,postinc1
  4886  00018C  EC2A  F00B         	call	___wmul	;wreg free
  4887  000190  0ED4               	movlw	low _ready_queue
  4888  000192  6E63               	movwf	??_ISR_timer0& (0+255),c
  4889  000194  0E00               	movlw	high _ready_queue
  4890  000196  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4891  000198  0E0B               	movlw	11
  4892  00019A  2663               	addwf	??_ISR_timer0,f,c
  4893  00019C  0E00               	movlw	0
  4894  00019E  2264               	addwfc	??_ISR_timer0+1,f,c
  4895  0001A0  5043               	movf	btemp,w,c
  4896  0001A2  2663               	addwf	??_ISR_timer0,f,c
  4897  0001A4  5044               	movf	btemp+1,w,c
  4898  0001A6  2264               	addwfc	??_ISR_timer0+1,f,c
  4899  0001A8  0E03               	movlw	3
  4900  0001AA  6EE6               	movwf	postinc1,c
  4901  0001AC  0E00               	movlw	0
  4902  0001AE  6EE6               	movwf	postinc1,c
  4903  0001B0  C009  FFE6         	movff	_size,postinc1
  4904  0001B4  C00A  FFE6         	movff	_size+1,postinc1
  4905  0001B8  EC2A  F00B         	call	___wmul	;wreg free
  4906  0001BC  5043               	movf	btemp,w,c
  4907  0001BE  2463               	addwf	??_ISR_timer0,w,c
  4908  0001C0  6ED9               	movwf	fsr2l,c
  4909  0001C2  5044               	movf	btemp+1,w,c
  4910  0001C4  2064               	addwfc	??_ISR_timer0+1,w,c
  4911  0001C6  6EDA               	movwf	fsr2h,c
  4912  0001C8  CFFE FFDF          	movff	tosh,indf2	;volatile
  4913  0001CC  0E6C               	movlw	108
  4914  0001CE  6EE6               	movwf	postinc1,c
  4915  0001D0  0E00               	movlw	0
  4916  0001D2  6EE6               	movwf	postinc1,c
  4917  0001D4  C00B  FFE6         	movff	_who,postinc1
  4918  0001D8  C00C  FFE6         	movff	_who+1,postinc1
  4919  0001DC  EC2A  F00B         	call	___wmul	;wreg free
  4920  0001E0  0ED4               	movlw	low _ready_queue
  4921  0001E2  6E63               	movwf	??_ISR_timer0& (0+255),c
  4922  0001E4  0E00               	movlw	high _ready_queue
  4923  0001E6  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4924  0001E8  0E0A               	movlw	10
  4925  0001EA  2663               	addwf	??_ISR_timer0,f,c
  4926  0001EC  0E00               	movlw	0
  4927  0001EE  2264               	addwfc	??_ISR_timer0+1,f,c
  4928  0001F0  5043               	movf	btemp,w,c
  4929  0001F2  2663               	addwf	??_ISR_timer0,f,c
  4930  0001F4  5044               	movf	btemp+1,w,c
  4931  0001F6  2264               	addwfc	??_ISR_timer0+1,f,c
  4932  0001F8  0E03               	movlw	3
  4933  0001FA  6EE6               	movwf	postinc1,c
  4934  0001FC  0E00               	movlw	0
  4935  0001FE  6EE6               	movwf	postinc1,c
  4936  000200  C009  FFE6         	movff	_size,postinc1
  4937  000204  C00A  FFE6         	movff	_size+1,postinc1
  4938  000208  EC2A  F00B         	call	___wmul	;wreg free
  4939  00020C  5043               	movf	btemp,w,c
  4940  00020E  2463               	addwf	??_ISR_timer0,w,c
  4941  000210  6ED9               	movwf	fsr2l,c
  4942  000212  5044               	movf	btemp+1,w,c
  4943  000214  2064               	addwfc	??_ISR_timer0+1,w,c
  4944  000216  6EDA               	movwf	fsr2h,c
  4945  000218  CFFD FFDF          	movff	tosl,indf2	;volatile
  4946  00021C  4A09               	infsnz	_size,f,c
  4947  00021E  2A0A               	incf	_size+1,f,c
  4948  000220  0006               	pop		;# 
  4949  000222                     i2l2045:
  4950  000222  50FC               	movf	stkptr,w,c	;volatile
  4951  000224  A4D8               	btfss	status,2,c
  4952  000226  D782               	goto	i2l2041
  4953  000228  0EFF               	movlw	255
  4954  00022A  6E63               	movwf	??_ISR_timer0& (0+255),c
  4955  00022C  0EFF               	movlw	255
  4956  00022E  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  4957  000230  C009  F065         	movff	_size,??_ISR_timer0+2
  4958  000234  C00A  F066         	movff	_size+1,??_ISR_timer0+3
  4959  000238  5063               	movf	??_ISR_timer0,w,c
  4960  00023A  2665               	addwf	??_ISR_timer0+2,f,c
  4961  00023C  5064               	movf	??_ISR_timer0+1,w,c
  4962  00023E  2266               	addwfc	??_ISR_timer0+3,f,c
  4963  000240  0E6C               	movlw	108
  4964  000242  6EE6               	movwf	postinc1,c
  4965  000244  0E00               	movlw	0
  4966  000246  6EE6               	movwf	postinc1,c
  4967  000248  C00B  FFE6         	movff	_who,postinc1
  4968  00024C  C00C  FFE6         	movff	_who+1,postinc1
  4969  000250  EC2A  F00B         	call	___wmul	;wreg free
  4970  000254  0E3A               	movlw	low (_ready_queue+102)
  4971  000256  2443               	addwf	btemp,w,c
  4972  000258  6ED9               	movwf	fsr2l,c
  4973  00025A  0E01               	movlw	high (_ready_queue+102)
  4974  00025C  2044               	addwfc	btemp+1,w,c
  4975  00025E  6EDA               	movwf	fsr2h,c
  4976  000260  C065  FFDE         	movff	??_ISR_timer0+2,postinc2
  4977  000264  C066  FFDD         	movff	??_ISR_timer0+3,postdec2
  4978                           
  4979                           ;int0_test.c: 69:       ready_queue.task_running = round_robin();
  4980  000268  EC75  F00B         	call	_round_robin	;wreg free
  4981  00026C  C043  F2F2         	movff	btemp,_ready_queue+542
  4982  000270  C044  F2F3         	movff	btemp+1,_ready_queue+543
  4983                           
  4984                           ;int0_test.c: 70:       { who = ready_queue.task_running; STKPTR = 0; if (ready_queue.ta
      +                          sks[who].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task
      +                          _f; } else { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].
      +                          W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg;
      +                           size = ready_queue.tasks[who].task_stack.stack_level; while(size) { __asm("PUSH"); TOSL
      +                           = ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg; TOSH = ready_queue.tasks[wh
      +                          o].task_stack.h_stack[size].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[s
      +                          ize].TOSU_reg; size--; } }};
  4985  000274  C2F2  F00B         	movff	_ready_queue+542,_who
  4986  000278  C2F3  F00C         	movff	_ready_queue+543,_who+1
  4987  00027C  6AFC               	clrf	stkptr,c	;volatile
  4988  00027E  0E6C               	movlw	108
  4989  000280  6EE6               	movwf	postinc1,c
  4990  000282  0E00               	movlw	0
  4991  000284  6EE6               	movwf	postinc1,c
  4992  000286  C00B  FFE6         	movff	_who,postinc1
  4993  00028A  C00C  FFE6         	movff	_who+1,postinc1
  4994  00028E  EC2A  F00B         	call	___wmul	;wreg free
  4995  000292  0E3A               	movlw	low (_ready_queue+102)
  4996  000294  2443               	addwf	btemp,w,c
  4997  000296  6ED9               	movwf	fsr2l,c
  4998  000298  0E01               	movlw	high (_ready_queue+102)
  4999  00029A  2044               	addwfc	btemp+1,w,c
  5000  00029C  6EDA               	movwf	fsr2h,c
  5001  00029E  50DE               	movf	postinc2,w,c
  5002  0002A0  10DE               	iorwf	postinc2,w,c
  5003  0002A2  A4D8               	btfss	status,2,c
  5004  0002A4  D01B               	goto	i2l2061
  5005  0002A6  0005               	push		;# 
  5006  0002A8  0E6C               	movlw	108
  5007  0002AA  6EE6               	movwf	postinc1,c
  5008  0002AC  0E00               	movlw	0
  5009  0002AE  6EE6               	movwf	postinc1,c
  5010  0002B0  C00B  FFE6         	movff	_who,postinc1
  5011  0002B4  C00C  FFE6         	movff	_who+1,postinc1
  5012  0002B8  EC2A  F00B         	call	___wmul	;wreg free
  5013  0002BC  0E3C               	movlw	low (_ready_queue+104)
  5014  0002BE  2443               	addwf	btemp,w,c
  5015  0002C0  6ED9               	movwf	fsr2l,c
  5016  0002C2  0E01               	movlw	high (_ready_queue+104)
  5017  0002C4  2044               	addwfc	btemp+1,w,c
  5018  0002C6  6EDA               	movwf	fsr2h,c
  5019  0002C8  CFDE F063          	movff	postinc2,??_ISR_timer0
  5020  0002CC  CFDD F064          	movff	postdec2,??_ISR_timer0+1
  5021  0002D0  C063  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  5022  0002D4  C064  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  5023  0002D8  6AFF               	clrf	tosu,c	;volatile
  5024  0002DA  D0DE               	goto	i2u94_40
  5025  0002DC                     i2l2061:
  5026  0002DC  0E6C               	movlw	108
  5027  0002DE  6EE6               	movwf	postinc1,c
  5028  0002E0  0E00               	movlw	0
  5029  0002E2  6EE6               	movwf	postinc1,c
  5030  0002E4  C00B  FFE6         	movff	_who,postinc1
  5031  0002E8  C00C  FFE6         	movff	_who+1,postinc1
  5032  0002EC  EC2A  F00B         	call	___wmul	;wreg free
  5033  0002F0  0EDC               	movlw	low (_ready_queue+8)
  5034  0002F2  2443               	addwf	btemp,w,c
  5035  0002F4  6ED9               	movwf	fsr2l,c
  5036  0002F6  0E00               	movlw	high (_ready_queue+8)
  5037  0002F8  2044               	addwfc	btemp+1,w,c
  5038  0002FA  6EDA               	movwf	fsr2h,c
  5039  0002FC  0E01               	movlw	1
  5040  0002FE  6EDF               	movwf	indf2,c
  5041  000300  0E6C               	movlw	108
  5042  000302  6EE6               	movwf	postinc1,c
  5043  000304  0E00               	movlw	0
  5044  000306  6EE6               	movwf	postinc1,c
  5045  000308  C00B  FFE6         	movff	_who,postinc1
  5046  00030C  C00C  FFE6         	movff	_who+1,postinc1
  5047  000310  EC2A  F00B         	call	___wmul	;wreg free
  5048  000314  0ED9               	movlw	low (_ready_queue+5)
  5049  000316  2443               	addwf	btemp,w,c
  5050  000318  6ED9               	movwf	fsr2l,c
  5051  00031A  0E00               	movlw	high (_ready_queue+5)
  5052  00031C  2044               	addwfc	btemp+1,w,c
  5053  00031E  6EDA               	movwf	fsr2h,c
  5054  000320  50DF               	movf	indf2,w,c
  5055  000322  6E63               	movwf	??_ISR_timer0& (0+255),c
  5056  000324  5063               	movf	??_ISR_timer0,w,c
  5057  000326  0E6C               	movlw	108
  5058  000328  6EE6               	movwf	postinc1,c
  5059  00032A  0E00               	movlw	0
  5060  00032C  6EE6               	movwf	postinc1,c
  5061  00032E  C00B  FFE6         	movff	_who,postinc1
  5062  000332  C00C  FFE6         	movff	_who+1,postinc1
  5063  000336  EC2A  F00B         	call	___wmul	;wreg free
  5064  00033A  0EDA               	movlw	low (_ready_queue+6)
  5065  00033C  2443               	addwf	btemp,w,c
  5066  00033E  6ED9               	movwf	fsr2l,c
  5067  000340  0E00               	movlw	high (_ready_queue+6)
  5068  000342  2044               	addwfc	btemp+1,w,c
  5069  000344  6EDA               	movwf	fsr2h,c
  5070  000346  50DF               	movf	indf2,w,c
  5071  000348  6ED8               	movwf	status,c	;volatile
  5072  00034A  0E6C               	movlw	108
  5073  00034C  6EE6               	movwf	postinc1,c
  5074  00034E  0E00               	movlw	0
  5075  000350  6EE6               	movwf	postinc1,c
  5076  000352  C00B  FFE6         	movff	_who,postinc1
  5077  000356  C00C  FFE6         	movff	_who+1,postinc1
  5078  00035A  EC2A  F00B         	call	___wmul	;wreg free
  5079  00035E  0EDB               	movlw	low (_ready_queue+7)
  5080  000360  2443               	addwf	btemp,w,c
  5081  000362  6ED9               	movwf	fsr2l,c
  5082  000364  0E00               	movlw	high (_ready_queue+7)
  5083  000366  2044               	addwfc	btemp+1,w,c
  5084  000368  6EDA               	movwf	fsr2h,c
  5085  00036A  50DF               	movf	indf2,w,c
  5086  00036C  6EE0               	movwf	bsr,c	;volatile
  5087  00036E  0E6C               	movlw	108
  5088  000370  6EE6               	movwf	postinc1,c
  5089  000372  0E00               	movlw	0
  5090  000374  6EE6               	movwf	postinc1,c
  5091  000376  C00B  FFE6         	movff	_who,postinc1
  5092  00037A  C00C  FFE6         	movff	_who+1,postinc1
  5093  00037E  EC2A  F00B         	call	___wmul	;wreg free
  5094  000382  0E3A               	movlw	low (_ready_queue+102)
  5095  000384  2443               	addwf	btemp,w,c
  5096  000386  6ED9               	movwf	fsr2l,c
  5097  000388  0E01               	movlw	high (_ready_queue+102)
  5098  00038A  2044               	addwfc	btemp+1,w,c
  5099  00038C  6EDA               	movwf	fsr2h,c
  5100  00038E  CFDE F009          	movff	postinc2,_size
  5101  000392  CFDD F00A          	movff	postdec2,_size+1
  5102  000396  D07C               	goto	i2l2067
  5103  000398                     i2l59:
  5104  000398  0005               	push		;# 
  5105  00039A  0E6C               	movlw	108
  5106  00039C  6EE6               	movwf	postinc1,c
  5107  00039E  0E00               	movlw	0
  5108  0003A0  6EE6               	movwf	postinc1,c
  5109  0003A2  C00B  FFE6         	movff	_who,postinc1
  5110  0003A6  C00C  FFE6         	movff	_who+1,postinc1
  5111  0003AA  EC2A  F00B         	call	___wmul	;wreg free
  5112  0003AE  0ED4               	movlw	low _ready_queue
  5113  0003B0  6E63               	movwf	??_ISR_timer0& (0+255),c
  5114  0003B2  0E00               	movlw	high _ready_queue
  5115  0003B4  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5116  0003B6  0E0A               	movlw	10
  5117  0003B8  2663               	addwf	??_ISR_timer0,f,c
  5118  0003BA  0E00               	movlw	0
  5119  0003BC  2264               	addwfc	??_ISR_timer0+1,f,c
  5120  0003BE  5043               	movf	btemp,w,c
  5121  0003C0  2663               	addwf	??_ISR_timer0,f,c
  5122  0003C2  5044               	movf	btemp+1,w,c
  5123  0003C4  2264               	addwfc	??_ISR_timer0+1,f,c
  5124  0003C6  0E03               	movlw	3
  5125  0003C8  6EE6               	movwf	postinc1,c
  5126  0003CA  0E00               	movlw	0
  5127  0003CC  6EE6               	movwf	postinc1,c
  5128  0003CE  C009  FFE6         	movff	_size,postinc1
  5129  0003D2  C00A  FFE6         	movff	_size+1,postinc1
  5130  0003D6  EC2A  F00B         	call	___wmul	;wreg free
  5131  0003DA  5043               	movf	btemp,w,c
  5132  0003DC  2463               	addwf	??_ISR_timer0,w,c
  5133  0003DE  6ED9               	movwf	fsr2l,c
  5134  0003E0  5044               	movf	btemp+1,w,c
  5135  0003E2  2064               	addwfc	??_ISR_timer0+1,w,c
  5136  0003E4  6EDA               	movwf	fsr2h,c
  5137  0003E6  50DF               	movf	indf2,w,c
  5138  0003E8  6EFD               	movwf	tosl,c	;volatile
  5139  0003EA  0E6C               	movlw	108
  5140  0003EC  6EE6               	movwf	postinc1,c
  5141  0003EE  0E00               	movlw	0
  5142  0003F0  6EE6               	movwf	postinc1,c
  5143  0003F2  C00B  FFE6         	movff	_who,postinc1
  5144  0003F6  C00C  FFE6         	movff	_who+1,postinc1
  5145  0003FA  EC2A  F00B         	call	___wmul	;wreg free
  5146  0003FE  0ED4               	movlw	low _ready_queue
  5147  000400  6E63               	movwf	??_ISR_timer0& (0+255),c
  5148  000402  0E00               	movlw	high _ready_queue
  5149  000404  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5150  000406  0E0B               	movlw	11
  5151  000408  2663               	addwf	??_ISR_timer0,f,c
  5152  00040A  0E00               	movlw	0
  5153  00040C  2264               	addwfc	??_ISR_timer0+1,f,c
  5154  00040E  5043               	movf	btemp,w,c
  5155  000410  2663               	addwf	??_ISR_timer0,f,c
  5156  000412  5044               	movf	btemp+1,w,c
  5157  000414  2264               	addwfc	??_ISR_timer0+1,f,c
  5158  000416  0E03               	movlw	3
  5159  000418  6EE6               	movwf	postinc1,c
  5160  00041A  0E00               	movlw	0
  5161  00041C  6EE6               	movwf	postinc1,c
  5162  00041E  C009  FFE6         	movff	_size,postinc1
  5163  000422  C00A  FFE6         	movff	_size+1,postinc1
  5164  000426  EC2A  F00B         	call	___wmul	;wreg free
  5165  00042A  5043               	movf	btemp,w,c
  5166  00042C  2463               	addwf	??_ISR_timer0,w,c
  5167  00042E  6ED9               	movwf	fsr2l,c
  5168  000430  5044               	movf	btemp+1,w,c
  5169  000432  2064               	addwfc	??_ISR_timer0+1,w,c
  5170  000434  6EDA               	movwf	fsr2h,c
  5171  000436  50DF               	movf	indf2,w,c
  5172  000438  6EFE               	movwf	tosh,c	;volatile
  5173  00043A  0E6C               	movlw	108
  5174  00043C  6EE6               	movwf	postinc1,c
  5175  00043E  0E00               	movlw	0
  5176  000440  6EE6               	movwf	postinc1,c
  5177  000442  C00B  FFE6         	movff	_who,postinc1
  5178  000446  C00C  FFE6         	movff	_who+1,postinc1
  5179  00044A  EC2A  F00B         	call	___wmul	;wreg free
  5180  00044E  0ED4               	movlw	low _ready_queue
  5181  000450  6E63               	movwf	??_ISR_timer0& (0+255),c
  5182  000452  0E00               	movlw	high _ready_queue
  5183  000454  6E64               	movwf	(??_ISR_timer0+1)& (0+255),c
  5184  000456  0E09               	movlw	9
  5185  000458  2663               	addwf	??_ISR_timer0,f,c
  5186  00045A  0E00               	movlw	0
  5187  00045C  2264               	addwfc	??_ISR_timer0+1,f,c
  5188  00045E  5043               	movf	btemp,w,c
  5189  000460  2663               	addwf	??_ISR_timer0,f,c
  5190  000462  5044               	movf	btemp+1,w,c
  5191  000464  2264               	addwfc	??_ISR_timer0+1,f,c
  5192  000466  0E03               	movlw	3
  5193  000468  6EE6               	movwf	postinc1,c
  5194  00046A  0E00               	movlw	0
  5195  00046C  6EE6               	movwf	postinc1,c
  5196  00046E  C009  FFE6         	movff	_size,postinc1
  5197  000472  C00A  FFE6         	movff	_size+1,postinc1
  5198  000476  EC2A  F00B         	call	___wmul	;wreg free
  5199  00047A  5043               	movf	btemp,w,c
  5200  00047C  2463               	addwf	??_ISR_timer0,w,c
  5201  00047E  6ED9               	movwf	fsr2l,c
  5202  000480  5044               	movf	btemp+1,w,c
  5203  000482  2064               	addwfc	??_ISR_timer0+1,w,c
  5204  000484  6EDA               	movwf	fsr2h,c
  5205  000486  50DF               	movf	indf2,w,c
  5206  000488  6EFF               	movwf	tosu,c	;volatile
  5207  00048A  0609               	decf	_size,f,c
  5208  00048C  A0D8               	btfss	status,0,c
  5209  00048E  060A               	decf	_size+1,f,c
  5210  000490                     i2l2067:
  5211  000490  5009               	movf	_size,w,c
  5212  000492  100A               	iorwf	_size+1,w,c
  5213  000494  A4D8               	btfss	status,2,c
  5214  000496  D780               	goto	i2l59
  5215  000498                     i2u94_40:
  5216                           
  5217                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  5218                           
  5219                           ;int0_test.c: 73:   }
  5220  000498  8EF2               	bsf	4082,7,c	;volatile
  5221  00049A  C072  F04E         	movff	??_ISR_timer0+15,btemp+11
  5222  00049E  C071  F04D         	movff	??_ISR_timer0+14,btemp+10
  5223  0004A2  C070  F04C         	movff	??_ISR_timer0+13,btemp+9
  5224  0004A6  C06F  F04B         	movff	??_ISR_timer0+12,btemp+8
  5225  0004AA  C06E  F044         	movff	??_ISR_timer0+11,btemp+1
  5226  0004AE  C06D  F043         	movff	??_ISR_timer0+10,btemp
  5227  0004B2  C06C  FFF4         	movff	??_ISR_timer0+9,prodh
  5228  0004B6  C06B  FFF3         	movff	??_ISR_timer0+8,prodl
  5229  0004BA  C06A  FFDA         	movff	??_ISR_timer0+7,fsr2h
  5230  0004BE  C069  FFD9         	movff	??_ISR_timer0+6,fsr2l
  5231  0004C2  C068  FFE2         	movff	??_ISR_timer0+5,fsr1h
  5232  0004C6  C067  FFE1         	movff	??_ISR_timer0+4,fsr1l
  5233  0004CA  0011               	retfie		f
  5234  0004CC                     __end_of_ISR_timer0:
  5235                           	opt callstack 0
  5236                           
  5237 ;; *************** function _delay_decrement *****************
  5238 ;; Defined at:
  5239 ;;		line 99 in file "kernel.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  i               2  [STACK] int 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1  [STACK] void 
  5246 ;; Registers used:
  5247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5253 ;;      Params:         0       0       0       0       0       0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0
  5256 ;;      Totals:         0       0       0       0       0       0       0
  5257 ;;Total ram usage:        0 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		_ISR_timer0
  5263 ;; This function uses a reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text32
  5267  000C60                     __ptext32:
  5268                           	opt callstack 0
  5269  000C60                     _delay_decrement:
  5270                           	opt callstack 0
  5271                           
  5272                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5273  000C60  52E6               	movf	postinc1,f,c
  5274  000C62  52E6               	movf	postinc1,f,c
  5275                           
  5276                           ;kernel.c: 100:   int i;;kernel.c: 102:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  5277                           ;stkvar	_i @ sp[(-2)+0]
  5278                           
  5279                           ;incstack = 0
  5280  000C64  0EFE               	movlw	-2
  5281  000C66  6AE3               	clrf	plusw1,c
  5282  000C68  0EFF               	movlw	-1
  5283  000C6A  6AE3               	clrf	plusw1,c
  5284  000C6C  D070               	goto	l1909
  5285  000C6E                     l1899:
  5286                           
  5287                           ;kernel.c: 103:     if (ready_queue.tasks[i].task_state == WAITING) {
  5288                           ;stkvar	_i @ sp[(-2)+0]
  5289  000C6E  0EFE               	movlw	-2
  5290  000C70  CFE3 F04D          	movff	plusw1,btemp+10
  5291  000C74  0EFF               	movlw	-1
  5292  000C76  CFE3 F04E          	movff	plusw1,btemp+11
  5293  000C7A  0E6C               	movlw	108
  5294  000C7C  024D               	mulwf	btemp+10,c
  5295  000C7E  CFF3 F04B          	movff	prodl,btemp+8
  5296  000C82  CFF4 F04C          	movff	prodh,btemp+9
  5297  000C86  024E               	mulwf	btemp+11,c
  5298  000C88  50F3               	movf	prodl,w,c
  5299  000C8A  264C               	addwf	btemp+9,f,c
  5300  000C8C  0EDC               	movlw	low (_ready_queue+8)
  5301  000C8E  244B               	addwf	btemp+8,w,c
  5302  000C90  6ED9               	movwf	fsr2l,c
  5303  000C92  0E00               	movlw	high (_ready_queue+8)
  5304  000C94  204C               	addwfc	btemp+9,w,c
  5305  000C96  6EDA               	movwf	fsr2h,c
  5306  000C98  0E02               	movlw	2
  5307  000C9A  18DE               	xorwf	postinc2,w,c
  5308  000C9C  A4D8               	btfss	status,2,c
  5309  000C9E  D048               	goto	l1907
  5310                           
  5311                           ;kernel.c: 104:       ready_queue.tasks[i].task_delay_time--;
  5312                           ;stkvar	_i @ sp[(-2)+0]
  5313  000CA0  0EFE               	movlw	-2
  5314  000CA2  CFE3 F04D          	movff	plusw1,btemp+10
  5315  000CA6  0EFF               	movlw	-1
  5316  000CA8  CFE3 F04E          	movff	plusw1,btemp+11
  5317  000CAC  0E6C               	movlw	108
  5318  000CAE  024D               	mulwf	btemp+10,c
  5319  000CB0  CFF3 F04B          	movff	prodl,btemp+8
  5320  000CB4  CFF4 F04C          	movff	prodh,btemp+9
  5321  000CB8  024E               	mulwf	btemp+11,c
  5322  000CBA  50F3               	movf	prodl,w,c
  5323  000CBC  264C               	addwf	btemp+9,f,c
  5324  000CBE  0E3E               	movlw	low (_ready_queue+106)
  5325  000CC0  244B               	addwf	btemp+8,w,c
  5326  000CC2  6ED9               	movwf	fsr2l,c
  5327  000CC4  0E01               	movlw	high (_ready_queue+106)
  5328  000CC6  204C               	addwfc	btemp+9,w,c
  5329  000CC8  6EDA               	movwf	fsr2h,c
  5330  000CCA  06DE               	decf	postinc2,f,c
  5331  000CCC  0E00               	movlw	0
  5332  000CCE  5ADD               	subwfb	postdec2,f,c
  5333                           
  5334                           ;kernel.c: 105:       if (ready_queue.tasks[i].task_delay_time == 0) {
  5335                           ;stkvar	_i @ sp[(-2)+0]
  5336  000CD0  0EFE               	movlw	-2
  5337  000CD2  CFE3 F04D          	movff	plusw1,btemp+10
  5338  000CD6  0EFF               	movlw	-1
  5339  000CD8  CFE3 F04E          	movff	plusw1,btemp+11
  5340  000CDC  0E6C               	movlw	108
  5341  000CDE  024D               	mulwf	btemp+10,c
  5342  000CE0  CFF3 F04B          	movff	prodl,btemp+8
  5343  000CE4  CFF4 F04C          	movff	prodh,btemp+9
  5344  000CE8  024E               	mulwf	btemp+11,c
  5345  000CEA  50F3               	movf	prodl,w,c
  5346  000CEC  264C               	addwf	btemp+9,f,c
  5347  000CEE  0E3E               	movlw	low (_ready_queue+106)
  5348  000CF0  244B               	addwf	btemp+8,w,c
  5349  000CF2  6ED9               	movwf	fsr2l,c
  5350  000CF4  0E01               	movlw	high (_ready_queue+106)
  5351  000CF6  204C               	addwfc	btemp+9,w,c
  5352  000CF8  6EDA               	movwf	fsr2h,c
  5353  000CFA  50DE               	movf	postinc2,w,c
  5354  000CFC  10DE               	iorwf	postinc2,w,c
  5355  000CFE  A4D8               	btfss	status,2,c
  5356  000D00  D017               	goto	l1907
  5357                           
  5358                           ;kernel.c: 106:         ready_queue.tasks[i].task_state = READY;
  5359                           ;stkvar	_i @ sp[(-2)+0]
  5360  000D02  0EFE               	movlw	-2
  5361  000D04  CFE3 F04D          	movff	plusw1,btemp+10
  5362  000D08  0EFF               	movlw	-1
  5363  000D0A  CFE3 F04E          	movff	plusw1,btemp+11
  5364  000D0E  0E6C               	movlw	108
  5365  000D10  024D               	mulwf	btemp+10,c
  5366  000D12  CFF3 F04B          	movff	prodl,btemp+8
  5367  000D16  CFF4 F04C          	movff	prodh,btemp+9
  5368  000D1A  024E               	mulwf	btemp+11,c
  5369  000D1C  50F3               	movf	prodl,w,c
  5370  000D1E  264C               	addwf	btemp+9,f,c
  5371  000D20  0EDC               	movlw	low (_ready_queue+8)
  5372  000D22  244B               	addwf	btemp+8,w,c
  5373  000D24  6ED9               	movwf	fsr2l,c
  5374  000D26  0E00               	movlw	high (_ready_queue+8)
  5375  000D28  204C               	addwfc	btemp+9,w,c
  5376  000D2A  6EDA               	movwf	fsr2h,c
  5377  000D2C  0E00               	movlw	0
  5378  000D2E  6EDF               	movwf	indf2,c
  5379  000D30                     l1907:
  5380                           
  5381                           ;kernel.c: 113:   }
  5382                           ;stkvar	_i @ sp[(-2)+0]
  5383  000D30  0EFE               	movlw	-2
  5384  000D32  50E3               	movf	plusw1,w,c
  5385  000D34  0F01               	addlw	1
  5386  000D36  6E43               	movwf	btemp,c
  5387  000D38  0EFE               	movlw	-2
  5388  000D3A  C043  FFE3         	movff	btemp,plusw1
  5389  000D3E  6A43               	clrf	btemp,c
  5390  000D40  0EFF               	movlw	-1
  5391  000D42  50E3               	movf	plusw1,w,c
  5392  000D44  2043               	addwfc	btemp,w,c
  5393  000D46  6E43               	movwf	btemp,c
  5394  000D48  0EFF               	movlw	-1
  5395  000D4A  C043  FFE3         	movff	btemp,plusw1
  5396  000D4E                     l1909:
  5397  000D4E  EE22  F0F0         	lfsr	2,_ready_queue+540
  5398                           
  5399                           ;stkvar	_i @ sp[(-2)+0]
  5400  000D52  0EFE               	movlw	-2
  5401  000D54  CFE3 F043          	movff	plusw1,btemp
  5402  000D58  50DE               	movf	postinc2,w,c
  5403  000D5A  5C43               	subwf	btemp,w,c
  5404  000D5C  0EFF               	movlw	-1
  5405  000D5E  CFE3 F043          	movff	plusw1,btemp
  5406  000D62  50DE               	movf	postinc2,w,c
  5407  000D64  5843               	subwfb	btemp,w,c
  5408  000D66  A0D8               	btfss	status,0,c
  5409  000D68  D782               	goto	l1899
  5410                           
  5411                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  5412  000D6A  52E5               	movf	postdec1,f,c
  5413  000D6C  52E5               	movf	postdec1,f,c
  5414  000D6E  0012               	return		;funcret
  5415  000D70                     __end_of_delay_decrement:
  5416                           	opt callstack 0
  5417                           
  5418 ;; *************** function ___wmul *****************
  5419 ;; Defined at:
  5420 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  multiplier      2  [STACK] unsigned int 
  5423 ;;  multiplicand    2  [STACK] unsigned int 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  product         2  [STACK] unsigned int 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  2  [STACK] unsigned int 
  5428 ;; Registers used:
  5429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5435 ;;      Params:         0       0       0       0       0       0       0
  5436 ;;      Locals:         0       0       0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0
  5438 ;;      Totals:         0       0       0       0       0       0       0
  5439 ;;Total ram usage:        0 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_ISR_timer0
  5445 ;; This function uses a reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text33
  5449  001654                     __ptext33:
  5450                           	opt callstack 0
  5451  001654                     ___wmul:
  5452                           	opt callstack 0
  5453                           
  5454                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5455  001654  52E6               	movf	postinc1,f,c
  5456  001656  52E6               	movf	postinc1,f,c
  5457                           
  5458                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5459                           
  5460                           ;incstack = 0
  5461  001658  0EFA               	movlw	-6
  5462  00165A  CFE3 F04E          	movff	plusw1,btemp+11
  5463                           
  5464                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5465  00165E  0EFC               	movlw	-4
  5466  001660  50E3               	movf	plusw1,w,c
  5467  001662  024E               	mulwf	btemp+11,c
  5468                           
  5469                           ;stkvar	_product @ sp[(-2)+0]
  5470  001664  0EFE               	movlw	-2
  5471  001666  CFF3 FFE3          	movff	prodl,plusw1
  5472  00166A  0EFF               	movlw	-1
  5473  00166C  CFF4 FFE3          	movff	prodh,plusw1
  5474                           
  5475                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5476  001670  0EFB               	movlw	251
  5477  001672  24E1               	addwf	fsr1l,w,c
  5478  001674  6ED9               	movwf	fsr2l,c
  5479  001676  0EFF               	movlw	255
  5480  001678  20E2               	addwfc	fsr1h,w,c
  5481  00167A  6EDA               	movwf	fsr2h,c
  5482  00167C  50DF               	movf	indf2,w,c
  5483  00167E  6E4E               	movwf	btemp+11,c
  5484                           
  5485                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5486  001680  0EFC               	movlw	-4
  5487  001682  50E3               	movf	plusw1,w,c
  5488  001684  024E               	mulwf	btemp+11,c
  5489  001686  CFF3 FFF4          	movff	prodl,prodh
  5490  00168A  6AF3               	clrf	prodl,c
  5491                           
  5492                           ;stkvar	_product @ sp[(-2)+0]
  5493  00168C  50E1               	movf	fsr1l,w,c
  5494  00168E  0FFE               	addlw	-2
  5495  001690  6ED9               	movwf	fsr2l,c
  5496  001692  50E2               	movf	fsr1h,w,c
  5497  001694  6EDA               	movwf	fsr2h,c
  5498  001696  0EFF               	movlw	255
  5499  001698  22DA               	addwfc	fsr2h,f,c
  5500  00169A  50F3               	movf	prodl,w,c
  5501  00169C  26DE               	addwf	postinc2,f,c
  5502  00169E  50F4               	movf	prodh,w,c
  5503  0016A0  22DD               	addwfc	postdec2,f,c
  5504                           
  5505                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  5506  0016A2  0EFA               	movlw	-6
  5507  0016A4  CFE3 F04E          	movff	plusw1,btemp+11
  5508                           
  5509                           ;stkvar	_multiplier @ sp[(-2)+-2]
  5510  0016A8  0EFD               	movlw	253
  5511  0016AA  24E1               	addwf	fsr1l,w,c
  5512  0016AC  6ED9               	movwf	fsr2l,c
  5513  0016AE  0EFF               	movlw	255
  5514  0016B0  20E2               	addwfc	fsr1h,w,c
  5515  0016B2  6EDA               	movwf	fsr2h,c
  5516  0016B4  50DF               	movf	indf2,w,c
  5517  0016B6  024E               	mulwf	btemp+11,c
  5518  0016B8  CFF3 FFF4          	movff	prodl,prodh
  5519  0016BC  6AF3               	clrf	prodl,c
  5520                           
  5521                           ;stkvar	_product @ sp[(-2)+0]
  5522  0016BE  50E1               	movf	fsr1l,w,c
  5523  0016C0  0FFE               	addlw	-2
  5524  0016C2  6ED9               	movwf	fsr2l,c
  5525  0016C4  50E2               	movf	fsr1h,w,c
  5526  0016C6  6EDA               	movwf	fsr2h,c
  5527  0016C8  0EFF               	movlw	255
  5528  0016CA  22DA               	addwfc	fsr2h,f,c
  5529  0016CC  50F3               	movf	prodl,w,c
  5530  0016CE  26DE               	addwf	postinc2,f,c
  5531  0016D0  50F4               	movf	prodh,w,c
  5532  0016D2  22DD               	addwfc	postdec2,f,c
  5533                           
  5534                           ;stkvar	_product @ sp[(-2)+0]
  5535  0016D4  0EFE               	movlw	-2
  5536  0016D6  CFE3 F043          	movff	plusw1,btemp
  5537  0016DA  0EFF               	movlw	-1
  5538  0016DC  CFE3 F044          	movff	plusw1,btemp+1
  5539                           
  5540                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  5541  0016E0  0EFA               	movlw	250
  5542  0016E2  26E1               	addwf	fsr1l,f,c
  5543  0016E4  0EFF               	movlw	255
  5544  0016E6  22E2               	addwfc	fsr1h,f,c
  5545  0016E8  0012               	return		;funcret
  5546  0016EA                     __end_of___wmul:
  5547                           	opt callstack 0
  5548  0000                     
  5549                           	psect	text34
  5550  000000                     __ptext34:
  5551                           	opt callstack 0
  5552                           
  5553                           	psect	rparam
  5554  0000                     
  5555                           	psect	temp
  5556  000043                     btemp:
  5557                           	opt callstack 0
  5558  000043                     	ds	32
  5559  0000                     wtemp0	set	btemp
  5560  0000                     wtemp1	set	btemp+2
  5561  0000                     wtemp2	set	btemp+4
  5562  0000                     wtemp3	set	btemp+6
  5563  0000                     wtemp4	set	btemp+8
  5564  0000                     wtemp5	set	btemp+10
  5565  0000                     wtemp8	set	btemp+1
  5566  0000                     ttemp0	set	btemp
  5567  0000                     ttemp1	set	btemp+3
  5568  0000                     ttemp2	set	btemp+6
  5569  0000                     ttemp3	set	btemp+9
  5570  0000                     ttemp5	set	btemp+1
  5571  0000                     ttemp6	set	btemp+4
  5572  0000                     ttemp7	set	btemp+8
  5573  0000                     ltemp0	set	btemp
  5574  0000                     ltemp1	set	btemp+4
  5575  0000                     ltemp2	set	btemp+8
  5576  0000                     lltemp0	set	btemp
  5577  0000                     lltemp1	set	btemp+8
  5578  0000                     lltemp2	set	btemp+16
  5579  0000                     lltemp3	set	btemp+24
  5580                           tosu	equ	0xFFF
  5581                           tosh	equ	0xFFE
  5582                           tosl	equ	0xFFD
  5583                           stkptr	equ	0xFFC
  5584                           pclatu	equ	0xFFB
  5585                           pclath	equ	0xFFA
  5586                           pcl	equ	0xFF9
  5587                           tblptru	equ	0xFF8
  5588                           tblptrh	equ	0xFF7
  5589                           tblptrl	equ	0xFF6
  5590                           tablat	equ	0xFF5
  5591                           prodh	equ	0xFF4
  5592                           prodl	equ	0xFF3
  5593                           indf0	equ	0xFEF
  5594                           postinc0	equ	0xFEE
  5595                           postdec0	equ	0xFED
  5596                           preinc0	equ	0xFEC
  5597                           plusw0	equ	0xFEB
  5598                           fsr0h	equ	0xFEA
  5599                           fsr0l	equ	0xFE9
  5600                           wreg	equ	0xFE8
  5601                           indf1	equ	0xFE7
  5602                           postinc1	equ	0xFE6
  5603                           postdec1	equ	0xFE5
  5604                           preinc1	equ	0xFE4
  5605                           plusw1	equ	0xFE3
  5606                           fsr1h	equ	0xFE2
  5607                           fsr1l	equ	0xFE1
  5608                           bsr	equ	0xFE0
  5609                           indf2	equ	0xFDF
  5610                           postinc2	equ	0xFDE
  5611                           postdec2	equ	0xFDD
  5612                           preinc2	equ	0xFDC
  5613                           plusw2	equ	0xFDB
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1206
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      84
    BANK0           128      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    mem	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> teste_2(BANK0[14]), teste_1(BANK0[14]), r_pipe(BANK0[14]), w_pipe(BANK0[14]), 
		 -> out_sem(BANK0[14]), cover_sem(BANK0[14]), check_sem(COMRAM[14]), fill_sem(COMRAM[14]), 
		 -> count_sem(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> teste_2(BANK0[14]), teste_1(BANK0[14]), r_pipe(BANK0[14]), w_pipe(BANK0[14]), 
		 -> out_sem(BANK0[14]), cover_sem(BANK0[14]), check_sem(COMRAM[14]), fill_sem(COMRAM[14]), 
		 -> count_sem(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), w_pipe(BANK0[14]), out_sem(BANK0[14]), cover_sem(BANK0[14]), 
		 -> check_sem(COMRAM[14]), fill_sem(COMRAM[14]), count_sem(COMRAM[14]), 

    data	PTR unsigned int  size(2) Largest target is 2
		 -> dado(STACK[2]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    S541pipe$r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    p.r	PTR struct semaphore size(2) Largest target is 14
		 -> r_pipe(BANK0[14]), 

    S541pipe$w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p.w	PTR struct semaphore size(2) Largest target is 14
		 -> w_pipe(BANK0[14]), 

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    S258pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _task_0 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_bozo in COMRAM

    None.

Critical Paths under _task_xuxa in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _task_0 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_bozo in BANK0

    None.

Critical Paths under _task_xuxa in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _task_0 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_bozo in BANK1

    None.

Critical Paths under _task_xuxa in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _task_0 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_bozo in BANK2

    None.

Critical Paths under _task_xuxa in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _task_0 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_bozo in BANK3

    None.

Critical Paths under _task_xuxa in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _task_0 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_bozo in BANK4

    None.

Critical Paths under _task_xuxa in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _task_0 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_bozo in BANK5

    None.

Critical Paths under _task_xuxa in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2004
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0    1245
                          _SRAMalloc
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _pipe_create                                          6     0      6     264
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (2) _SRAMalloc                                            7     6      1     893
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (3) __SRAMmerge                                           7     5      2     402
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     323
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   112   108      4     187
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     828
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     806
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0     535
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         0     0      0     535
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            2     2      0     830
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     828
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     806
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0     535
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         0     0      0     535
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            2     2      0     830
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_0                                               0     0      0     960
                    _lunos_delayTask
                         _pipe_write
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_1                                               2     2      0     984
                    _lunos_delayTask
                          _pipe_read
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     689
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_2                                               0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_bozo                                            2     2      0     625
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_xuxa                                            2     2      0     874
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     403
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     132
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer0                                         16    16      0     498
                                              0 COMRAM    16    16      0
                             ___wmul
                    _delay_decrement
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (13) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _user_conf
     _SRAMalloc
       __SRAMmerge
     _pipe_create
       _sem_init
     _sem_init

 _task_idle (ROOT)

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_bottles (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_0 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_write
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_1 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _pipe_read
     _sem_post
     _sem_wait
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod

 _task_2 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_bozo (ROOT)
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_xuxa (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   _delay_decrement
   _round_robin
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     420      17       68.8%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      54       5       65.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      54       1       88.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8      15        0.0%
DATA                 0      0     4C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun  5 15:30:25 2019

                        _p 0037   __end_of_lunos_createTask 1188                        l127 0846  
                      l322 1B62                        l323 1B6A                        l341 1A50  
                      l405 0B04                        l342 1A48                        l326 1B72  
                      l318 1B52                        l319 1B5A                        l336 1A3A  
                      l337 1A32                        l370 1A6C                        l186 17F6  
                      l347 1A5E                        l390 1438                        l382 17FC  
                      l296 195C                        l298 196A                        _BSR 000FE0  
                      u710 096A                        u630 0B74                        u800 1532  
                      u720 13AA                        u730 0984                        u820 1598  
                      u681 116C                        u770 0A1C                        _TOS 000FFD  
                      _mem 0007                        _who 000B                _round_robin 16EA  
                      wreg 000FE8               __CFG_WDT$OFF 000000                       l2107 1BE6  
                     l2221 144C                       l2205 1810                       l2109 1BF2  
                     l2225 1484                       l2161 1886                       l2177 18E0  
                     l2169 18BC                       l1801 1396                       l1705 0B78  
                     l2099 19B0                       l1831 098E                       l1913 16FA  
                     l1809 13F0                       l1737 0C40                       l1833 09A2  
                     l1907 0D30                       l1851 0A48                       l1909 0D4E  
                     l1773 06A0                       l1861 0A82                       l1769 0586  
                     l1795 0962                       l1981 135E                       l1789 076C  
                     l1879 150A                       l1993 1276                       l1889 157A  
                     l1899 0C6E                       _FREE 007D34                       i2l59 0398  
                     _TOSH 000FFE                       _TOSL 000FFD                       _WREG 000FE8  
                     _TOSU 000FFF                       _main 177A              _global_buffer 0001  
   __size_of_count_bottles 006C                       _size 0009                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0043                       prodh 000FF4                       prodl 000FF3  
                     start 000C               ___param_bank 000000            __end_of___lwmod 15AE  
                    _TMR0L 000FD6                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      u88_20 11BA                      u96_20 19C0  
              ?_ISR_timer0 0063                 __SRAMmerge 0B0E       __size_of_check_level 003E  
       __size_of_SRAMalloc 019E                      tablat 000FF5                      ltemp0 0043  
                    ltemp1 0047                      ltemp2 004B                      plusw0 000FEB  
                    plusw1 000FE3                      plusw2 000FDB                      ttemp0 0043  
                    ttemp1 0046                      ttemp2 0049                      ttemp3 004C  
                    ttemp5 0044                      ttemp6 0047                      ttemp7 004B  
                    status 000FD8                      wtemp0 0043                      wtemp1 0045  
                    wtemp2 0047                      wtemp3 0049                      wtemp4 004B  
                    wtemp5 004D                      wtemp8 0044   __size_of_delay_decrement 0110  
          __initialization 1AB4               __end_of_main 17F8              _count_bottles 195A  
            __activetblptr 000000                     u120_20 1868                     u122_20 1470  
                   u122_26 1472                     u123_20 148C                     i2l2041 012C  
                   i2l2061 02DC                     i2l2045 0222                     u123_26 148E  
                   u124_20 14E4                     i2l2067 0490                     u117_20 1B1A  
                   u117_26 1B1C                     u118_20 1A94                     u118_26 1A96  
                   u119_20 1BB6                     u119_26 1BB8                     _STATUS 000FD8  
                   _STKPTR 000FFC       __size_of_config_INT0 0010       __size_of_fill_bottle 0026  
      __size_of_ISR_timer0 04C4                     ___wmul 1654          __end_of_SRAMalloc 0B0E  
                   clear_0 1AD4                     clear_1 1AE6                     clear_2 1AF2  
                   _r_pipe 009C                     _task_0 1AFE                     _task_1 1A68  
                   _task_2 1BAE                     _w_pipe 00AA           __end_of_sem_init 195A  
         __end_of_sem_wait 1366           __end_of_sem_post 127E               __pdataCOMRAM 0073  
                   lltemp0 0043                     lltemp1 004B                     lltemp2 0053  
                   lltemp3 005B                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0080    __end_of__initialization 1AF8  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001             __pcstackCOMRAM 0063  
               ___inthi_sp 054E       __end_of_cover_bottle 1A68                 __pbssBANK0 0080  
       __size_of_count_out 0074              __uDynamicHeap 02F4         __size_of_scheduler 0006  
      __size_of__SRAMmerge 0152         __size_of_pipe_read 0108         __size_of_task_idle 0004  
       __size_of_task_bozo 007E         __size_of_task_xuxa 00BE               ??_ISR_timer0 0063  
                  i2u90_40 005E                    i2u90_46 0060                    i2u91_40 0086  
                  i2u91_41 0084                    i2u94_40 0498                 _dispatcher 04CC  
          _lunos_delayTask 19C6       __size_of_pipe_create 010E         __size_of_user_conf 00A6  
                  __Hparam 0000                    __Lparam 0000            __size_of___wmul 0096  
       __end_of_ISR_timer0 04CC                    ___lwmod 14F2                    __pcinit 1AB4  
                  __ramtop 0600            __size_of_task_0 0040            __size_of_task_1 004C  
          __size_of_task_2 002A          __end_of_count_out 18EA                    __ptext0 177A  
                  __ptext1 15AE                    __ptext2 0D70                    __ptext3 18EA  
                  __ptext4 0970                    __ptext5 0B0E                    __ptext6 1B7C  
                  __ptext7 1090                    __ptext8 1366                    __ptext9 04CC  
                _T0CONbits 000FD5                    _teste_1 00C6                    _teste_2 00B8  
                  _quantum 0073                    _out_sem 0080          __end_of_scheduler 1C26  
           __pintcode_body 0014       end_of_initialization 1AF8          __end_of_pipe_read 1090  
        __end_of_task_idle 1C2A          __end_of_task_bozo 1876                    int_func 0014  
        __end_of_task_xuxa 14F2                 _pipe_write 0E7E      __end_of_config_timer0 1C10  
                  postdec0 000FED                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               _lunos_init 1B7C          __end_of_user_conf 1654                  _PORTBbits 000F81  
                _PORTCbits 000F82                  _PORTDbits 000F83    __end_of_lunos_delayTask 1A18  
                _SRAMalloc 0970      __size_of_cover_bottle 0050                  _TRISDbits 000F95  
     __size_of_round_robin 0090        __end_of_check_level 1B7C            _delay_decrement 0C60  
             _cover_bottle 1A18         __end_of__SRAMmerge 0C60             __end_of___wmul 16EA  
            __pidataCOMRAM 1C2A             __end_of_task_0 1B3E             __end_of_task_1 1AB4  
           __end_of_task_2 1BD8        start_initialization 1AB4  __size_of_lunos_createTask 00F8  
      __end_of_config_INT0 1C20        __size_of_dispatcher 04A4        __end_of_fill_bottle 1BFE  
              __pbssBIGRAM 00D4                __pbssCOMRAM 0001                _check_level 1B3E  
  __end_of_delay_decrement 0D70       __end_of_SRAMInitHeap 1434                  _check_sem 000D  
                __pintcode 0008          __size_of_sem_init 0070          __size_of_sem_wait 00E8  
        __size_of_sem_post 00F6      __end_of_count_bottles 19C6        __size_of_pipe_write 010A  
                _cover_sem 008E                  _count_sem 0029                  _count_out 1876  
      __size_of_lunos_init 0032                  _scheduler 1C20                _config_INT0 1C10  
                _pipe_read 0F88                _fill_bottle 1BD8                  _task_idle 1C26  
                _task_bozo 17F8                  _task_xuxa 1434                  _user_conf 15AE  
         _lunos_createTask 1090                _INTCON2bits 000FF1        __end_of_pipe_create 0E7E  
                 __Hrparam 0000                   __Lrparam 0000         __end_of_dispatcher 0970  
         __size_of___lwmod 00BC     __size_of_config_timer0 0012      __size_of_SRAMInitHeap 00CE  
                 __ptext10 1C20                   __ptext11 16EA                   __ptext20 1BD8  
                 __ptext12 14F2                   __ptext21 1B3E                   __ptext13 1BFE  
                 __ptext30 1434                   __ptext22 1A18                   __ptext14 1C10  
                 __ptext23 1876                   __ptext15 1C26                   __ptext32 0C60  
                 __ptext24 1AFE                   __ptext16 195A                   __ptext33 1654  
                 __ptext25 0E7E                   __ptext17 127E                   __ptext34 0000  
                 __ptext26 1A68                   __ptext18 1188                   __ptext27 0F88  
                 __ptext19 19C6                   __ptext28 1BAE                   __ptext29 17F8  
                 _fill_sem 001B              __size_of_main 007E                _ready_queue 00D4  
                 _sem_init 18EA                   _sem_wait 127E                   _sem_post 1188  
             _SRAMInitHeap 1366                 _INTCONbits 000FF2         __end_of_pipe_write 0F88  
              _pipe_create 0D70        __end_of_round_robin 177A                   intlevel1 0000  
                 intlevel2 0000         __end_of_lunos_init 1BAE              _config_timer0 1BFE  
               _ISR_timer0 0008   __size_of_lunos_delayTask 0052  
