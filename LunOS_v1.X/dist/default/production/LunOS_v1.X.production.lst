

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun 05 22:19:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           ; Version 2.05
    44                           ; Generated 20/12/2018 GMT
    45                           ; 
    46                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4520 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78 ;;_s	offset=-2 (param)
    79 ;;_valor	offset=-4 (param)
    80 ;;_new_task	offset	0
    81 ;;_prior	offset=-2 (param)
    82 ;;_f	offset=-4 (param)
    83 ;;_count	offset	0
    84 ;;_pHeap	offset	2
    85 ;;_state	offset=-1 (param)
    86 ;;_next_task_to_run	offset	0
    87 ;;_counter	offset	0
    88 ;;_dividend	offset=-2 (param)
    89 ;;_divisor	offset=-4 (param)
    90 ;;_bottle	offset	0
    91 ;;_s	offset=-2 (param)
    92 ;;_state	offset=-1 (param)
    93 ;;_next_task_to_run	offset	0
    94 ;;_s	offset=-2 (param)
    95 ;;_counter	offset	0
    96 ;;_dividend	offset=-2 (param)
    97 ;;_divisor	offset=-4 (param)
    98 ;;_i	offset	0
    99 ;;_count	offset	2
   100 ;;_p	offset=-2 (param)
   101 ;;_data	offset=-4 (param)
   102 ;;_pip	offset	0
   103 ;;_p	offset=-2 (param)
   104 ;;_data	offset=-4 (param)
   105 ;;_next_task_to_run	offset	0
   106 ;;_counter	offset	0
   107 ;;_dividend	offset=-2 (param)
   108 ;;_divisor	offset=-4 (param)
   109 ;;_i	offset	0
   110 ;;_product	offset	0
   111 ;;_multiplier	offset=-2 (param)
   112 ;;_multiplicand	offset=-4 (param)
   113                           
   114                           	psect	idataCOMRAM
   115  00169C                     __pidataCOMRAM:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for _quantum
   119  00169C  000A               	dw	10
   120  0000                     _TOS	set	4093
   121  0000                     _PORTBbits	set	3969
   122  0000                     _PORTCbits	set	3970
   123  0000                     _TRISD	set	3989
   124  0000                     _TRISC	set	3988
   125  0000                     _TRISB	set	3987
   126  0000                     _STKPTR	set	4092
   127  0000                     _TOSL	set	4093
   128  0000                     _TOSH	set	4094
   129  0000                     _TOSU	set	4095
   130  0000                     _BSR	set	4064
   131  0000                     _STATUS	set	4056
   132  0000                     _WREG	set	4072
   133  0000                     _PORTDbits	set	3971
   134  0000                     _TMR0L	set	4054
   135  0000                     _T0CONbits	set	4053
   136  0000                     _INTCON2bits	set	4081
   137  0000                     _INTCONbits	set	4082
   138  0000                     _TRISDbits	set	3989
   139                           
   140                           ; #config settings
   141  0000                     
   142                           	psect	cinit
   143  001588                     __pcinit:
   144                           	opt callstack 0
   145  001588                     start_initialization:
   146                           	opt callstack 0
   147  001588                     __initialization:
   148                           	opt callstack 0
   149                           
   150                           ; Initialize objects allocated to COMRAM (2 bytes)
   151                           ; load TBLPTR registers with __pidataCOMRAM
   152  001588  0E9C               	movlw	low __pidataCOMRAM
   153  00158A  6EF6               	movwf	tblptrl,c
   154  00158C  0E16               	movlw	high __pidataCOMRAM
   155  00158E  6EF7               	movwf	tblptrh,c
   156  001590  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   157  001592  6EF8               	movwf	tblptru,c
   158  001594  0009               	tblrd		*+	;fetch initializer
   159  001596  CFF5 F075          	movff	tablat,__pdataCOMRAM
   160  00159A  0009               	tblrd		*+	;fetch initializer
   161  00159C  CFF5 F076          	movff	tablat,__pdataCOMRAM+1
   162                           
   163                           ; Clear objects allocated to BIGRAM (1176 bytes)
   164  0015A0  EE00  F0A0         	lfsr	0,__pbssBIGRAM
   165  0015A4  EE24 F098          	lfsr	2,1176
   166  0015A8                     clear_0:
   167  0015A8  6AEE               	clrf	postinc0,c
   168  0015AA  50DD               	movf	postdec2,w,c
   169  0015AC  50D9               	movf	fsr2l,w,c
   170  0015AE  E1FC               	bnz	clear_0
   171  0015B0  50DA               	movf	fsr2h,w,c
   172  0015B2  E1FA               	bnz	clear_0
   173                           
   174                           ; Clear objects allocated to BANK0 (32 bytes)
   175  0015B4  EE00  F080         	lfsr	0,__pbssBANK0
   176  0015B8  0E20               	movlw	32
   177  0015BA                     clear_1:
   178  0015BA  6AEE               	clrf	postinc0,c
   179  0015BC  06E8               	decf	wreg,f,c
   180  0015BE  E1FD               	bnz	clear_1
   181                           
   182                           ; Clear objects allocated to COMRAM (70 bytes)
   183  0015C0  EE00  F001         	lfsr	0,__pbssCOMRAM
   184  0015C4  0E46               	movlw	70
   185  0015C6                     clear_2:
   186  0015C6  6AEE               	clrf	postinc0,c
   187  0015C8  06E8               	decf	wreg,f,c
   188  0015CA  E1FD               	bnz	clear_2
   189  0015CC                     end_of_initialization:
   190                           	opt callstack 0
   191  0015CC                     __end_of__initialization:
   192                           	opt callstack 0
   193  0015CC  0100               	movlb	0
   194  0015CE  EFEE  F009         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197  000001                     __pbssCOMRAM:
   198                           	opt callstack 0
   199  000001                     _global_buffer:
   200                           	opt callstack 0
   201  000001                     	ds	6
   202  000007                     _size:
   203                           	opt callstack 0
   204  000007                     	ds	2
   205  000009                     _who:
   206                           	opt callstack 0
   207  000009                     	ds	2
   208  00000B                     _check_sem:
   209                           	opt callstack 0
   210  00000B                     	ds	16
   211  00001B                     _fill_sem:
   212                           	opt callstack 0
   213  00001B                     	ds	16
   214  00002B                     _count_sem:
   215                           	opt callstack 0
   216  00002B                     	ds	16
   217  00003B                     _p:
   218                           	opt callstack 0
   219  00003B                     	ds	12
   220                           
   221                           	psect	dataCOMRAM
   222  000075                     __pdataCOMRAM:
   223                           	opt callstack 0
   224  000075                     _quantum:
   225                           	opt callstack 0
   226  000075                     	ds	2
   227                           
   228                           	psect	bssBANK0
   229  000080                     __pbssBANK0:
   230                           	opt callstack 0
   231  000080                     _out_sem:
   232                           	opt callstack 0
   233  000080                     	ds	16
   234  000090                     _cover_sem:
   235                           	opt callstack 0
   236  000090                     	ds	16
   237                           
   238                           	psect	bssBIGRAM
   239  0000A0                     __pbssBIGRAM:
   240                           	opt callstack 0
   241  0000A0                     _ready_queue:
   242                           	opt callstack 0
   243  0000A0                     	ds	664
   244  000338                     __uDynamicHeap:
   245                           	opt callstack 0
   246  000338                     	ds	512
   247                           
   248                           	psect	cstackCOMRAM
   249  000067                     __pcstackCOMRAM:
   250                           	opt callstack 0
   251  000067                     ??_ISR_timer0:
   252                           
   253                           ; 1 bytes @ 0x0
   254  000067                     	ds	14
   255                           
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 16 in file "main.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;		None
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1  [STACK] void 
   268 ;; Registers used:
   269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   275 ;;      Params:         0       0       0       0       0       0       0
   276 ;;      Locals:         0       0       0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0       0       0
   278 ;;      Totals:         0       0       0       0       0       0       0
   279 ;;Total ram usage:        0 bytes
   280 ;; Hardware stack levels required when called:   14
   281 ;; This function calls:
   282 ;;		_config_INT0
   283 ;;		_config_timer0
   284 ;;		_dispatcher
   285 ;;		_lunos_createTask
   286 ;;		_lunos_init
   287 ;;		_user_conf
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a reentrant model
   291 ;;
   292                           
   293                           	psect	text0
   294  0013DC                     __ptext0:
   295                           	opt callstack 0
   296  0013DC                     _main:
   297                           	opt callstack 17
   298                           
   299                           ;main.c: 18:   dispatcher(READY);
   300                           
   301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   302                           ;incstack = 0
   303  0013DC  EC09  F00B         	call	_lunos_init	;wreg free
   304                           
   305                           ;main.c: 20:   while (1);
   306  0013E0  ECAC  F009         	call	_user_conf	;wreg free
   307                           
   308                           ;main.c: 21: 
   309  0013E4  EC41  F00B         	call	_config_INT0	;wreg free
   310                           
   311                           ;main.c: 22:   return;
   312  0013E8  EC38  F00B         	call	_config_timer0	;wreg free
   313  0013EC  0ECA               	movlw	low _count_bottles
   314  0013EE  6EE6               	movwf	postinc1,c
   315  0013F0  0E14               	movlw	high _count_bottles
   316  0013F2  6EE6               	movwf	postinc1,c
   317  0013F4  0E05               	movlw	5
   318  0013F6  6EE6               	movwf	postinc1,c
   319  0013F8  0E00               	movlw	0
   320  0013FA  6EE6               	movwf	postinc1,c
   321  0013FC  EC53  F005         	call	_lunos_createTask	;wreg free
   322  001400  0E44               	movlw	low _fill_bottle
   323  001402  6EE6               	movwf	postinc1,c
   324  001404  0E16               	movlw	high _fill_bottle
   325  001406  6EE6               	movwf	postinc1,c
   326  001408  0E04               	movlw	4
   327  00140A  6EE6               	movwf	postinc1,c
   328  00140C  0E00               	movlw	0
   329  00140E  6EE6               	movwf	postinc1,c
   330  001410  EC53  F005         	call	_lunos_createTask	;wreg free
   331  001414  0E3A               	movlw	low _check_level
   332  001416  6EE6               	movwf	postinc1,c
   333  001418  0E15               	movlw	high _check_level
   334  00141A  6EE6               	movwf	postinc1,c
   335  00141C  0E05               	movlw	5
   336  00141E  6EE6               	movwf	postinc1,c
   337  001420  0E00               	movlw	0
   338  001422  6EE6               	movwf	postinc1,c
   339  001424  EC53  F005         	call	_lunos_createTask	;wreg free
   340  001428  0EC6               	movlw	low _cover_bottle
   341  00142A  6EE6               	movwf	postinc1,c
   342  00142C  0E0E               	movlw	high _cover_bottle
   343  00142E  6EE6               	movwf	postinc1,c
   344  001430  0E05               	movlw	5
   345  001432  6EE6               	movwf	postinc1,c
   346  001434  0E00               	movlw	0
   347  001436  6EE6               	movwf	postinc1,c
   348  001438  EC53  F005         	call	_lunos_createTask	;wreg free
   349  00143C  0ED2               	movlw	low _count_out
   350  00143E  6EE6               	movwf	postinc1,c
   351  001440  0E15               	movlw	high _count_out
   352  001442  6EE6               	movwf	postinc1,c
   353  001444  0E04               	movlw	4
   354  001446  6EE6               	movwf	postinc1,c
   355  001448  0E00               	movlw	0
   356  00144A  6EE6               	movwf	postinc1,c
   357  00144C  EC53  F005         	call	_lunos_createTask	;wreg free
   358  001450  0E00               	movlw	0
   359  001452  6EE6               	movwf	postinc1,c
   360  001454  EC6E  F002         	call	_dispatcher	;wreg free
   361  001458                     l186:
   362  001458  D7FF               	goto	l186
   363  00145A                     __end_of_main:
   364                           	opt callstack 0
   365                           
   366 ;; *************** function _user_conf *****************
   367 ;; Defined at:
   368 ;;		line 20 in file "tasks.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1  [STACK] void 
   375 ;; Registers used:
   376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   382 ;;      Params:         0       0       0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0       0       0
   385 ;;      Totals:         0       0       0       0       0       0       0
   386 ;;Total ram usage:        0 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:   11
   389 ;; This function calls:
   390 ;;		_sem_init
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a reentrant model
   394 ;;
   395                           
   396                           	psect	text1
   397  001358                     __ptext1:
   398                           	opt callstack 0
   399  001358                     _user_conf:
   400                           	opt callstack 19
   401                           
   402                           ;tasks.c: 21:   TRISB = 0b00000001;
   403                           
   404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   405                           ;incstack = 0
   406  001358  0E01               	movlw	1
   407  00135A  6E93               	movwf	3987,c	;volatile
   408                           
   409                           ;tasks.c: 22:   TRISC = 0b01111111;
   410  00135C  0E7F               	movlw	127
   411  00135E  6E94               	movwf	3988,c	;volatile
   412                           
   413                           ;tasks.c: 23:   TRISD = 0b00001110;
   414  001360  0E0E               	movlw	14
   415  001362  6E95               	movwf	3989,c	;volatile
   416                           
   417                           ;tasks.c: 25:   PORTCbits.RC7 = 1;
   418  001364  8E82               	bsf	3970,7,c	;volatile
   419                           
   420                           ;tasks.c: 27:   PORTDbits.RD4 = 1;
   421  001366  8883               	bsf	3971,4,c	;volatile
   422                           
   423                           ;tasks.c: 28:   PORTDbits.RD5 = 1;
   424  001368  8A83               	bsf	3971,5,c	;volatile
   425                           
   426                           ;tasks.c: 29:   PORTDbits.RD6 = 1;
   427  00136A  8C83               	bsf	3971,6,c	;volatile
   428                           
   429                           ;tasks.c: 30:   PORTDbits.RD7 = 1;
   430  00136C  8E83               	bsf	3971,7,c	;volatile
   431                           
   432                           ;tasks.c: 31:   PORTBbits.RB1 = 1;
   433  00136E  8281               	bsf	3969,1,c	;volatile
   434                           
   435                           ;tasks.c: 32:   sem_init(&count_sem, 1);
   436  001370  0E01               	movlw	1
   437  001372  6EE6               	movwf	postinc1,c
   438  001374  0E00               	movlw	0
   439  001376  6EE6               	movwf	postinc1,c
   440  001378  0E2B               	movlw	low _count_sem
   441  00137A  6EE6               	movwf	postinc1,c
   442  00137C  0E00               	movlw	high _count_sem
   443  00137E  6EE6               	movwf	postinc1,c
   444  001380  EC2D  F00A         	call	_sem_init	;wreg free
   445                           
   446                           ;tasks.c: 33:   sem_init(&fill_sem, 0);
   447  001384  0E00               	movlw	0
   448  001386  6EE6               	movwf	postinc1,c
   449  001388  0E00               	movlw	0
   450  00138A  6EE6               	movwf	postinc1,c
   451  00138C  0E1B               	movlw	low _fill_sem
   452  00138E  6EE6               	movwf	postinc1,c
   453  001390  0E00               	movlw	high _fill_sem
   454  001392  6EE6               	movwf	postinc1,c
   455  001394  EC2D  F00A         	call	_sem_init	;wreg free
   456                           
   457                           ;tasks.c: 34:   sem_init(&check_sem, 0);
   458  001398  0E00               	movlw	0
   459  00139A  6EE6               	movwf	postinc1,c
   460  00139C  0E00               	movlw	0
   461  00139E  6EE6               	movwf	postinc1,c
   462  0013A0  0E0B               	movlw	low _check_sem
   463  0013A2  6EE6               	movwf	postinc1,c
   464  0013A4  0E00               	movlw	high _check_sem
   465  0013A6  6EE6               	movwf	postinc1,c
   466  0013A8  EC2D  F00A         	call	_sem_init	;wreg free
   467                           
   468                           ;tasks.c: 35:   sem_init(&cover_sem, 0);
   469  0013AC  0E00               	movlw	0
   470  0013AE  6EE6               	movwf	postinc1,c
   471  0013B0  0E00               	movlw	0
   472  0013B2  6EE6               	movwf	postinc1,c
   473  0013B4  0E90               	movlw	low _cover_sem
   474  0013B6  6EE6               	movwf	postinc1,c
   475  0013B8  0E00               	movlw	high _cover_sem
   476  0013BA  6EE6               	movwf	postinc1,c
   477  0013BC  EC2D  F00A         	call	_sem_init	;wreg free
   478                           
   479                           ;tasks.c: 36:   sem_init(&out_sem, 0);
   480  0013C0  0E00               	movlw	0
   481  0013C2  6EE6               	movwf	postinc1,c
   482  0013C4  0E00               	movlw	0
   483  0013C6  6EE6               	movwf	postinc1,c
   484  0013C8  0E80               	movlw	low _out_sem
   485  0013CA  6EE6               	movwf	postinc1,c
   486  0013CC  0E00               	movlw	high _out_sem
   487  0013CE  6EE6               	movwf	postinc1,c
   488  0013D0  EC2D  F00A         	call	_sem_init	;wreg free
   489                           
   490                           ;tasks.c: 40:   global_buffer.count = 0;
   491  0013D4  6A01               	clrf	_global_buffer,c
   492  0013D6  6A02               	clrf	_global_buffer+1,c
   493                           
   494                           ;tasks.c: 41:   global_buffer.p_state = FREE_;
   495  0013D8  6A06               	clrf	_global_buffer+5,c
   496                           
   497                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   498  0013DA  0012               	return		;funcret
   499  0013DC                     __end_of_user_conf:
   500                           	opt callstack 0
   501                           
   502 ;; *************** function _sem_init *****************
   503 ;; Defined at:
   504 ;;		line 10 in file "semaphore.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  s               2  [STACK] PTR struct semaphore
   507 ;;		 -> out_sem(16), cover_sem(16), check_sem(16), fill_sem(16), 
   508 ;;		 -> count_sem(16), 
   509 ;;  valor           2  [STACK] int 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1  [STACK] void 
   514 ;; Registers used:
   515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   521 ;;      Params:         0       0       0       0       0       0       0
   522 ;;      Locals:         0       0       0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0
   524 ;;      Totals:         0       0       0       0       0       0       0
   525 ;;Total ram usage:        0 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; Hardware stack levels required when called:   10
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_user_conf
   532 ;; This function uses a reentrant model
   533 ;;
   534                           
   535                           	psect	text2
   536  00145A                     __ptext2:
   537                           	opt callstack 0
   538  00145A                     _sem_init:
   539                           	opt callstack 19
   540                           
   541                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   542                           
   543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   544                           ;incstack = 0
   545  00145A  9EF2               	bcf	4082,7,c	;volatile
   546                           
   547                           ;semaphore.c: 13:   s->contador = valor;
   548                           ;stkvar	_valor @ sp[(0)+-4]
   549  00145C  50E1               	movf	fsr1l,w,c
   550  00145E  0FFC               	addlw	-4
   551  001460  6ED9               	movwf	fsr2l,c
   552  001462  50E2               	movf	fsr1h,w,c
   553  001464  6EDA               	movwf	fsr2h,c
   554  001466  0EFF               	movlw	255
   555  001468  22DA               	addwfc	fsr2h,f,c
   556                           
   557                           ;stkvar	_s @ sp[(0)+-2]
   558  00146A  0EFE               	movlw	-2
   559  00146C  CFE3 FFE9          	movff	plusw1,fsr0l
   560  001470  0EFF               	movlw	-1
   561  001472  CFE3 FFEA          	movff	plusw1,fsr0h
   562  001476  CFDE FFEE          	movff	postinc2,postinc0
   563  00147A  CFDD FFED          	movff	postdec2,postdec0
   564                           
   565                           ;semaphore.c: 14:   s->bloqued_size = 0;
   566                           ;stkvar	_s @ sp[(0)+-2]
   567  00147E  0EFE               	movlw	-2
   568  001480  CFE3 F051          	movff	plusw1,btemp+10
   569  001484  0EFF               	movlw	-1
   570  001486  CFE3 F052          	movff	plusw1,btemp+11
   571  00148A  0E0C               	movlw	12
   572  00148C  2451               	addwf	btemp+10,w,c
   573  00148E  6ED9               	movwf	fsr2l,c
   574  001490  0E00               	movlw	0
   575  001492  2052               	addwfc	btemp+11,w,c
   576  001494  6EDA               	movwf	fsr2h,c
   577  001496  0E00               	movlw	0
   578  001498  6EDE               	movwf	postinc2,c
   579  00149A  0E00               	movlw	0
   580  00149C  6EDD               	movwf	postdec2,c
   581                           
   582                           ;semaphore.c: 15:   s->task_to_ready = 0;
   583                           ;stkvar	_s @ sp[(0)+-2]
   584  00149E  0EFE               	movlw	-2
   585  0014A0  CFE3 F051          	movff	plusw1,btemp+10
   586  0014A4  0EFF               	movlw	-1
   587  0014A6  CFE3 F052          	movff	plusw1,btemp+11
   588  0014AA  0E0E               	movlw	14
   589  0014AC  2451               	addwf	btemp+10,w,c
   590  0014AE  6ED9               	movwf	fsr2l,c
   591  0014B0  0E00               	movlw	0
   592  0014B2  2052               	addwfc	btemp+11,w,c
   593  0014B4  6EDA               	movwf	fsr2h,c
   594  0014B6  0E00               	movlw	0
   595  0014B8  6EDE               	movwf	postinc2,c
   596  0014BA  0E00               	movlw	0
   597  0014BC  6EDD               	movwf	postdec2,c
   598                           
   599                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   600  0014BE  8EF2               	bsf	4082,7,c	;volatile
   601                           
   602                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   603  0014C0  52E5               	movf	postdec1,f,c
   604  0014C2  52E5               	movf	postdec1,f,c
   605  0014C4  52E5               	movf	postdec1,f,c
   606  0014C6  52E5               	movf	postdec1,f,c
   607  0014C8  0012               	return		;funcret
   608  0014CA                     __end_of_sem_init:
   609                           	opt callstack 0
   610                           
   611 ;; *************** function _lunos_init *****************
   612 ;; Defined at:
   613 ;;		line 51 in file "kernel.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1  [STACK] void 
   620 ;; Registers used:
   621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   627 ;;      Params:         0       0       0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0
   630 ;;      Totals:         0       0       0       0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:   11
   634 ;; This function calls:
   635 ;;		_SRAMInitHeap
   636 ;;		_lunos_createTask
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a reentrant model
   640 ;;
   641                           
   642                           	psect	text3
   643  001612                     __ptext3:
   644                           	opt callstack 0
   645  001612                     _lunos_init:
   646                           	opt callstack 19
   647                           
   648                           ;kernel.c: 52:   SRAMInitHeap();
   649                           
   650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   651                           ;incstack = 0
   652  001612  EC54  F008         	call	_SRAMInitHeap	;wreg free
   653                           
   654                           ;kernel.c: 53:   ready_queue.task_running = 0;
   655  001616  0E00               	movlw	0
   656  001618  CFE8 F336          	movff	wreg,_ready_queue+662
   657  00161C  0E00               	movlw	0
   658  00161E  CFE8 F337          	movff	wreg,_ready_queue+663
   659                           
   660                           ;kernel.c: 54:   ready_queue.tasks_installed = 0;
   661  001622  0E00               	movlw	0
   662  001624  CFE8 F334          	movff	wreg,_ready_queue+660
   663  001628  0E00               	movlw	0
   664  00162A  CFE8 F335          	movff	wreg,_ready_queue+661
   665                           
   666                           ;kernel.c: 55:   lunos_createTask(0, &task_idle);
   667  00162E  0E98               	movlw	low _task_idle
   668  001630  6EE6               	movwf	postinc1,c
   669  001632  0E16               	movlw	high _task_idle
   670  001634  6EE6               	movwf	postinc1,c
   671  001636  0E00               	movlw	0
   672  001638  6EE6               	movwf	postinc1,c
   673  00163A  0E00               	movlw	0
   674  00163C  6EE6               	movwf	postinc1,c
   675  00163E  EC53  F005         	call	_lunos_createTask	;wreg free
   676                           
   677                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
   678  001642  0012               	return		;funcret
   679  001644                     __end_of_lunos_init:
   680                           	opt callstack 0
   681                           
   682 ;; *************** function _lunos_createTask *****************
   683 ;; Defined at:
   684 ;;		line 14 in file "kernel.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  prior           2  [STACK] unsigned int 
   687 ;;  f               2  [STACK] PTR FTN()void 
   688 ;;		 -> count_out(1), cover_bottle(1), check_level(1), fill_bottle(1), 
   689 ;;		 -> count_bottles(1), task_idle(1), 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  new_task      110  [STACK] struct pcb
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1  [STACK] void 
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   701 ;;      Params:         0       0       0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:   10
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_lunos_init
   712 ;;		_main
   713 ;; This function uses a reentrant model
   714 ;;
   715                           
   716                           	psect	text4
   717  000AA6                     __ptext4:
   718                           	opt callstack 0
   719  000AA6                     _lunos_createTask:
   720                           	opt callstack 0
   721                           
   722                           ; autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
   723  000AA6  0E6E               	movlw	110
   724  000AA8  26E1               	addwf	fsr1l,f,c
   725  000AAA  0E00               	movlw	0
   726  000AAC  22E2               	addwfc	fsr1h,f,c
   727                           
   728                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
   729                           
   730                           ;incstack = 0
   731  000AAE  EE23  F034         	lfsr	2,_ready_queue+660
   732  000AB2  CFDE F051          	movff	postinc2,btemp+10
   733  000AB6  CFDD F052          	movff	postdec2,btemp+11
   734  000ABA  0E01               	movlw	1
   735  000ABC  2651               	addwf	btemp+10,f,c
   736  000ABE  0E00               	movlw	0
   737  000AC0  2252               	addwfc	btemp+11,f,c
   738                           
   739                           ;stkvar	_new_task @ sp[(-110)+0]
   740  000AC2  0E92               	movlw	-110
   741  000AC4  C051  FFE3         	movff	btemp+10,plusw1
   742  000AC8  0E93               	movlw	-109
   743  000ACA  C052  FFE3         	movff	btemp+11,plusw1
   744                           
   745                           ;kernel.c: 19:   new_task.task_prior = prior;
   746                           ;stkvar	_prior @ sp[(-110)+-2]
   747  000ACE  50E1               	movf	fsr1l,w,c
   748  000AD0  0F90               	addlw	-112
   749  000AD2  6ED9               	movwf	fsr2l,c
   750  000AD4  50E2               	movf	fsr1h,w,c
   751  000AD6  6EDA               	movwf	fsr2h,c
   752  000AD8  0EFF               	movlw	255
   753  000ADA  22DA               	addwfc	fsr2h,f,c
   754                           
   755                           ;stkvar	_new_task @ sp[(-110)+0]
   756  000ADC  0E94               	movlw	148
   757  000ADE  24E1               	addwf	fsr1l,w,c
   758  000AE0  6EE9               	movwf	fsr0l,c
   759  000AE2  0EFF               	movlw	255
   760  000AE4  20E2               	addwfc	fsr1h,w,c
   761  000AE6  6EEA               	movwf	fsr0h,c
   762  000AE8  CFDE FFEE          	movff	postinc2,postinc0
   763  000AEC  CFDD FFED          	movff	postdec2,postdec0
   764                           
   765                           ;kernel.c: 20:   new_task.task_state = READY;
   766                           ;stkvar	_new_task @ sp[(-110)+0]
   767  000AF0  0E9A               	movlw	154
   768  000AF2  24E1               	addwf	fsr1l,w,c
   769  000AF4  6ED9               	movwf	fsr2l,c
   770  000AF6  0EFF               	movlw	255
   771  000AF8  20E2               	addwfc	fsr1h,w,c
   772  000AFA  6EDA               	movwf	fsr2h,c
   773  000AFC  0E00               	movlw	0
   774  000AFE  6EDF               	movwf	indf2,c
   775                           
   776                           ;kernel.c: 21:   new_task.task_f = f;
   777                           ;stkvar	_f @ sp[(-110)+-4]
   778  000B00  50E1               	movf	fsr1l,w,c
   779  000B02  0F8E               	addlw	-114
   780  000B04  6ED9               	movwf	fsr2l,c
   781  000B06  50E2               	movf	fsr1h,w,c
   782  000B08  6EDA               	movwf	fsr2h,c
   783  000B0A  0EFF               	movlw	255
   784  000B0C  22DA               	addwfc	fsr2h,f,c
   785                           
   786                           ;stkvar	_new_task @ sp[(-110)+0]
   787  000B0E  0EFC               	movlw	252
   788  000B10  24E1               	addwf	fsr1l,w,c
   789  000B12  6EE9               	movwf	fsr0l,c
   790  000B14  0EFF               	movlw	255
   791  000B16  20E2               	addwfc	fsr1h,w,c
   792  000B18  6EEA               	movwf	fsr0h,c
   793  000B1A  CFDE FFEE          	movff	postinc2,postinc0
   794  000B1E  CFDD FFED          	movff	postdec2,postdec0
   795                           
   796                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
   797                           ;stkvar	_new_task @ sp[(-110)+0]
   798  000B22  0EF8               	movlw	248
   799  000B24  24E1               	addwf	fsr1l,w,c
   800  000B26  6ED9               	movwf	fsr2l,c
   801  000B28  0EFF               	movlw	255
   802  000B2A  20E2               	addwfc	fsr1h,w,c
   803  000B2C  6EDA               	movwf	fsr2h,c
   804  000B2E  0E00               	movlw	0
   805  000B30  6EDE               	movwf	postinc2,c
   806  000B32  0E00               	movlw	0
   807  000B34  6EDD               	movwf	postdec2,c
   808                           
   809                           ;kernel.c: 23:   new_task.task_delay_time = 0;
   810                           ;stkvar	_new_task @ sp[(-110)+0]
   811  000B36  0EFE               	movlw	254
   812  000B38  24E1               	addwf	fsr1l,w,c
   813  000B3A  6ED9               	movwf	fsr2l,c
   814  000B3C  0EFF               	movlw	255
   815  000B3E  20E2               	addwfc	fsr1h,w,c
   816  000B40  6EDA               	movwf	fsr2h,c
   817  000B42  0E00               	movlw	0
   818  000B44  6EDE               	movwf	postinc2,c
   819  000B46  0E00               	movlw	0
   820  000B48  6EDD               	movwf	postdec2,c
   821                           
   822                           ;kernel.c: 24:   new_task.task_installed = 0;
   823                           ;stkvar	_new_task @ sp[(-110)+0]
   824  000B4A  0EFA               	movlw	250
   825  000B4C  24E1               	addwf	fsr1l,w,c
   826  000B4E  6ED9               	movwf	fsr2l,c
   827  000B50  0EFF               	movlw	255
   828  000B52  20E2               	addwfc	fsr1h,w,c
   829  000B54  6EDA               	movwf	fsr2h,c
   830  000B56  0E00               	movlw	0
   831  000B58  6EDE               	movwf	postinc2,c
   832  000B5A  0E00               	movlw	0
   833  000B5C  6EDD               	movwf	postdec2,c
   834                           
   835                           ;kernel.c: 27:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
   836                           ;stkvar	_new_task @ sp[(-110)+0]
   837  000B5E  0E92               	movlw	146
   838  000B60  24E1               	addwf	fsr1l,w,c
   839  000B62  6ED9               	movwf	fsr2l,c
   840  000B64  0EFF               	movlw	255
   841  000B66  20E2               	addwfc	fsr1h,w,c
   842  000B68  6EDA               	movwf	fsr2h,c
   843  000B6A  EE03  F034         	lfsr	0,_ready_queue+660
   844  000B6E  CFEE F051          	movff	postinc0,btemp+10
   845  000B72  CFED F052          	movff	postdec0,btemp+11
   846  000B76  0E6E               	movlw	110
   847  000B78  0251               	mulwf	btemp+10,c
   848  000B7A  CFF3 F04F          	movff	prodl,btemp+8
   849  000B7E  CFF4 F050          	movff	prodh,btemp+9
   850  000B82  0252               	mulwf	btemp+11,c
   851  000B84  50F3               	movf	prodl,w,c
   852  000B86  2650               	addwf	btemp+9,f,c
   853  000B88  0EA0               	movlw	low _ready_queue
   854  000B8A  244F               	addwf	btemp+8,w,c
   855  000B8C  6EE9               	movwf	fsr0l,c
   856  000B8E  0E00               	movlw	high _ready_queue
   857  000B90  2050               	addwfc	btemp+9,w,c
   858  000B92  6EEA               	movwf	fsr0h,c
   859  000B94  0E6D               	movlw	109
   860  000B96                     u471:
   861  000B96  CFDB FFEB          	movff	plusw2,plusw0
   862  000B9A  06E8               	decf	wreg,f,c
   863  000B9C  E2FC               	bc	u471
   864                           
   865                           ;kernel.c: 28:   ready_queue.tasks_installed++;
   866  000B9E  EE23  F034         	lfsr	2,_ready_queue+660
   867  000BA2  2ADE               	incf	postinc2,f,c
   868  000BA4  0E00               	movlw	0
   869  000BA6  22DD               	addwfc	postdec2,f,c
   870                           
   871                           ; _lunos_createTask: autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
   872  000BA8  0E8E               	movlw	142
   873  000BAA  26E1               	addwf	fsr1l,f,c
   874  000BAC  0EFF               	movlw	255
   875  000BAE  22E2               	addwfc	fsr1h,f,c
   876  000BB0  0012               	return		;funcret
   877  000BB2                     __end_of_lunos_createTask:
   878                           	opt callstack 0
   879                           
   880 ;; *************** function _SRAMInitHeap *****************
   881 ;; Defined at:
   882 ;;		line 313 in file "sralloc.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  count           2  [STACK] unsigned int 
   887 ;;  pHeap           2  [STACK] PTR unsigned char 
   888 ;;		 -> _uDynamicHeap(512), 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1  [STACK] void 
   891 ;; Registers used:
   892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   898 ;;      Params:         0       0       0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; Hardware stack levels required when called:   10
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_lunos_init
   909 ;; This function uses a reentrant model
   910 ;;
   911                           
   912                           	psect	text5
   913  0010A8                     __ptext5:
   914                           	opt callstack 0
   915  0010A8                     _SRAMInitHeap:
   916                           	opt callstack 0
   917                           
   918                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   919  0010A8  52E6               	movf	postinc1,f,c
   920  0010AA  52E6               	movf	postinc1,f,c
   921  0010AC  52E6               	movf	postinc1,f,c
   922  0010AE  52E6               	movf	postinc1,f,c
   923                           
   924                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
   925                           ;stkvar	_pHeap @ sp[(-4)+2]
   926                           
   927                           ;incstack = 0
   928  0010B0  0E03               	movlw	high __uDynamicHeap
   929  0010B2  6E47               	movwf	btemp,c
   930  0010B4  0EFF               	movlw	-1
   931  0010B6  C047  FFE3         	movff	btemp,plusw1
   932  0010BA  0E38               	movlw	low __uDynamicHeap
   933  0010BC  6E47               	movwf	btemp,c
   934  0010BE  0EFE               	movlw	-2
   935  0010C0  C047  FFE3         	movff	btemp,plusw1
   936                           
   937                           ;sralloc.c: 319:  count = 0x200 -1;
   938  0010C4  0EFF               	movlw	255
   939  0010C6  6E51               	movwf	btemp+10,c
   940  0010C8  0E01               	movlw	1
   941  0010CA  6E52               	movwf	btemp+11,c
   942                           
   943                           ;stkvar	_count @ sp[(-4)+0]
   944  0010CC  0EFC               	movlw	-4
   945  0010CE  C051  FFE3         	movff	btemp+10,plusw1
   946  0010D2  0EFD               	movlw	-3
   947  0010D4  C052  FFE3         	movff	btemp+11,plusw1
   948  0010D8                     l1538:
   949                           
   950                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
   951                           ;stkvar	_count @ sp[(-4)+0]
   952  0010D8  0EFD               	movlw	-3
   953  0010DA  50E3               	movf	plusw1,w,c
   954  0010DC  E107               	bnz	u480
   955  0010DE  0EFC               	movlw	-4
   956  0010E0  CFE3 F047          	movff	plusw1,btemp
   957  0010E4  0E80               	movlw	128
   958  0010E6  5E47               	subwf	btemp,f,c
   959  0010E8  A0D8               	btfss	status,0,c
   960  0010EA  D023               	goto	l1546
   961  0010EC                     u480:
   962                           
   963                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
   964                           ;stkvar	_pHeap @ sp[(-4)+2]
   965  0010EC  0EFE               	movlw	-2
   966  0010EE  CFE3 FFD9          	movff	plusw1,fsr2l
   967  0010F2  0EFF               	movlw	-1
   968  0010F4  CFE3 FFDA          	movff	plusw1,fsr2h
   969  0010F8  0E7F               	movlw	127
   970  0010FA  6EDF               	movwf	indf2,c
   971                           
   972                           ;sralloc.c: 326:    pHeap += 0x7F;
   973                           ;stkvar	_pHeap @ sp[(-4)+2]
   974  0010FC  0EFE               	movlw	-2
   975  0010FE  50E3               	movf	plusw1,w,c
   976  001100  0F7F               	addlw	127
   977  001102  6E47               	movwf	btemp,c
   978  001104  0EFE               	movlw	-2
   979  001106  C047  FFE3         	movff	btemp,plusw1
   980  00110A  6A47               	clrf	btemp,c
   981  00110C  0EFF               	movlw	-1
   982  00110E  50E3               	movf	plusw1,w,c
   983  001110  2047               	addwfc	btemp,w,c
   984  001112  6E47               	movwf	btemp,c
   985  001114  0EFF               	movlw	-1
   986  001116  C047  FFE3         	movff	btemp,plusw1
   987                           
   988                           ;sralloc.c: 327:    count = count - 0x7F;
   989                           ;stkvar	_count @ sp[(-4)+0]
   990  00111A  50E1               	movf	fsr1l,w,c
   991  00111C  0FFC               	addlw	-4
   992  00111E  6ED9               	movwf	fsr2l,c
   993  001120  50E2               	movf	fsr1h,w,c
   994  001122  6EDA               	movwf	fsr2h,c
   995  001124  0EFF               	movlw	255
   996  001126  22DA               	addwfc	fsr2h,f,c
   997  001128  0E81               	movlw	129
   998  00112A  26DE               	addwf	postinc2,f,c
   999  00112C  0EFF               	movlw	255
  1000  00112E  22DD               	addwfc	postdec2,f,c
  1001                           
  1002                           ;sralloc.c: 328:   }
  1003  001130  D7D3               	goto	l1538
  1004  001132                     l1546:
  1005                           
  1006                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1007                           ;stkvar	_count @ sp[(-4)+0]
  1008                           ;stkvar	_pHeap @ sp[(-4)+2]
  1009  001132  0EFE               	movlw	-2
  1010  001134  CFE3 FFD9          	movff	plusw1,fsr2l
  1011  001138  0EFF               	movlw	-1
  1012  00113A  CFE3 FFDA          	movff	plusw1,fsr2h
  1013  00113E  0EFC               	movlw	-4
  1014  001140  CFE3 FFDF          	movff	plusw1,indf2
  1015                           
  1016                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1017                           ;stkvar	_count @ sp[(-4)+0]
  1018  001144  0EFC               	movlw	-4
  1019  001146  CFE3 F051          	movff	plusw1,btemp+10
  1020  00114A  0EFD               	movlw	-3
  1021  00114C  CFE3 F052          	movff	plusw1,btemp+11
  1022                           
  1023                           ;stkvar	_pHeap @ sp[(-4)+2]
  1024  001150  0EFE               	movlw	-2
  1025  001152  CFE3 F04F          	movff	plusw1,btemp+8
  1026  001156  0EFF               	movlw	-1
  1027  001158  CFE3 F050          	movff	plusw1,btemp+9
  1028  00115C  5051               	movf	btemp+10,w,c
  1029  00115E  244F               	addwf	btemp+8,w,c
  1030  001160  6ED9               	movwf	fsr2l,c
  1031  001162  5052               	movf	btemp+11,w,c
  1032  001164  2050               	addwfc	btemp+9,w,c
  1033  001166  6EDA               	movwf	fsr2h,c
  1034  001168  0E00               	movlw	0
  1035  00116A  6EDF               	movwf	indf2,c
  1036                           
  1037                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1038  00116C  52E5               	movf	postdec1,f,c
  1039  00116E  52E5               	movf	postdec1,f,c
  1040  001170  52E5               	movf	postdec1,f,c
  1041  001172  52E5               	movf	postdec1,f,c
  1042  001174  0012               	return		;funcret
  1043  001176                     __end_of_SRAMInitHeap:
  1044                           	opt callstack 0
  1045                           
  1046 ;; *************** function _dispatcher *****************
  1047 ;; Defined at:
  1048 ;;		line 66 in file "kernel.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  state           1  [STACK] enum E4
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1  [STACK] void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1062 ;;      Params:         0       0       0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:   13
  1069 ;; This function calls:
  1070 ;;		_scheduler
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;;		_sem_wait
  1074 ;; This function uses a reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text6
  1078  0004DC                     __ptext6:
  1079                           	opt callstack 0
  1080  0004DC                     _dispatcher:
  1081                           	opt callstack 11
  1082                           
  1083                           ;kernel.c: 67:   INTCONbits.GIE = 0;
  1084                           
  1085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1086                           ;incstack = 0
  1087  0004DC  9EF2               	bcf	4082,7,c	;volatile
  1088                           
  1089                           ;kernel.c: 69:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size;};
  1090  0004DE  C336  F009         	movff	_ready_queue+662,_who
  1091  0004E2  C337  F00A         	movff	_ready_queue+663,_who+1
  1092                           
  1093                           ;stkvar	_state @ sp[(0)+-1]
  1094  0004E6  C009  F051         	movff	_who,btemp+10
  1095  0004EA  C00A  F052         	movff	_who+1,btemp+11
  1096  0004EE  0E6E               	movlw	110
  1097  0004F0  0251               	mulwf	btemp+10,c
  1098  0004F2  CFF3 F04F          	movff	prodl,btemp+8
  1099  0004F6  CFF4 F050          	movff	prodh,btemp+9
  1100  0004FA  0252               	mulwf	btemp+11,c
  1101  0004FC  50F3               	movf	prodl,w,c
  1102  0004FE  2650               	addwf	btemp+9,f,c
  1103  000500  0EA8               	movlw	low (_ready_queue+8)
  1104  000502  244F               	addwf	btemp+8,w,c
  1105  000504  6ED9               	movwf	fsr2l,c
  1106  000506  0E00               	movlw	high (_ready_queue+8)
  1107  000508  2050               	addwfc	btemp+9,w,c
  1108  00050A  6EDA               	movwf	fsr2h,c
  1109  00050C  0EFF               	movlw	-1
  1110  00050E  CFE3 FFDF          	movff	plusw1,indf2
  1111  000512  C009  F051         	movff	_who,btemp+10
  1112  000516  C00A  F052         	movff	_who+1,btemp+11
  1113  00051A  0E6E               	movlw	110
  1114  00051C  0251               	mulwf	btemp+10,c
  1115  00051E  CFF3 F04F          	movff	prodl,btemp+8
  1116  000522  CFF4 F050          	movff	prodh,btemp+9
  1117  000526  0252               	mulwf	btemp+11,c
  1118  000528  50F3               	movf	prodl,w,c
  1119  00052A  2650               	addwf	btemp+9,f,c
  1120  00052C  0EA5               	movlw	low (_ready_queue+5)
  1121  00052E  244F               	addwf	btemp+8,w,c
  1122  000530  6ED9               	movwf	fsr2l,c
  1123  000532  0E00               	movlw	high (_ready_queue+5)
  1124  000534  2050               	addwfc	btemp+9,w,c
  1125  000536  6EDA               	movwf	fsr2h,c
  1126  000538  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1127  00053C  C009  F051         	movff	_who,btemp+10
  1128  000540  C00A  F052         	movff	_who+1,btemp+11
  1129  000544  0E6E               	movlw	110
  1130  000546  0251               	mulwf	btemp+10,c
  1131  000548  CFF3 F04F          	movff	prodl,btemp+8
  1132  00054C  CFF4 F050          	movff	prodh,btemp+9
  1133  000550  0252               	mulwf	btemp+11,c
  1134  000552  50F3               	movf	prodl,w,c
  1135  000554  2650               	addwf	btemp+9,f,c
  1136  000556  0EA6               	movlw	low (_ready_queue+6)
  1137  000558  244F               	addwf	btemp+8,w,c
  1138  00055A  6ED9               	movwf	fsr2l,c
  1139  00055C  0E00               	movlw	high (_ready_queue+6)
  1140  00055E  2050               	addwfc	btemp+9,w,c
  1141  000560  6EDA               	movwf	fsr2h,c
  1142  000562  CFD8 FFDF          	movff	status,indf2	;volatile
  1143  000566  C009  F051         	movff	_who,btemp+10
  1144  00056A  C00A  F052         	movff	_who+1,btemp+11
  1145  00056E  0E6E               	movlw	110
  1146  000570  0251               	mulwf	btemp+10,c
  1147  000572  CFF3 F04F          	movff	prodl,btemp+8
  1148  000576  CFF4 F050          	movff	prodh,btemp+9
  1149  00057A  0252               	mulwf	btemp+11,c
  1150  00057C  50F3               	movf	prodl,w,c
  1151  00057E  2650               	addwf	btemp+9,f,c
  1152  000580  0EA7               	movlw	low (_ready_queue+7)
  1153  000582  244F               	addwf	btemp+8,w,c
  1154  000584  6ED9               	movwf	fsr2l,c
  1155  000586  0E00               	movlw	high (_ready_queue+7)
  1156  000588  2050               	addwfc	btemp+9,w,c
  1157  00058A  6EDA               	movwf	fsr2h,c
  1158  00058C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1159  000590  6A07               	clrf	_size,c
  1160  000592  6A08               	clrf	_size+1,c
  1161  000594  D08D               	goto	l1494
  1162  000596                     l1490:
  1163  000596  C007  F051         	movff	_size,btemp+10
  1164  00059A  C008  F052         	movff	_size+1,btemp+11
  1165  00059E  0E03               	movlw	3
  1166  0005A0  0251               	mulwf	btemp+10,c
  1167  0005A2  CFF3 F04F          	movff	prodl,btemp+8
  1168  0005A6  CFF4 F050          	movff	prodh,btemp+9
  1169  0005AA  0252               	mulwf	btemp+11,c
  1170  0005AC  50F3               	movf	prodl,w,c
  1171  0005AE  2650               	addwf	btemp+9,f,c
  1172  0005B0  C009  F051         	movff	_who,btemp+10
  1173  0005B4  C00A  F052         	movff	_who+1,btemp+11
  1174  0005B8  0E6E               	movlw	110
  1175  0005BA  0251               	mulwf	btemp+10,c
  1176  0005BC  CFF3 F04D          	movff	prodl,btemp+6
  1177  0005C0  CFF4 F04E          	movff	prodh,btemp+7
  1178  0005C4  0252               	mulwf	btemp+11,c
  1179  0005C6  50F3               	movf	prodl,w,c
  1180  0005C8  264E               	addwf	btemp+7,f,c
  1181  0005CA  0EA0               	movlw	low _ready_queue
  1182  0005CC  6E51               	movwf	btemp+10,c
  1183  0005CE  0E00               	movlw	high _ready_queue
  1184  0005D0  6E52               	movwf	btemp+11,c
  1185  0005D2  0E09               	movlw	9
  1186  0005D4  2651               	addwf	btemp+10,f,c
  1187  0005D6  0E00               	movlw	0
  1188  0005D8  2252               	addwfc	btemp+11,f,c
  1189  0005DA  504D               	movf	btemp+6,w,c
  1190  0005DC  2651               	addwf	btemp+10,f,c
  1191  0005DE  504E               	movf	btemp+7,w,c
  1192  0005E0  2252               	addwfc	btemp+11,f,c
  1193  0005E2  504F               	movf	btemp+8,w,c
  1194  0005E4  2451               	addwf	btemp+10,w,c
  1195  0005E6  6ED9               	movwf	fsr2l,c
  1196  0005E8  5050               	movf	btemp+9,w,c
  1197  0005EA  2052               	addwfc	btemp+11,w,c
  1198  0005EC  6EDA               	movwf	fsr2h,c
  1199  0005EE  CFFF FFDF          	movff	tosu,indf2	;volatile
  1200  0005F2  C007  F051         	movff	_size,btemp+10
  1201  0005F6  C008  F052         	movff	_size+1,btemp+11
  1202  0005FA  0E03               	movlw	3
  1203  0005FC  0251               	mulwf	btemp+10,c
  1204  0005FE  CFF3 F04F          	movff	prodl,btemp+8
  1205  000602  CFF4 F050          	movff	prodh,btemp+9
  1206  000606  0252               	mulwf	btemp+11,c
  1207  000608  50F3               	movf	prodl,w,c
  1208  00060A  2650               	addwf	btemp+9,f,c
  1209  00060C  C009  F051         	movff	_who,btemp+10
  1210  000610  C00A  F052         	movff	_who+1,btemp+11
  1211  000614  0E6E               	movlw	110
  1212  000616  0251               	mulwf	btemp+10,c
  1213  000618  CFF3 F04D          	movff	prodl,btemp+6
  1214  00061C  CFF4 F04E          	movff	prodh,btemp+7
  1215  000620  0252               	mulwf	btemp+11,c
  1216  000622  50F3               	movf	prodl,w,c
  1217  000624  264E               	addwf	btemp+7,f,c
  1218  000626  0EA0               	movlw	low _ready_queue
  1219  000628  6E51               	movwf	btemp+10,c
  1220  00062A  0E00               	movlw	high _ready_queue
  1221  00062C  6E52               	movwf	btemp+11,c
  1222  00062E  0E0B               	movlw	11
  1223  000630  2651               	addwf	btemp+10,f,c
  1224  000632  0E00               	movlw	0
  1225  000634  2252               	addwfc	btemp+11,f,c
  1226  000636  504D               	movf	btemp+6,w,c
  1227  000638  2651               	addwf	btemp+10,f,c
  1228  00063A  504E               	movf	btemp+7,w,c
  1229  00063C  2252               	addwfc	btemp+11,f,c
  1230  00063E  504F               	movf	btemp+8,w,c
  1231  000640  2451               	addwf	btemp+10,w,c
  1232  000642  6ED9               	movwf	fsr2l,c
  1233  000644  5050               	movf	btemp+9,w,c
  1234  000646  2052               	addwfc	btemp+11,w,c
  1235  000648  6EDA               	movwf	fsr2h,c
  1236  00064A  CFFE FFDF          	movff	tosh,indf2	;volatile
  1237  00064E  C007  F051         	movff	_size,btemp+10
  1238  000652  C008  F052         	movff	_size+1,btemp+11
  1239  000656  0E03               	movlw	3
  1240  000658  0251               	mulwf	btemp+10,c
  1241  00065A  CFF3 F04F          	movff	prodl,btemp+8
  1242  00065E  CFF4 F050          	movff	prodh,btemp+9
  1243  000662  0252               	mulwf	btemp+11,c
  1244  000664  50F3               	movf	prodl,w,c
  1245  000666  2650               	addwf	btemp+9,f,c
  1246  000668  C009  F051         	movff	_who,btemp+10
  1247  00066C  C00A  F052         	movff	_who+1,btemp+11
  1248  000670  0E6E               	movlw	110
  1249  000672  0251               	mulwf	btemp+10,c
  1250  000674  CFF3 F04D          	movff	prodl,btemp+6
  1251  000678  CFF4 F04E          	movff	prodh,btemp+7
  1252  00067C  0252               	mulwf	btemp+11,c
  1253  00067E  50F3               	movf	prodl,w,c
  1254  000680  264E               	addwf	btemp+7,f,c
  1255  000682  0EA0               	movlw	low _ready_queue
  1256  000684  6E51               	movwf	btemp+10,c
  1257  000686  0E00               	movlw	high _ready_queue
  1258  000688  6E52               	movwf	btemp+11,c
  1259  00068A  0E0A               	movlw	10
  1260  00068C  2651               	addwf	btemp+10,f,c
  1261  00068E  0E00               	movlw	0
  1262  000690  2252               	addwfc	btemp+11,f,c
  1263  000692  504D               	movf	btemp+6,w,c
  1264  000694  2651               	addwf	btemp+10,f,c
  1265  000696  504E               	movf	btemp+7,w,c
  1266  000698  2252               	addwfc	btemp+11,f,c
  1267  00069A  504F               	movf	btemp+8,w,c
  1268  00069C  2451               	addwf	btemp+10,w,c
  1269  00069E  6ED9               	movwf	fsr2l,c
  1270  0006A0  5050               	movf	btemp+9,w,c
  1271  0006A2  2052               	addwfc	btemp+11,w,c
  1272  0006A4  6EDA               	movwf	fsr2h,c
  1273  0006A6  CFFD FFDF          	movff	tosl,indf2	;volatile
  1274  0006AA  4A07               	infsnz	_size,f,c
  1275  0006AC  2A08               	incf	_size+1,f,c
  1276  0006AE  0006               	pop		;# 
  1277  0006B0                     l1494:
  1278  0006B0  50FC               	movf	stkptr,w,c	;volatile
  1279  0006B2  A4D8               	btfss	status,2,c
  1280  0006B4  D770               	goto	l1490
  1281  0006B6  C009  F051         	movff	_who,btemp+10
  1282  0006BA  C00A  F052         	movff	_who+1,btemp+11
  1283  0006BE  0E6E               	movlw	110
  1284  0006C0  0251               	mulwf	btemp+10,c
  1285  0006C2  CFF3 F04F          	movff	prodl,btemp+8
  1286  0006C6  CFF4 F050          	movff	prodh,btemp+9
  1287  0006CA  0252               	mulwf	btemp+11,c
  1288  0006CC  50F3               	movf	prodl,w,c
  1289  0006CE  2650               	addwf	btemp+9,f,c
  1290  0006D0  0E06               	movlw	low (_ready_queue+102)
  1291  0006D2  244F               	addwf	btemp+8,w,c
  1292  0006D4  6ED9               	movwf	fsr2l,c
  1293  0006D6  0E01               	movlw	high (_ready_queue+102)
  1294  0006D8  2050               	addwfc	btemp+9,w,c
  1295  0006DA  6EDA               	movwf	fsr2h,c
  1296  0006DC  C007  FFDE         	movff	_size,postinc2
  1297  0006E0  C008  FFDD         	movff	_size+1,postdec2
  1298                           
  1299                           ;kernel.c: 71:   ready_queue.task_running = scheduler();
  1300  0006E4  EC49  F00B         	call	_scheduler	;wreg free
  1301  0006E8  C047  F336         	movff	btemp,_ready_queue+662
  1302  0006EC  C048  F337         	movff	btemp+1,_ready_queue+663
  1303                           
  1304                           ;kernel.c: 73:   { STKPTR = 0; who = ready_queue.task_running; if (ready_queue.tasks[who
      +                          ].task_installed == 0) { ready_queue.tasks[who].task_installed = 1; __asm("PUSH"); TOS =
      +                           ready_queue.tasks[who].task_f; } else { ready_queue.tasks[who].task_state = RUNNING; WR
      +                          EG = ready_queue.tasks[who].W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = rea
      +                          dy_queue.tasks[who].BSR_reg; size = ready_queue.tasks[who].task_stack.stack_level; while
      +                          (size){ __asm("PUSH"); TOSL = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSL_reg
      +                          ; TOSH = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSH_reg; TOSU = ready_queue.
      +                          tasks[who].task_stack.h_stack[size-1].TOSU_reg; size--; } }};
  1305  0006F0  6AFC               	clrf	stkptr,c	;volatile
  1306  0006F2  C336  F009         	movff	_ready_queue+662,_who
  1307  0006F6  C337  F00A         	movff	_ready_queue+663,_who+1
  1308  0006FA  C009  F051         	movff	_who,btemp+10
  1309  0006FE  C00A  F052         	movff	_who+1,btemp+11
  1310  000702  0E6E               	movlw	110
  1311  000704  0251               	mulwf	btemp+10,c
  1312  000706  CFF3 F04F          	movff	prodl,btemp+8
  1313  00070A  CFF4 F050          	movff	prodh,btemp+9
  1314  00070E  0252               	mulwf	btemp+11,c
  1315  000710  50F3               	movf	prodl,w,c
  1316  000712  2650               	addwf	btemp+9,f,c
  1317  000714  0E08               	movlw	low (_ready_queue+104)
  1318  000716  244F               	addwf	btemp+8,w,c
  1319  000718  6ED9               	movwf	fsr2l,c
  1320  00071A  0E01               	movlw	high (_ready_queue+104)
  1321  00071C  2050               	addwfc	btemp+9,w,c
  1322  00071E  6EDA               	movwf	fsr2h,c
  1323  000720  50DE               	movf	postinc2,w,c
  1324  000722  10DE               	iorwf	postinc2,w,c
  1325  000724  A4D8               	btfss	status,2,c
  1326  000726  D035               	goto	l1508
  1327  000728  C009  F051         	movff	_who,btemp+10
  1328  00072C  C00A  F052         	movff	_who+1,btemp+11
  1329  000730  0E6E               	movlw	110
  1330  000732  0251               	mulwf	btemp+10,c
  1331  000734  CFF3 F04F          	movff	prodl,btemp+8
  1332  000738  CFF4 F050          	movff	prodh,btemp+9
  1333  00073C  0252               	mulwf	btemp+11,c
  1334  00073E  50F3               	movf	prodl,w,c
  1335  000740  2650               	addwf	btemp+9,f,c
  1336  000742  0E08               	movlw	low (_ready_queue+104)
  1337  000744  244F               	addwf	btemp+8,w,c
  1338  000746  6ED9               	movwf	fsr2l,c
  1339  000748  0E01               	movlw	high (_ready_queue+104)
  1340  00074A  2050               	addwfc	btemp+9,w,c
  1341  00074C  6EDA               	movwf	fsr2h,c
  1342  00074E  0E01               	movlw	1
  1343  000750  6EDE               	movwf	postinc2,c
  1344  000752  0E00               	movlw	0
  1345  000754  6EDD               	movwf	postdec2,c
  1346  000756  0005               	push		;# 
  1347  000758  C009  F051         	movff	_who,btemp+10
  1348  00075C  C00A  F052         	movff	_who+1,btemp+11
  1349  000760  0E6E               	movlw	110
  1350  000762  0251               	mulwf	btemp+10,c
  1351  000764  CFF3 F04F          	movff	prodl,btemp+8
  1352  000768  CFF4 F050          	movff	prodh,btemp+9
  1353  00076C  0252               	mulwf	btemp+11,c
  1354  00076E  50F3               	movf	prodl,w,c
  1355  000770  2650               	addwf	btemp+9,f,c
  1356  000772  0E0A               	movlw	low (_ready_queue+106)
  1357  000774  244F               	addwf	btemp+8,w,c
  1358  000776  6ED9               	movwf	fsr2l,c
  1359  000778  0E01               	movlw	high (_ready_queue+106)
  1360  00077A  2050               	addwfc	btemp+9,w,c
  1361  00077C  6EDA               	movwf	fsr2h,c
  1362  00077E  CFDE F051          	movff	postinc2,btemp+10
  1363  000782  CFDD F052          	movff	postdec2,btemp+11
  1364  000786  C051  FFFD         	movff	btemp+10,tosl	;volatile
  1365  00078A  C052  FFFE         	movff	btemp+11,tosh	;volatile
  1366  00078E  6AFF               	clrf	tosu,c	;volatile
  1367  000790  D0FF               	goto	u460
  1368  000792                     l1508:
  1369  000792  C009  F051         	movff	_who,btemp+10
  1370  000796  C00A  F052         	movff	_who+1,btemp+11
  1371  00079A  0E6E               	movlw	110
  1372  00079C  0251               	mulwf	btemp+10,c
  1373  00079E  CFF3 F04F          	movff	prodl,btemp+8
  1374  0007A2  CFF4 F050          	movff	prodh,btemp+9
  1375  0007A6  0252               	mulwf	btemp+11,c
  1376  0007A8  50F3               	movf	prodl,w,c
  1377  0007AA  2650               	addwf	btemp+9,f,c
  1378  0007AC  0EA8               	movlw	low (_ready_queue+8)
  1379  0007AE  244F               	addwf	btemp+8,w,c
  1380  0007B0  6ED9               	movwf	fsr2l,c
  1381  0007B2  0E00               	movlw	high (_ready_queue+8)
  1382  0007B4  2050               	addwfc	btemp+9,w,c
  1383  0007B6  6EDA               	movwf	fsr2h,c
  1384  0007B8  0E01               	movlw	1
  1385  0007BA  6EDF               	movwf	indf2,c
  1386  0007BC  C009  F051         	movff	_who,btemp+10
  1387  0007C0  C00A  F052         	movff	_who+1,btemp+11
  1388  0007C4  0E6E               	movlw	110
  1389  0007C6  0251               	mulwf	btemp+10,c
  1390  0007C8  CFF3 F04F          	movff	prodl,btemp+8
  1391  0007CC  CFF4 F050          	movff	prodh,btemp+9
  1392  0007D0  0252               	mulwf	btemp+11,c
  1393  0007D2  50F3               	movf	prodl,w,c
  1394  0007D4  2650               	addwf	btemp+9,f,c
  1395  0007D6  0EA5               	movlw	low (_ready_queue+5)
  1396  0007D8  244F               	addwf	btemp+8,w,c
  1397  0007DA  6ED9               	movwf	fsr2l,c
  1398  0007DC  0E00               	movlw	high (_ready_queue+5)
  1399  0007DE  2050               	addwfc	btemp+9,w,c
  1400  0007E0  6EDA               	movwf	fsr2h,c
  1401  0007E2  50DF               	movf	indf2,w,c
  1402  0007E4  6E52               	movwf	btemp+11,c
  1403  0007E6  5052               	movf	btemp+11,w,c
  1404  0007E8  C009  F051         	movff	_who,btemp+10
  1405  0007EC  C00A  F052         	movff	_who+1,btemp+11
  1406  0007F0  0E6E               	movlw	110
  1407  0007F2  0251               	mulwf	btemp+10,c
  1408  0007F4  CFF3 F04F          	movff	prodl,btemp+8
  1409  0007F8  CFF4 F050          	movff	prodh,btemp+9
  1410  0007FC  0252               	mulwf	btemp+11,c
  1411  0007FE  50F3               	movf	prodl,w,c
  1412  000800  2650               	addwf	btemp+9,f,c
  1413  000802  0EA6               	movlw	low (_ready_queue+6)
  1414  000804  244F               	addwf	btemp+8,w,c
  1415  000806  6ED9               	movwf	fsr2l,c
  1416  000808  0E00               	movlw	high (_ready_queue+6)
  1417  00080A  2050               	addwfc	btemp+9,w,c
  1418  00080C  6EDA               	movwf	fsr2h,c
  1419  00080E  50DF               	movf	indf2,w,c
  1420  000810  6ED8               	movwf	status,c	;volatile
  1421  000812  C009  F051         	movff	_who,btemp+10
  1422  000816  C00A  F052         	movff	_who+1,btemp+11
  1423  00081A  0E6E               	movlw	110
  1424  00081C  0251               	mulwf	btemp+10,c
  1425  00081E  CFF3 F04F          	movff	prodl,btemp+8
  1426  000822  CFF4 F050          	movff	prodh,btemp+9
  1427  000826  0252               	mulwf	btemp+11,c
  1428  000828  50F3               	movf	prodl,w,c
  1429  00082A  2650               	addwf	btemp+9,f,c
  1430  00082C  0EA7               	movlw	low (_ready_queue+7)
  1431  00082E  244F               	addwf	btemp+8,w,c
  1432  000830  6ED9               	movwf	fsr2l,c
  1433  000832  0E00               	movlw	high (_ready_queue+7)
  1434  000834  2050               	addwfc	btemp+9,w,c
  1435  000836  6EDA               	movwf	fsr2h,c
  1436  000838  50DF               	movf	indf2,w,c
  1437  00083A  6EE0               	movwf	bsr,c	;volatile
  1438  00083C  C009  F051         	movff	_who,btemp+10
  1439  000840  C00A  F052         	movff	_who+1,btemp+11
  1440  000844  0E6E               	movlw	110
  1441  000846  0251               	mulwf	btemp+10,c
  1442  000848  CFF3 F04F          	movff	prodl,btemp+8
  1443  00084C  CFF4 F050          	movff	prodh,btemp+9
  1444  000850  0252               	mulwf	btemp+11,c
  1445  000852  50F3               	movf	prodl,w,c
  1446  000854  2650               	addwf	btemp+9,f,c
  1447  000856  0E06               	movlw	low (_ready_queue+102)
  1448  000858  244F               	addwf	btemp+8,w,c
  1449  00085A  6ED9               	movwf	fsr2l,c
  1450  00085C  0E01               	movlw	high (_ready_queue+102)
  1451  00085E  2050               	addwfc	btemp+9,w,c
  1452  000860  6EDA               	movwf	fsr2h,c
  1453  000862  CFDE F007          	movff	postinc2,_size
  1454  000866  CFDD F008          	movff	postdec2,_size+1
  1455  00086A  D08E               	goto	l1514
  1456  00086C                     l127:
  1457  00086C  0005               	push		;# 
  1458  00086E  C007  F051         	movff	_size,btemp+10
  1459  000872  C008  F052         	movff	_size+1,btemp+11
  1460  000876  0E03               	movlw	3
  1461  000878  0251               	mulwf	btemp+10,c
  1462  00087A  CFF3 F04F          	movff	prodl,btemp+8
  1463  00087E  CFF4 F050          	movff	prodh,btemp+9
  1464  000882  0252               	mulwf	btemp+11,c
  1465  000884  50F3               	movf	prodl,w,c
  1466  000886  2650               	addwf	btemp+9,f,c
  1467  000888  C009  F051         	movff	_who,btemp+10
  1468  00088C  C00A  F052         	movff	_who+1,btemp+11
  1469  000890  0E6E               	movlw	110
  1470  000892  0251               	mulwf	btemp+10,c
  1471  000894  CFF3 F04D          	movff	prodl,btemp+6
  1472  000898  CFF4 F04E          	movff	prodh,btemp+7
  1473  00089C  0252               	mulwf	btemp+11,c
  1474  00089E  50F3               	movf	prodl,w,c
  1475  0008A0  264E               	addwf	btemp+7,f,c
  1476  0008A2  0EA0               	movlw	low _ready_queue
  1477  0008A4  6E51               	movwf	btemp+10,c
  1478  0008A6  0E00               	movlw	high _ready_queue
  1479  0008A8  6E52               	movwf	btemp+11,c
  1480  0008AA  0E07               	movlw	7
  1481  0008AC  2651               	addwf	btemp+10,f,c
  1482  0008AE  0E00               	movlw	0
  1483  0008B0  2252               	addwfc	btemp+11,f,c
  1484  0008B2  504D               	movf	btemp+6,w,c
  1485  0008B4  2651               	addwf	btemp+10,f,c
  1486  0008B6  504E               	movf	btemp+7,w,c
  1487  0008B8  2252               	addwfc	btemp+11,f,c
  1488  0008BA  504F               	movf	btemp+8,w,c
  1489  0008BC  2451               	addwf	btemp+10,w,c
  1490  0008BE  6ED9               	movwf	fsr2l,c
  1491  0008C0  5050               	movf	btemp+9,w,c
  1492  0008C2  2052               	addwfc	btemp+11,w,c
  1493  0008C4  6EDA               	movwf	fsr2h,c
  1494  0008C6  50DF               	movf	indf2,w,c
  1495  0008C8  6EFD               	movwf	tosl,c	;volatile
  1496  0008CA  C007  F051         	movff	_size,btemp+10
  1497  0008CE  C008  F052         	movff	_size+1,btemp+11
  1498  0008D2  0E03               	movlw	3
  1499  0008D4  0251               	mulwf	btemp+10,c
  1500  0008D6  CFF3 F04F          	movff	prodl,btemp+8
  1501  0008DA  CFF4 F050          	movff	prodh,btemp+9
  1502  0008DE  0252               	mulwf	btemp+11,c
  1503  0008E0  50F3               	movf	prodl,w,c
  1504  0008E2  2650               	addwf	btemp+9,f,c
  1505  0008E4  C009  F051         	movff	_who,btemp+10
  1506  0008E8  C00A  F052         	movff	_who+1,btemp+11
  1507  0008EC  0E6E               	movlw	110
  1508  0008EE  0251               	mulwf	btemp+10,c
  1509  0008F0  CFF3 F04D          	movff	prodl,btemp+6
  1510  0008F4  CFF4 F04E          	movff	prodh,btemp+7
  1511  0008F8  0252               	mulwf	btemp+11,c
  1512  0008FA  50F3               	movf	prodl,w,c
  1513  0008FC  264E               	addwf	btemp+7,f,c
  1514  0008FE  0EA0               	movlw	low _ready_queue
  1515  000900  6E51               	movwf	btemp+10,c
  1516  000902  0E00               	movlw	high _ready_queue
  1517  000904  6E52               	movwf	btemp+11,c
  1518  000906  0E08               	movlw	8
  1519  000908  2651               	addwf	btemp+10,f,c
  1520  00090A  0E00               	movlw	0
  1521  00090C  2252               	addwfc	btemp+11,f,c
  1522  00090E  504D               	movf	btemp+6,w,c
  1523  000910  2651               	addwf	btemp+10,f,c
  1524  000912  504E               	movf	btemp+7,w,c
  1525  000914  2252               	addwfc	btemp+11,f,c
  1526  000916  504F               	movf	btemp+8,w,c
  1527  000918  2451               	addwf	btemp+10,w,c
  1528  00091A  6ED9               	movwf	fsr2l,c
  1529  00091C  5050               	movf	btemp+9,w,c
  1530  00091E  2052               	addwfc	btemp+11,w,c
  1531  000920  6EDA               	movwf	fsr2h,c
  1532  000922  50DF               	movf	indf2,w,c
  1533  000924  6EFE               	movwf	tosh,c	;volatile
  1534  000926  C007  F051         	movff	_size,btemp+10
  1535  00092A  C008  F052         	movff	_size+1,btemp+11
  1536  00092E  0E03               	movlw	3
  1537  000930  0251               	mulwf	btemp+10,c
  1538  000932  CFF3 F04F          	movff	prodl,btemp+8
  1539  000936  CFF4 F050          	movff	prodh,btemp+9
  1540  00093A  0252               	mulwf	btemp+11,c
  1541  00093C  50F3               	movf	prodl,w,c
  1542  00093E  2650               	addwf	btemp+9,f,c
  1543  000940  C009  F051         	movff	_who,btemp+10
  1544  000944  C00A  F052         	movff	_who+1,btemp+11
  1545  000948  0E6E               	movlw	110
  1546  00094A  0251               	mulwf	btemp+10,c
  1547  00094C  CFF3 F04D          	movff	prodl,btemp+6
  1548  000950  CFF4 F04E          	movff	prodh,btemp+7
  1549  000954  0252               	mulwf	btemp+11,c
  1550  000956  50F3               	movf	prodl,w,c
  1551  000958  264E               	addwf	btemp+7,f,c
  1552  00095A  0EA0               	movlw	low _ready_queue
  1553  00095C  6E51               	movwf	btemp+10,c
  1554  00095E  0E00               	movlw	high _ready_queue
  1555  000960  6E52               	movwf	btemp+11,c
  1556  000962  0E06               	movlw	6
  1557  000964  2651               	addwf	btemp+10,f,c
  1558  000966  0E00               	movlw	0
  1559  000968  2252               	addwfc	btemp+11,f,c
  1560  00096A  504D               	movf	btemp+6,w,c
  1561  00096C  2651               	addwf	btemp+10,f,c
  1562  00096E  504E               	movf	btemp+7,w,c
  1563  000970  2252               	addwfc	btemp+11,f,c
  1564  000972  504F               	movf	btemp+8,w,c
  1565  000974  2451               	addwf	btemp+10,w,c
  1566  000976  6ED9               	movwf	fsr2l,c
  1567  000978  5050               	movf	btemp+9,w,c
  1568  00097A  2052               	addwfc	btemp+11,w,c
  1569  00097C  6EDA               	movwf	fsr2h,c
  1570  00097E  50DF               	movf	indf2,w,c
  1571  000980  6EFF               	movwf	tosu,c	;volatile
  1572  000982  0607               	decf	_size,f,c
  1573  000984  A0D8               	btfss	status,0,c
  1574  000986  0608               	decf	_size+1,f,c
  1575  000988                     l1514:
  1576  000988  5007               	movf	_size,w,c
  1577  00098A  1008               	iorwf	_size+1,w,c
  1578  00098C  A4D8               	btfss	status,2,c
  1579  00098E  D76E               	goto	l127
  1580  000990                     u460:
  1581                           
  1582                           ;kernel.c: 75:   INTCONbits.GIE = 1;
  1583  000990  8EF2               	bsf	4082,7,c	;volatile
  1584                           
  1585                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  1586  000992  52E5               	movf	postdec1,f,c
  1587  000994  0012               	return		;funcret
  1588  000996                     __end_of_dispatcher:
  1589                           	opt callstack 0
  1590                           
  1591 ;; *************** function _scheduler *****************
  1592 ;; Defined at:
  1593 ;;		line 58 in file "kernel.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  2  [STACK] unsigned int 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1607 ;;      Params:         0       0       0       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0
  1610 ;;      Totals:         0       0       0       0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:   12
  1614 ;; This function calls:
  1615 ;;		_round_robin
  1616 ;; This function is called by:
  1617 ;;		_dispatcher
  1618 ;; This function uses a reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text7
  1622  001692                     __ptext7:
  1623                           	opt callstack 0
  1624  001692                     _scheduler:
  1625                           	opt callstack 11
  1626                           
  1627                           ;kernel.c: 60:   return round_robin();
  1628                           
  1629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1630                           ;incstack = 0
  1631  001692  EC64  F009         	call	_round_robin	;wreg free
  1632                           
  1633                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  1634  001696  0012               	return		;funcret
  1635  001698                     __end_of_scheduler:
  1636                           	opt callstack 0
  1637                           
  1638 ;; *************** function _round_robin *****************
  1639 ;; Defined at:
  1640 ;;		line 78 in file "kernel.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  next_task_to    2  [STACK] int 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  2  [STACK] unsigned int 
  1647 ;; Registers used:
  1648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1654 ;;      Params:         0       0       0       0       0       0       0
  1655 ;;      Locals:         0       0       0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0
  1657 ;;      Totals:         0       0       0       0       0       0       0
  1658 ;;Total ram usage:        0 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:   11
  1661 ;; This function calls:
  1662 ;;		___lwmod
  1663 ;; This function is called by:
  1664 ;;		_ISR_timer0
  1665 ;;		_scheduler
  1666 ;; This function uses a reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text8
  1670  0012C8                     __ptext8:
  1671                           	opt callstack 0
  1672  0012C8                     _round_robin:
  1673                           	opt callstack 0
  1674                           
  1675                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1676  0012C8  52E6               	movf	postinc1,f,c
  1677  0012CA  52E6               	movf	postinc1,f,c
  1678                           
  1679                           ;kernel.c: 79:   int next_task_to_run = ready_queue.task_running;
  1680                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1681                           
  1682                           ;incstack = 0
  1683  0012CC  0EFE               	movlw	-2
  1684  0012CE  C336  FFE3         	movff	_ready_queue+662,plusw1
  1685  0012D2  0EFF               	movlw	-1
  1686  0012D4  C337  FFE3         	movff	_ready_queue+663,plusw1
  1687  0012D8                     l1626:
  1688                           
  1689                           ;kernel.c: 82:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  1690  0012D8  EE23  F034         	lfsr	2,_ready_queue+660
  1691  0012DC  CFDE F051          	movff	postinc2,btemp+10
  1692  0012E0  CFDD F052          	movff	postdec2,btemp+11
  1693  0012E4  C051  FFE6         	movff	btemp+10,postinc1
  1694  0012E8  C052  FFE6         	movff	btemp+11,postinc1
  1695                           
  1696                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  1697  0012EC  0EFC               	movlw	-4
  1698  0012EE  50E3               	movf	plusw1,w,c
  1699  0012F0  0F01               	addlw	1
  1700  0012F2  6E51               	movwf	btemp+10,c
  1701  0012F4  0EFD               	movlw	-3
  1702  0012F6  CFE3 F052          	movff	plusw1,btemp+11
  1703  0012FA  0E00               	movlw	0
  1704  0012FC  2252               	addwfc	btemp+11,f,c
  1705  0012FE  C051  FFE6         	movff	btemp+10,postinc1
  1706  001302  C052  FFE6         	movff	btemp+11,postinc1
  1707  001306  ECBB  F008         	call	___lwmod	;wreg free
  1708                           
  1709                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1710  00130A  0EFE               	movlw	-2
  1711  00130C  C047  FFE3         	movff	btemp,plusw1
  1712  001310  0EFF               	movlw	-1
  1713  001312  C048  FFE3         	movff	btemp+1,plusw1
  1714                           
  1715                           ;kernel.c: 83:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  1716                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1717  001316  0EFE               	movlw	-2
  1718  001318  CFE3 F051          	movff	plusw1,btemp+10
  1719  00131C  0EFF               	movlw	-1
  1720  00131E  CFE3 F052          	movff	plusw1,btemp+11
  1721  001322  0E6E               	movlw	110
  1722  001324  0251               	mulwf	btemp+10,c
  1723  001326  CFF3 F04F          	movff	prodl,btemp+8
  1724  00132A  CFF4 F050          	movff	prodh,btemp+9
  1725  00132E  0252               	mulwf	btemp+11,c
  1726  001330  50F3               	movf	prodl,w,c
  1727  001332  2650               	addwf	btemp+9,f,c
  1728  001334  0EA8               	movlw	low (_ready_queue+8)
  1729  001336  244F               	addwf	btemp+8,w,c
  1730  001338  6ED9               	movwf	fsr2l,c
  1731  00133A  0E00               	movlw	high (_ready_queue+8)
  1732  00133C  2050               	addwfc	btemp+9,w,c
  1733  00133E  6EDA               	movwf	fsr2h,c
  1734  001340  50DF               	movf	indf2,w,c
  1735  001342  A4D8               	btfss	status,2,c
  1736  001344  D7C9               	goto	l1626
  1737                           
  1738                           ;kernel.c: 85:   return next_task_to_run;
  1739                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1740  001346  0EFE               	movlw	-2
  1741  001348  CFE3 F047          	movff	plusw1,btemp
  1742  00134C  0EFF               	movlw	-1
  1743  00134E  CFE3 F048          	movff	plusw1,btemp+1
  1744                           
  1745                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  1746  001352  52E5               	movf	postdec1,f,c
  1747  001354  52E5               	movf	postdec1,f,c
  1748  001356  0012               	return		;funcret
  1749  001358                     __end_of_round_robin:
  1750                           	opt callstack 0
  1751                           
  1752 ;; *************** function ___lwmod *****************
  1753 ;; Defined at:
  1754 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  dividend        2  [STACK] unsigned int 
  1757 ;;  divisor         2  [STACK] unsigned int 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  counter         1  [STACK] unsigned char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  2  [STACK] unsigned int 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1769 ;;      Params:         0       0       0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0
  1772 ;;      Totals:         0       0       0       0       0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:   10
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_round_robin
  1780 ;;		_sem_wait
  1781 ;;		_sem_post
  1782 ;; This function uses a reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text9
  1786  001176                     __ptext9:
  1787                           	opt callstack 0
  1788  001176                     ___lwmod:
  1789                           	opt callstack 0
  1790                           
  1791                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1792  001176  52E6               	movf	postinc1,f,c
  1793                           
  1794                           ;stkvar	_divisor @ sp[(-1)+-4]
  1795                           
  1796                           ;incstack = 0
  1797  001178  0EFB               	movlw	-5
  1798  00117A  CFE3 F047          	movff	plusw1,btemp
  1799  00117E  0EFC               	movlw	-4
  1800  001180  50E3               	movf	plusw1,w,c
  1801  001182  1047               	iorwf	btemp,w,c
  1802  001184  B4D8               	btfsc	status,2,c
  1803  001186  D04A               	goto	u540
  1804                           
  1805                           ;stkvar	_counter @ sp[(-1)+0]
  1806  001188  0EFF               	movlw	-1
  1807  00118A  6AE3               	clrf	plusw1,c
  1808  00118C  D010               	goto	L1
  1809  00118E                     l1592:
  1810                           
  1811                           ;stkvar	_divisor @ sp[(-1)+-4]
  1812  00118E  0EFB               	movlw	-5
  1813  001190  50E3               	movf	plusw1,w,c
  1814  001192  90D8               	bcf	status,0,c
  1815  001194  34E8               	rlcf	wreg,w,c
  1816  001196  6E47               	movwf	btemp,c
  1817  001198  0EFB               	movlw	-5
  1818  00119A  C047  FFE3         	movff	btemp,plusw1
  1819  00119E  0EFC               	movlw	-4
  1820  0011A0  50E3               	movf	plusw1,w,c
  1821  0011A2  34E8               	rlcf	wreg,w,c
  1822  0011A4  6E47               	movwf	btemp,c
  1823  0011A6  0EFC               	movlw	-4
  1824  0011A8  C047  FFE3         	movff	btemp,plusw1
  1825                           
  1826                           ;stkvar	_counter @ sp[(-1)+0]
  1827  0011AC  0EFF               	movlw	-1
  1828  0011AE                     L1:
  1829  0011AE  2AE3               	incf	plusw1,f,c
  1830                           
  1831                           ;stkvar	_divisor @ sp[(-1)+-4]
  1832  0011B0  0EFC               	movlw	-4
  1833  0011B2  AEE3               	btfss	plusw1,7,c
  1834  0011B4  D7EC               	goto	l1592
  1835  0011B6                     u520:
  1836                           
  1837                           ;stkvar	_divisor @ sp[(-1)+-4]
  1838  0011B6  0EFB               	movlw	-5
  1839  0011B8  CFE3 F051          	movff	plusw1,btemp+10
  1840  0011BC  0EFC               	movlw	-4
  1841  0011BE  CFE3 F052          	movff	plusw1,btemp+11
  1842                           
  1843                           ;stkvar	_dividend @ sp[(-1)+-2]
  1844  0011C2  0EFD               	movlw	-3
  1845  0011C4  CFE3 F04F          	movff	plusw1,btemp+8
  1846  0011C8  0EFE               	movlw	-2
  1847  0011CA  CFE3 F050          	movff	plusw1,btemp+9
  1848  0011CE  5051               	movf	btemp+10,w,c
  1849  0011D0  5C4F               	subwf	btemp+8,w,c
  1850  0011D2  5052               	movf	btemp+11,w,c
  1851  0011D4  5850               	subwfb	btemp+9,w,c
  1852  0011D6  A0D8               	btfss	status,0,c
  1853  0011D8  D012               	goto	l1602
  1854                           
  1855                           ;stkvar	_divisor @ sp[(-1)+-4]
  1856                           ;stkvar	_dividend @ sp[(-1)+-2]
  1857  0011DA  0EFD               	movlw	-3
  1858  0011DC  50E3               	movf	plusw1,w,c
  1859  0011DE  6E47               	movwf	btemp,c
  1860  0011E0  0EFB               	movlw	-5
  1861  0011E2  50E3               	movf	plusw1,w,c
  1862  0011E4  5E47               	subwf	btemp,f,c
  1863  0011E6  0EFD               	movlw	-3
  1864  0011E8  C047  FFE3         	movff	btemp,plusw1
  1865  0011EC  0EFE               	movlw	-2
  1866  0011EE  50E3               	movf	plusw1,w,c
  1867  0011F0  6E47               	movwf	btemp,c
  1868  0011F2  0EFC               	movlw	-4
  1869  0011F4  50E3               	movf	plusw1,w,c
  1870  0011F6  5A47               	subwfb	btemp,f,c
  1871  0011F8  0EFE               	movlw	-2
  1872  0011FA  C047  FFE3         	movff	btemp,plusw1
  1873  0011FE                     l1602:
  1874                           
  1875                           ;stkvar	_divisor @ sp[(-1)+-4]
  1876  0011FE  90D8               	bcf	status,0,c
  1877  001200  0EFC               	movlw	-4
  1878  001202  32E3               	rrcf	plusw1,f,c
  1879  001204  0EFB               	movlw	-5
  1880  001206  32E3               	rrcf	plusw1,f,c
  1881                           
  1882                           ;stkvar	_counter @ sp[(-1)+0]
  1883  001208  0EFF               	movlw	-1
  1884  00120A  50E3               	movf	plusw1,w,c
  1885  00120C  6E47               	movwf	btemp,c
  1886  00120E  0E01               	movlw	1
  1887  001210  5E47               	subwf	btemp,f,c
  1888  001212  0EFF               	movlw	-1
  1889  001214  C047  FFE3         	movff	btemp,plusw1
  1890  001218  A4D8               	btfss	status,2,c
  1891  00121A  D7CD               	goto	u520
  1892  00121C                     u540:
  1893                           
  1894                           ;stkvar	_dividend @ sp[(-1)+-2]
  1895  00121C  0EFD               	movlw	-3
  1896  00121E  CFE3 F047          	movff	plusw1,btemp
  1897  001222  0EFE               	movlw	-2
  1898  001224  CFE3 F048          	movff	plusw1,btemp+1
  1899                           
  1900                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  1901  001228  0EFB               	movlw	251
  1902  00122A  26E1               	addwf	fsr1l,f,c
  1903  00122C  0EFF               	movlw	255
  1904  00122E  22E2               	addwfc	fsr1h,f,c
  1905  001230  0012               	return		;funcret
  1906  001232                     __end_of___lwmod:
  1907                           	opt callstack 0
  1908                           
  1909 ;; *************** function _config_timer0 *****************
  1910 ;; Defined at:
  1911 ;;		line 23 in file "int0_test.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1  [STACK] void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1925 ;;      Params:         0       0       0       0       0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0
  1928 ;;      Totals:         0       0       0       0       0       0       0
  1929 ;;Total ram usage:        0 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:   10
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text10
  1940  001670                     __ptext10:
  1941                           	opt callstack 0
  1942  001670                     _config_timer0:
  1943                           	opt callstack 20
  1944                           
  1945                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  1946                           
  1947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1948                           ;incstack = 0
  1949  001670  9AD5               	bcf	4053,5,c	;volatile
  1950                           
  1951                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  1952  001672  96D5               	bcf	4053,3,c	;volatile
  1953                           
  1954                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  1955  001674  0E07               	movlw	7
  1956  001676  12D5               	iorwf	4053,f,c	;volatile
  1957                           
  1958                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  1959  001678  8CF2               	bsf	4082,6,c	;volatile
  1960                           
  1961                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  1962  00167A  8AF2               	bsf	4082,5,c	;volatile
  1963                           
  1964                           ;int0_test.c: 33:   TMR0L = 252;
  1965  00167C  0EFC               	movlw	252
  1966  00167E  6ED6               	movwf	4054,c	;volatile
  1967                           
  1968                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  1969  001680  0012               	return		;funcret
  1970  001682                     __end_of_config_timer0:
  1971                           	opt callstack 0
  1972                           
  1973 ;; *************** function _config_INT0 *****************
  1974 ;; Defined at:
  1975 ;;		line 13 in file "int0_test.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1  [STACK] void 
  1982 ;; Registers used:
  1983 ;;		None
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1989 ;;      Params:         0       0       0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:   10
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text11
  2004  001682                     __ptext11:
  2005                           	opt callstack 0
  2006  001682                     _config_INT0:
  2007                           	opt callstack 20
  2008                           
  2009                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2010                           
  2011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2012                           ;incstack = 0
  2013  001682  9095               	bcf	3989,0,c	;volatile
  2014                           
  2015                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2016  001684  8EF2               	bsf	4082,7,c	;volatile
  2017                           
  2018                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2019  001686  88F2               	bsf	4082,4,c	;volatile
  2020                           
  2021                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2022  001688  88F2               	bsf	4082,4,c	;volatile
  2023                           
  2024                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2025  00168A  92F2               	bcf	4082,1,c	;volatile
  2026                           
  2027                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2028  00168C  9EF1               	bcf	4081,7,c	;volatile
  2029                           
  2030                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2031  00168E  9CF1               	bcf	4081,6,c	;volatile
  2032                           
  2033                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2034  001690  0012               	return		;funcret
  2035  001692                     __end_of_config_INT0:
  2036                           	opt callstack 0
  2037                           
  2038 ;; *************** function _task_idle *****************
  2039 ;; Defined at:
  2040 ;;		line 117 in file "kernel.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1  [STACK] void 
  2047 ;; Registers used:
  2048 ;;		None
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2054 ;;      Params:         0       0       0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0
  2057 ;;      Totals:         0       0       0       0       0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    3
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_lunos_init
  2065 ;; This function uses a reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text12
  2069  001698                     __ptext12:
  2070                           	opt callstack 0
  2071  001698                     _task_idle:
  2072                           	opt callstack 23
  2073                           
  2074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2075                           ;incstack = 0
  2076                           ;kernel.c: 119:   while (1) __nop();
  2077  001698  F000               	nop	
  2078  00169A  D7FE               	goto	_task_idle
  2079  00169C                     __end_of_task_idle:
  2080                           	opt callstack 0
  2081                           
  2082 ;; *************** function _count_bottles *****************
  2083 ;; Defined at:
  2084 ;;		line 44 in file "tasks.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  bottle          1  [STACK] struct .
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1  [STACK] void 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2098 ;;      Params:         0       0       0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    8
  2105 ;; This function calls:
  2106 ;;		_sem_post
  2107 ;;		_sem_wait
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text13
  2114  0014CA                     __ptext13:
  2115                           	opt callstack 0
  2116  0014CA                     _count_bottles:
  2117                           	opt callstack 0
  2118                           
  2119                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2120  0014CA  52E6               	movf	postinc1,f,c
  2121  0014CC                     l286:
  2122                           
  2123                           ;tasks.c: 46:         sem_wait(&count_sem);
  2124  0014CC  0E2B               	movlw	low _count_sem
  2125  0014CE  6EE6               	movwf	postinc1,c
  2126  0014D0  0E00               	movlw	high _count_sem
  2127  0014D2  6EE6               	movwf	postinc1,c
  2128  0014D4  ECE4  F007         	call	_sem_wait	;wreg free
  2129                           
  2130                           ;tasks.c: 47:         PORTDbits.RD4 = 0;
  2131  0014D8  9883               	bcf	3971,4,c	;volatile
  2132                           
  2133                           ;tasks.c: 48:         while(global_buffer.count <= 3){
  2134  0014DA  D01F               	goto	l1782
  2135  0014DC                     l289:
  2136  0014DC  BC82               	btfsc	3970,6,c	;volatile
  2137  0014DE  D7FE               	goto	l289
  2138                           
  2139                           ;tasks.c: 50:             t_bottle bottle;;tasks.c: 51:             global_buffer.bottle
      +                          s[global_buffer.count] = bottle;
  2140                           ;stkvar	_bottle @ sp[(-1)+0]
  2141  0014E0  C001  F051         	movff	_global_buffer,btemp+10
  2142  0014E4  C002  F052         	movff	_global_buffer+1,btemp+11
  2143  0014E8  0E03               	movlw	low (_global_buffer+2)
  2144  0014EA  2451               	addwf	btemp+10,w,c
  2145  0014EC  6ED9               	movwf	fsr2l,c
  2146  0014EE  0E00               	movlw	high (_global_buffer+2)
  2147  0014F0  2052               	addwfc	btemp+11,w,c
  2148  0014F2  6EDA               	movwf	fsr2h,c
  2149  0014F4  0EFF               	movlw	-1
  2150  0014F6  CFE3 FFDF          	movff	plusw1,indf2
  2151                           
  2152                           ;tasks.c: 52:             global_buffer.bottles[global_buffer.count].bottle_state = EMPT
      +                          Y;
  2153  0014FA  C001  F051         	movff	_global_buffer,btemp+10
  2154  0014FE  C002  F052         	movff	_global_buffer+1,btemp+11
  2155  001502  0E03               	movlw	low (_global_buffer+2)
  2156  001504  2451               	addwf	btemp+10,w,c
  2157  001506  6ED9               	movwf	fsr2l,c
  2158  001508  0E00               	movlw	high (_global_buffer+2)
  2159  00150A  2052               	addwfc	btemp+11,w,c
  2160  00150C  6EDA               	movwf	fsr2h,c
  2161  00150E  0E00               	movlw	0
  2162  001510  6EDF               	movwf	indf2,c
  2163                           
  2164                           ;tasks.c: 53:             global_buffer.count += 1;
  2165  001512  4A01               	infsnz	_global_buffer,f,c
  2166  001514  2A02               	incf	_global_buffer+1,f,c
  2167                           
  2168                           ;tasks.c: 54:             global_buffer.p_state = BUSY_;
  2169  001516  0E01               	movlw	1
  2170  001518  6E06               	movwf	_global_buffer+5,c
  2171  00151A                     l1782:
  2172                           
  2173                           ;tasks.c: 48:         while(global_buffer.count <= 3){
  2174  00151A  BE02               	btfsc	_global_buffer+1,7,c
  2175  00151C  D7DF               	goto	l289
  2176  00151E  5002               	movf	_global_buffer+1,w,c
  2177  001520  E104               	bnz	u66_20
  2178  001522  0E04               	movlw	4
  2179  001524  5C01               	subwf	_global_buffer,w,c
  2180  001526  A0D8               	btfss	status,0,c
  2181  001528  D7D9               	goto	l289
  2182  00152A                     u66_20:
  2183                           
  2184                           ;tasks.c: 56:         sem_post(&fill_sem);
  2185  00152A  0E1B               	movlw	low _fill_sem
  2186  00152C  6EE6               	movwf	postinc1,c
  2187  00152E  0E00               	movlw	high _fill_sem
  2188  001530  6EE6               	movwf	postinc1,c
  2189  001532  ECE2  F006         	call	_sem_post	;wreg free
  2190                           
  2191                           ;tasks.c: 57:         PORTDbits.RD4 = 1;
  2192  001536  8883               	bsf	3971,4,c	;volatile
  2193  001538  D7C9               	goto	l286
  2194  00153A                     __end_of_count_bottles:
  2195                           	opt callstack 0
  2196                           
  2197 ;; *************** function _sem_wait *****************
  2198 ;; Defined at:
  2199 ;;		line 20 in file "semaphore.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  s               2  [STACK] PTR struct semaphore
  2202 ;;		 -> out_sem(16), cover_sem(16), check_sem(16), fill_sem(16), 
  2203 ;;		 -> count_sem(16), 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1  [STACK] void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2215 ;;      Params:         0       0       0       0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0
  2218 ;;      Totals:         0       0       0       0       0       0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    7
  2222 ;; This function calls:
  2223 ;;		___lwmod
  2224 ;;		_dispatcher
  2225 ;; This function is called by:
  2226 ;;		_pipe_write
  2227 ;;		_pipe_read
  2228 ;;		_count_bottles
  2229 ;;		_fill_bottle
  2230 ;;		_check_level
  2231 ;;		_cover_bottle
  2232 ;;		_count_out
  2233 ;; This function uses a reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text14
  2237  000FC8                     __ptext14:
  2238                           	opt callstack 0
  2239  000FC8                     _sem_wait:
  2240                           	opt callstack 18
  2241                           
  2242                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  2243                           
  2244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2245                           ;incstack = 0
  2246  000FC8  9EF2               	bcf	4082,7,c	;volatile
  2247                           
  2248                           ;semaphore.c: 23:   s->contador -= 1;
  2249                           ;stkvar	_s @ sp[(0)+-2]
  2250  000FCA  0EFE               	movlw	-2
  2251  000FCC  CFE3 FFD9          	movff	plusw1,fsr2l
  2252  000FD0  0EFF               	movlw	-1
  2253  000FD2  CFE3 FFDA          	movff	plusw1,fsr2h
  2254  000FD6  06DE               	decf	postinc2,f,c
  2255  000FD8  0E00               	movlw	0
  2256  000FDA  5ADD               	subwfb	postdec2,f,c
  2257                           
  2258                           ;semaphore.c: 24:   if (s->contador < 0) {
  2259                           ;stkvar	_s @ sp[(0)+-2]
  2260  000FDC  0EFE               	movlw	-2
  2261  000FDE  CFE3 FFD9          	movff	plusw1,fsr2l
  2262  000FE2  0EFF               	movlw	-1
  2263  000FE4  CFE3 FFDA          	movff	plusw1,fsr2h
  2264  000FE8  0E01               	movlw	1
  2265  000FEA  AEDB               	btfss	plusw2,7,c
  2266  000FEC  D059               	goto	l1574
  2267                           
  2268                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  2269  000FEE  EE23  F036         	lfsr	2,_ready_queue+662
  2270                           
  2271                           ;stkvar	_s @ sp[(0)+-2]
  2272  000FF2  0EFE               	movlw	-2
  2273  000FF4  CFE3 F051          	movff	plusw1,btemp+10
  2274  000FF8  0EFF               	movlw	-1
  2275  000FFA  CFE3 F052          	movff	plusw1,btemp+11
  2276  000FFE  0E0C               	movlw	12
  2277  001000  2451               	addwf	btemp+10,w,c
  2278  001002  6EE9               	movwf	fsr0l,c
  2279  001004  0E00               	movlw	0
  2280  001006  2052               	addwfc	btemp+11,w,c
  2281  001008  6EEA               	movwf	fsr0h,c
  2282  00100A  CFEE F051          	movff	postinc0,btemp+10
  2283  00100E  CFED F052          	movff	postdec0,btemp+11
  2284  001012  90D8               	bcf	status,0,c
  2285  001014  3451               	rlcf	btemp+10,w,c
  2286  001016  6E4F               	movwf	btemp+8,c
  2287  001018  3452               	rlcf	btemp+11,w,c
  2288  00101A  6E50               	movwf	btemp+9,c
  2289                           
  2290                           ;stkvar	_s @ sp[(0)+-2]
  2291  00101C  0EFE               	movlw	-2
  2292  00101E  50E3               	movf	plusw1,w,c
  2293  001020  264F               	addwf	btemp+8,f,c
  2294  001022  0EFF               	movlw	-1
  2295  001024  50E3               	movf	plusw1,w,c
  2296  001026  2250               	addwfc	btemp+9,f,c
  2297  001028  0E02               	movlw	2
  2298  00102A  244F               	addwf	btemp+8,w,c
  2299  00102C  6EE9               	movwf	fsr0l,c
  2300  00102E  0E00               	movlw	0
  2301  001030  2050               	addwfc	btemp+9,w,c
  2302  001032  6EEA               	movwf	fsr0h,c
  2303  001034  CFDE FFEE          	movff	postinc2,postinc0
  2304  001038  CFDD FFED          	movff	postdec2,postdec0
  2305                           
  2306                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 5;
  2307  00103C  0E05               	movlw	5
  2308  00103E  6EE6               	movwf	postinc1,c
  2309  001040  0E00               	movlw	0
  2310  001042  6EE6               	movwf	postinc1,c
  2311                           
  2312                           ;stkvar	_s @ sp[(-2)+-2]
  2313  001044  0EFC               	movlw	-4
  2314  001046  CFE3 F051          	movff	plusw1,btemp+10
  2315  00104A  0EFD               	movlw	-3
  2316  00104C  CFE3 F052          	movff	plusw1,btemp+11
  2317  001050  0E0C               	movlw	12
  2318  001052  2451               	addwf	btemp+10,w,c
  2319  001054  6ED9               	movwf	fsr2l,c
  2320  001056  0E00               	movlw	0
  2321  001058  2052               	addwfc	btemp+11,w,c
  2322  00105A  6EDA               	movwf	fsr2h,c
  2323  00105C  CFDE F051          	movff	postinc2,btemp+10
  2324  001060  CFDD F052          	movff	postdec2,btemp+11
  2325  001064  0E01               	movlw	1
  2326  001066  2651               	addwf	btemp+10,f,c
  2327  001068  0E00               	movlw	0
  2328  00106A  2252               	addwfc	btemp+11,f,c
  2329  00106C  C051  FFE6         	movff	btemp+10,postinc1
  2330  001070  C052  FFE6         	movff	btemp+11,postinc1
  2331  001074  ECBB  F008         	call	___lwmod	;wreg free
  2332                           
  2333                           ;stkvar	_s @ sp[(0)+-2]
  2334  001078  0EFE               	movlw	-2
  2335  00107A  CFE3 F051          	movff	plusw1,btemp+10
  2336  00107E  0EFF               	movlw	-1
  2337  001080  CFE3 F052          	movff	plusw1,btemp+11
  2338  001084  0E0C               	movlw	12
  2339  001086  2451               	addwf	btemp+10,w,c
  2340  001088  6ED9               	movwf	fsr2l,c
  2341  00108A  0E00               	movlw	0
  2342  00108C  2052               	addwfc	btemp+11,w,c
  2343  00108E  6EDA               	movwf	fsr2h,c
  2344  001090  C047  FFDE         	movff	btemp,postinc2
  2345  001094  C048  FFDD         	movff	btemp+1,postdec2
  2346                           
  2347                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  2348  001098  0E05               	movlw	5
  2349  00109A  6EE6               	movwf	postinc1,c
  2350  00109C  EC6E  F002         	call	_dispatcher	;wreg free
  2351  0010A0                     l1574:
  2352                           
  2353                           ;semaphore.c: 30:   INTCONbits.GIE = 1;
  2354  0010A0  8EF2               	bsf	4082,7,c	;volatile
  2355                           
  2356                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2357  0010A2  52E5               	movf	postdec1,f,c
  2358  0010A4  52E5               	movf	postdec1,f,c
  2359  0010A6  0012               	return		;funcret
  2360  0010A8                     __end_of_sem_wait:
  2361                           	opt callstack 0
  2362                           
  2363 ;; *************** function _sem_post *****************
  2364 ;; Defined at:
  2365 ;;		line 33 in file "semaphore.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  s               2  [STACK] PTR struct semaphore
  2368 ;;		 -> out_sem(16), cover_sem(16), check_sem(16), fill_sem(16), 
  2369 ;;		 -> count_sem(16), 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1  [STACK] void 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2381 ;;      Params:         0       0       0       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0
  2384 ;;      Totals:         0       0       0       0       0       0       0
  2385 ;;Total ram usage:        0 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    4
  2388 ;; This function calls:
  2389 ;;		___lwmod
  2390 ;; This function is called by:
  2391 ;;		_pipe_write
  2392 ;;		_pipe_read
  2393 ;;		_count_bottles
  2394 ;;		_fill_bottle
  2395 ;;		_check_level
  2396 ;;		_cover_bottle
  2397 ;;		_count_out
  2398 ;; This function uses a reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text15
  2402  000DC4                     __ptext15:
  2403                           	opt callstack 0
  2404  000DC4                     _sem_post:
  2405                           	opt callstack 21
  2406                           
  2407                           ;semaphore.c: 34:   INTCONbits.GIE = 0;
  2408                           
  2409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2410                           ;incstack = 0
  2411  000DC4  9EF2               	bcf	4082,7,c	;volatile
  2412                           
  2413                           ;semaphore.c: 36:   s->contador += 1;
  2414                           ;stkvar	_s @ sp[(0)+-2]
  2415  000DC6  0EFE               	movlw	-2
  2416  000DC8  CFE3 FFD9          	movff	plusw1,fsr2l
  2417  000DCC  0EFF               	movlw	-1
  2418  000DCE  CFE3 FFDA          	movff	plusw1,fsr2h
  2419  000DD2  2ADE               	incf	postinc2,f,c
  2420  000DD4  0E00               	movlw	0
  2421  000DD6  22DD               	addwfc	postdec2,f,c
  2422                           
  2423                           ;semaphore.c: 37:   if (s->contador <= 0) {
  2424                           ;stkvar	_s @ sp[(0)+-2]
  2425  000DD8  0EFE               	movlw	-2
  2426  000DDA  CFE3 FFD9          	movff	plusw1,fsr2l
  2427  000DDE  0EFF               	movlw	-1
  2428  000DE0  CFE3 FFDA          	movff	plusw1,fsr2h
  2429  000DE4  0E01               	movlw	1
  2430  000DE6  BEDB               	btfsc	plusw2,7,c
  2431  000DE8  D006               	goto	u50_20
  2432  000DEA  0E01               	movlw	1
  2433  000DEC  50DB               	movf	plusw2,w,c
  2434  000DEE  E167               	bnz	l1586
  2435  000DF0  04DE               	decf	postinc2,w,c
  2436  000DF2  B0D8               	btfsc	status,0,c
  2437  000DF4  D064               	goto	l1586
  2438  000DF6                     u50_20:
  2439                           
  2440                           ;semaphore.c: 38:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  2441                           ;stkvar	_s @ sp[(0)+-2]
  2442  000DF6  0EFE               	movlw	-2
  2443  000DF8  CFE3 F051          	movff	plusw1,btemp+10
  2444  000DFC  0EFF               	movlw	-1
  2445  000DFE  CFE3 F052          	movff	plusw1,btemp+11
  2446  000E02  0E0E               	movlw	14
  2447  000E04  2451               	addwf	btemp+10,w,c
  2448  000E06  6ED9               	movwf	fsr2l,c
  2449  000E08  0E00               	movlw	0
  2450  000E0A  2052               	addwfc	btemp+11,w,c
  2451  000E0C  6EDA               	movwf	fsr2h,c
  2452  000E0E  CFDE F051          	movff	postinc2,btemp+10
  2453  000E12  CFDD F052          	movff	postdec2,btemp+11
  2454  000E16  90D8               	bcf	status,0,c
  2455  000E18  3451               	rlcf	btemp+10,w,c
  2456  000E1A  6E4F               	movwf	btemp+8,c
  2457  000E1C  3452               	rlcf	btemp+11,w,c
  2458  000E1E  6E50               	movwf	btemp+9,c
  2459                           
  2460                           ;stkvar	_s @ sp[(0)+-2]
  2461  000E20  0EFE               	movlw	-2
  2462  000E22  50E3               	movf	plusw1,w,c
  2463  000E24  264F               	addwf	btemp+8,f,c
  2464  000E26  0EFF               	movlw	-1
  2465  000E28  50E3               	movf	plusw1,w,c
  2466  000E2A  2250               	addwfc	btemp+9,f,c
  2467  000E2C  0E02               	movlw	2
  2468  000E2E  244F               	addwf	btemp+8,w,c
  2469  000E30  6ED9               	movwf	fsr2l,c
  2470  000E32  0E00               	movlw	0
  2471  000E34  2050               	addwfc	btemp+9,w,c
  2472  000E36  6EDA               	movwf	fsr2h,c
  2473  000E38  CFDE F051          	movff	postinc2,btemp+10
  2474  000E3C  CFDD F052          	movff	postdec2,btemp+11
  2475  000E40  0E6E               	movlw	110
  2476  000E42  0251               	mulwf	btemp+10,c
  2477  000E44  CFF3 F04F          	movff	prodl,btemp+8
  2478  000E48  CFF4 F050          	movff	prodh,btemp+9
  2479  000E4C  0252               	mulwf	btemp+11,c
  2480  000E4E  50F3               	movf	prodl,w,c
  2481  000E50  2650               	addwf	btemp+9,f,c
  2482  000E52  0EA8               	movlw	low (_ready_queue+8)
  2483  000E54  244F               	addwf	btemp+8,w,c
  2484  000E56  6ED9               	movwf	fsr2l,c
  2485  000E58  0E00               	movlw	high (_ready_queue+8)
  2486  000E5A  2050               	addwfc	btemp+9,w,c
  2487  000E5C  6EDA               	movwf	fsr2h,c
  2488  000E5E  0E00               	movlw	0
  2489  000E60  6EDF               	movwf	indf2,c
  2490                           
  2491                           ;semaphore.c: 39:     s->task_to_ready = (s->task_to_ready + 1) % 5;
  2492  000E62  0E05               	movlw	5
  2493  000E64  6EE6               	movwf	postinc1,c
  2494  000E66  0E00               	movlw	0
  2495  000E68  6EE6               	movwf	postinc1,c
  2496                           
  2497                           ;stkvar	_s @ sp[(-2)+-2]
  2498  000E6A  0EFC               	movlw	-4
  2499  000E6C  CFE3 F051          	movff	plusw1,btemp+10
  2500  000E70  0EFD               	movlw	-3
  2501  000E72  CFE3 F052          	movff	plusw1,btemp+11
  2502  000E76  0E0E               	movlw	14
  2503  000E78  2451               	addwf	btemp+10,w,c
  2504  000E7A  6ED9               	movwf	fsr2l,c
  2505  000E7C  0E00               	movlw	0
  2506  000E7E  2052               	addwfc	btemp+11,w,c
  2507  000E80  6EDA               	movwf	fsr2h,c
  2508  000E82  CFDE F051          	movff	postinc2,btemp+10
  2509  000E86  CFDD F052          	movff	postdec2,btemp+11
  2510  000E8A  0E01               	movlw	1
  2511  000E8C  2651               	addwf	btemp+10,f,c
  2512  000E8E  0E00               	movlw	0
  2513  000E90  2252               	addwfc	btemp+11,f,c
  2514  000E92  C051  FFE6         	movff	btemp+10,postinc1
  2515  000E96  C052  FFE6         	movff	btemp+11,postinc1
  2516  000E9A  ECBB  F008         	call	___lwmod	;wreg free
  2517                           
  2518                           ;stkvar	_s @ sp[(0)+-2]
  2519  000E9E  0EFE               	movlw	-2
  2520  000EA0  CFE3 F051          	movff	plusw1,btemp+10
  2521  000EA4  0EFF               	movlw	-1
  2522  000EA6  CFE3 F052          	movff	plusw1,btemp+11
  2523  000EAA  0E0E               	movlw	14
  2524  000EAC  2451               	addwf	btemp+10,w,c
  2525  000EAE  6ED9               	movwf	fsr2l,c
  2526  000EB0  0E00               	movlw	0
  2527  000EB2  2052               	addwfc	btemp+11,w,c
  2528  000EB4  6EDA               	movwf	fsr2h,c
  2529  000EB6  C047  FFDE         	movff	btemp,postinc2
  2530  000EBA  C048  FFDD         	movff	btemp+1,postdec2
  2531  000EBE                     l1586:
  2532                           
  2533                           ;semaphore.c: 43:   INTCONbits.GIE = 1;
  2534  000EBE  8EF2               	bsf	4082,7,c	;volatile
  2535                           
  2536                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2537  000EC0  52E5               	movf	postdec1,f,c
  2538  000EC2  52E5               	movf	postdec1,f,c
  2539  000EC4  0012               	return		;funcret
  2540  000EC6                     __end_of_sem_post:
  2541                           	opt callstack 0
  2542                           
  2543 ;; *************** function _fill_bottle *****************
  2544 ;; Defined at:
  2545 ;;		line 60 in file "tasks.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1  [STACK] void 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2559 ;;      Params:         0       0       0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0
  2562 ;;      Totals:         0       0       0       0       0       0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    8
  2566 ;; This function calls:
  2567 ;;		_sem_post
  2568 ;;		_sem_wait
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text16
  2575  001644                     __ptext16:
  2576                           	opt callstack 0
  2577  001644                     _fill_bottle:
  2578                           	opt callstack 18
  2579                           
  2580                           ;tasks.c: 62:         sem_wait(&fill_sem);
  2581                           
  2582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2583                           ;incstack = 0
  2584                           ;tasks.c: 61:     while(1){
  2585  001644  0E1B               	movlw	low _fill_sem
  2586  001646  6EE6               	movwf	postinc1,c
  2587  001648  0E00               	movlw	high _fill_sem
  2588  00164A  6EE6               	movwf	postinc1,c
  2589  00164C  ECE4  F007         	call	_sem_wait	;wreg free
  2590                           
  2591                           ;tasks.c: 63:         PORTDbits.RD5 = 0;
  2592  001650  9A83               	bcf	3971,5,c	;volatile
  2593                           
  2594                           ;tasks.c: 64:         while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  2595  001652  D001               	goto	l299
  2596  001654                     l300:
  2597                           
  2598                           ;tasks.c: 65:             __nop();
  2599  001654  F000               	nop	
  2600  001656                     l299:
  2601                           
  2602                           ;tasks.c: 64:         while (!PORTCbits.RC0 && !PORTCbits.RC1 && !PORTCbits.RC2){
  2603  001656  A082               	btfss	3970,0,c	;volatile
  2604  001658  B282               	btfsc	3970,1,c	;volatile
  2605  00165A  D002               	goto	u69_20
  2606  00165C  A482               	btfss	3970,2,c	;volatile
  2607  00165E  D7FA               	goto	l300
  2608  001660                     u69_20:
  2609                           
  2610                           ;tasks.c: 67:         PORTDbits.RD5 = 1;
  2611  001660  8A83               	bsf	3971,5,c	;volatile
  2612                           
  2613                           ;tasks.c: 68:         sem_post(&check_sem);
  2614  001662  0E0B               	movlw	low _check_sem
  2615  001664  6EE6               	movwf	postinc1,c
  2616  001666  0E00               	movlw	high _check_sem
  2617  001668  6EE6               	movwf	postinc1,c
  2618  00166A  ECE2  F006         	call	_sem_post	;wreg free
  2619  00166E  D7EA               	goto	_fill_bottle
  2620  001670                     __end_of_fill_bottle:
  2621                           	opt callstack 0
  2622                           
  2623 ;; *************** function _check_level *****************
  2624 ;; Defined at:
  2625 ;;		line 72 in file "tasks.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1  [STACK] void 
  2632 ;; Registers used:
  2633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2639 ;;      Params:         0       0       0       0       0       0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0
  2642 ;;      Totals:         0       0       0       0       0       0       0
  2643 ;;Total ram usage:        0 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    8
  2646 ;; This function calls:
  2647 ;;		_sem_post
  2648 ;;		_sem_wait
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text17
  2655  00153A                     __ptext17:
  2656                           	opt callstack 0
  2657  00153A                     _check_level:
  2658                           	opt callstack 18
  2659                           
  2660                           ;tasks.c: 74:         sem_wait(&check_sem);
  2661                           
  2662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2663                           ;incstack = 0
  2664                           ;tasks.c: 73:     while(1){
  2665  00153A  0E0B               	movlw	low _check_sem
  2666  00153C  6EE6               	movwf	postinc1,c
  2667  00153E  0E00               	movlw	high _check_sem
  2668  001540  6EE6               	movwf	postinc1,c
  2669  001542  ECE4  F007         	call	_sem_wait	;wreg free
  2670                           
  2671                           ;tasks.c: 75:         PORTDbits.RD6 = 0;
  2672  001546  9C83               	bcf	3971,6,c	;volatile
  2673                           
  2674                           ;tasks.c: 76:         if (!PORTDbits.RD1)
  2675  001548  B283               	btfsc	3971,1,c	;volatile
  2676  00154A  D002               	goto	l310
  2677                           
  2678                           ;tasks.c: 77:             global_buffer.bottles[0].bottle_state = EMPTY;
  2679  00154C  6A03               	clrf	_global_buffer+2,c
  2680  00154E  D004               	goto	l311
  2681  001550                     l310:
  2682  001550  A283               	btfss	3971,1,c	;volatile
  2683  001552  D002               	goto	l311
  2684                           
  2685                           ;tasks.c: 79:             global_buffer.bottles[0].bottle_state = FULL;
  2686  001554  0E01               	movlw	1
  2687  001556  6E03               	movwf	_global_buffer+2,c
  2688  001558                     l311:
  2689                           
  2690                           ;tasks.c: 82:         if (!PORTDbits.RD2)
  2691  001558  B483               	btfsc	3971,2,c	;volatile
  2692  00155A  D002               	goto	l314
  2693                           
  2694                           ;tasks.c: 83:             global_buffer.bottles[1].bottle_state = EMPTY;
  2695  00155C  6A04               	clrf	_global_buffer+3,c
  2696  00155E  D004               	goto	l315
  2697  001560                     l314:
  2698  001560  A483               	btfss	3971,2,c	;volatile
  2699  001562  D002               	goto	l315
  2700                           
  2701                           ;tasks.c: 85:             global_buffer.bottles[1].bottle_state = FULL;
  2702  001564  0E01               	movlw	1
  2703  001566  6E04               	movwf	_global_buffer+3,c
  2704  001568                     l315:
  2705                           
  2706                           ;tasks.c: 88:         if (!PORTDbits.RD3)
  2707  001568  B683               	btfsc	3971,3,c	;volatile
  2708  00156A  D002               	goto	l318
  2709                           
  2710                           ;tasks.c: 89:             global_buffer.bottles[2].bottle_state = EMPTY;
  2711  00156C  6A05               	clrf	_global_buffer+4,c
  2712  00156E  D004               	goto	l319
  2713  001570                     l318:
  2714  001570  A683               	btfss	3971,3,c	;volatile
  2715  001572  D002               	goto	l319
  2716                           
  2717                           ;tasks.c: 91:             global_buffer.bottles[2].bottle_state = FULL;
  2718  001574  0E01               	movlw	1
  2719  001576  6E05               	movwf	_global_buffer+4,c
  2720  001578                     l319:
  2721                           
  2722                           ;tasks.c: 93:         PORTDbits.RD6 = 1;
  2723  001578  8C83               	bsf	3971,6,c	;volatile
  2724                           
  2725                           ;tasks.c: 94:         sem_post(&cover_sem);
  2726  00157A  0E90               	movlw	low _cover_sem
  2727  00157C  6EE6               	movwf	postinc1,c
  2728  00157E  0E00               	movlw	high _cover_sem
  2729  001580  6EE6               	movwf	postinc1,c
  2730  001582  ECE2  F006         	call	_sem_post	;wreg free
  2731  001586  D7D9               	goto	_check_level
  2732  001588                     __end_of_check_level:
  2733                           	opt callstack 0
  2734                           
  2735 ;; *************** function _cover_bottle *****************
  2736 ;; Defined at:
  2737 ;;		line 98 in file "tasks.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  i               2  [STACK] int 
  2742 ;;  count           2  [STACK] int 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1  [STACK] void 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2752 ;;      Params:         0       0       0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    9
  2759 ;; This function calls:
  2760 ;;		_pipe_write
  2761 ;;		_sem_post
  2762 ;;		_sem_wait
  2763 ;; This function is called by:
  2764 ;;		_main
  2765 ;; This function uses a reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text18
  2769  000EC6                     __ptext18:
  2770                           	opt callstack 0
  2771  000EC6                     _cover_bottle:
  2772                           	opt callstack 0
  2773                           
  2774                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2775  000EC6  52E6               	movf	postinc1,f,c
  2776  000EC8  52E6               	movf	postinc1,f,c
  2777  000ECA  52E6               	movf	postinc1,f,c
  2778  000ECC  52E6               	movf	postinc1,f,c
  2779  000ECE                     l327:
  2780                           
  2781                           ;tasks.c: 100:         sem_wait(&cover_sem);
  2782  000ECE  0E90               	movlw	low _cover_sem
  2783  000ED0  6EE6               	movwf	postinc1,c
  2784  000ED2  0E00               	movlw	high _cover_sem
  2785  000ED4  6EE6               	movwf	postinc1,c
  2786  000ED6  ECE4  F007         	call	_sem_wait	;wreg free
  2787                           
  2788                           ;tasks.c: 101:         PORTDbits.RD7 = 0;
  2789  000EDA  9E83               	bcf	3971,7,c	;volatile
  2790                           
  2791                           ;tasks.c: 102:         if (PORTCbits.RC3){
  2792  000EDC  A682               	btfss	3970,3,c	;volatile
  2793  000EDE  D009               	goto	l328
  2794                           
  2795                           ;tasks.c: 103:             if(global_buffer.bottles[0].bottle_state == FULL)
  2796  000EE0  0403               	decf	_global_buffer+2,w,c
  2797  000EE2  A4D8               	btfss	status,2,c
  2798  000EE4  D002               	goto	l329
  2799                           
  2800                           ;tasks.c: 104:                 global_buffer.bottles[0].bottle_state = CLOSED;
  2801  000EE6  0E02               	movlw	2
  2802  000EE8  D003               	goto	L2
  2803  000EEA                     l329:
  2804  000EEA  A682               	btfss	3970,3,c	;volatile
  2805  000EEC  D002               	goto	l328
  2806                           
  2807                           ;tasks.c: 106:                 global_buffer.bottles[0].bottle_state = FAIL;
  2808  000EEE  0E03               	movlw	3
  2809  000EF0                     L2:
  2810  000EF0  6E03               	movwf	_global_buffer+2,c
  2811  000EF2                     l328:
  2812                           
  2813                           ;tasks.c: 109:         if (PORTCbits.RC4){
  2814  000EF2  A882               	btfss	3970,4,c	;volatile
  2815  000EF4  D009               	goto	l333
  2816                           
  2817                           ;tasks.c: 110:             if(global_buffer.bottles[1].bottle_state == FULL)
  2818  000EF6  0404               	decf	_global_buffer+3,w,c
  2819  000EF8  A4D8               	btfss	status,2,c
  2820  000EFA  D002               	goto	l334
  2821                           
  2822                           ;tasks.c: 111:                 global_buffer.bottles[1].bottle_state = CLOSED;
  2823  000EFC  0E02               	movlw	2
  2824  000EFE  D003               	goto	L3
  2825  000F00                     l334:
  2826  000F00  A882               	btfss	3970,4,c	;volatile
  2827  000F02  D002               	goto	l333
  2828                           
  2829                           ;tasks.c: 113:                 global_buffer.bottles[1].bottle_state = FAIL;
  2830  000F04  0E03               	movlw	3
  2831  000F06                     L3:
  2832  000F06  6E04               	movwf	_global_buffer+3,c
  2833  000F08                     l333:
  2834                           
  2835                           ;tasks.c: 116:         if (PORTCbits.RC5){
  2836  000F08  AA82               	btfss	3970,5,c	;volatile
  2837  000F0A  D009               	goto	l340
  2838                           
  2839                           ;tasks.c: 117:             if(global_buffer.bottles[2].bottle_state == FULL)
  2840  000F0C  0405               	decf	_global_buffer+4,w,c
  2841  000F0E  A4D8               	btfss	status,2,c
  2842  000F10  D002               	goto	l339
  2843                           
  2844                           ;tasks.c: 118:                 global_buffer.bottles[2].bottle_state = CLOSED;
  2845  000F12  0E02               	movlw	2
  2846  000F14  D003               	goto	L4
  2847  000F16                     l339:
  2848  000F16  AA82               	btfss	3970,5,c	;volatile
  2849  000F18  D002               	goto	l340
  2850                           
  2851                           ;tasks.c: 120:                 global_buffer.bottles[2].bottle_state = FAIL;
  2852  000F1A  0E03               	movlw	3
  2853  000F1C                     L4:
  2854  000F1C  6E05               	movwf	_global_buffer+4,c
  2855  000F1E                     l340:
  2856                           
  2857                           ;tasks.c: 123:         int count = 0;
  2858                           ;stkvar	_count @ sp[(-4)+2]
  2859  000F1E  0EFE               	movlw	-2
  2860  000F20  6AE3               	clrf	plusw1,c
  2861  000F22  0EFF               	movlw	-1
  2862  000F24  6AE3               	clrf	plusw1,c
  2863                           
  2864                           ;tasks.c: 124:         for (int i = 0; i < 3; i++){
  2865                           ;stkvar	_i @ sp[(-4)+0]
  2866  000F26  0EFC               	movlw	-4
  2867  000F28  6AE3               	clrf	plusw1,c
  2868  000F2A  0EFD               	movlw	-3
  2869  000F2C  6AE3               	clrf	plusw1,c
  2870  000F2E                     l1848:
  2871                           
  2872                           ;tasks.c: 125:             if (global_buffer.bottles[i].bottle_state == FULL) count++;
  2873                           ;stkvar	_i @ sp[(-4)+0]
  2874  000F2E  0EFC               	movlw	-4
  2875  000F30  CFE3 F051          	movff	plusw1,btemp+10
  2876  000F34  0EFD               	movlw	-3
  2877  000F36  CFE3 F052          	movff	plusw1,btemp+11
  2878  000F3A  0E03               	movlw	low (_global_buffer+2)
  2879  000F3C  2451               	addwf	btemp+10,w,c
  2880  000F3E  6ED9               	movwf	fsr2l,c
  2881  000F40  0E00               	movlw	high (_global_buffer+2)
  2882  000F42  2052               	addwfc	btemp+11,w,c
  2883  000F44  6EDA               	movwf	fsr2h,c
  2884  000F46  04DE               	decf	postinc2,w,c
  2885  000F48  A4D8               	btfss	status,2,c
  2886  000F4A  D00F               	goto	l1852
  2887                           
  2888                           ;stkvar	_count @ sp[(-4)+2]
  2889  000F4C  0EFE               	movlw	-2
  2890  000F4E  50E3               	movf	plusw1,w,c
  2891  000F50  0F01               	addlw	1
  2892  000F52  6E47               	movwf	btemp,c
  2893  000F54  0EFE               	movlw	-2
  2894  000F56  C047  FFE3         	movff	btemp,plusw1
  2895  000F5A  6A47               	clrf	btemp,c
  2896  000F5C  0EFF               	movlw	-1
  2897  000F5E  50E3               	movf	plusw1,w,c
  2898  000F60  2047               	addwfc	btemp,w,c
  2899  000F62  6E47               	movwf	btemp,c
  2900  000F64  0EFF               	movlw	-1
  2901  000F66  C047  FFE3         	movff	btemp,plusw1
  2902  000F6A                     l1852:
  2903                           
  2904                           ;tasks.c: 126:             pipe_write(&p, count);
  2905                           ;stkvar	_count @ sp[(-4)+2]
  2906  000F6A  0EFE               	movlw	-2
  2907  000F6C  CFE3 FFE6          	movff	plusw1,postinc1
  2908  000F70  CFE3 FFE6          	movff	plusw1,postinc1
  2909  000F74  0E3B               	movlw	low _p
  2910  000F76  6EE6               	movwf	postinc1,c
  2911  000F78  0E00               	movlw	high _p
  2912  000F7A  6EE6               	movwf	postinc1,c
  2913  000F7C  ECD9  F005         	call	_pipe_write	;wreg free
  2914                           
  2915                           ;tasks.c: 127:             PORTDbits.RD7 = 1;
  2916  000F80  8E83               	bsf	3971,7,c	;volatile
  2917                           
  2918                           ;tasks.c: 128:         }
  2919                           ;stkvar	_i @ sp[(-4)+0]
  2920  000F82  0EFC               	movlw	-4
  2921  000F84  50E3               	movf	plusw1,w,c
  2922  000F86  0F01               	addlw	1
  2923  000F88  6E47               	movwf	btemp,c
  2924  000F8A  0EFC               	movlw	-4
  2925  000F8C  C047  FFE3         	movff	btemp,plusw1
  2926  000F90  6A47               	clrf	btemp,c
  2927  000F92  0EFD               	movlw	-3
  2928  000F94  50E3               	movf	plusw1,w,c
  2929  000F96  2047               	addwfc	btemp,w,c
  2930  000F98  6E47               	movwf	btemp,c
  2931  000F9A  0EFD               	movlw	-3
  2932  000F9C  C047  FFE3         	movff	btemp,plusw1
  2933                           
  2934                           ;stkvar	_i @ sp[(-4)+0]
  2935  000FA0  0EFD               	movlw	-3
  2936  000FA2  BEE3               	btfsc	plusw1,7,c
  2937  000FA4  D7C4               	goto	l1848
  2938  000FA6  0EFD               	movlw	-3
  2939  000FA8  50E3               	movf	plusw1,w,c
  2940  000FAA  E107               	bnz	u86_20
  2941  000FAC  0EFC               	movlw	-4
  2942  000FAE  CFE3 F047          	movff	plusw1,btemp
  2943  000FB2  0E03               	movlw	3
  2944  000FB4  5E47               	subwf	btemp,f,c
  2945  000FB6  A0D8               	btfss	status,0,c
  2946  000FB8  D7BA               	goto	l1848
  2947  000FBA                     u86_20:
  2948                           
  2949                           ;tasks.c: 129:         sem_post(&out_sem);
  2950  000FBA  0E80               	movlw	low _out_sem
  2951  000FBC  6EE6               	movwf	postinc1,c
  2952  000FBE  0E00               	movlw	high _out_sem
  2953  000FC0  6EE6               	movwf	postinc1,c
  2954  000FC2  ECE2  F006         	call	_sem_post	;wreg free
  2955  000FC6  D783               	goto	l327
  2956  000FC8                     __end_of_cover_bottle:
  2957                           	opt callstack 0
  2958                           
  2959 ;; *************** function _pipe_write *****************
  2960 ;; Defined at:
  2961 ;;		line 18 in file "pipe.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  p               2  [STACK] PTR struct pipe
  2964 ;;		 -> p(12), 
  2965 ;;  data            2  [STACK] unsigned int 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1  [STACK] void 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2977 ;;      Params:         0       0       0       0       0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0
  2980 ;;      Totals:         0       0       0       0       0       0       0
  2981 ;;Total ram usage:        0 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    8
  2984 ;; This function calls:
  2985 ;;		_sem_post
  2986 ;;		_sem_wait
  2987 ;; This function is called by:
  2988 ;;		_cover_bottle
  2989 ;; This function uses a reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text19
  2993  000BB2                     __ptext19:
  2994                           	opt callstack 0
  2995  000BB2                     _pipe_write:
  2996                           	opt callstack 17
  2997                           
  2998                           ;pipe.c: 20:   sem_wait(p->w);
  2999                           ;stkvar	_p @ sp[(0)+-2]
  3000                           
  3001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3002                           ;incstack = 0
  3003  000BB2  0EFE               	movlw	-2
  3004  000BB4  CFE3 F051          	movff	plusw1,btemp+10
  3005  000BB8  0EFF               	movlw	-1
  3006  000BBA  CFE3 F052          	movff	plusw1,btemp+11
  3007  000BBE  0E08               	movlw	8
  3008  000BC0  2451               	addwf	btemp+10,w,c
  3009  000BC2  6ED9               	movwf	fsr2l,c
  3010  000BC4  0E00               	movlw	0
  3011  000BC6  2052               	addwfc	btemp+11,w,c
  3012  000BC8  6EDA               	movwf	fsr2h,c
  3013  000BCA  CFDE F051          	movff	postinc2,btemp+10
  3014  000BCE  CFDD F052          	movff	postdec2,btemp+11
  3015  000BD2  C051  FFE6         	movff	btemp+10,postinc1
  3016  000BD6  C052  FFE6         	movff	btemp+11,postinc1
  3017  000BDA  ECE4  F007         	call	_sem_wait	;wreg free
  3018                           
  3019                           ;pipe.c: 21:   p->pipe_data[p->index_write] = data;
  3020                           ;stkvar	_data @ sp[(0)+-4]
  3021  000BDE  50E1               	movf	fsr1l,w,c
  3022  000BE0  0FFC               	addlw	-4
  3023  000BE2  6ED9               	movwf	fsr2l,c
  3024  000BE4  50E2               	movf	fsr1h,w,c
  3025  000BE6  6EDA               	movwf	fsr2h,c
  3026  000BE8  0EFF               	movlw	255
  3027  000BEA  22DA               	addwfc	fsr2h,f,c
  3028                           
  3029                           ;stkvar	_p @ sp[(0)+-2]
  3030  000BEC  0EFE               	movlw	-2
  3031  000BEE  CFE3 F051          	movff	plusw1,btemp+10
  3032  000BF2  0EFF               	movlw	-1
  3033  000BF4  CFE3 F052          	movff	plusw1,btemp+11
  3034  000BF8  0E04               	movlw	4
  3035  000BFA  2451               	addwf	btemp+10,w,c
  3036  000BFC  6EE9               	movwf	fsr0l,c
  3037  000BFE  0E00               	movlw	0
  3038  000C00  2052               	addwfc	btemp+11,w,c
  3039  000C02  6EEA               	movwf	fsr0h,c
  3040  000C04  CFEE F051          	movff	postinc0,btemp+10
  3041  000C08  CFED F052          	movff	postdec0,btemp+11
  3042  000C0C  90D8               	bcf	status,0,c
  3043  000C0E  3451               	rlcf	btemp+10,w,c
  3044  000C10  6E4F               	movwf	btemp+8,c
  3045  000C12  3452               	rlcf	btemp+11,w,c
  3046  000C14  6E50               	movwf	btemp+9,c
  3047                           
  3048                           ;stkvar	_p @ sp[(0)+-2]
  3049  000C16  0EFE               	movlw	-2
  3050  000C18  CFE3 F051          	movff	plusw1,btemp+10
  3051  000C1C  0EFF               	movlw	-1
  3052  000C1E  CFE3 F052          	movff	plusw1,btemp+11
  3053  000C22  504F               	movf	btemp+8,w,c
  3054  000C24  2451               	addwf	btemp+10,w,c
  3055  000C26  6EE9               	movwf	fsr0l,c
  3056  000C28  5050               	movf	btemp+9,w,c
  3057  000C2A  2052               	addwfc	btemp+11,w,c
  3058  000C2C  6EEA               	movwf	fsr0h,c
  3059  000C2E  CFDE FFEE          	movff	postinc2,postinc0
  3060  000C32  CFDD FFED          	movff	postdec2,postdec0
  3061                           
  3062                           ;pipe.c: 22:   p->index_write = (p->index_write + 1) % 2;
  3063                           ;stkvar	_p @ sp[(0)+-2]
  3064  000C36  0EFE               	movlw	-2
  3065  000C38  CFE3 F051          	movff	plusw1,btemp+10
  3066  000C3C  0EFF               	movlw	-1
  3067  000C3E  CFE3 F052          	movff	plusw1,btemp+11
  3068  000C42  0E04               	movlw	4
  3069  000C44  2451               	addwf	btemp+10,w,c
  3070  000C46  6ED9               	movwf	fsr2l,c
  3071  000C48  0E00               	movlw	0
  3072  000C4A  2052               	addwfc	btemp+11,w,c
  3073  000C4C  6EDA               	movwf	fsr2h,c
  3074  000C4E  CFDE F051          	movff	postinc2,btemp+10
  3075  000C52  CFDD F052          	movff	postdec2,btemp+11
  3076  000C56  0E01               	movlw	1
  3077  000C58  2651               	addwf	btemp+10,f,c
  3078  000C5A  0E00               	movlw	0
  3079  000C5C  2252               	addwfc	btemp+11,f,c
  3080  000C5E  0E01               	movlw	1
  3081  000C60  1651               	andwf	btemp+10,f,c
  3082  000C62  0E00               	movlw	0
  3083  000C64  1652               	andwf	btemp+11,f,c
  3084                           
  3085                           ;stkvar	_p @ sp[(0)+-2]
  3086  000C66  0EFE               	movlw	-2
  3087  000C68  CFE3 F04F          	movff	plusw1,btemp+8
  3088  000C6C  0EFF               	movlw	-1
  3089  000C6E  CFE3 F050          	movff	plusw1,btemp+9
  3090  000C72  0E04               	movlw	4
  3091  000C74  244F               	addwf	btemp+8,w,c
  3092  000C76  6ED9               	movwf	fsr2l,c
  3093  000C78  0E00               	movlw	0
  3094  000C7A  2050               	addwfc	btemp+9,w,c
  3095  000C7C  6EDA               	movwf	fsr2h,c
  3096  000C7E  C051  FFDE         	movff	btemp+10,postinc2
  3097  000C82  C052  FFDD         	movff	btemp+11,postdec2
  3098                           
  3099                           ;pipe.c: 23:   sem_post(p->r);
  3100                           ;stkvar	_p @ sp[(0)+-2]
  3101  000C86  0EFE               	movlw	-2
  3102  000C88  CFE3 F051          	movff	plusw1,btemp+10
  3103  000C8C  0EFF               	movlw	-1
  3104  000C8E  CFE3 F052          	movff	plusw1,btemp+11
  3105  000C92  0E0A               	movlw	10
  3106  000C94  2451               	addwf	btemp+10,w,c
  3107  000C96  6ED9               	movwf	fsr2l,c
  3108  000C98  0E00               	movlw	0
  3109  000C9A  2052               	addwfc	btemp+11,w,c
  3110  000C9C  6EDA               	movwf	fsr2h,c
  3111  000C9E  CFDE F051          	movff	postinc2,btemp+10
  3112  000CA2  CFDD F052          	movff	postdec2,btemp+11
  3113  000CA6  C051  FFE6         	movff	btemp+10,postinc1
  3114  000CAA  C052  FFE6         	movff	btemp+11,postinc1
  3115  000CAE  ECE2  F006         	call	_sem_post	;wreg free
  3116                           
  3117                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  3118  000CB2  52E5               	movf	postdec1,f,c
  3119  000CB4  52E5               	movf	postdec1,f,c
  3120  000CB6  52E5               	movf	postdec1,f,c
  3121  000CB8  52E5               	movf	postdec1,f,c
  3122  000CBA  0012               	return		;funcret
  3123  000CBC                     __end_of_pipe_write:
  3124                           	opt callstack 0
  3125                           
  3126 ;; *************** function _count_out *****************
  3127 ;; Defined at:
  3128 ;;		line 133 in file "tasks.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  pip             1  [STACK] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1  [STACK] void 
  3135 ;; Registers used:
  3136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3142 ;;      Params:         0       0       0       0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0
  3145 ;;      Totals:         0       0       0       0       0       0       0
  3146 ;;Total ram usage:        0 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    9
  3149 ;; This function calls:
  3150 ;;		_pipe_read
  3151 ;;		_sem_post
  3152 ;;		_sem_wait
  3153 ;; This function is called by:
  3154 ;;		_main
  3155 ;; This function uses a reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text20
  3159  0015D2                     __ptext20:
  3160                           	opt callstack 0
  3161  0015D2                     _count_out:
  3162                           	opt callstack 0
  3163                           
  3164                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3165  0015D2  52E6               	movf	postinc1,f,c
  3166  0015D4                     l351:
  3167                           
  3168                           ;tasks.c: 135:         byte pip;;tasks.c: 136:         sem_wait(&out_sem);
  3169  0015D4  0E80               	movlw	low _out_sem
  3170  0015D6  6EE6               	movwf	postinc1,c
  3171  0015D8  0E00               	movlw	high _out_sem
  3172  0015DA  6EE6               	movwf	postinc1,c
  3173  0015DC  ECE4  F007         	call	_sem_wait	;wreg free
  3174                           
  3175                           ;tasks.c: 137:         PORTBbits.RB1 = 0;
  3176  0015E0  9281               	bcf	3969,1,c	;volatile
  3177                           
  3178                           ;tasks.c: 138:         pipe_read(&p, &pip);
  3179                           ;stkvar	_pip @ sp[(-1)+0]
  3180  0015E2  0EFF               	movlw	255
  3181  0015E4  24E1               	addwf	fsr1l,w,c
  3182  0015E6  6E47               	movwf	btemp,c
  3183  0015E8  0EFF               	movlw	255
  3184  0015EA  20E2               	addwfc	fsr1h,w,c
  3185  0015EC  6E48               	movwf	btemp+1,c
  3186  0015EE  C047  FFE6         	movff	btemp,postinc1
  3187  0015F2  C048  FFE6         	movff	btemp+1,postinc1
  3188  0015F6  0E3B               	movlw	low _p
  3189  0015F8  6EE6               	movwf	postinc1,c
  3190  0015FA  0E00               	movlw	high _p
  3191  0015FC  6EE6               	movwf	postinc1,c
  3192  0015FE  EC5E  F006         	call	_pipe_read	;wreg free
  3193                           
  3194                           ;tasks.c: 139:         sem_post(&count_sem);
  3195  001602  0E2B               	movlw	low _count_sem
  3196  001604  6EE6               	movwf	postinc1,c
  3197  001606  0E00               	movlw	high _count_sem
  3198  001608  6EE6               	movwf	postinc1,c
  3199  00160A  ECE2  F006         	call	_sem_post	;wreg free
  3200                           
  3201                           ;tasks.c: 140:         PORTBbits.RB1 = 1;
  3202  00160E  8281               	bsf	3969,1,c	;volatile
  3203  001610  D7E1               	goto	l351
  3204  001612                     __end_of_count_out:
  3205                           	opt callstack 0
  3206                           
  3207 ;; *************** function _pipe_read *****************
  3208 ;; Defined at:
  3209 ;;		line 27 in file "pipe.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  p               2  [STACK] PTR struct pipe
  3212 ;;		 -> p(12), 
  3213 ;;  data            2  [STACK] PTR unsigned int 
  3214 ;;		 -> pip(1), 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1  [STACK] void 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3226 ;;      Params:         0       0       0       0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    8
  3233 ;; This function calls:
  3234 ;;		_sem_post
  3235 ;;		_sem_wait
  3236 ;; This function is called by:
  3237 ;;		_count_out
  3238 ;; This function uses a reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text21
  3242  000CBC                     __ptext21:
  3243                           	opt callstack 0
  3244  000CBC                     _pipe_read:
  3245                           	opt callstack 17
  3246                           
  3247                           ;pipe.c: 29:   sem_wait(p->r);
  3248                           ;stkvar	_p @ sp[(0)+-2]
  3249                           
  3250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3251                           ;incstack = 0
  3252  000CBC  0EFE               	movlw	-2
  3253  000CBE  CFE3 F051          	movff	plusw1,btemp+10
  3254  000CC2  0EFF               	movlw	-1
  3255  000CC4  CFE3 F052          	movff	plusw1,btemp+11
  3256  000CC8  0E0A               	movlw	10
  3257  000CCA  2451               	addwf	btemp+10,w,c
  3258  000CCC  6ED9               	movwf	fsr2l,c
  3259  000CCE  0E00               	movlw	0
  3260  000CD0  2052               	addwfc	btemp+11,w,c
  3261  000CD2  6EDA               	movwf	fsr2h,c
  3262  000CD4  CFDE F051          	movff	postinc2,btemp+10
  3263  000CD8  CFDD F052          	movff	postdec2,btemp+11
  3264  000CDC  C051  FFE6         	movff	btemp+10,postinc1
  3265  000CE0  C052  FFE6         	movff	btemp+11,postinc1
  3266  000CE4  ECE4  F007         	call	_sem_wait	;wreg free
  3267                           
  3268                           ;pipe.c: 30:   *data = p->pipe_data[p->index_read];
  3269                           ;stkvar	_p @ sp[(0)+-2]
  3270  000CE8  0EFE               	movlw	-2
  3271  000CEA  CFE3 F051          	movff	plusw1,btemp+10
  3272  000CEE  0EFF               	movlw	-1
  3273  000CF0  CFE3 F052          	movff	plusw1,btemp+11
  3274  000CF4  0E06               	movlw	6
  3275  000CF6  2451               	addwf	btemp+10,w,c
  3276  000CF8  6ED9               	movwf	fsr2l,c
  3277  000CFA  0E00               	movlw	0
  3278  000CFC  2052               	addwfc	btemp+11,w,c
  3279  000CFE  6EDA               	movwf	fsr2h,c
  3280  000D00  CFDE F051          	movff	postinc2,btemp+10
  3281  000D04  CFDD F052          	movff	postdec2,btemp+11
  3282  000D08  90D8               	bcf	status,0,c
  3283  000D0A  3451               	rlcf	btemp+10,w,c
  3284  000D0C  6E4F               	movwf	btemp+8,c
  3285  000D0E  3452               	rlcf	btemp+11,w,c
  3286  000D10  6E50               	movwf	btemp+9,c
  3287                           
  3288                           ;stkvar	_p @ sp[(0)+-2]
  3289  000D12  0EFE               	movlw	-2
  3290  000D14  CFE3 F051          	movff	plusw1,btemp+10
  3291  000D18  0EFF               	movlw	-1
  3292  000D1A  CFE3 F052          	movff	plusw1,btemp+11
  3293  000D1E  504F               	movf	btemp+8,w,c
  3294  000D20  2451               	addwf	btemp+10,w,c
  3295  000D22  6ED9               	movwf	fsr2l,c
  3296  000D24  5050               	movf	btemp+9,w,c
  3297  000D26  2052               	addwfc	btemp+11,w,c
  3298  000D28  6EDA               	movwf	fsr2h,c
  3299                           
  3300                           ;stkvar	_data @ sp[(0)+-4]
  3301  000D2A  0EFC               	movlw	-4
  3302  000D2C  CFE3 FFE9          	movff	plusw1,fsr0l
  3303  000D30  0EFD               	movlw	-3
  3304  000D32  CFE3 FFEA          	movff	plusw1,fsr0h
  3305  000D36  CFDE FFEE          	movff	postinc2,postinc0
  3306  000D3A  CFDD FFED          	movff	postdec2,postdec0
  3307                           
  3308                           ;pipe.c: 31:   p->index_read = (p->index_read + 1) % 2;
  3309                           ;stkvar	_p @ sp[(0)+-2]
  3310  000D3E  0EFE               	movlw	-2
  3311  000D40  CFE3 F051          	movff	plusw1,btemp+10
  3312  000D44  0EFF               	movlw	-1
  3313  000D46  CFE3 F052          	movff	plusw1,btemp+11
  3314  000D4A  0E06               	movlw	6
  3315  000D4C  2451               	addwf	btemp+10,w,c
  3316  000D4E  6ED9               	movwf	fsr2l,c
  3317  000D50  0E00               	movlw	0
  3318  000D52  2052               	addwfc	btemp+11,w,c
  3319  000D54  6EDA               	movwf	fsr2h,c
  3320  000D56  CFDE F051          	movff	postinc2,btemp+10
  3321  000D5A  CFDD F052          	movff	postdec2,btemp+11
  3322  000D5E  0E01               	movlw	1
  3323  000D60  2651               	addwf	btemp+10,f,c
  3324  000D62  0E00               	movlw	0
  3325  000D64  2252               	addwfc	btemp+11,f,c
  3326  000D66  0E01               	movlw	1
  3327  000D68  1651               	andwf	btemp+10,f,c
  3328  000D6A  0E00               	movlw	0
  3329  000D6C  1652               	andwf	btemp+11,f,c
  3330                           
  3331                           ;stkvar	_p @ sp[(0)+-2]
  3332  000D6E  0EFE               	movlw	-2
  3333  000D70  CFE3 F04F          	movff	plusw1,btemp+8
  3334  000D74  0EFF               	movlw	-1
  3335  000D76  CFE3 F050          	movff	plusw1,btemp+9
  3336  000D7A  0E06               	movlw	6
  3337  000D7C  244F               	addwf	btemp+8,w,c
  3338  000D7E  6ED9               	movwf	fsr2l,c
  3339  000D80  0E00               	movlw	0
  3340  000D82  2050               	addwfc	btemp+9,w,c
  3341  000D84  6EDA               	movwf	fsr2h,c
  3342  000D86  C051  FFDE         	movff	btemp+10,postinc2
  3343  000D8A  C052  FFDD         	movff	btemp+11,postdec2
  3344                           
  3345                           ;pipe.c: 32:   sem_post(p->w);
  3346                           ;stkvar	_p @ sp[(0)+-2]
  3347  000D8E  0EFE               	movlw	-2
  3348  000D90  CFE3 F051          	movff	plusw1,btemp+10
  3349  000D94  0EFF               	movlw	-1
  3350  000D96  CFE3 F052          	movff	plusw1,btemp+11
  3351  000D9A  0E08               	movlw	8
  3352  000D9C  2451               	addwf	btemp+10,w,c
  3353  000D9E  6ED9               	movwf	fsr2l,c
  3354  000DA0  0E00               	movlw	0
  3355  000DA2  2052               	addwfc	btemp+11,w,c
  3356  000DA4  6EDA               	movwf	fsr2h,c
  3357  000DA6  CFDE F051          	movff	postinc2,btemp+10
  3358  000DAA  CFDD F052          	movff	postdec2,btemp+11
  3359  000DAE  C051  FFE6         	movff	btemp+10,postinc1
  3360  000DB2  C052  FFE6         	movff	btemp+11,postinc1
  3361  000DB6  ECE2  F006         	call	_sem_post	;wreg free
  3362                           
  3363                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3364  000DBA  52E5               	movf	postdec1,f,c
  3365  000DBC  52E5               	movf	postdec1,f,c
  3366  000DBE  52E5               	movf	postdec1,f,c
  3367  000DC0  52E5               	movf	postdec1,f,c
  3368  000DC2  0012               	return		;funcret
  3369  000DC4                     __end_of_pipe_read:
  3370                           	opt callstack 0
  3371                           
  3372 ;; *************** function _ISR_timer0 *****************
  3373 ;; Defined at:
  3374 ;;		line 56 in file "int0_test.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3388 ;;      Params:         0       0       0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0       0       0
  3390 ;;      Temps:         14       0       0       0       0       0       0
  3391 ;;      Totals:        14       0       0       0       0       0       0
  3392 ;;Total ram usage:       14 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    2
  3395 ;; This function calls:
  3396 ;;		___wmul
  3397 ;;		_delay_decrement
  3398 ;;		_round_robin
  3399 ;; This function is called by:
  3400 ;;		Interrupt level 2
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	intcode
  3405  000008                     __pintcode:
  3406                           	opt callstack 0
  3407  000008                     _ISR_timer0:
  3408                           	opt callstack 17
  3409                           
  3410                           ;incstack = 0
  3411  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  3412                           
  3413                           	psect	intcode_body
  3414  000014                     __pintcode_body:
  3415                           	opt callstack 17
  3416  000014                     int_func:
  3417                           	opt callstack 17
  3418  000014  0006               	pop		; remove dummy address from shadow register refresh
  3419  000016  CFE1 F069          	movff	fsr1l,??_ISR_timer0+2
  3420  00001A  CFE2 F06A          	movff	fsr1h,??_ISR_timer0+3
  3421  00001E  CFD9 F06B          	movff	fsr2l,??_ISR_timer0+4
  3422  000022  CFDA F06C          	movff	fsr2h,??_ISR_timer0+5
  3423  000026  CFF3 F06D          	movff	prodl,??_ISR_timer0+6
  3424  00002A  CFF4 F06E          	movff	prodh,??_ISR_timer0+7
  3425  00002E  C047  F06F         	movff	btemp,??_ISR_timer0+8
  3426  000032  C048  F070         	movff	btemp+1,??_ISR_timer0+9
  3427  000036  C04F  F071         	movff	btemp+8,??_ISR_timer0+10
  3428  00003A  C050  F072         	movff	btemp+9,??_ISR_timer0+11
  3429  00003E  C051  F073         	movff	btemp+10,??_ISR_timer0+12
  3430  000042  C052  F074         	movff	btemp+11,??_ISR_timer0+13
  3431  000046  EE15  F07C         	lfsr	1,___inthi_sp
  3432                           
  3433                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  3434  00004A  9EF2               	bcf	4082,7,c	;volatile
  3435                           
  3436                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  3437  00004C  A4F2               	btfss	4082,2,c	;volatile
  3438  00004E  D22C               	goto	i2u64_40
  3439                           
  3440                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  3441  000050  94F2               	bcf	4082,2,c	;volatile
  3442                           
  3443                           ;int0_test.c: 61:     TMR0L = 252;
  3444  000052  0EFC               	movlw	252
  3445  000054  6ED6               	movwf	4054,c	;volatile
  3446                           
  3447                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  3448  000056  A083               	btfss	3971,0,c	;volatile
  3449  000058  D002               	goto	i2u60_40
  3450  00005A  0E01               	movlw	1
  3451  00005C  D001               	goto	i2u60_46
  3452  00005E                     i2u60_40:
  3453  00005E  0E00               	movlw	0
  3454  000060                     i2u60_46:
  3455  000060  0AFF               	xorlw	255
  3456  000062  6E67               	movwf	??_ISR_timer0& (0+255),c
  3457  000064  5083               	movf	3971,w,c	;volatile
  3458  000066  1867               	xorwf	??_ISR_timer0,w,c
  3459  000068  0BFE               	andlw	-2
  3460  00006A  1867               	xorwf	??_ISR_timer0,w,c
  3461  00006C  6E83               	movwf	3971,c	;volatile
  3462                           
  3463                           ;int0_test.c: 63:     delay_decrement();
  3464  00006E  ECCB  F004         	call	_delay_decrement	;wreg free
  3465                           
  3466                           ;int0_test.c: 65:     quantum--;
  3467  000072  0675               	decf	_quantum,f,c
  3468  000074  A0D8               	btfss	status,0,c
  3469  000076  0676               	decf	_quantum+1,f,c
  3470                           
  3471                           ;int0_test.c: 66:     if (quantum <= 0) {
  3472  000078  BE76               	btfsc	_quantum+1,7,c
  3473  00007A  D005               	goto	i2u61_40
  3474  00007C  5076               	movf	_quantum+1,w,c
  3475  00007E  E102               	bnz	i2u61_41
  3476  000080  0475               	decf	_quantum,w,c
  3477  000082  B0D8               	btfsc	status,0,c
  3478  000084                     i2u61_41:
  3479  000084  D211               	goto	i2u64_40
  3480  000086                     i2u61_40:
  3481                           
  3482                           ;int0_test.c: 67:       quantum = 10;
  3483  000086  0E00               	movlw	0
  3484  000088  6E76               	movwf	_quantum+1,c
  3485  00008A  0E0A               	movlw	10
  3486  00008C  6E75               	movwf	_quantum,c
  3487                           
  3488                           ;int0_test.c: 68:       { who = ready_queue.task_running; ready_queue.tasks[who].task_st
      +                          ate = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = ST
      +                          ATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks
      +                          [who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stac
      +                          k[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL
      +                          ; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size;};
  3489  00008E  C336  F009         	movff	_ready_queue+662,_who
  3490  000092  C337  F00A         	movff	_ready_queue+663,_who+1
  3491  000096  0E6E               	movlw	110
  3492  000098  6EE6               	movwf	postinc1,c
  3493  00009A  0E00               	movlw	0
  3494  00009C  6EE6               	movwf	postinc1,c
  3495  00009E  C009  FFE6         	movff	_who,postinc1
  3496  0000A2  C00A  FFE6         	movff	_who+1,postinc1
  3497  0000A6  EC19  F009         	call	___wmul	;wreg free
  3498  0000AA  0EA8               	movlw	low (_ready_queue+8)
  3499  0000AC  2447               	addwf	btemp,w,c
  3500  0000AE  6ED9               	movwf	fsr2l,c
  3501  0000B0  0E00               	movlw	high (_ready_queue+8)
  3502  0000B2  2048               	addwfc	btemp+1,w,c
  3503  0000B4  6EDA               	movwf	fsr2h,c
  3504  0000B6  0E00               	movlw	0
  3505  0000B8  6EDF               	movwf	indf2,c
  3506  0000BA  0E6E               	movlw	110
  3507  0000BC  6EE6               	movwf	postinc1,c
  3508  0000BE  0E00               	movlw	0
  3509  0000C0  6EE6               	movwf	postinc1,c
  3510  0000C2  C009  FFE6         	movff	_who,postinc1
  3511  0000C6  C00A  FFE6         	movff	_who+1,postinc1
  3512  0000CA  EC19  F009         	call	___wmul	;wreg free
  3513  0000CE  0EA5               	movlw	low (_ready_queue+5)
  3514  0000D0  2447               	addwf	btemp,w,c
  3515  0000D2  6ED9               	movwf	fsr2l,c
  3516  0000D4  0E00               	movlw	high (_ready_queue+5)
  3517  0000D6  2048               	addwfc	btemp+1,w,c
  3518  0000D8  6EDA               	movwf	fsr2h,c
  3519  0000DA  CFE8 FFDF          	movff	wreg,indf2	;volatile
  3520  0000DE  0E6E               	movlw	110
  3521  0000E0  6EE6               	movwf	postinc1,c
  3522  0000E2  0E00               	movlw	0
  3523  0000E4  6EE6               	movwf	postinc1,c
  3524  0000E6  C009  FFE6         	movff	_who,postinc1
  3525  0000EA  C00A  FFE6         	movff	_who+1,postinc1
  3526  0000EE  EC19  F009         	call	___wmul	;wreg free
  3527  0000F2  0EA6               	movlw	low (_ready_queue+6)
  3528  0000F4  2447               	addwf	btemp,w,c
  3529  0000F6  6ED9               	movwf	fsr2l,c
  3530  0000F8  0E00               	movlw	high (_ready_queue+6)
  3531  0000FA  2048               	addwfc	btemp+1,w,c
  3532  0000FC  6EDA               	movwf	fsr2h,c
  3533  0000FE  CFD8 FFDF          	movff	status,indf2	;volatile
  3534  000102  0E6E               	movlw	110
  3535  000104  6EE6               	movwf	postinc1,c
  3536  000106  0E00               	movlw	0
  3537  000108  6EE6               	movwf	postinc1,c
  3538  00010A  C009  FFE6         	movff	_who,postinc1
  3539  00010E  C00A  FFE6         	movff	_who+1,postinc1
  3540  000112  EC19  F009         	call	___wmul	;wreg free
  3541  000116  0EA7               	movlw	low (_ready_queue+7)
  3542  000118  2447               	addwf	btemp,w,c
  3543  00011A  6ED9               	movwf	fsr2l,c
  3544  00011C  0E00               	movlw	high (_ready_queue+7)
  3545  00011E  2048               	addwfc	btemp+1,w,c
  3546  000120  6EDA               	movwf	fsr2h,c
  3547  000122  CFE0 FFDF          	movff	bsr,indf2	;volatile
  3548  000126  6A07               	clrf	_size,c
  3549  000128  6A08               	clrf	_size+1,c
  3550  00012A  D07B               	goto	i2l1728
  3551  00012C                     i2l1724:
  3552  00012C  0E6E               	movlw	110
  3553  00012E  6EE6               	movwf	postinc1,c
  3554  000130  0E00               	movlw	0
  3555  000132  6EE6               	movwf	postinc1,c
  3556  000134  C009  FFE6         	movff	_who,postinc1
  3557  000138  C00A  FFE6         	movff	_who+1,postinc1
  3558  00013C  EC19  F009         	call	___wmul	;wreg free
  3559  000140  0EA0               	movlw	low _ready_queue
  3560  000142  6E67               	movwf	??_ISR_timer0& (0+255),c
  3561  000144  0E00               	movlw	high _ready_queue
  3562  000146  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3563  000148  0E09               	movlw	9
  3564  00014A  2667               	addwf	??_ISR_timer0,f,c
  3565  00014C  0E00               	movlw	0
  3566  00014E  2268               	addwfc	??_ISR_timer0+1,f,c
  3567  000150  5047               	movf	btemp,w,c
  3568  000152  2667               	addwf	??_ISR_timer0,f,c
  3569  000154  5048               	movf	btemp+1,w,c
  3570  000156  2268               	addwfc	??_ISR_timer0+1,f,c
  3571  000158  0E03               	movlw	3
  3572  00015A  6EE6               	movwf	postinc1,c
  3573  00015C  0E00               	movlw	0
  3574  00015E  6EE6               	movwf	postinc1,c
  3575  000160  C007  FFE6         	movff	_size,postinc1
  3576  000164  C008  FFE6         	movff	_size+1,postinc1
  3577  000168  EC19  F009         	call	___wmul	;wreg free
  3578  00016C  5047               	movf	btemp,w,c
  3579  00016E  2467               	addwf	??_ISR_timer0,w,c
  3580  000170  6ED9               	movwf	fsr2l,c
  3581  000172  5048               	movf	btemp+1,w,c
  3582  000174  2068               	addwfc	??_ISR_timer0+1,w,c
  3583  000176  6EDA               	movwf	fsr2h,c
  3584  000178  CFFF FFDF          	movff	tosu,indf2	;volatile
  3585  00017C  0E6E               	movlw	110
  3586  00017E  6EE6               	movwf	postinc1,c
  3587  000180  0E00               	movlw	0
  3588  000182  6EE6               	movwf	postinc1,c
  3589  000184  C009  FFE6         	movff	_who,postinc1
  3590  000188  C00A  FFE6         	movff	_who+1,postinc1
  3591  00018C  EC19  F009         	call	___wmul	;wreg free
  3592  000190  0EA0               	movlw	low _ready_queue
  3593  000192  6E67               	movwf	??_ISR_timer0& (0+255),c
  3594  000194  0E00               	movlw	high _ready_queue
  3595  000196  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3596  000198  0E0B               	movlw	11
  3597  00019A  2667               	addwf	??_ISR_timer0,f,c
  3598  00019C  0E00               	movlw	0
  3599  00019E  2268               	addwfc	??_ISR_timer0+1,f,c
  3600  0001A0  5047               	movf	btemp,w,c
  3601  0001A2  2667               	addwf	??_ISR_timer0,f,c
  3602  0001A4  5048               	movf	btemp+1,w,c
  3603  0001A6  2268               	addwfc	??_ISR_timer0+1,f,c
  3604  0001A8  0E03               	movlw	3
  3605  0001AA  6EE6               	movwf	postinc1,c
  3606  0001AC  0E00               	movlw	0
  3607  0001AE  6EE6               	movwf	postinc1,c
  3608  0001B0  C007  FFE6         	movff	_size,postinc1
  3609  0001B4  C008  FFE6         	movff	_size+1,postinc1
  3610  0001B8  EC19  F009         	call	___wmul	;wreg free
  3611  0001BC  5047               	movf	btemp,w,c
  3612  0001BE  2467               	addwf	??_ISR_timer0,w,c
  3613  0001C0  6ED9               	movwf	fsr2l,c
  3614  0001C2  5048               	movf	btemp+1,w,c
  3615  0001C4  2068               	addwfc	??_ISR_timer0+1,w,c
  3616  0001C6  6EDA               	movwf	fsr2h,c
  3617  0001C8  CFFE FFDF          	movff	tosh,indf2	;volatile
  3618  0001CC  0E6E               	movlw	110
  3619  0001CE  6EE6               	movwf	postinc1,c
  3620  0001D0  0E00               	movlw	0
  3621  0001D2  6EE6               	movwf	postinc1,c
  3622  0001D4  C009  FFE6         	movff	_who,postinc1
  3623  0001D8  C00A  FFE6         	movff	_who+1,postinc1
  3624  0001DC  EC19  F009         	call	___wmul	;wreg free
  3625  0001E0  0EA0               	movlw	low _ready_queue
  3626  0001E2  6E67               	movwf	??_ISR_timer0& (0+255),c
  3627  0001E4  0E00               	movlw	high _ready_queue
  3628  0001E6  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3629  0001E8  0E0A               	movlw	10
  3630  0001EA  2667               	addwf	??_ISR_timer0,f,c
  3631  0001EC  0E00               	movlw	0
  3632  0001EE  2268               	addwfc	??_ISR_timer0+1,f,c
  3633  0001F0  5047               	movf	btemp,w,c
  3634  0001F2  2667               	addwf	??_ISR_timer0,f,c
  3635  0001F4  5048               	movf	btemp+1,w,c
  3636  0001F6  2268               	addwfc	??_ISR_timer0+1,f,c
  3637  0001F8  0E03               	movlw	3
  3638  0001FA  6EE6               	movwf	postinc1,c
  3639  0001FC  0E00               	movlw	0
  3640  0001FE  6EE6               	movwf	postinc1,c
  3641  000200  C007  FFE6         	movff	_size,postinc1
  3642  000204  C008  FFE6         	movff	_size+1,postinc1
  3643  000208  EC19  F009         	call	___wmul	;wreg free
  3644  00020C  5047               	movf	btemp,w,c
  3645  00020E  2467               	addwf	??_ISR_timer0,w,c
  3646  000210  6ED9               	movwf	fsr2l,c
  3647  000212  5048               	movf	btemp+1,w,c
  3648  000214  2068               	addwfc	??_ISR_timer0+1,w,c
  3649  000216  6EDA               	movwf	fsr2h,c
  3650  000218  CFFD FFDF          	movff	tosl,indf2	;volatile
  3651  00021C  4A07               	infsnz	_size,f,c
  3652  00021E  2A08               	incf	_size+1,f,c
  3653  000220  0006               	pop		;# 
  3654  000222                     i2l1728:
  3655  000222  50FC               	movf	stkptr,w,c	;volatile
  3656  000224  A4D8               	btfss	status,2,c
  3657  000226  D782               	goto	i2l1724
  3658  000228  0E6E               	movlw	110
  3659  00022A  6EE6               	movwf	postinc1,c
  3660  00022C  0E00               	movlw	0
  3661  00022E  6EE6               	movwf	postinc1,c
  3662  000230  C009  FFE6         	movff	_who,postinc1
  3663  000234  C00A  FFE6         	movff	_who+1,postinc1
  3664  000238  EC19  F009         	call	___wmul	;wreg free
  3665  00023C  0E06               	movlw	low (_ready_queue+102)
  3666  00023E  2447               	addwf	btemp,w,c
  3667  000240  6ED9               	movwf	fsr2l,c
  3668  000242  0E01               	movlw	high (_ready_queue+102)
  3669  000244  2048               	addwfc	btemp+1,w,c
  3670  000246  6EDA               	movwf	fsr2h,c
  3671  000248  C007  FFDE         	movff	_size,postinc2
  3672  00024C  C008  FFDD         	movff	_size+1,postdec2
  3673                           
  3674                           ;int0_test.c: 69:       ready_queue.task_running = round_robin();
  3675  000250  EC64  F009         	call	_round_robin	;wreg free
  3676  000254  C047  F336         	movff	btemp,_ready_queue+662
  3677  000258  C048  F337         	movff	btemp+1,_ready_queue+663
  3678                           
  3679                           ;int0_test.c: 70:       { STKPTR = 0; who = ready_queue.task_running; if (ready_queue.ta
      +                          sks[who].task_installed == 0) { ready_queue.tasks[who].task_installed = 1; __asm("PUSH")
      +                          ; TOS = ready_queue.tasks[who].task_f; } else { ready_queue.tasks[who].task_state = RUNN
      +                          ING; WREG = ready_queue.tasks[who].W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BS
      +                          R = ready_queue.tasks[who].BSR_reg; size = ready_queue.tasks[who].task_stack.stack_level
      +                          ; while(size){ __asm("PUSH"); TOSL = ready_queue.tasks[who].task_stack.h_stack[size-1].T
      +                          OSL_reg; TOSH = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSH_reg; TOSU = ready
      +                          _queue.tasks[who].task_stack.h_stack[size-1].TOSU_reg; size--; } }};
  3680  00025C  6AFC               	clrf	stkptr,c	;volatile
  3681  00025E  C336  F009         	movff	_ready_queue+662,_who
  3682  000262  C337  F00A         	movff	_ready_queue+663,_who+1
  3683  000266  0E6E               	movlw	110
  3684  000268  6EE6               	movwf	postinc1,c
  3685  00026A  0E00               	movlw	0
  3686  00026C  6EE6               	movwf	postinc1,c
  3687  00026E  C009  FFE6         	movff	_who,postinc1
  3688  000272  C00A  FFE6         	movff	_who+1,postinc1
  3689  000276  EC19  F009         	call	___wmul	;wreg free
  3690  00027A  0E08               	movlw	low (_ready_queue+104)
  3691  00027C  2447               	addwf	btemp,w,c
  3692  00027E  6ED9               	movwf	fsr2l,c
  3693  000280  0E01               	movlw	high (_ready_queue+104)
  3694  000282  2048               	addwfc	btemp+1,w,c
  3695  000284  6EDA               	movwf	fsr2h,c
  3696  000286  50DE               	movf	postinc2,w,c
  3697  000288  10DE               	iorwf	postinc2,w,c
  3698  00028A  A4D8               	btfss	status,2,c
  3699  00028C  D02F               	goto	i2l1742
  3700  00028E  0E6E               	movlw	110
  3701  000290  6EE6               	movwf	postinc1,c
  3702  000292  0E00               	movlw	0
  3703  000294  6EE6               	movwf	postinc1,c
  3704  000296  C009  FFE6         	movff	_who,postinc1
  3705  00029A  C00A  FFE6         	movff	_who+1,postinc1
  3706  00029E  EC19  F009         	call	___wmul	;wreg free
  3707  0002A2  0E08               	movlw	low (_ready_queue+104)
  3708  0002A4  2447               	addwf	btemp,w,c
  3709  0002A6  6ED9               	movwf	fsr2l,c
  3710  0002A8  0E01               	movlw	high (_ready_queue+104)
  3711  0002AA  2048               	addwfc	btemp+1,w,c
  3712  0002AC  6EDA               	movwf	fsr2h,c
  3713  0002AE  0E01               	movlw	1
  3714  0002B0  6EDE               	movwf	postinc2,c
  3715  0002B2  0E00               	movlw	0
  3716  0002B4  6EDD               	movwf	postdec2,c
  3717  0002B6  0005               	push		;# 
  3718  0002B8  0E6E               	movlw	110
  3719  0002BA  6EE6               	movwf	postinc1,c
  3720  0002BC  0E00               	movlw	0
  3721  0002BE  6EE6               	movwf	postinc1,c
  3722  0002C0  C009  FFE6         	movff	_who,postinc1
  3723  0002C4  C00A  FFE6         	movff	_who+1,postinc1
  3724  0002C8  EC19  F009         	call	___wmul	;wreg free
  3725  0002CC  0E0A               	movlw	low (_ready_queue+106)
  3726  0002CE  2447               	addwf	btemp,w,c
  3727  0002D0  6ED9               	movwf	fsr2l,c
  3728  0002D2  0E01               	movlw	high (_ready_queue+106)
  3729  0002D4  2048               	addwfc	btemp+1,w,c
  3730  0002D6  6EDA               	movwf	fsr2h,c
  3731  0002D8  CFDE F067          	movff	postinc2,??_ISR_timer0
  3732  0002DC  CFDD F068          	movff	postdec2,??_ISR_timer0+1
  3733  0002E0  C067  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  3734  0002E4  C068  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  3735  0002E8  6AFF               	clrf	tosu,c	;volatile
  3736  0002EA  D0DE               	goto	i2u64_40
  3737  0002EC                     i2l1742:
  3738  0002EC  0E6E               	movlw	110
  3739  0002EE  6EE6               	movwf	postinc1,c
  3740  0002F0  0E00               	movlw	0
  3741  0002F2  6EE6               	movwf	postinc1,c
  3742  0002F4  C009  FFE6         	movff	_who,postinc1
  3743  0002F8  C00A  FFE6         	movff	_who+1,postinc1
  3744  0002FC  EC19  F009         	call	___wmul	;wreg free
  3745  000300  0EA8               	movlw	low (_ready_queue+8)
  3746  000302  2447               	addwf	btemp,w,c
  3747  000304  6ED9               	movwf	fsr2l,c
  3748  000306  0E00               	movlw	high (_ready_queue+8)
  3749  000308  2048               	addwfc	btemp+1,w,c
  3750  00030A  6EDA               	movwf	fsr2h,c
  3751  00030C  0E01               	movlw	1
  3752  00030E  6EDF               	movwf	indf2,c
  3753  000310  0E6E               	movlw	110
  3754  000312  6EE6               	movwf	postinc1,c
  3755  000314  0E00               	movlw	0
  3756  000316  6EE6               	movwf	postinc1,c
  3757  000318  C009  FFE6         	movff	_who,postinc1
  3758  00031C  C00A  FFE6         	movff	_who+1,postinc1
  3759  000320  EC19  F009         	call	___wmul	;wreg free
  3760  000324  0EA5               	movlw	low (_ready_queue+5)
  3761  000326  2447               	addwf	btemp,w,c
  3762  000328  6ED9               	movwf	fsr2l,c
  3763  00032A  0E00               	movlw	high (_ready_queue+5)
  3764  00032C  2048               	addwfc	btemp+1,w,c
  3765  00032E  6EDA               	movwf	fsr2h,c
  3766  000330  50DF               	movf	indf2,w,c
  3767  000332  6E67               	movwf	??_ISR_timer0& (0+255),c
  3768  000334  5067               	movf	??_ISR_timer0,w,c
  3769  000336  0E6E               	movlw	110
  3770  000338  6EE6               	movwf	postinc1,c
  3771  00033A  0E00               	movlw	0
  3772  00033C  6EE6               	movwf	postinc1,c
  3773  00033E  C009  FFE6         	movff	_who,postinc1
  3774  000342  C00A  FFE6         	movff	_who+1,postinc1
  3775  000346  EC19  F009         	call	___wmul	;wreg free
  3776  00034A  0EA6               	movlw	low (_ready_queue+6)
  3777  00034C  2447               	addwf	btemp,w,c
  3778  00034E  6ED9               	movwf	fsr2l,c
  3779  000350  0E00               	movlw	high (_ready_queue+6)
  3780  000352  2048               	addwfc	btemp+1,w,c
  3781  000354  6EDA               	movwf	fsr2h,c
  3782  000356  50DF               	movf	indf2,w,c
  3783  000358  6ED8               	movwf	status,c	;volatile
  3784  00035A  0E6E               	movlw	110
  3785  00035C  6EE6               	movwf	postinc1,c
  3786  00035E  0E00               	movlw	0
  3787  000360  6EE6               	movwf	postinc1,c
  3788  000362  C009  FFE6         	movff	_who,postinc1
  3789  000366  C00A  FFE6         	movff	_who+1,postinc1
  3790  00036A  EC19  F009         	call	___wmul	;wreg free
  3791  00036E  0EA7               	movlw	low (_ready_queue+7)
  3792  000370  2447               	addwf	btemp,w,c
  3793  000372  6ED9               	movwf	fsr2l,c
  3794  000374  0E00               	movlw	high (_ready_queue+7)
  3795  000376  2048               	addwfc	btemp+1,w,c
  3796  000378  6EDA               	movwf	fsr2h,c
  3797  00037A  50DF               	movf	indf2,w,c
  3798  00037C  6EE0               	movwf	bsr,c	;volatile
  3799  00037E  0E6E               	movlw	110
  3800  000380  6EE6               	movwf	postinc1,c
  3801  000382  0E00               	movlw	0
  3802  000384  6EE6               	movwf	postinc1,c
  3803  000386  C009  FFE6         	movff	_who,postinc1
  3804  00038A  C00A  FFE6         	movff	_who+1,postinc1
  3805  00038E  EC19  F009         	call	___wmul	;wreg free
  3806  000392  0E06               	movlw	low (_ready_queue+102)
  3807  000394  2447               	addwf	btemp,w,c
  3808  000396  6ED9               	movwf	fsr2l,c
  3809  000398  0E01               	movlw	high (_ready_queue+102)
  3810  00039A  2048               	addwfc	btemp+1,w,c
  3811  00039C  6EDA               	movwf	fsr2h,c
  3812  00039E  CFDE F007          	movff	postinc2,_size
  3813  0003A2  CFDD F008          	movff	postdec2,_size+1
  3814  0003A6  D07C               	goto	i2l1748
  3815  0003A8                     i2l59:
  3816  0003A8  0005               	push		;# 
  3817  0003AA  0E6E               	movlw	110
  3818  0003AC  6EE6               	movwf	postinc1,c
  3819  0003AE  0E00               	movlw	0
  3820  0003B0  6EE6               	movwf	postinc1,c
  3821  0003B2  C009  FFE6         	movff	_who,postinc1
  3822  0003B6  C00A  FFE6         	movff	_who+1,postinc1
  3823  0003BA  EC19  F009         	call	___wmul	;wreg free
  3824  0003BE  0EA0               	movlw	low _ready_queue
  3825  0003C0  6E67               	movwf	??_ISR_timer0& (0+255),c
  3826  0003C2  0E00               	movlw	high _ready_queue
  3827  0003C4  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3828  0003C6  0E07               	movlw	7
  3829  0003C8  2667               	addwf	??_ISR_timer0,f,c
  3830  0003CA  0E00               	movlw	0
  3831  0003CC  2268               	addwfc	??_ISR_timer0+1,f,c
  3832  0003CE  5047               	movf	btemp,w,c
  3833  0003D0  2667               	addwf	??_ISR_timer0,f,c
  3834  0003D2  5048               	movf	btemp+1,w,c
  3835  0003D4  2268               	addwfc	??_ISR_timer0+1,f,c
  3836  0003D6  0E03               	movlw	3
  3837  0003D8  6EE6               	movwf	postinc1,c
  3838  0003DA  0E00               	movlw	0
  3839  0003DC  6EE6               	movwf	postinc1,c
  3840  0003DE  C007  FFE6         	movff	_size,postinc1
  3841  0003E2  C008  FFE6         	movff	_size+1,postinc1
  3842  0003E6  EC19  F009         	call	___wmul	;wreg free
  3843  0003EA  5047               	movf	btemp,w,c
  3844  0003EC  2467               	addwf	??_ISR_timer0,w,c
  3845  0003EE  6ED9               	movwf	fsr2l,c
  3846  0003F0  5048               	movf	btemp+1,w,c
  3847  0003F2  2068               	addwfc	??_ISR_timer0+1,w,c
  3848  0003F4  6EDA               	movwf	fsr2h,c
  3849  0003F6  50DF               	movf	indf2,w,c
  3850  0003F8  6EFD               	movwf	tosl,c	;volatile
  3851  0003FA  0E6E               	movlw	110
  3852  0003FC  6EE6               	movwf	postinc1,c
  3853  0003FE  0E00               	movlw	0
  3854  000400  6EE6               	movwf	postinc1,c
  3855  000402  C009  FFE6         	movff	_who,postinc1
  3856  000406  C00A  FFE6         	movff	_who+1,postinc1
  3857  00040A  EC19  F009         	call	___wmul	;wreg free
  3858  00040E  0EA0               	movlw	low _ready_queue
  3859  000410  6E67               	movwf	??_ISR_timer0& (0+255),c
  3860  000412  0E00               	movlw	high _ready_queue
  3861  000414  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3862  000416  0E08               	movlw	8
  3863  000418  2667               	addwf	??_ISR_timer0,f,c
  3864  00041A  0E00               	movlw	0
  3865  00041C  2268               	addwfc	??_ISR_timer0+1,f,c
  3866  00041E  5047               	movf	btemp,w,c
  3867  000420  2667               	addwf	??_ISR_timer0,f,c
  3868  000422  5048               	movf	btemp+1,w,c
  3869  000424  2268               	addwfc	??_ISR_timer0+1,f,c
  3870  000426  0E03               	movlw	3
  3871  000428  6EE6               	movwf	postinc1,c
  3872  00042A  0E00               	movlw	0
  3873  00042C  6EE6               	movwf	postinc1,c
  3874  00042E  C007  FFE6         	movff	_size,postinc1
  3875  000432  C008  FFE6         	movff	_size+1,postinc1
  3876  000436  EC19  F009         	call	___wmul	;wreg free
  3877  00043A  5047               	movf	btemp,w,c
  3878  00043C  2467               	addwf	??_ISR_timer0,w,c
  3879  00043E  6ED9               	movwf	fsr2l,c
  3880  000440  5048               	movf	btemp+1,w,c
  3881  000442  2068               	addwfc	??_ISR_timer0+1,w,c
  3882  000444  6EDA               	movwf	fsr2h,c
  3883  000446  50DF               	movf	indf2,w,c
  3884  000448  6EFE               	movwf	tosh,c	;volatile
  3885  00044A  0E6E               	movlw	110
  3886  00044C  6EE6               	movwf	postinc1,c
  3887  00044E  0E00               	movlw	0
  3888  000450  6EE6               	movwf	postinc1,c
  3889  000452  C009  FFE6         	movff	_who,postinc1
  3890  000456  C00A  FFE6         	movff	_who+1,postinc1
  3891  00045A  EC19  F009         	call	___wmul	;wreg free
  3892  00045E  0EA0               	movlw	low _ready_queue
  3893  000460  6E67               	movwf	??_ISR_timer0& (0+255),c
  3894  000462  0E00               	movlw	high _ready_queue
  3895  000464  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3896  000466  0E06               	movlw	6
  3897  000468  2667               	addwf	??_ISR_timer0,f,c
  3898  00046A  0E00               	movlw	0
  3899  00046C  2268               	addwfc	??_ISR_timer0+1,f,c
  3900  00046E  5047               	movf	btemp,w,c
  3901  000470  2667               	addwf	??_ISR_timer0,f,c
  3902  000472  5048               	movf	btemp+1,w,c
  3903  000474  2268               	addwfc	??_ISR_timer0+1,f,c
  3904  000476  0E03               	movlw	3
  3905  000478  6EE6               	movwf	postinc1,c
  3906  00047A  0E00               	movlw	0
  3907  00047C  6EE6               	movwf	postinc1,c
  3908  00047E  C007  FFE6         	movff	_size,postinc1
  3909  000482  C008  FFE6         	movff	_size+1,postinc1
  3910  000486  EC19  F009         	call	___wmul	;wreg free
  3911  00048A  5047               	movf	btemp,w,c
  3912  00048C  2467               	addwf	??_ISR_timer0,w,c
  3913  00048E  6ED9               	movwf	fsr2l,c
  3914  000490  5048               	movf	btemp+1,w,c
  3915  000492  2068               	addwfc	??_ISR_timer0+1,w,c
  3916  000494  6EDA               	movwf	fsr2h,c
  3917  000496  50DF               	movf	indf2,w,c
  3918  000498  6EFF               	movwf	tosu,c	;volatile
  3919  00049A  0607               	decf	_size,f,c
  3920  00049C  A0D8               	btfss	status,0,c
  3921  00049E  0608               	decf	_size+1,f,c
  3922  0004A0                     i2l1748:
  3923  0004A0  5007               	movf	_size,w,c
  3924  0004A2  1008               	iorwf	_size+1,w,c
  3925  0004A4  A4D8               	btfss	status,2,c
  3926  0004A6  D780               	goto	i2l59
  3927  0004A8                     i2u64_40:
  3928                           
  3929                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  3930                           
  3931                           ;int0_test.c: 73:   }
  3932  0004A8  8EF2               	bsf	4082,7,c	;volatile
  3933  0004AA  C074  F052         	movff	??_ISR_timer0+13,btemp+11
  3934  0004AE  C073  F051         	movff	??_ISR_timer0+12,btemp+10
  3935  0004B2  C072  F050         	movff	??_ISR_timer0+11,btemp+9
  3936  0004B6  C071  F04F         	movff	??_ISR_timer0+10,btemp+8
  3937  0004BA  C070  F048         	movff	??_ISR_timer0+9,btemp+1
  3938  0004BE  C06F  F047         	movff	??_ISR_timer0+8,btemp
  3939  0004C2  C06E  FFF4         	movff	??_ISR_timer0+7,prodh
  3940  0004C6  C06D  FFF3         	movff	??_ISR_timer0+6,prodl
  3941  0004CA  C06C  FFDA         	movff	??_ISR_timer0+5,fsr2h
  3942  0004CE  C06B  FFD9         	movff	??_ISR_timer0+4,fsr2l
  3943  0004D2  C06A  FFE2         	movff	??_ISR_timer0+3,fsr1h
  3944  0004D6  C069  FFE1         	movff	??_ISR_timer0+2,fsr1l
  3945  0004DA  0011               	retfie		f
  3946  0004DC                     __end_of_ISR_timer0:
  3947                           	opt callstack 0
  3948                           
  3949 ;; *************** function _delay_decrement *****************
  3950 ;; Defined at:
  3951 ;;		line 101 in file "kernel.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  i               2  [STACK] int 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1  [STACK] void 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3965 ;;      Params:         0       0       0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0
  3968 ;;      Totals:         0       0       0       0       0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_ISR_timer0
  3975 ;; This function uses a reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text23
  3979  000996                     __ptext23:
  3980                           	opt callstack 0
  3981  000996                     _delay_decrement:
  3982                           	opt callstack 0
  3983                           
  3984                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3985  000996  52E6               	movf	postinc1,f,c
  3986  000998  52E6               	movf	postinc1,f,c
  3987                           
  3988                           ;kernel.c: 102:   int i;;kernel.c: 104:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  3989                           ;stkvar	_i @ sp[(-2)+0]
  3990                           
  3991                           ;incstack = 0
  3992  00099A  0EFE               	movlw	-2
  3993  00099C  6AE3               	clrf	plusw1,c
  3994  00099E  0EFF               	movlw	-1
  3995  0009A0  6AE3               	clrf	plusw1,c
  3996  0009A2  D070               	goto	l1622
  3997  0009A4                     l1612:
  3998                           
  3999                           ;kernel.c: 105:     if (ready_queue.tasks[i].task_state == WAITING) {
  4000                           ;stkvar	_i @ sp[(-2)+0]
  4001  0009A4  0EFE               	movlw	-2
  4002  0009A6  CFE3 F051          	movff	plusw1,btemp+10
  4003  0009AA  0EFF               	movlw	-1
  4004  0009AC  CFE3 F052          	movff	plusw1,btemp+11
  4005  0009B0  0E6E               	movlw	110
  4006  0009B2  0251               	mulwf	btemp+10,c
  4007  0009B4  CFF3 F04F          	movff	prodl,btemp+8
  4008  0009B8  CFF4 F050          	movff	prodh,btemp+9
  4009  0009BC  0252               	mulwf	btemp+11,c
  4010  0009BE  50F3               	movf	prodl,w,c
  4011  0009C0  2650               	addwf	btemp+9,f,c
  4012  0009C2  0EA8               	movlw	low (_ready_queue+8)
  4013  0009C4  244F               	addwf	btemp+8,w,c
  4014  0009C6  6ED9               	movwf	fsr2l,c
  4015  0009C8  0E00               	movlw	high (_ready_queue+8)
  4016  0009CA  2050               	addwfc	btemp+9,w,c
  4017  0009CC  6EDA               	movwf	fsr2h,c
  4018  0009CE  0E02               	movlw	2
  4019  0009D0  18DE               	xorwf	postinc2,w,c
  4020  0009D2  A4D8               	btfss	status,2,c
  4021  0009D4  D048               	goto	l1620
  4022                           
  4023                           ;kernel.c: 106:       ready_queue.tasks[i].task_delay_time--;
  4024                           ;stkvar	_i @ sp[(-2)+0]
  4025  0009D6  0EFE               	movlw	-2
  4026  0009D8  CFE3 F051          	movff	plusw1,btemp+10
  4027  0009DC  0EFF               	movlw	-1
  4028  0009DE  CFE3 F052          	movff	plusw1,btemp+11
  4029  0009E2  0E6E               	movlw	110
  4030  0009E4  0251               	mulwf	btemp+10,c
  4031  0009E6  CFF3 F04F          	movff	prodl,btemp+8
  4032  0009EA  CFF4 F050          	movff	prodh,btemp+9
  4033  0009EE  0252               	mulwf	btemp+11,c
  4034  0009F0  50F3               	movf	prodl,w,c
  4035  0009F2  2650               	addwf	btemp+9,f,c
  4036  0009F4  0E0C               	movlw	low (_ready_queue+108)
  4037  0009F6  244F               	addwf	btemp+8,w,c
  4038  0009F8  6ED9               	movwf	fsr2l,c
  4039  0009FA  0E01               	movlw	high (_ready_queue+108)
  4040  0009FC  2050               	addwfc	btemp+9,w,c
  4041  0009FE  6EDA               	movwf	fsr2h,c
  4042  000A00  06DE               	decf	postinc2,f,c
  4043  000A02  0E00               	movlw	0
  4044  000A04  5ADD               	subwfb	postdec2,f,c
  4045                           
  4046                           ;kernel.c: 107:       if (ready_queue.tasks[i].task_delay_time == 0) {
  4047                           ;stkvar	_i @ sp[(-2)+0]
  4048  000A06  0EFE               	movlw	-2
  4049  000A08  CFE3 F051          	movff	plusw1,btemp+10
  4050  000A0C  0EFF               	movlw	-1
  4051  000A0E  CFE3 F052          	movff	plusw1,btemp+11
  4052  000A12  0E6E               	movlw	110
  4053  000A14  0251               	mulwf	btemp+10,c
  4054  000A16  CFF3 F04F          	movff	prodl,btemp+8
  4055  000A1A  CFF4 F050          	movff	prodh,btemp+9
  4056  000A1E  0252               	mulwf	btemp+11,c
  4057  000A20  50F3               	movf	prodl,w,c
  4058  000A22  2650               	addwf	btemp+9,f,c
  4059  000A24  0E0C               	movlw	low (_ready_queue+108)
  4060  000A26  244F               	addwf	btemp+8,w,c
  4061  000A28  6ED9               	movwf	fsr2l,c
  4062  000A2A  0E01               	movlw	high (_ready_queue+108)
  4063  000A2C  2050               	addwfc	btemp+9,w,c
  4064  000A2E  6EDA               	movwf	fsr2h,c
  4065  000A30  50DE               	movf	postinc2,w,c
  4066  000A32  10DE               	iorwf	postinc2,w,c
  4067  000A34  A4D8               	btfss	status,2,c
  4068  000A36  D017               	goto	l1620
  4069                           
  4070                           ;kernel.c: 108:         ready_queue.tasks[i].task_state = READY;
  4071                           ;stkvar	_i @ sp[(-2)+0]
  4072  000A38  0EFE               	movlw	-2
  4073  000A3A  CFE3 F051          	movff	plusw1,btemp+10
  4074  000A3E  0EFF               	movlw	-1
  4075  000A40  CFE3 F052          	movff	plusw1,btemp+11
  4076  000A44  0E6E               	movlw	110
  4077  000A46  0251               	mulwf	btemp+10,c
  4078  000A48  CFF3 F04F          	movff	prodl,btemp+8
  4079  000A4C  CFF4 F050          	movff	prodh,btemp+9
  4080  000A50  0252               	mulwf	btemp+11,c
  4081  000A52  50F3               	movf	prodl,w,c
  4082  000A54  2650               	addwf	btemp+9,f,c
  4083  000A56  0EA8               	movlw	low (_ready_queue+8)
  4084  000A58  244F               	addwf	btemp+8,w,c
  4085  000A5A  6ED9               	movwf	fsr2l,c
  4086  000A5C  0E00               	movlw	high (_ready_queue+8)
  4087  000A5E  2050               	addwfc	btemp+9,w,c
  4088  000A60  6EDA               	movwf	fsr2h,c
  4089  000A62  0E00               	movlw	0
  4090  000A64  6EDF               	movwf	indf2,c
  4091  000A66                     l1620:
  4092                           
  4093                           ;kernel.c: 114:   }
  4094                           ;stkvar	_i @ sp[(-2)+0]
  4095  000A66  0EFE               	movlw	-2
  4096  000A68  50E3               	movf	plusw1,w,c
  4097  000A6A  0F01               	addlw	1
  4098  000A6C  6E47               	movwf	btemp,c
  4099  000A6E  0EFE               	movlw	-2
  4100  000A70  C047  FFE3         	movff	btemp,plusw1
  4101  000A74  6A47               	clrf	btemp,c
  4102  000A76  0EFF               	movlw	-1
  4103  000A78  50E3               	movf	plusw1,w,c
  4104  000A7A  2047               	addwfc	btemp,w,c
  4105  000A7C  6E47               	movwf	btemp,c
  4106  000A7E  0EFF               	movlw	-1
  4107  000A80  C047  FFE3         	movff	btemp,plusw1
  4108  000A84                     l1622:
  4109  000A84  EE23  F034         	lfsr	2,_ready_queue+660
  4110                           
  4111                           ;stkvar	_i @ sp[(-2)+0]
  4112  000A88  0EFE               	movlw	-2
  4113  000A8A  CFE3 F047          	movff	plusw1,btemp
  4114  000A8E  50DE               	movf	postinc2,w,c
  4115  000A90  5C47               	subwf	btemp,w,c
  4116  000A92  0EFF               	movlw	-1
  4117  000A94  CFE3 F047          	movff	plusw1,btemp
  4118  000A98  50DE               	movf	postinc2,w,c
  4119  000A9A  5847               	subwfb	btemp,w,c
  4120  000A9C  A0D8               	btfss	status,0,c
  4121  000A9E  D782               	goto	l1612
  4122                           
  4123                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  4124  000AA0  52E5               	movf	postdec1,f,c
  4125  000AA2  52E5               	movf	postdec1,f,c
  4126  000AA4  0012               	return		;funcret
  4127  000AA6                     __end_of_delay_decrement:
  4128                           	opt callstack 0
  4129                           
  4130 ;; *************** function ___wmul *****************
  4131 ;; Defined at:
  4132 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  multiplier      2  [STACK] unsigned int 
  4135 ;;  multiplicand    2  [STACK] unsigned int 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  product         2  [STACK] unsigned int 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  2  [STACK] unsigned int 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4147 ;;      Params:         0       0       0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0       0       0
  4149 ;;      Temps:          0       0       0       0       0       0       0
  4150 ;;      Totals:         0       0       0       0       0       0       0
  4151 ;;Total ram usage:        0 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; This function calls:
  4154 ;;		Nothing
  4155 ;; This function is called by:
  4156 ;;		_ISR_timer0
  4157 ;; This function uses a reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text24
  4161  001232                     __ptext24:
  4162                           	opt callstack 0
  4163  001232                     ___wmul:
  4164                           	opt callstack 0
  4165                           
  4166                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4167  001232  52E6               	movf	postinc1,f,c
  4168  001234  52E6               	movf	postinc1,f,c
  4169                           
  4170                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4171                           
  4172                           ;incstack = 0
  4173  001236  0EFA               	movlw	-6
  4174  001238  CFE3 F052          	movff	plusw1,btemp+11
  4175                           
  4176                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4177  00123C  0EFC               	movlw	-4
  4178  00123E  50E3               	movf	plusw1,w,c
  4179  001240  0252               	mulwf	btemp+11,c
  4180                           
  4181                           ;stkvar	_product @ sp[(-2)+0]
  4182  001242  0EFE               	movlw	-2
  4183  001244  CFF3 FFE3          	movff	prodl,plusw1
  4184  001248  0EFF               	movlw	-1
  4185  00124A  CFF4 FFE3          	movff	prodh,plusw1
  4186                           
  4187                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4188  00124E  0EFB               	movlw	251
  4189  001250  24E1               	addwf	fsr1l,w,c
  4190  001252  6ED9               	movwf	fsr2l,c
  4191  001254  0EFF               	movlw	255
  4192  001256  20E2               	addwfc	fsr1h,w,c
  4193  001258  6EDA               	movwf	fsr2h,c
  4194  00125A  50DF               	movf	indf2,w,c
  4195  00125C  6E52               	movwf	btemp+11,c
  4196                           
  4197                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4198  00125E  0EFC               	movlw	-4
  4199  001260  50E3               	movf	plusw1,w,c
  4200  001262  0252               	mulwf	btemp+11,c
  4201  001264  CFF3 FFF4          	movff	prodl,prodh
  4202  001268  6AF3               	clrf	prodl,c
  4203                           
  4204                           ;stkvar	_product @ sp[(-2)+0]
  4205  00126A  50E1               	movf	fsr1l,w,c
  4206  00126C  0FFE               	addlw	-2
  4207  00126E  6ED9               	movwf	fsr2l,c
  4208  001270  50E2               	movf	fsr1h,w,c
  4209  001272  6EDA               	movwf	fsr2h,c
  4210  001274  0EFF               	movlw	255
  4211  001276  22DA               	addwfc	fsr2h,f,c
  4212  001278  50F3               	movf	prodl,w,c
  4213  00127A  26DE               	addwf	postinc2,f,c
  4214  00127C  50F4               	movf	prodh,w,c
  4215  00127E  22DD               	addwfc	postdec2,f,c
  4216                           
  4217                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4218  001280  0EFA               	movlw	-6
  4219  001282  CFE3 F052          	movff	plusw1,btemp+11
  4220                           
  4221                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4222  001286  0EFD               	movlw	253
  4223  001288  24E1               	addwf	fsr1l,w,c
  4224  00128A  6ED9               	movwf	fsr2l,c
  4225  00128C  0EFF               	movlw	255
  4226  00128E  20E2               	addwfc	fsr1h,w,c
  4227  001290  6EDA               	movwf	fsr2h,c
  4228  001292  50DF               	movf	indf2,w,c
  4229  001294  0252               	mulwf	btemp+11,c
  4230  001296  CFF3 FFF4          	movff	prodl,prodh
  4231  00129A  6AF3               	clrf	prodl,c
  4232                           
  4233                           ;stkvar	_product @ sp[(-2)+0]
  4234  00129C  50E1               	movf	fsr1l,w,c
  4235  00129E  0FFE               	addlw	-2
  4236  0012A0  6ED9               	movwf	fsr2l,c
  4237  0012A2  50E2               	movf	fsr1h,w,c
  4238  0012A4  6EDA               	movwf	fsr2h,c
  4239  0012A6  0EFF               	movlw	255
  4240  0012A8  22DA               	addwfc	fsr2h,f,c
  4241  0012AA  50F3               	movf	prodl,w,c
  4242  0012AC  26DE               	addwf	postinc2,f,c
  4243  0012AE  50F4               	movf	prodh,w,c
  4244  0012B0  22DD               	addwfc	postdec2,f,c
  4245                           
  4246                           ;stkvar	_product @ sp[(-2)+0]
  4247  0012B2  0EFE               	movlw	-2
  4248  0012B4  CFE3 F047          	movff	plusw1,btemp
  4249  0012B8  0EFF               	movlw	-1
  4250  0012BA  CFE3 F048          	movff	plusw1,btemp+1
  4251                           
  4252                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  4253  0012BE  0EFA               	movlw	250
  4254  0012C0  26E1               	addwf	fsr1l,f,c
  4255  0012C2  0EFF               	movlw	255
  4256  0012C4  22E2               	addwfc	fsr1h,f,c
  4257  0012C6  0012               	return		;funcret
  4258  0012C8                     __end_of___wmul:
  4259                           	opt callstack 0
  4260  0000                     
  4261                           	psect	text25
  4262  000000                     __ptext25:
  4263                           	opt callstack 0
  4264                           
  4265                           	psect	rparam
  4266  0000                     
  4267                           	psect	temp
  4268  000047                     btemp:
  4269                           	opt callstack 0
  4270  000047                     	ds	32
  4271  0000                     wtemp0	set	btemp
  4272  0000                     wtemp1	set	btemp+2
  4273  0000                     wtemp2	set	btemp+4
  4274  0000                     wtemp3	set	btemp+6
  4275  0000                     wtemp4	set	btemp+8
  4276  0000                     wtemp5	set	btemp+10
  4277  0000                     wtemp8	set	btemp+1
  4278  0000                     ttemp0	set	btemp
  4279  0000                     ttemp1	set	btemp+3
  4280  0000                     ttemp2	set	btemp+6
  4281  0000                     ttemp3	set	btemp+9
  4282  0000                     ttemp5	set	btemp+1
  4283  0000                     ttemp6	set	btemp+4
  4284  0000                     ttemp7	set	btemp+8
  4285  0000                     ltemp0	set	btemp
  4286  0000                     ltemp1	set	btemp+4
  4287  0000                     ltemp2	set	btemp+8
  4288  0000                     lltemp0	set	btemp
  4289  0000                     lltemp1	set	btemp+8
  4290  0000                     lltemp2	set	btemp+16
  4291  0000                     lltemp3	set	btemp+24
  4292                           tosu	equ	0xFFF
  4293                           tosh	equ	0xFFE
  4294                           tosl	equ	0xFFD
  4295                           stkptr	equ	0xFFC
  4296                           pclatu	equ	0xFFB
  4297                           pclath	equ	0xFFA
  4298                           pcl	equ	0xFF9
  4299                           tblptru	equ	0xFF8
  4300                           tblptrh	equ	0xFF7
  4301                           tblptrl	equ	0xFF6
  4302                           tablat	equ	0xFF5
  4303                           prodh	equ	0xFF4
  4304                           prodl	equ	0xFF3
  4305                           indf0	equ	0xFEF
  4306                           postinc0	equ	0xFEE
  4307                           postdec0	equ	0xFED
  4308                           preinc0	equ	0xFEC
  4309                           plusw0	equ	0xFEB
  4310                           fsr0h	equ	0xFEA
  4311                           fsr0l	equ	0xFE9
  4312                           wreg	equ	0xFE8
  4313                           indf1	equ	0xFE7
  4314                           postinc1	equ	0xFE6
  4315                           postdec1	equ	0xFE5
  4316                           preinc1	equ	0xFE4
  4317                           plusw1	equ	0xFE3
  4318                           fsr1h	equ	0xFE2
  4319                           fsr1l	equ	0xFE1
  4320                           bsr	equ	0xFE0
  4321                           indf2	equ	0xFDF
  4322                           postinc2	equ	0xFDE
  4323                           postdec2	equ	0xFDD
  4324                           preinc2	equ	0xFDC
  4325                           plusw2	equ	0xFDB
  4326                           fsr2h	equ	0xFDA
  4327                           fsr2l	equ	0xFD9
  4328                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1278
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      86
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    mem	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.r	PTR struct semaphore size(2) Largest target is 0

    p.w	PTR struct semaphore size(2) Largest target is 0

    s	PTR struct semaphore size(2) Largest target is 16
		 -> out_sem(BANK0[16]), cover_sem(BANK0[16]), check_sem(COMRAM[16]), fill_sem(COMRAM[16]), 
		 -> count_sem(COMRAM[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> out_sem(BANK0[16]), cover_sem(BANK0[16]), check_sem(COMRAM[16]), fill_sem(COMRAM[16]), 
		 -> count_sem(COMRAM[16]), 

    s	PTR struct semaphore size(2) Largest target is 16
		 -> out_sem(BANK0[16]), cover_sem(BANK0[16]), check_sem(COMRAM[16]), fill_sem(COMRAM[16]), 
		 -> count_sem(COMRAM[16]), 

    data	PTR unsigned int  size(2) Largest target is 1
		 -> pip(STACK[1]), 

    p.r	PTR struct semaphore size(2) Largest target is 0

    p.w	PTR struct semaphore size(2) Largest target is 0

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    p.r	PTR struct semaphore size(2) Largest target is 0

    p.w	PTR struct semaphore size(2) Largest target is 0

    p	PTR struct pipe size(2) Largest target is 14
		 -> p(COMRAM[12]), 

    S545pipe$r	PTR struct semaphore size(2) Largest target is 0

    p.r	PTR struct semaphore size(2) Largest target is 0

    S545pipe$w	PTR struct semaphore size(2) Largest target is 0

    p.w	PTR struct semaphore size(2) Largest target is 0

    f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    S258pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> count_out(), cover_bottle(), check_level(), fill_bottle(), 
		 -> count_bottles(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _count_bottles in COMRAM

    None.

Critical Paths under _fill_bottle in COMRAM

    None.

Critical Paths under _check_level in COMRAM

    None.

Critical Paths under _cover_bottle in COMRAM

    None.

Critical Paths under _count_out in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _count_bottles in BANK0

    None.

Critical Paths under _fill_bottle in BANK0

    None.

Critical Paths under _check_level in BANK0

    None.

Critical Paths under _cover_bottle in BANK0

    None.

Critical Paths under _count_out in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _count_bottles in BANK1

    None.

Critical Paths under _fill_bottle in BANK1

    None.

Critical Paths under _check_level in BANK1

    None.

Critical Paths under _cover_bottle in BANK1

    None.

Critical Paths under _count_out in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _count_bottles in BANK2

    None.

Critical Paths under _fill_bottle in BANK2

    None.

Critical Paths under _check_level in BANK2

    None.

Critical Paths under _cover_bottle in BANK2

    None.

Critical Paths under _count_out in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _count_bottles in BANK3

    None.

Critical Paths under _fill_bottle in BANK3

    None.

Critical Paths under _check_level in BANK3

    None.

Critical Paths under _cover_bottle in BANK3

    None.

Critical Paths under _count_out in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _count_bottles in BANK4

    None.

Critical Paths under _fill_bottle in BANK4

    None.

Critical Paths under _check_level in BANK4

    None.

Critical Paths under _cover_bottle in BANK4

    None.

Critical Paths under _count_out in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _count_bottles in BANK5

    None.

Critical Paths under _fill_bottle in BANK5

    None.

Critical Paths under _check_level in BANK5

    None.

Critical Paths under _cover_bottle in BANK5

    None.

Critical Paths under _count_out in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     895
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0      88
                           _sem_init
 ---------------------------------------------------------------------------------
 (2) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     347
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   114   110      4     211
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     853
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     831
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0     831
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         4     4      0    1908
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            1     1      0    1840
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_bottles                                        1     1      0     853
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fill_bottle                                          0     0      0     831
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _check_level                                          0     0      0     831
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _cover_bottle                                         4     4      0    1908
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _count_out                                            1     1      0    1840
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            4     0      4     985
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     540
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _dispatcher                                           1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     291
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer0                                         14    14      0     498
                                              0 COMRAM    14    14      0
                             ___wmul
                    _delay_decrement
                        _round_robin
 ---------------------------------------------------------------------------------
 (13) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (13) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _user_conf
     _sem_init

 _task_idle (ROOT)

 _count_bottles (ROOT)
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _pipe_write
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _pipe_read
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_bottles (ROOT)
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _fill_bottle (ROOT)
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _check_level (ROOT)
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _cover_bottle (ROOT)
   _pipe_write
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _count_out (ROOT)
   _pipe_read
     _sem_post
       ___lwmod
     _sem_wait
       ___lwmod
       _dispatcher
         _scheduler
           _round_robin
             ___lwmod
   _sem_post
     ___lwmod
   _sem_wait
     ___lwmod
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   _delay_decrement
   _round_robin
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     498      17       76.6%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      56       1       90.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      76      15        0.0%
DATA                 0      0     50E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun 05 22:19:19 2019

                        _p 003B   __end_of_lunos_createTask 0BB2                        l300 1654  
                      l310 1550                        l311 1558                        l127 086C  
                      l314 1560                        l315 1568                        l340 0F1E  
                      l333 0F08                        l334 0F00                        l318 1570  
                      l351 15D4                        l327 0ECE                        l319 1578  
                      l328 0EF2                        l329 0EEA                        l186 1458  
                      l339 0F16                        l286 14CC                        l289 14DC  
                      l299 1656                        _BSR 000FE0                        u520 11B6  
                      u540 121C                        u460 0990                        u471 0B96  
                      u480 10EC                        _TOS 000FFD                        _who 0009  
              _round_robin 12C8                        wreg 000FE8               __CFG_WDT$OFF 000000  
                     l1602 11FE                       l1514 0988                       l1620 0A66  
                     l1612 09A4                       l1508 0792                       l1622 0A84  
                     l1626 12D8                       l1490 0596                       l1546 1132  
                     l1538 10D8                       l1574 10A0                       l1494 06B0  
                     l1592 118E                       l1586 0EBE                       l1852 0F6A  
                     l1782 151A                       l1848 0F2E                       i2l59 03A8  
                     _TOSH 000FFE                       _TOSL 000FFD                       _WREG 000FE8  
                     _TOSU 000FFF                       _main 13DC              _global_buffer 0001  
   __size_of_count_bottles 0070                       _size 0007                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0047                       prodh 000FF4                       prodl 000FF3  
                     start 000C               ___param_bank 000000            __end_of___lwmod 1232  
                    _TMR0L 000FD6                      u50_20 0DF6                      _TRISB 000F93  
                    _TRISC 000F94                      _TRISD 000F95                      u66_20 152A  
                    u69_20 1660                      u86_20 0FBA                ?_ISR_timer0 0067  
     __size_of_check_level 004E                      tablat 000FF5                      ltemp0 0047  
                    ltemp1 004B                      ltemp2 004F                      plusw0 000FEB  
                    plusw1 000FE3                      plusw2 000FDB                      ttemp0 0047  
                    ttemp1 004A                      ttemp2 004D                      ttemp3 0050  
                    ttemp5 0048                      ttemp6 004B                      ttemp7 004F  
                    status 000FD8                      wtemp0 0047                      wtemp1 0049  
                    wtemp2 004B                      wtemp3 004D                      wtemp4 004F  
                    wtemp5 0051                      wtemp8 0048   __size_of_delay_decrement 0110  
          __initialization 1588               __end_of_main 145A              _count_bottles 14CA  
            __activetblptr 000000                     i2l1724 012C                     i2l1742 02EC  
                   i2l1728 0222                     i2l1748 04A0                     _STATUS 000FD8  
                   _STKPTR 000FFC       __size_of_config_INT0 0010       __size_of_fill_bottle 002C  
      __size_of_ISR_timer0 04D4                     ___wmul 1232                     clear_0 15A8  
                   clear_1 15BA                     clear_2 15C6           __end_of_sem_init 14CA  
         __end_of_sem_wait 10A8           __end_of_sem_post 0EC6               __pdataCOMRAM 0075  
                   lltemp0 0047                     lltemp1 004F                     lltemp2 0057  
                   lltemp3 005F                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0080    __end_of__initialization 15CC  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001             __pcstackCOMRAM 0067  
               ___inthi_sp 057C       __end_of_cover_bottle 0FC8                 __pbssBANK0 0080  
       __size_of_count_out 0040              __uDynamicHeap 0338         __size_of_scheduler 0006  
       __size_of_pipe_read 0108         __size_of_task_idle 0004               ??_ISR_timer0 0067  
                  i2u60_40 005E                    i2u60_46 0060                    i2u61_40 0086  
                  i2u61_41 0084                    i2u64_40 04A8                 _dispatcher 04DC  
       __size_of_user_conf 0084                    __Hparam 0000                    __Lparam 0000  
          __size_of___wmul 0096         __end_of_ISR_timer0 04DC                    ___lwmod 1176  
                  __pcinit 1588                    __ramtop 0600          __end_of_count_out 1612  
                  __ptext0 13DC                    __ptext1 1358                    __ptext2 145A  
                  __ptext3 1612                    __ptext4 0AA6                    __ptext5 10A8  
                  __ptext6 04DC                    __ptext7 1692                    __ptext8 12C8  
                  __ptext9 1176                  _T0CONbits 000FD5                    _quantum 0075  
                  _out_sem 0080          __end_of_scheduler 1698             __pintcode_body 0014  
     end_of_initialization 15CC          __end_of_pipe_read 0DC4          __end_of_task_idle 169C  
                  int_func 0014                 _pipe_write 0BB2      __end_of_config_timer0 1682  
                  postdec0 000FED                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               _lunos_init 1612          __end_of_user_conf 13DC                  _PORTBbits 000F81  
                _PORTCbits 000F82                  _PORTDbits 000F83      __size_of_cover_bottle 0102  
                _TRISDbits 000F95       __size_of_round_robin 0090        __end_of_check_level 1588  
          _delay_decrement 0996               _cover_bottle 0EC6             __end_of___wmul 12C8  
            __pidataCOMRAM 169C        start_initialization 1588  __size_of_lunos_createTask 010C  
      __end_of_config_INT0 1692        __size_of_dispatcher 04BA        __end_of_fill_bottle 1670  
              __pbssBIGRAM 00A0                __pbssCOMRAM 0001                _check_level 153A  
  __end_of_delay_decrement 0AA6       __end_of_SRAMInitHeap 1176                  _check_sem 000B  
                __pintcode 0008          __size_of_sem_init 0070          __size_of_sem_wait 00E0  
        __size_of_sem_post 0102      __end_of_count_bottles 153A        __size_of_pipe_write 010A  
                _cover_sem 0090                  _count_sem 002B                  _count_out 15D2  
      __size_of_lunos_init 0032                  _scheduler 1692                _config_INT0 1682  
                _pipe_read 0CBC                _fill_bottle 1644                  _task_idle 1698  
                _user_conf 1358           _lunos_createTask 0AA6                _INTCON2bits 000FF1  
                 __Hrparam 0000                   __Lrparam 0000         __end_of_dispatcher 0996  
         __size_of___lwmod 00BC     __size_of_config_timer0 0012      __size_of_SRAMInitHeap 00CE  
                 __ptext10 1670                   __ptext11 1682                   __ptext20 15D2  
                 __ptext12 1698                   __ptext21 0CBC                   __ptext13 14CA  
                 __ptext14 0FC8                   __ptext23 0996                   __ptext15 0DC4  
                 __ptext24 1232                   __ptext16 1644                   __ptext25 0000  
                 __ptext17 153A                   __ptext18 0EC6                   __ptext19 0BB2  
                 _fill_sem 001B              __size_of_main 007E                _ready_queue 00A0  
                 _sem_init 145A                   _sem_wait 0FC8                   _sem_post 0DC4  
             _SRAMInitHeap 10A8                 _INTCONbits 000FF2         __end_of_pipe_write 0CBC  
      __end_of_round_robin 1358                   intlevel1 0000                   intlevel2 0000  
       __end_of_lunos_init 1644              _config_timer0 1670                 _ISR_timer0 0008  
